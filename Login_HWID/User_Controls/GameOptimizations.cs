using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text.RegularExpressions;
using System.Windows.Forms;
using Login_HWID.Dialog_Boxes;
using Microsoft.Win32;
using Siticone.Desktop.UI.WinForms;
using WindowsFormsApplication2;
using WindowsFormsApplication2.Classes;
using WindowsFormsApplication2.Dialog_Boxes;

namespace Login_HWID.User_Controls
{
	// Token: 0x02000063 RID: 99
	public class GameOptimizations : UserControl
	{
		// Token: 0x17000065 RID: 101
		// (get) Token: 0x0600043C RID: 1084 RVA: 0x000B2424 File Offset: 0x000B0624
		public static GameOptimizations Instance
		{
			get
			{
				if (GameOptimizations._instace == null)
				{
					GameOptimizations._instace = new GameOptimizations();
				}
				return GameOptimizations._instace;
			}
		}

		// Token: 0x0600043D RID: 1085 RVA: 0x000B244C File Offset: 0x000B064C
		public GameOptimizations()
		{
			this.InitializeComponent();
			this.siticoneComboBox1.DropDownHeight = this.siticoneComboBox1.ItemHeight * 5;
			this.resolution.DropDownHeight = this.siticoneComboBox1.ItemHeight * 5;
			this.LoadTheme();
			this.UserPreferenceChanged = new UserPreferenceChangedEventHandler(this.SystemEvents_UserPreferenceChanged);
			SystemEvents.UserPreferenceChanged += this.UserPreferenceChanged;
			base.Disposed += this.Form_Disposed;
		}

		// Token: 0x0600043E RID: 1086 RVA: 0x000B2A58 File Offset: 0x000B0C58
		private void LoadTheme()
		{
			int num = 0;
			for (;;)
			{
				string text;
				if (num == 5)
				{
					object obj;
					text = obj as string;
					num = 6;
				}
				if (num == 11)
				{
					goto IL_120;
				}
				IL_132:
				if (num == 17)
				{
					break;
				}
				if (num != 16)
				{
					if (num == 15)
					{
						goto IL_D2;
					}
					IL_E4:
					if (num == 14)
					{
						break;
					}
					if (num == 13)
					{
						goto IL_AD;
					}
					IL_BF:
					if (num == 12)
					{
						break;
					}
					if (num == 10)
					{
						break;
					}
					if (num == 9)
					{
						if (text == "Accent Color")
						{
							goto IL_D2;
						}
						num = 10;
					}
					if (num == 8)
					{
						if (text == "Halloween")
						{
							goto IL_AD;
						}
						num = 9;
					}
					if (num == 7)
					{
						if (text == "Xmas")
						{
							goto IL_120;
						}
						num = 8;
					}
					if (num == 6)
					{
						if (text == null)
						{
							break;
						}
						num = 7;
					}
					if (num == 4)
					{
						object obj2;
						object obj = obj2;
						num = 5;
					}
					if (num == 3)
					{
						object value;
						object obj2 = value;
						num = 4;
					}
					if (num == 2)
					{
						RegistryKey registryKey;
						object value = registryKey.GetValue("Theme");
						num = 3;
					}
					if (num == 1)
					{
						RegistryKey registryKey = Registry.CurrentUser.CreateSubKey("Software\\\\Nexus LiteOS Toolkit\\");
						num = 2;
					}
					if (num == 0)
					{
						num = 1;
					}
					if (num == 18)
					{
						break;
					}
					continue;
					IL_AD:
					this.Halloween();
					num = 14;
					goto IL_BF;
					IL_D2:
					this.AccentColor();
					num = 16;
					goto IL_E4;
				}
				break;
				IL_120:
				this.Xmas_theme();
				num = 12;
				goto IL_132;
			}
		}

		// Token: 0x0600043F RID: 1087 RVA: 0x000B2CB4 File Offset: 0x000B0EB4
		private void SystemEvents_UserPreferenceChanged(object sender, UserPreferenceChangedEventArgs e)
		{
			int num = 0;
			do
			{
				if (num == 1)
				{
					if (e.Category == UserPreferenceCategory.General)
					{
						goto IL_58;
					}
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 2);
			bool flag = e.Category == UserPreferenceCategory.VisualStyle;
			goto IL_5D;
			IL_58:
			flag = true;
			IL_5D:
			if (flag)
			{
				this.LoadTheme();
			}
		}

		// Token: 0x06000440 RID: 1088 RVA: 0x000B2D2C File Offset: 0x000B0F2C
		private void Form_Disposed(object sender, EventArgs e)
		{
			int num = 0;
			do
			{
				if (num == 1)
				{
					SystemEvents.UserPreferenceChanged -= this.UserPreferenceChanged;
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 2);
		}

		// Token: 0x06000441 RID: 1089 RVA: 0x000B2D90 File Offset: 0x000B0F90
		private void Halloween()
		{
			int num = 0;
			IEnumerator<RadioButton> enumerator;
			do
			{
				if (num == 1)
				{
					enumerator = this.grpbox.Controls.OfType<RadioButton>().GetEnumerator();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 2);
			try
			{
				while (enumerator.MoveNext())
				{
					RadioButton radioButton = enumerator.Current;
					SiticoneRadioButton siticoneRadioButton = (SiticoneRadioButton)radioButton;
					siticoneRadioButton.CheckedState.BorderColor = Color.FromArgb(255, 128, 0);
					siticoneRadioButton.CheckedState.FillColor = Color.FromArgb(255, 128, 0);
				}
			}
			finally
			{
				if (enumerator != null)
				{
					enumerator.Dispose();
				}
			}
		}

		// Token: 0x06000442 RID: 1090 RVA: 0x000B2E60 File Offset: 0x000B1060
		private void AccentColor()
		{
			int num = 0;
			IEnumerator<RadioButton> enumerator;
			Color accentColor;
			do
			{
				if (num == 2)
				{
					enumerator = this.grpbox.Controls.OfType<RadioButton>().GetEnumerator();
					num = 3;
				}
				if (num == 1)
				{
					accentColor = Theme.GetAccentColor();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 3);
			try
			{
				while (enumerator.MoveNext())
				{
					RadioButton radioButton = enumerator.Current;
					SiticoneRadioButton siticoneRadioButton = (SiticoneRadioButton)radioButton;
					siticoneRadioButton.CheckedState.BorderColor = accentColor;
					siticoneRadioButton.CheckedState.FillColor = accentColor;
				}
			}
			finally
			{
				if (enumerator != null)
				{
					enumerator.Dispose();
				}
			}
		}

		// Token: 0x06000443 RID: 1091 RVA: 0x000B2F58 File Offset: 0x000B1158
		private void Xmas_theme()
		{
			int num = 0;
			IEnumerator<RadioButton> enumerator;
			do
			{
				if (num == 1)
				{
					enumerator = this.grpbox.Controls.OfType<RadioButton>().GetEnumerator();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 2);
			try
			{
				while (enumerator.MoveNext())
				{
					RadioButton radioButton = enumerator.Current;
					SiticoneRadioButton siticoneRadioButton = (SiticoneRadioButton)radioButton;
					siticoneRadioButton.CheckedState.BorderColor = Color.RoyalBlue;
					siticoneRadioButton.CheckedState.FillColor = Color.RoyalBlue;
				}
			}
			finally
			{
				if (enumerator != null)
				{
					enumerator.Dispose();
				}
			}
		}

		// Token: 0x06000444 RID: 1092 RVA: 0x000B3034 File Offset: 0x000B1234
		private void reset_grpbox()
		{
			int num = 0;
			do
			{
				if (num == 5)
				{
					this.width_txtbox.Text = "";
					num = 6;
				}
				if (num == 10)
				{
					this.dx12.Checked = false;
					num = 11;
				}
				if (num == 9)
				{
					this.dx12.Enabled = false;
					num = 10;
				}
				if (num == 8)
				{
					this.dx11.Checked = false;
					num = 9;
				}
				if (num == 7)
				{
					this.dx11.Enabled = false;
					num = 8;
				}
				if (num == 6)
				{
					this.height_txtbox.Text = "";
					num = 7;
				}
				if (num == 4)
				{
					this.resolution.SelectedIndex = -1;
					num = 5;
				}
				if (num == 3)
				{
					this.siticoneComboBox1.SelectedIndex = -1;
					num = 4;
				}
				if (num == 2)
				{
					this.grpbox.Location = new Point(1165, 76);
					num = 3;
				}
				if (num == 1)
				{
					this.grpbox.Text = "Game_Name_404";
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 11);
		}

		// Token: 0x17000066 RID: 102
		// (set) Token: 0x06000445 RID: 1093 RVA: 0x000B31D8 File Offset: 0x000B13D8
		private EventArgs customres_Click
		{
			set
			{
				this.errorShowm = false;
				int num = 800;
				int num2 = 15360;
				int num3 = 600;
				int num4 = 8640;
				int num5;
				if (int.TryParse(this.width_txtbox.Text, out num5))
				{
					if (num5 >= num && num5 <= num2)
					{
						this.isValidWidth = true;
						this.width = num5;
					}
					else
					{
						this.isValidWidth = false;
					}
				}
				else if (!this.errorShowm)
				{
					this.apply_btn.Enabled = false;
					using (res_error res_error = new res_error())
					{
						res_error.ShowDialog(this);
					}
					this.errorShowm = true;
				}
				if (int.TryParse(this.height_txtbox.Text, out num5))
				{
					if (num5 >= num3 && num5 <= num4)
					{
						this.isValidHeight = true;
						this.height = num5;
					}
					else
					{
						this.isValidHeight = false;
					}
				}
				else if (!this.errorShowm)
				{
					this.apply_btn.Enabled = false;
					using (res_error res_error2 = new res_error())
					{
						res_error2.ShowDialog(this);
					}
					this.errorShowm = true;
				}
				if (new bool[] { this.isValidWidth, this.isValidHeight }.Contains(false))
				{
					if (!this.errorShowm)
					{
						this.apply_btn.Enabled = false;
						using (res_error res_error3 = new res_error())
						{
							res_error3.ShowDialog(this);
						}
						this.errorShowm = true;
					}
				}
				else
				{
					using (res_set res_set = new res_set())
					{
						res_set.ShowDialog(this);
					}
					this.apply_btn.Enabled = true;
				}
			}
		}

		// Token: 0x06000446 RID: 1094 RVA: 0x000B3414 File Offset: 0x000B1614
		private void next_btn_Click(object sender, EventArgs e)
		{
			int num = 0;
			g_opt g_opt;
			do
			{
				if (num == 1)
				{
					this.dx11.Enabled = false;
					num = 2;
				}
				if (num == 3)
				{
					this.dx12.Enabled = false;
					num = 4;
				}
				bool flag;
				if (num == 5)
				{
					flag = string.IsNullOrEmpty(this.siticoneComboBox1.Text);
					num = 6;
				}
				if (num == 7)
				{
					g_opt = new g_opt();
					num = 8;
				}
				if (num == 6)
				{
					if (!flag)
					{
						goto IL_128;
					}
					num = 7;
				}
				if (num == 4)
				{
					this.dx12.Checked = false;
					num = 5;
				}
				if (num == 2)
				{
					this.dx11.Checked = false;
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
			try
			{
				g_opt.ShowDialog();
			}
			finally
			{
				if (g_opt != null)
				{
					((IDisposable)g_opt).Dispose();
				}
			}
			this.reset_grpbox();
			IL_128:
			if (this.siticoneComboBox1.Text == "ARK : Survival Evolved")
			{
				FolderBrowserDialog folderBrowserDialog = new FolderBrowserDialog();
				DialogResult dialogResult = folderBrowserDialog.ShowDialog();
				if (dialogResult == DialogResult.OK)
				{
					this.textBox1.Text = folderBrowserDialog.SelectedPath + "\\ShooterGame\\Saved\\Config\\WindowsNoEditor\\GameUserSettings.ini";
					this.ark_main = folderBrowserDialog.SelectedPath + "\\ShooterGame\\Saved\\Config\\WindowsNoEditor\\GameUserSettings.ini";
					this.ark_first = folderBrowserDialog.SelectedPath + "\\ShooterGame\\Saved\\Config\\WindowsNoEditor\\Engine.ini";
					this.ark_second = folderBrowserDialog.SelectedPath + "\\ShooterGame\\Saved\\Config\\WindowsNoEditor\\Scalability.ini";
					Environment.SpecialFolder rootFolder = folderBrowserDialog.RootFolder;
					if (File.Exists(this.textBox1.Text))
					{
						using (_200found _200found = new _200found())
						{
							_200found.ShowDialog();
							this.grpbox.Text = this.siticoneComboBox1.Text;
							this.grpbox.Location = new Point(56, 222);
							this.grpbox.BringToFront();
							goto IL_270;
						}
					}
					using (g_404 g_ = new g_404())
					{
						g_.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			IL_270:
			if (this.siticoneComboBox1.Text == "A Plague Tale : Innocence")
			{
				if (File.Exists(this.apti_settings))
				{
					using (_200found _200found2 = new _200found())
					{
						_200found2.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_327;
					}
				}
				using (g_404 g_2 = new g_404())
				{
					g_2.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_327:
			if (this.siticoneComboBox1.Text == "A Plague Tale : Requiem")
			{
				if (File.Exists(this.aptr_settings))
				{
					using (_200found _200found3 = new _200found())
					{
						_200found3.ShowDialog();
						this.dx11.Enabled = true;
						this.dx11.Checked = true;
						this.dx12.Enabled = true;
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_41A;
					}
				}
				using (g_404 g_3 = new g_404())
				{
					g_3.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_41A:
			if (this.siticoneComboBox1.Text == "Atomic Heart")
			{
				if (File.Exists(this.atomicHeart_main))
				{
					using (_200found _200found4 = new _200found())
					{
						_200found4.ShowDialog();
						this.dx11.Enabled = true;
						this.dx11.Checked = true;
						this.dx12.Enabled = true;
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_50D;
					}
				}
				using (g_404 g_4 = new g_404())
				{
					g_4.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_50D:
			if (this.siticoneComboBox1.Text == "Atomic Heart (Microsoft Store)")
			{
				if (File.Exists(this.atomicHeart_main))
				{
					string[] files = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Packages\\FocusHomeInteractiveSA.579645D26CFD_4hny5m903y3g0\\", "SavedSettings.sav", SearchOption.AllDirectories);
					try
					{
						string[] array = files;
						foreach (string text in array)
						{
							if (File.Exists(text))
							{
								this.textBox1.Text = text;
							}
						}
					}
					catch
					{
					}
					using (_200found _200found5 = new _200found())
					{
						_200found5.ShowDialog();
						this.dx11.Enabled = true;
						this.dx11.Checked = true;
						this.dx12.Enabled = true;
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_66D;
					}
				}
				using (g_404 g_5 = new g_404())
				{
					g_5.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_66D:
			if (this.siticoneComboBox1.Text == "Atomic Heart (Steam)")
			{
				if (File.Exists(this.atomicHeartS_main))
				{
					using (_200found _200found6 = new _200found())
					{
						_200found6.ShowDialog();
						this.dx11.Enabled = true;
						this.dx11.Checked = true;
						this.dx12.Enabled = true;
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_760;
					}
				}
				using (g_404 g_6 = new g_404())
				{
					g_6.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_760:
			if (this.siticoneComboBox1.Text == "Assassin’s Creed Odyssey")
			{
				if (File.Exists(this.assassins_creed_odessey))
				{
					using (_200found _200found7 = new _200found())
					{
						_200found7.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_817;
					}
				}
				using (g_404 g_7 = new g_404())
				{
					g_7.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_817:
			if (this.siticoneComboBox1.Text == "Assassin’s Creed Valhalla")
			{
				if (File.Exists(this.assassins_creed_valhalla))
				{
					using (_200found _200found8 = new _200found())
					{
						_200found8.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_8CE;
					}
				}
				using (g_404 g_8 = new g_404())
				{
					g_8.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_8CE:
			if (this.siticoneComboBox1.Text == "Apex Legends")
			{
				string text2 = "videoconfig.txt";
				string text3 = text2;
				string text4 = Path.Combine(new string[] { Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Saved Games\\Respawn\\Apex\\" });
				try
				{
					string[] files2 = Directory.GetFiles(text4, text3, SearchOption.AllDirectories);
					string[] array3 = files2;
					string[] array4 = array3;
					int j = 0;
					while (j < array4.Length)
					{
						string text5 = array4[j];
						if (File.Exists(text5))
						{
							this.textBox1.Text = text5;
							using (_200found _200found9 = new _200found())
							{
								_200found9.ShowDialog();
								this.grpbox.Text = this.siticoneComboBox1.Text;
								this.grpbox.Location = new Point(56, 222);
								this.grpbox.BringToFront();
								goto IL_9F0;
							}
							goto IL_9CA;
						}
						goto IL_9CA;
						IL_9F0:
						j++;
						continue;
						IL_9CA:
						using (g_404 g_9 = new g_404())
						{
							g_9.ShowDialog();
						}
						this.reset_grpbox();
						goto IL_9F0;
					}
				}
				catch
				{
					using (g_404 g_10 = new g_404())
					{
						g_10.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			if (this.siticoneComboBox1.Text == "Battlefield 1")
			{
				FolderBrowserDialog folderBrowserDialog2 = new FolderBrowserDialog();
				DialogResult dialogResult2 = folderBrowserDialog2.ShowDialog();
				if (dialogResult2 == DialogResult.OK)
				{
					this.textBox1.Text = folderBrowserDialog2.SelectedPath + "\\bf1.exe";
					Environment.SpecialFolder rootFolder2 = folderBrowserDialog2.RootFolder;
					this.battlefield1_usercfg = folderBrowserDialog2.SelectedPath + "\\user.cfg";
					if (File.Exists(this.textBox1.Text))
					{
						if (!File.Exists(this.battlefield1_profile))
						{
							goto IL_BB3;
						}
						base.BeginInvoke(new Action(delegate
						{
							int num3 = 0;
							Error error;
							do
							{
								bool flag2;
								if (num3 == 1)
								{
									flag2 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1066595853311152170/static.cfg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\static.cfg");
									num3 = 2;
								}
								if (num3 == 2)
								{
									if (!flag2)
									{
										goto IL_77;
									}
									num3 = 3;
								}
								if (num3 == 3)
								{
									error = new Error();
									num3 = 4;
								}
								if (num3 == 0)
								{
									num3 = 1;
								}
							}
							while (num3 != 4);
							try
							{
								error.ShowDialog();
							}
							finally
							{
								if (error != null)
								{
									((IDisposable)error).Dispose();
								}
							}
							return;
							IL_77:
							File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\static.cfg", this.battlefield1_usercfg);
						}));
						using (_200found _200found10 = new _200found())
						{
							_200found10.ShowDialog();
							this.dx11.Enabled = true;
							this.dx11.Checked = true;
							this.dx12.Enabled = true;
							this.grpbox.Text = this.siticoneComboBox1.Text;
							this.grpbox.Location = new Point(56, 222);
							this.grpbox.BringToFront();
							goto IL_BB3;
						}
					}
					using (g_404 g_11 = new g_404())
					{
						g_11.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			IL_BB3:
			if (this.siticoneComboBox1.Text == "Battlefield 4")
			{
				FolderBrowserDialog folderBrowserDialog3 = new FolderBrowserDialog();
				DialogResult dialogResult3 = folderBrowserDialog3.ShowDialog();
				if (dialogResult3 == DialogResult.OK)
				{
					this.textBox1.Text = folderBrowserDialog3.SelectedPath + "\\bf4.exe";
					Environment.SpecialFolder rootFolder3 = folderBrowserDialog3.RootFolder;
					this.battlefield4_usercfg = folderBrowserDialog3.SelectedPath + "\\user.cfg";
					if (File.Exists(this.textBox1.Text))
					{
						if (!File.Exists(this.battlefield4_profile))
						{
							goto IL_CFD;
						}
						base.BeginInvoke(new Action(delegate
						{
							int num4 = 0;
							Error error2;
							do
							{
								bool flag3;
								if (num4 == 1)
								{
									flag3 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1066595853311152170/static.cfg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\static.cfg");
									num4 = 2;
								}
								if (num4 == 2)
								{
									if (!flag3)
									{
										goto IL_77;
									}
									num4 = 3;
								}
								if (num4 == 3)
								{
									error2 = new Error();
									num4 = 4;
								}
								if (num4 == 0)
								{
									num4 = 1;
								}
							}
							while (num4 != 4);
							try
							{
								error2.ShowDialog();
							}
							finally
							{
								if (error2 != null)
								{
									((IDisposable)error2).Dispose();
								}
							}
							return;
							IL_77:
							File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\static.cfg", this.battlefield4_usercfg);
						}));
						using (_200found _200found11 = new _200found())
						{
							_200found11.ShowDialog();
							this.grpbox.Text = this.siticoneComboBox1.Text;
							this.grpbox.Location = new Point(56, 222);
							this.grpbox.BringToFront();
							goto IL_CFD;
						}
					}
					using (g_404 g_12 = new g_404())
					{
						g_12.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			IL_CFD:
			if (this.siticoneComboBox1.Text == "Battlefield 5")
			{
				FolderBrowserDialog folderBrowserDialog4 = new FolderBrowserDialog();
				DialogResult dialogResult4 = folderBrowserDialog4.ShowDialog();
				if (dialogResult4 == DialogResult.OK)
				{
					this.textBox1.Text = folderBrowserDialog4.SelectedPath + "\\bfv.exe";
					Environment.SpecialFolder rootFolder4 = folderBrowserDialog4.RootFolder;
					this.battlefield5_usercfg = folderBrowserDialog4.SelectedPath + "\\user.cfg";
					if (File.Exists(this.textBox1.Text))
					{
						if (!File.Exists(this.battlefield5_profile))
						{
							goto IL_E80;
						}
						base.BeginInvoke(new Action(delegate
						{
							int num5 = 0;
							Error error3;
							do
							{
								bool flag4;
								if (num5 == 1)
								{
									flag4 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1066595853311152170/static.cfg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\static.cfg");
									num5 = 2;
								}
								if (num5 == 2)
								{
									if (!flag4)
									{
										goto IL_77;
									}
									num5 = 3;
								}
								if (num5 == 3)
								{
									error3 = new Error();
									num5 = 4;
								}
								if (num5 == 0)
								{
									num5 = 1;
								}
							}
							while (num5 != 4);
							try
							{
								error3.ShowDialog();
							}
							finally
							{
								if (error3 != null)
								{
									((IDisposable)error3).Dispose();
								}
							}
							return;
							IL_77:
							File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\static.cfg", this.battlefield5_usercfg);
						}));
						using (_200found _200found12 = new _200found())
						{
							_200found12.ShowDialog();
							this.dx11.Enabled = true;
							this.dx11.Checked = true;
							this.dx12.Enabled = true;
							this.grpbox.Text = this.siticoneComboBox1.Text;
							this.grpbox.Location = new Point(56, 222);
							this.grpbox.BringToFront();
							goto IL_E80;
						}
					}
					using (g_404 g_13 = new g_404())
					{
						g_13.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			IL_E80:
			if (this.siticoneComboBox1.Text == "Battlefield Hardline")
			{
				FolderBrowserDialog folderBrowserDialog5 = new FolderBrowserDialog();
				DialogResult dialogResult5 = folderBrowserDialog5.ShowDialog();
				if (dialogResult5 == DialogResult.OK)
				{
					this.textBox1.Text = folderBrowserDialog5.SelectedPath + "\\bfh.exe";
					Environment.SpecialFolder rootFolder5 = folderBrowserDialog5.RootFolder;
					this.battlefieldhl_usercfg = folderBrowserDialog5.SelectedPath + "\\user.cfg";
					if (File.Exists(this.textBox1.Text))
					{
						if (!File.Exists(this.battlefieldhl_profile))
						{
							goto IL_FCA;
						}
						base.BeginInvoke(new Action(delegate
						{
							int num6 = 0;
							Error error4;
							do
							{
								bool flag5;
								if (num6 == 1)
								{
									flag5 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1066595853311152170/static.cfg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\static.cfg");
									num6 = 2;
								}
								if (num6 == 2)
								{
									if (!flag5)
									{
										goto IL_77;
									}
									num6 = 3;
								}
								if (num6 == 3)
								{
									error4 = new Error();
									num6 = 4;
								}
								if (num6 == 0)
								{
									num6 = 1;
								}
							}
							while (num6 != 4);
							try
							{
								error4.ShowDialog();
							}
							finally
							{
								if (error4 != null)
								{
									((IDisposable)error4).Dispose();
								}
							}
							return;
							IL_77:
							File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\static.cfg", this.battlefieldhl_usercfg);
						}));
						using (_200found _200found13 = new _200found())
						{
							_200found13.ShowDialog();
							this.grpbox.Text = this.siticoneComboBox1.Text;
							this.grpbox.Location = new Point(56, 222);
							this.grpbox.BringToFront();
							goto IL_FCA;
						}
					}
					using (g_404 g_14 = new g_404())
					{
						g_14.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			IL_FCA:
			if (this.siticoneComboBox1.Text == "Battlefield 2042")
			{
				if (File.Exists(this.battlefield2042_profile))
				{
					using (_200found _200found14 = new _200found())
					{
						_200found14.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_1081;
					}
				}
				using (g_404 g_15 = new g_404())
				{
					g_15.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_1081:
			if (this.siticoneComboBox1.Text == "Call Of Duty : Modern Warfare 2 (2022)")
			{
				if (File.Exists(this.cod_mw2_settings))
				{
					using (_200found _200found15 = new _200found())
					{
						_200found15.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_1138;
					}
				}
				using (g_404 g_16 = new g_404())
				{
					g_16.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_1138:
			if (this.siticoneComboBox1.Text == "Call Of Duty : Warzone 2.0")
			{
				if (File.Exists(this.cod_mw2_settings))
				{
					using (_200found _200found16 = new _200found())
					{
						_200found16.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_11EF;
					}
				}
				using (g_404 g_17 = new g_404())
				{
					g_17.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_11EF:
			if (this.siticoneComboBox1.Text == "Days Gone")
			{
				if (File.Exists(this.daysgone_main))
				{
					using (_200found _200found17 = new _200found())
					{
						_200found17.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_12A6;
					}
				}
				using (g_404 g_18 = new g_404())
				{
					g_18.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_12A6:
			if (this.siticoneComboBox1.Text == "Dead Space")
			{
				FolderBrowserDialog folderBrowserDialog6 = new FolderBrowserDialog();
				DialogResult dialogResult6 = folderBrowserDialog6.ShowDialog();
				if (dialogResult6 == DialogResult.OK)
				{
					this.textBox1.Text = folderBrowserDialog6.SelectedPath + "\\Dead Space.exe";
					this.dead_space_first = folderBrowserDialog6.SelectedPath + "\\user.cfg";
					if (!File.Exists(this.textBox1.Text))
					{
						using (g_404 g_19 = new g_404())
						{
							g_19.ShowDialog();
						}
						this.reset_grpbox();
					}
					string text6 = "ProfileOptions_profile";
					string text7 = text6;
					string text8 = Path.Combine(new string[] { Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\Dead Space (2023)\\settings\\" });
					string[] files3 = Directory.GetFiles(text8, text7, SearchOption.AllDirectories);
					string[] array5 = files3;
					string[] array6 = array5;
					int k = 0;
					while (k < array6.Length)
					{
						string text9 = array6[k];
						if (File.Exists(text9))
						{
							this.dead_space_main = text9;
							base.BeginInvoke(new Action(delegate
							{
								int num7 = 0;
								Error error5;
								do
								{
									bool flag6;
									if (num7 == 1)
									{
										flag6 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1066595853311152170/static.cfg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\static.cfg");
										num7 = 2;
									}
									if (num7 == 2)
									{
										if (!flag6)
										{
											goto IL_77;
										}
										num7 = 3;
									}
									if (num7 == 3)
									{
										error5 = new Error();
										num7 = 4;
									}
									if (num7 == 0)
									{
										num7 = 1;
									}
								}
								while (num7 != 4);
								try
								{
									error5.ShowDialog();
								}
								finally
								{
									if (error5 != null)
									{
										((IDisposable)error5).Dispose();
									}
								}
								return;
								IL_77:
								File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\static.scr", this.dead_space_first);
							}));
							using (_200found _200found18 = new _200found())
							{
								_200found18.ShowDialog();
								this.grpbox.Text = this.siticoneComboBox1.Text;
								this.grpbox.Location = new Point(56, 222);
								this.grpbox.BringToFront();
								goto IL_1478;
							}
							goto IL_1452;
						}
						goto IL_1452;
						IL_1478:
						k++;
						continue;
						IL_1452:
						using (g_404 g_20 = new g_404())
						{
							g_20.ShowDialog();
						}
						this.reset_grpbox();
						goto IL_1478;
					}
				}
			}
			if (this.siticoneComboBox1.Text == "Dead Space (Steam)")
			{
				FolderBrowserDialog folderBrowserDialog7 = new FolderBrowserDialog();
				DialogResult dialogResult7 = folderBrowserDialog7.ShowDialog();
				if (dialogResult7 == DialogResult.OK)
				{
					this.textBox1.Text = folderBrowserDialog7.SelectedPath + "\\Dead Space.exe";
					this.dead_space_first = folderBrowserDialog7.SelectedPath + "\\user.cfg";
					this.dead_space_main = Path.Combine(new string[] { Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\Dead Space (2023)\\settings\\steam\\ProfileOptions_profile" });
					if (File.Exists(this.textBox1.Text) && File.Exists(this.dead_space_main))
					{
						base.BeginInvoke(new Action(delegate
						{
							int num8 = 0;
							Error error6;
							do
							{
								bool flag7;
								if (num8 == 1)
								{
									flag7 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1066595853311152170/static.cfg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\static.cfg");
									num8 = 2;
								}
								if (num8 == 2)
								{
									if (!flag7)
									{
										goto IL_77;
									}
									num8 = 3;
								}
								if (num8 == 3)
								{
									error6 = new Error();
									num8 = 4;
								}
								if (num8 == 0)
								{
									num8 = 1;
								}
							}
							while (num8 != 4);
							try
							{
								error6.ShowDialog();
							}
							finally
							{
								if (error6 != null)
								{
									((IDisposable)error6).Dispose();
								}
							}
							return;
							IL_77:
							File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\static.scr", this.dead_space_first);
						}));
						using (_200found _200found19 = new _200found())
						{
							_200found19.ShowDialog();
							this.grpbox.Text = this.siticoneComboBox1.Text;
							this.grpbox.Location = new Point(56, 222);
							this.grpbox.BringToFront();
							goto IL_1603;
						}
					}
					using (g_404 g_21 = new g_404())
					{
						g_21.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			IL_1603:
			if (this.siticoneComboBox1.Text == "Destiny 2")
			{
				if (File.Exists(this.destiny2_settings))
				{
					using (_200found _200found20 = new _200found())
					{
						_200found20.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_16BA;
					}
				}
				using (g_404 g_22 = new g_404())
				{
					g_22.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_16BA:
			if (this.siticoneComboBox1.Text == "Dying Light 2")
			{
				FolderBrowserDialog folderBrowserDialog8 = new FolderBrowserDialog();
				DialogResult dialogResult8 = folderBrowserDialog8.ShowDialog();
				if (dialogResult8 == DialogResult.OK)
				{
					this.textBox1.Text = folderBrowserDialog8.SelectedPath + "\\ph\\work\\bin\\x64\\DyingLightGame_x64_rwdi.exe";
					this.dyinglight2_folder = folderBrowserDialog8.SelectedPath;
					this.dyinglight2_main = this.dyinglight2_folder + "\\ph\\work\\out\\settings\\video.scr";
					this.dyinglight2_first = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\dying light 2\\out\\settings\\video.scr";
					this.dyinglight2_second = this.dyinglight2_folder + "\\ph\\source\\Data3.pak";
					this.dyinglight2_third = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\dying light 2\\data\\scripts\\varlist_performance.scr\\";
					this.dyinglight2_fourth = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\dying light 2\\data\\scripts\\varlist_noise.scr\\";
					if (File.Exists(this.textBox1.Text))
					{
						if (!Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\dying light 2\\out\\settings\\"))
						{
							Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\dying light 2\\");
							Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\dying light 2\\out\\");
							Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\dying light 2\\out\\settings\\");
						}
						if (!File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\dying light 2\\out\\settings\\video.scr"))
						{
							base.BeginInvoke(new Action(delegate
							{
								if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059856818454675518/static.scr", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\static.scr") ? 1 : 0) == -4 + sizeof(float))
								{
									using (Error error7 = new Error())
									{
										error7.ShowDialog();
										return;
									}
								}
								File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\static.scr", Environment.GetFolderPath(Environment.SpecialFolder.Windows + sizeof(float)) + "\\Documents\\dying light 2\\out\\settings\\video.scr");
							}));
						}
						if (!Directory.Exists(this.dyinglight2_folder + "\\ph\\work\\out\\settings\\"))
						{
							Directory.CreateDirectory(this.dyinglight2_folder + "\\ph\\work\\out\\");
							Directory.CreateDirectory(this.dyinglight2_folder + "\\ph\\work\\out\\settings\\");
						}
						if (!File.Exists(this.dyinglight2_folder + "\\ph\\work\\out\\settings\\video.scr"))
						{
							base.BeginInvoke(new Action(delegate
							{
								int num9 = 0;
								Error error8;
								do
								{
									bool flag8;
									if (num9 == 1)
									{
										flag8 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059856818454675518/static.scr", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\static.scr");
										num9 = 2;
									}
									if (num9 == 2)
									{
										if (!flag8)
										{
											goto IL_77;
										}
										num9 = 3;
									}
									if (num9 == 3)
									{
										error8 = new Error();
										num9 = 4;
									}
									if (num9 == 0)
									{
										num9 = 1;
									}
								}
								while (num9 != 4);
								try
								{
									error8.ShowDialog();
								}
								finally
								{
									if (error8 != null)
									{
										((IDisposable)error8).Dispose();
									}
								}
								return;
								IL_77:
								File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\static.scr", this.dyinglight2_folder + "\\ph\\work\\out\\settings\\video.scr");
							}));
							using (applied applied = new applied())
							{
								applied.ShowDialog();
							}
						}
						using (_200found _200found21 = new _200found())
						{
							_200found21.ShowDialog();
							this.dx11.Enabled = true;
							this.dx11.Checked = true;
							this.dx12.Enabled = true;
							this.grpbox.Text = this.siticoneComboBox1.Text;
							this.grpbox.Location = new Point(56, 222);
							this.grpbox.BringToFront();
							goto IL_19F3;
						}
					}
					using (g_404 g_23 = new g_404())
					{
						g_23.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			IL_19F3:
			if (this.siticoneComboBox1.Text == "Fallout 4")
			{
				if (File.Exists(this.fallout4_settings))
				{
					using (_200found _200found22 = new _200found())
					{
						_200found22.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_1AAA;
					}
				}
				using (g_404 g_24 = new g_404())
				{
					g_24.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_1AAA:
			if (this.siticoneComboBox1.Text == "Fallout 76")
			{
				if (File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\My Games\\Fallout 76\\Fallout76Prefs.ini"))
				{
					this.fallout76_settings = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\My Games\\Fallout 76\\Fallout76Prefs.ini";
					using (_200found _200found23 = new _200found())
					{
						_200found23.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_1C2E;
					}
				}
				if (File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\My Games\\Fallout 76\\Project76Prefs.ini"))
				{
					this.fallout76_settings = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\My Games\\Fallout 76\\Project76Prefs.ini";
					using (_200found _200found24 = new _200found())
					{
						_200found24.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_1C2E;
					}
				}
				using (g_404 g_25 = new g_404())
				{
					g_25.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_1C2E:
			if (this.siticoneComboBox1.Text == "Far Cry 5")
			{
				string text10 = "GamerProfile.xml";
				string text11 = text10;
				string text12 = Path.Combine(new string[] { Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\My Games\\Far Cry 5\\" });
				try
				{
					string[] files4 = Directory.GetFiles(text12, text11, SearchOption.AllDirectories);
					string[] array7 = files4;
					string[] array8 = array7;
					int l = 0;
					while (l < array8.Length)
					{
						string text13 = array8[l];
						if (File.Exists(text13))
						{
							using (_200found _200found25 = new _200found())
							{
								this.textBox1.Text = text13;
								_200found25.ShowDialog();
								this.grpbox.Text = this.siticoneComboBox1.Text;
								this.grpbox.Location = new Point(56, 222);
								this.grpbox.BringToFront();
								goto IL_1D50;
							}
							goto IL_1D2A;
						}
						goto IL_1D2A;
						IL_1D50:
						l++;
						continue;
						IL_1D2A:
						using (g_404 g_26 = new g_404())
						{
							g_26.ShowDialog();
						}
						this.reset_grpbox();
						goto IL_1D50;
					}
				}
				catch
				{
					using (g_404 g_27 = new g_404())
					{
						g_27.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			if (this.siticoneComboBox1.Text == "Far Cry 6")
			{
				string text14 = "GamerProfile.xml";
				string text15 = text14;
				string text16 = Path.Combine(new string[] { Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\My Games\\Far Cry 6\\" });
				try
				{
					string[] files5 = Directory.GetFiles(text16, text15, SearchOption.AllDirectories);
					string[] array9 = files5;
					string[] array10 = array9;
					int m = 0;
					while (m < array10.Length)
					{
						string text17 = array10[m];
						if (File.Exists(text17))
						{
							using (_200found _200found26 = new _200found())
							{
								this.textBox1.Text = text17;
								_200found26.ShowDialog();
								this.grpbox.Text = this.siticoneComboBox1.Text;
								this.grpbox.Location = new Point(56, 222);
								this.grpbox.BringToFront();
								goto IL_1EB2;
							}
							goto IL_1E8C;
						}
						goto IL_1E8C;
						IL_1EB2:
						m++;
						continue;
						IL_1E8C:
						using (g_404 g_28 = new g_404())
						{
							g_28.ShowDialog();
						}
						this.reset_grpbox();
						goto IL_1EB2;
					}
				}
				catch
				{
					using (g_404 g_29 = new g_404())
					{
						g_29.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			if (this.siticoneComboBox1.Text == "Ghostwire : Tokyo")
			{
				if (File.Exists(this.ghostwire_main))
				{
					using (_200found _200found27 = new _200found())
					{
						_200found27.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_1FA9;
					}
				}
				using (g_404 g_30 = new g_404())
				{
					g_30.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_1FA9:
			if (this.siticoneComboBox1.Text == "God Of War (2018)")
			{
				FolderBrowserDialog folderBrowserDialog9 = new FolderBrowserDialog();
				DialogResult dialogResult9 = folderBrowserDialog9.ShowDialog();
				if (dialogResult9 == DialogResult.OK)
				{
					this.textBox1.Text = folderBrowserDialog9.SelectedPath + "\\settings.ini";
					Environment.SpecialFolder rootFolder6 = folderBrowserDialog9.RootFolder;
					if (File.Exists(this.textBox1.Text))
					{
						using (_200found _200found28 = new _200found())
						{
							_200found28.ShowDialog();
							this.grpbox.Text = this.siticoneComboBox1.Text;
							this.grpbox.Location = new Point(56, 222);
							this.grpbox.BringToFront();
							goto IL_20AA;
						}
					}
					using (g_404 g_31 = new g_404())
					{
						g_31.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			IL_20AA:
			if (this.siticoneComboBox1.Text == "Grand Theft Auto 5")
			{
				if (File.Exists(this.gta_settingloc))
				{
					using (_200found _200found29 = new _200found())
					{
						_200found29.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_2161;
					}
				}
				using (g_404 g_32 = new g_404())
				{
					g_32.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_2161:
			if (this.siticoneComboBox1.Text == "High on Life")
			{
				if (File.Exists(this.highonlife_main))
				{
					using (_200found _200found30 = new _200found())
					{
						_200found30.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_2218;
					}
				}
				using (g_404 g_33 = new g_404())
				{
					g_33.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_2218:
			if (this.siticoneComboBox1.Text == "Hogwarts Legacy")
			{
				if (File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Phoenix\\Saved\\Config\\WindowsNoEditor\\GameUserSettings.ini"))
				{
					this.hogwarts_main = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Phoenix\\Saved\\Config\\WindowsNoEditor\\GameUserSettings.ini";
					this.hogwarts_first = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Phoenix\\Saved\\Config\\WindowsNoEditor\\Engine.ini";
					this.hogwarts_second = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Phoenix\\Saved\\Config\\WindowsNoEditor\\Scalability.ini";
					using (_200found _200found31 = new _200found())
					{
						_200found31.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_2410;
					}
				}
				if (File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Hogwarts Legacy\\Saved\\Config\\WindowsNoEditor\\GameUserSettings.ini"))
				{
					this.hogwarts_main = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Hogwarts Legacy\\Saved\\Config\\WindowsNoEditor\\GameUserSettings.ini";
					this.hogwarts_first = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Hogwarts Legacy\\Saved\\Config\\WindowsNoEditor\\Engine.ini";
					this.hogwarts_second = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Hogwarts Legacy\\Saved\\Config\\WindowsNoEditor\\Scalability.ini";
					using (_200found _200found32 = new _200found())
					{
						_200found32.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_2410;
					}
				}
				using (g_404 g_34 = new g_404())
				{
					g_34.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_2410:
			if (this.siticoneComboBox1.Text == "League of Legends")
			{
				FolderBrowserDialog folderBrowserDialog10 = new FolderBrowserDialog();
				DialogResult dialogResult10 = folderBrowserDialog10.ShowDialog();
				if (dialogResult10 == DialogResult.OK)
				{
					this.textBox1.Text = folderBrowserDialog10.SelectedPath + "\\Config\\game.cfg";
					Environment.SpecialFolder rootFolder7 = folderBrowserDialog10.RootFolder;
					if (File.Exists(this.textBox1.Text))
					{
						using (_200found _200found33 = new _200found())
						{
							_200found33.ShowDialog();
							this.grpbox.Text = this.siticoneComboBox1.Text;
							this.grpbox.Location = new Point(56, 222);
							this.grpbox.BringToFront();
							goto IL_2511;
						}
					}
					using (g_404 g_35 = new g_404())
					{
						g_35.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			IL_2511:
			if (this.siticoneComboBox1.Text == "Marvel's Spider-Man : Miles Morales")
			{
				this.grpbox.Text = this.siticoneComboBox1.Text;
				this.grpbox.Location = new Point(56, 222);
				this.grpbox.BringToFront();
			}
			if (this.siticoneComboBox1.Text == "Marvel's Spider-Man Remastered")
			{
				this.grpbox.Text = this.siticoneComboBox1.Text;
				this.grpbox.Location = new Point(56, 222);
				this.grpbox.BringToFront();
			}
			if (this.siticoneComboBox1.Text == "Need for Speed Heat")
			{
				FolderBrowserDialog folderBrowserDialog11 = new FolderBrowserDialog();
				DialogResult dialogResult11 = folderBrowserDialog11.ShowDialog();
				if (dialogResult11 == DialogResult.OK)
				{
					this.textBox1.Text = folderBrowserDialog11.SelectedPath + "\\NeedForSpeedHeat.exe";
					this.nfs_heat_first = folderBrowserDialog11.SelectedPath + "\\user.cfg";
					Environment.SpecialFolder rootFolder8 = folderBrowserDialog11.RootFolder;
					if (File.Exists(this.textBox1.Text))
					{
						using (_200found _200found34 = new _200found())
						{
							_200found34.ShowDialog();
							this.grpbox.Text = this.siticoneComboBox1.Text;
							this.grpbox.Location = new Point(56, 222);
							this.grpbox.BringToFront();
							goto IL_26EE;
						}
					}
					using (g_404 g_36 = new g_404())
					{
						g_36.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			IL_26EE:
			if (this.siticoneComboBox1.Text == "Overwatch 2")
			{
				if (File.Exists(this.overwatch2_settings))
				{
					using (_200found _200found35 = new _200found())
					{
						_200found35.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_27A5;
					}
				}
				using (g_404 g_37 = new g_404())
				{
					g_37.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_27A5:
			if (this.siticoneComboBox1.Text == "PUBG : Battlegrounds")
			{
				if (File.Exists(this.pubg_main))
				{
					using (_200found _200found36 = new _200found())
					{
						_200found36.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_285C;
					}
				}
				using (g_404 g_38 = new g_404())
				{
					g_38.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_285C:
			if (this.siticoneComboBox1.Text == "Rainbow Six Siege")
			{
				string text18 = "GameSettings.ini";
				string text19 = text18;
				string text20 = Path.Combine(new string[] { Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\My Games\\Rainbow Six - Siege\\" });
				try
				{
					string[] files6 = Directory.GetFiles(text20, text19, SearchOption.AllDirectories);
					string[] array11 = files6;
					string[] array12 = array11;
					int n = 0;
					while (n < array12.Length)
					{
						string text21 = array12[n];
						if (File.Exists(text21))
						{
							using (_200found _200found37 = new _200found())
							{
								this.textBox1.Text = text21;
								_200found37.ShowDialog();
								this.grpbox.Text = this.siticoneComboBox1.Text;
								this.grpbox.Location = new Point(56, 222);
								this.grpbox.BringToFront();
								goto IL_297E;
							}
							goto IL_2958;
						}
						goto IL_2958;
						IL_297E:
						n++;
						continue;
						IL_2958:
						using (g_404 g_39 = new g_404())
						{
							g_39.ShowDialog();
						}
						this.reset_grpbox();
						goto IL_297E;
					}
				}
				catch
				{
					using (g_404 g_40 = new g_404())
					{
						g_40.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			if (this.siticoneComboBox1.Text == "Red Dead Redemption 2")
			{
				if (File.Exists(this.rdr2_settingloc))
				{
					using (_200found _200found38 = new _200found())
					{
						_200found38.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_2A75;
					}
				}
				using (g_404 g_41 = new g_404())
				{
					g_41.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_2A75:
			if (this.siticoneComboBox1.Text == "Resident Evil 2 (2019)")
			{
				FolderBrowserDialog folderBrowserDialog12 = new FolderBrowserDialog();
				DialogResult dialogResult12 = folderBrowserDialog12.ShowDialog();
				if (dialogResult12 == DialogResult.OK)
				{
					this.textBox1.Text = folderBrowserDialog12.SelectedPath + "\\re2_config.ini";
					Environment.SpecialFolder rootFolder9 = folderBrowserDialog12.RootFolder;
					if (File.Exists(this.textBox1.Text))
					{
						using (_200found _200found39 = new _200found())
						{
							_200found39.ShowDialog();
							this.grpbox.Text = this.siticoneComboBox1.Text;
							this.grpbox.Location = new Point(56, 222);
							this.grpbox.BringToFront();
							goto IL_2B76;
						}
					}
					using (g_404 g_42 = new g_404())
					{
						g_42.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			IL_2B76:
			if (this.siticoneComboBox1.Text == "Resident Evil 3 (2020)")
			{
				FolderBrowserDialog folderBrowserDialog13 = new FolderBrowserDialog();
				DialogResult dialogResult13 = folderBrowserDialog13.ShowDialog();
				if (dialogResult13 == DialogResult.OK)
				{
					this.textBox1.Text = folderBrowserDialog13.SelectedPath + "\\re3_config.ini";
					Environment.SpecialFolder rootFolder10 = folderBrowserDialog13.RootFolder;
					if (File.Exists(this.textBox1.Text))
					{
						using (_200found _200found40 = new _200found())
						{
							_200found40.ShowDialog();
							this.grpbox.Text = this.siticoneComboBox1.Text;
							this.grpbox.Location = new Point(56, 222);
							this.grpbox.BringToFront();
							goto IL_2C77;
						}
					}
					using (g_404 g_43 = new g_404())
					{
						g_43.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			IL_2C77:
			if (this.siticoneComboBox1.Text == "Resident Evil : Village")
			{
				FolderBrowserDialog folderBrowserDialog14 = new FolderBrowserDialog();
				DialogResult dialogResult14 = folderBrowserDialog14.ShowDialog();
				if (dialogResult14 == DialogResult.OK)
				{
					this.textBox1.Text = folderBrowserDialog14.SelectedPath + "\\config.ini";
					Environment.SpecialFolder rootFolder11 = folderBrowserDialog14.RootFolder;
					if (File.Exists(this.textBox1.Text))
					{
						using (_200found _200found41 = new _200found())
						{
							_200found41.ShowDialog();
							this.grpbox.Text = this.siticoneComboBox1.Text;
							this.grpbox.Location = new Point(56, 222);
							this.grpbox.BringToFront();
							goto IL_2D78;
						}
					}
					using (g_404 g_44 = new g_404())
					{
						g_44.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			IL_2D78:
			if (this.siticoneComboBox1.Text == "Rocket League")
			{
				if (File.Exists(this.rocket_league_settingloc))
				{
					using (_200found _200found42 = new _200found())
					{
						_200found42.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_2E2F;
					}
				}
				using (g_404 g_45 = new g_404())
				{
					g_45.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_2E2F:
			if (this.siticoneComboBox1.Text == "RUST")
			{
				FolderBrowserDialog folderBrowserDialog15 = new FolderBrowserDialog();
				DialogResult dialogResult15 = folderBrowserDialog15.ShowDialog();
				if (dialogResult15 == DialogResult.OK)
				{
					this.textBox1.Text = folderBrowserDialog15.SelectedPath + "\\RustClient.exe";
					this.rust_cfg = folderBrowserDialog15.SelectedPath + "\\cfg\\client.cfg";
					Environment.SpecialFolder rootFolder12 = folderBrowserDialog15.RootFolder;
					if (File.Exists(this.textBox1.Text))
					{
						using (_200found _200found43 = new _200found())
						{
							_200found43.ShowDialog();
							this.grpbox.Text = this.siticoneComboBox1.Text;
							this.grpbox.Location = new Point(56, 222);
							this.grpbox.BringToFront();
							goto IL_2F4A;
						}
					}
					using (g_404 g_46 = new g_404())
					{
						g_46.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			IL_2F4A:
			if (this.siticoneComboBox1.Text == "Sea of Thieves (Microsoft Store)")
			{
				if (File.Exists(this.MS_seaofthieves_main))
				{
					using (_200found _200found44 = new _200found())
					{
						_200found44.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_3001;
					}
				}
				using (g_404 g_47 = new g_404())
				{
					g_47.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_3001:
			if (this.siticoneComboBox1.Text == "Sea of Thieves (Steam)")
			{
				if (File.Exists(this.seaofthieves_main))
				{
					using (_200found _200found45 = new _200found())
					{
						_200found45.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_30B8;
					}
				}
				using (g_404 g_48 = new g_404())
				{
					g_48.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_30B8:
			if (this.siticoneComboBox1.Text == "Sekiro: Shadows Die Twice")
			{
				if (File.Exists(this.sekiro_xml))
				{
					using (_200found _200found46 = new _200found())
					{
						_200found46.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_316F;
					}
				}
				using (g_404 g_49 = new g_404())
				{
					g_49.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_316F:
			if (this.siticoneComboBox1.Text == "Sons of the Forest")
			{
				if (File.Exists(this.sonsoftheforest))
				{
					using (_200found _200found47 = new _200found())
					{
						_200found47.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_3226;
					}
				}
				using (g_404 g_50 = new g_404())
				{
					g_50.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_3226:
			if (this.siticoneComboBox1.Text == "Stray")
			{
				if (File.Exists(this.stray_main))
				{
					using (_200found _200found48 = new _200found())
					{
						_200found48.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_32DD;
					}
				}
				using (g_404 g_51 = new g_404())
				{
					g_51.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_32DD:
			if (this.siticoneComboBox1.Text == "The Forest")
			{
				this.grpbox.Text = this.siticoneComboBox1.Text;
				this.grpbox.Location = new Point(56, 222);
				this.grpbox.BringToFront();
			}
			if (this.siticoneComboBox1.Text == "The Witcher 3 : Wild Hunt")
			{
				if (!File.Exists(this.witcher3_settings) && !File.Exists(this.witcher3_settings2))
				{
					using (g_404 g_52 = new g_404())
					{
						g_52.ShowDialog();
					}
					this.reset_grpbox();
				}
				if (File.Exists(this.witcher3_settings2) && !File.Exists(this.witcher3_settings))
				{
					File.Copy(this.witcher3_settings2, this.witcher3_settings, true);
					using (_200found _200found49 = new _200found())
					{
						_200found49.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
					}
				}
				if (File.Exists(this.witcher3_settings) && !File.Exists(this.witcher3_settings2))
				{
					File.Copy(this.witcher3_settings, this.witcher3_settings2, true);
					using (_200found _200found50 = new _200found())
					{
						_200found50.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
					}
				}
			}
			if (this.siticoneComboBox1.Text == "Titanfall 2")
			{
				if (File.Exists(this.titanfall2_settingloc))
				{
					using (_200found _200found51 = new _200found())
					{
						_200found51.ShowDialog();
						this.grpbox.Text = this.siticoneComboBox1.Text;
						this.grpbox.Location = new Point(56, 222);
						this.grpbox.BringToFront();
						goto IL_35C8;
					}
				}
				using (g_404 g_53 = new g_404())
				{
					g_53.ShowDialog();
				}
				this.reset_grpbox();
			}
			IL_35C8:
			if (this.siticoneComboBox1.Text == "Uncharted : Legacy of Thieves Collection")
			{
				FolderBrowserDialog folderBrowserDialog16 = new FolderBrowserDialog();
				DialogResult dialogResult16 = folderBrowserDialog16.ShowDialog();
				if (dialogResult16 == DialogResult.OK)
				{
					this.textBox1.Text = folderBrowserDialog16.SelectedPath + "\\Uncharted4_data\\screeninfo.cfg";
					Environment.SpecialFolder rootFolder13 = folderBrowserDialog16.RootFolder;
					if (File.Exists(this.textBox1.Text))
					{
						using (_200found _200found52 = new _200found())
						{
							_200found52.ShowDialog();
							this.grpbox.Text = this.siticoneComboBox1.Text;
							this.grpbox.Location = new Point(56, 222);
							this.grpbox.BringToFront();
							goto IL_36C9;
						}
					}
					using (g_404 g_54 = new g_404())
					{
						g_54.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
			IL_36C9:
			if (this.siticoneComboBox1.Text == "Valorant")
			{
				string text22 = "GameUserSettings.ini";
				string text23 = text22;
				string text24 = Path.Combine(new string[] { Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\VALORANT\\Saved\\Config\\" });
				try
				{
					string[] files7 = Directory.GetFiles(text24, text23, SearchOption.AllDirectories);
					string[] array13 = files7;
					string[] array14 = array13;
					int num2 = 0;
					while (num2 < array14.Length)
					{
						string text25 = array14[num2];
						if (File.Exists(text25))
						{
							this.textBox1.Text = text25;
							using (_200found _200found53 = new _200found())
							{
								_200found53.ShowDialog();
								this.grpbox.Text = this.siticoneComboBox1.Text;
								this.grpbox.Location = new Point(56, 222);
								this.grpbox.BringToFront();
								goto IL_37EB;
							}
							goto IL_37C5;
						}
						goto IL_37C5;
						IL_37EB:
						num2++;
						continue;
						IL_37C5:
						using (g_404 g_55 = new g_404())
						{
							g_55.ShowDialog();
						}
						this.reset_grpbox();
						goto IL_37EB;
					}
				}
				catch
				{
					using (g_404 g_56 = new g_404())
					{
						g_56.ShowDialog();
					}
					this.reset_grpbox();
				}
			}
		}

		// Token: 0x06000447 RID: 1095 RVA: 0x000B7748 File Offset: 0x000B5948
		private void resolution_SelectedIndexChanged(object sender, EventArgs e)
		{
			int num = 0;
			for (;;)
			{
				bool flag;
				if (num == 1)
				{
					flag = this.resolution.Text == "Custom";
					num = 2;
				}
				if (num == 3)
				{
					this.width_txtbox.Enabled = true;
					num = 4;
				}
				if (num == 5)
				{
					this.apply_btn.Enabled = false;
					num = 6;
				}
				bool flag2;
				if (num != 7)
				{
					if (num == 9)
					{
						this.height_txtbox.Enabled = false;
						num = 10;
					}
					if (num == 11)
					{
						this.set_customres.Enabled = false;
						num = 12;
					}
					if (num != 13)
					{
						goto IL_B7;
					}
					if (flag2)
					{
						num = 14;
						goto IL_B7;
					}
					goto IL_DF;
					IL_FE:
					if (num == 18)
					{
						this.width = 1280;
						num = 19;
					}
					if (num == 20)
					{
						goto IL_638;
					}
					IL_658:
					if (num == 22)
					{
						this.width = 1280;
						num = 23;
					}
					if (num == 24)
					{
						goto IL_5C1;
					}
					IL_5E1:
					if (num == 26)
					{
						this.width = 1360;
						num = 27;
					}
					if (num == 28)
					{
						goto IL_549;
					}
					IL_569:
					if (num == 30)
					{
						this.width = 1366;
						num = 31;
					}
					if (num == 32)
					{
						goto IL_4D4;
					}
					IL_501:
					if (num != 33)
					{
						goto IL_168;
					}
					bool flag3;
					if (flag3)
					{
						num = 34;
						goto IL_168;
					}
					goto IL_46A;
					IL_48A:
					if (num == 34)
					{
						this.width = 1440;
						num = 35;
					}
					if (num == 31)
					{
						this.height = 768;
						num = 32;
					}
					bool flag4;
					if (num == 29)
					{
						if (!flag4)
						{
							goto IL_4D4;
						}
						num = 30;
					}
					if (num == 27)
					{
						this.height = 768;
						num = 28;
					}
					bool flag5;
					if (num == 25)
					{
						if (!flag5)
						{
							goto IL_549;
						}
						num = 26;
					}
					if (num == 23)
					{
						this.height = 800;
						num = 24;
					}
					bool flag6;
					if (num == 21)
					{
						if (!flag6)
						{
							goto IL_5C1;
						}
						num = 22;
					}
					if (num == 19)
					{
						this.height = 1024;
						num = 20;
					}
					bool flag7;
					if (num == 17)
					{
						if (!flag7)
						{
							goto IL_638;
						}
						num = 18;
					}
					if (num == 14)
					{
						this.width = 1280;
						num = 15;
					}
					if (num == 12)
					{
						goto IL_6AC;
					}
					goto IL_6CB;
					IL_168:
					if (num == 35)
					{
						this.height = 810;
						num = 36;
					}
					if (num != 37)
					{
						goto IL_19D;
					}
					bool flag8;
					if (flag8)
					{
						num = 38;
						goto IL_19D;
					}
					goto IL_422;
					IL_442:
					if (num == 38)
					{
						this.width = 1440;
						num = 39;
					}
					if (num == 36)
					{
						goto IL_46A;
					}
					goto IL_48A;
					IL_19D:
					if (num == 39)
					{
						this.height = 900;
						num = 40;
					}
					if (num != 41)
					{
						goto IL_1D2;
					}
					bool flag9;
					if (flag9)
					{
						num = 42;
						goto IL_1D2;
					}
					goto IL_3DA;
					IL_3FA:
					if (num == 42)
					{
						this.width = 1600;
						num = 43;
					}
					if (num == 40)
					{
						goto IL_422;
					}
					goto IL_442;
					IL_1D2:
					if (num == 43)
					{
						this.height = 900;
						num = 44;
					}
					if (num != 45)
					{
						goto IL_204;
					}
					bool flag10;
					if (flag10)
					{
						num = 46;
						goto IL_204;
					}
					goto IL_22C;
					IL_24C:
					if (num == 50)
					{
						this.width = 1920;
						num = 51;
					}
					if (num == 52)
					{
						goto IL_366;
					}
					IL_386:
					if (num == 54)
					{
						this.width = 2560;
						num = 55;
					}
					if (num == 56)
					{
						goto IL_2EE;
					}
					IL_30E:
					if (num == 58)
					{
						this.width = 3840;
						num = 59;
					}
					if (num == 59)
					{
						this.height = 2160;
						num = 60;
					}
					bool flag11;
					if (num == 57)
					{
						if (!flag11)
						{
							break;
						}
						num = 58;
					}
					if (num == 55)
					{
						this.height = 1440;
						num = 56;
					}
					bool flag12;
					if (num == 53)
					{
						if (!flag12)
						{
							goto IL_2EE;
						}
						num = 54;
					}
					if (num == 51)
					{
						this.height = 1080;
						num = 52;
					}
					bool flag13;
					if (num == 49)
					{
						if (!flag13)
						{
							goto IL_366;
						}
						num = 50;
					}
					if (num == 46)
					{
						this.width = 1600;
						num = 47;
					}
					if (num == 44)
					{
						goto IL_3DA;
					}
					goto IL_3FA;
					IL_2EE:
					flag11 = this.resolution.Text == "3840 x 2160 (16:9)";
					num = 57;
					goto IL_30E;
					IL_366:
					flag12 = this.resolution.Text == "2560 x 1440 (16:9)";
					num = 53;
					goto IL_386;
					IL_204:
					if (num == 47)
					{
						this.height = 900;
						num = 48;
					}
					if (num != 48)
					{
						goto IL_24C;
					}
					IL_22C:
					flag13 = this.resolution.Text == "1920 x 1080 (16:9)";
					num = 49;
					goto IL_24C;
					IL_3DA:
					flag10 = this.resolution.Text == "1600 x 900 (16:9)";
					num = 45;
					goto IL_3FA;
					IL_422:
					flag9 = this.resolution.Text == "1600 x 900 (16:9)";
					num = 41;
					goto IL_442;
					IL_46A:
					flag8 = this.resolution.Text == "1440 x 900 (16:10)";
					num = 37;
					goto IL_48A;
					IL_4D4:
					flag3 = this.resolution.Text == "1440 x 810 (16:9)";
					num = 33;
					goto IL_501;
					IL_549:
					flag4 = this.resolution.Text == "1366 x 768 (16:9)";
					num = 29;
					goto IL_569;
					IL_5C1:
					flag5 = this.resolution.Text == "1360 x 768 (16:9)";
					num = 25;
					goto IL_5E1;
					IL_638:
					flag6 = this.resolution.Text == "1280 x 800(16:10)";
					num = 21;
					goto IL_658;
					IL_B7:
					if (num == 15)
					{
						this.height = 720;
						num = 16;
					}
					if (num != 16)
					{
						goto IL_FE;
					}
					IL_DF:
					flag7 = this.resolution.Text == "1280 x 1024 (5:4)";
					num = 17;
					goto IL_FE;
				}
				goto IL_6AC;
				IL_6CB:
				if (num == 10)
				{
					this.apply_btn.Enabled = true;
					num = 11;
				}
				if (num == 8)
				{
					goto IL_72B;
				}
				IL_744:
				if (num == 6)
				{
					this.set_customres.Enabled = true;
					num = 7;
				}
				if (num == 4)
				{
					this.height_txtbox.Enabled = true;
					num = 5;
				}
				if (num == 2)
				{
					if (!flag)
					{
						goto IL_72B;
					}
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
				if (num == 60)
				{
					break;
				}
				continue;
				IL_72B:
				this.width_txtbox.Enabled = false;
				num = 9;
				goto IL_744;
				IL_6AC:
				flag2 = this.resolution.Text == "1280 x 720 (16:9)";
				num = 13;
				goto IL_6CB;
			}
		}

		// Token: 0x06000448 RID: 1096 RVA: 0x000B7F14 File Offset: 0x000B6114
		private void apply_btn_Click(object sender, EventArgs e)
		{
			int num = 0;
			do
			{
				if (num == 1)
				{
					this.DefaultWidth = this.width.ToString();
					num = 2;
				}
				if (num == 2)
				{
					this.DefaultHeight = this.height.ToString();
					num = 3;
				}
				bool flag;
				if (num == 3)
				{
					flag = this.grpbox.Text == "ARK : Survival Evolved";
					num = 4;
				}
				if (num == 4)
				{
					if (!flag)
					{
						goto IL_3D3;
					}
					num = 5;
				}
				if (num == 5)
				{
					if (this.width < 800)
					{
						goto IL_EC;
					}
					num = 6;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
			bool flag2 = this.width < 1360;
			goto IL_F1;
			IL_EC:
			flag2 = false;
			IL_F1:
			if (flag2)
			{
				this.ark_g_opt();
				using (applied applied = new applied())
				{
					applied.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.width >= 1360 && this.width <= 1366)
			{
				this.ark_f_opt();
				using (applied applied2 = new applied())
				{
					applied2.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.width > 1366 && this.width <= 1440)
			{
				this.ark_d_opt();
				using (applied applied3 = new applied())
				{
					applied3.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.width > 1440 && this.width <= 1600)
			{
				this.ark_c_opt();
				using (applied applied4 = new applied())
				{
					applied4.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.width > 1600 && this.width <= 1920)
			{
				this.ark_c_opt();
				using (applied applied5 = new applied())
				{
					applied5.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.width > 1920 && this.width <= 2560)
			{
				this.ark_b_opt();
				using (applied applied6 = new applied())
				{
					applied6.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.width > 2560 && this.width <= 3840)
			{
				this.ark_a_opt();
				using (applied applied7 = new applied())
				{
					applied7.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.width > 3840 && this.width <= 15360)
			{
				this.ark_a_opt();
				using (applied applied8 = new applied())
				{
					applied8.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			IL_3D3:
			if (this.grpbox.Text == "A Plague Tale : Innocence")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.APTI_g();
					using (applied applied9 = new applied())
					{
						applied9.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.APTI_f();
					using (applied applied10 = new applied())
					{
						applied10.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.APTI_d();
					using (applied applied11 = new applied())
					{
						applied11.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.APTI_c();
					using (applied applied12 = new applied())
					{
						applied12.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.APTI_c();
					using (applied applied13 = new applied())
					{
						applied13.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.APTI_b();
					using (applied applied14 = new applied())
					{
						applied14.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.APTI_a();
					using (applied applied15 = new applied())
					{
						applied15.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.APTI_a();
					using (applied applied16 = new applied())
					{
						applied16.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "A Plague Tale : Requiem")
			{
				if (this.dx11.Checked)
				{
					this.graphicsAPIVersion = "0";
				}
				else if (this.dx12.Checked)
				{
					this.graphicsAPIVersion = "1";
				}
				if (this.width >= 800 && this.width < 1360)
				{
					this.APTR_g();
					using (applied applied17 = new applied())
					{
						applied17.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.APTR_f();
					using (applied applied18 = new applied())
					{
						applied18.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.APTR_d();
					using (applied applied19 = new applied())
					{
						applied19.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.APTR_c();
					using (applied applied20 = new applied())
					{
						applied20.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.APTR_c();
					using (applied applied21 = new applied())
					{
						applied21.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.APTR_b();
					using (applied applied22 = new applied())
					{
						applied22.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.APTR_a();
					using (applied applied23 = new applied())
					{
						applied23.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.APTR_a();
					using (applied applied24 = new applied())
					{
						applied24.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Atomic Heart" || this.grpbox.Text == "Atomic Heart (Microsoft Store)")
			{
				if (this.dx11.Checked)
				{
					this.graphicsAPIVersion = "DefaultGraphicsRHI=DefaultGraphicsRHI_DX11";
				}
				else if (this.dx12.Checked)
				{
					this.graphicsAPIVersion = "DefaultGraphicsRHI=DefaultGraphicsRHI_DX12";
				}
				if (this.width >= 800 && this.width < 1360)
				{
					this.AH_g();
					using (applied applied25 = new applied())
					{
						applied25.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.AH_f();
					using (applied applied26 = new applied())
					{
						applied26.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.AH_d();
					using (applied applied27 = new applied())
					{
						applied27.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.AH_c();
					using (applied applied28 = new applied())
					{
						applied28.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.AH_c();
					using (applied applied29 = new applied())
					{
						applied29.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.AH_b();
					using (applied applied30 = new applied())
					{
						applied30.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.AH_a();
					using (applied applied31 = new applied())
					{
						applied31.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.AH_a();
					using (applied applied32 = new applied())
					{
						applied32.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Atomic Heart (Steam)")
			{
				if (this.dx11.Checked)
				{
					this.graphicsAPIVersion = "DefaultGraphicsRHI=DefaultGraphicsRHI_DX11";
				}
				else if (this.dx12.Checked)
				{
					this.graphicsAPIVersion = "DefaultGraphicsRHI=DefaultGraphicsRHI_DX12";
				}
				if (this.width >= 800 && this.width < 1360)
				{
					this.AHS_g();
					using (applied applied33 = new applied())
					{
						applied33.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.AHS_f();
					using (applied applied34 = new applied())
					{
						applied34.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.AHS_d();
					using (applied applied35 = new applied())
					{
						applied35.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.AHS_c();
					using (applied applied36 = new applied())
					{
						applied36.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.AHS_c();
					using (applied applied37 = new applied())
					{
						applied37.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.AHS_b();
					using (applied applied38 = new applied())
					{
						applied38.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.AHS_a();
					using (applied applied39 = new applied())
					{
						applied39.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.AHS_a();
					using (applied applied40 = new applied())
					{
						applied40.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Assassin’s Creed Odyssey")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.ACOD_g();
					using (applied applied41 = new applied())
					{
						applied41.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.ACOD_f();
					using (applied applied42 = new applied())
					{
						applied42.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.ACOD_d();
					using (applied applied43 = new applied())
					{
						applied43.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.ACOD_c();
					using (applied applied44 = new applied())
					{
						applied44.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.ACOD_c();
					using (applied applied45 = new applied())
					{
						applied45.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.ACOD_b();
					using (applied applied46 = new applied())
					{
						applied46.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.ACOD_a();
					using (applied applied47 = new applied())
					{
						applied47.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.ACOD_a();
					using (applied applied48 = new applied())
					{
						applied48.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Assassin’s Creed Valhalla")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.ACVAL_g();
					using (applied applied49 = new applied())
					{
						applied49.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.ACVAL_f();
					using (applied applied50 = new applied())
					{
						applied50.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.ACVAL_d();
					using (applied applied51 = new applied())
					{
						applied51.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.ACVAL_c();
					using (applied applied52 = new applied())
					{
						applied52.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.ACVAL_c();
					using (applied applied53 = new applied())
					{
						applied53.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.ACVAL_b();
					using (applied applied54 = new applied())
					{
						applied54.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.ACVAL_a();
					using (applied applied55 = new applied())
					{
						applied55.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.ACVAL_a();
					using (applied applied56 = new applied())
					{
						applied56.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Apex Legends")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.APX_g();
					using (applied applied57 = new applied())
					{
						applied57.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.APX_f();
					using (applied applied58 = new applied())
					{
						applied58.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.APX_d();
					using (applied applied59 = new applied())
					{
						applied59.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.APX_c();
					using (applied applied60 = new applied())
					{
						applied60.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.APX_c();
					using (applied applied61 = new applied())
					{
						applied61.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.APX_b();
					using (applied applied62 = new applied())
					{
						applied62.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.APX_a();
					using (applied applied63 = new applied())
					{
						applied63.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.APX_a();
					using (applied applied64 = new applied())
					{
						applied64.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Battlefield 1")
			{
				if (this.dx11.Checked)
				{
					this.graphicsAPIVersion = "0";
				}
				else if (this.dx12.Checked)
				{
					this.graphicsAPIVersion = "1";
				}
				if (this.width >= 800 && this.width < 1360)
				{
					this.BF1_g();
					using (applied applied65 = new applied())
					{
						applied65.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.BF1_f();
					using (applied applied66 = new applied())
					{
						applied66.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.BF1_d();
					using (applied applied67 = new applied())
					{
						applied67.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.BF1_c();
					using (applied applied68 = new applied())
					{
						applied68.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.BF1_c();
					using (applied applied69 = new applied())
					{
						applied69.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.BF1_b();
					using (applied applied70 = new applied())
					{
						applied70.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.BF1_a();
					using (applied applied71 = new applied())
					{
						applied71.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.BF1_a();
					using (applied applied72 = new applied())
					{
						applied72.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Battlefield 4")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.BF4_g();
					using (applied applied73 = new applied())
					{
						applied73.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.BF4_f();
					using (applied applied74 = new applied())
					{
						applied74.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.BF4_d();
					using (applied applied75 = new applied())
					{
						applied75.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.BF4_c();
					using (applied applied76 = new applied())
					{
						applied76.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.BF4_c();
					using (applied applied77 = new applied())
					{
						applied77.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.BF4_b();
					using (applied applied78 = new applied())
					{
						applied78.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.BF4_a();
					using (applied applied79 = new applied())
					{
						applied79.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.BF4_a();
					using (applied applied80 = new applied())
					{
						applied80.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Battlefield 5")
			{
				if (this.dx11.Checked)
				{
					this.graphicsAPIVersion = "0";
				}
				else if (this.dx12.Checked)
				{
					this.graphicsAPIVersion = "1";
				}
				if (this.width >= 800 && this.width < 1360)
				{
					this.BF5_g();
					using (applied applied81 = new applied())
					{
						applied81.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.BF5_f();
					using (applied applied82 = new applied())
					{
						applied82.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.BF5_d();
					using (applied applied83 = new applied())
					{
						applied83.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.BF5_c();
					using (applied applied84 = new applied())
					{
						applied84.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.BF5_c();
					using (applied applied85 = new applied())
					{
						applied85.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.BF5_b();
					using (applied applied86 = new applied())
					{
						applied86.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.BF5_a();
					using (applied applied87 = new applied())
					{
						applied87.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.BF5_a();
					using (applied applied88 = new applied())
					{
						applied88.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Battlefield Hardline")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.BFHL_g();
					using (applied applied89 = new applied())
					{
						applied89.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.BFHL_f();
					using (applied applied90 = new applied())
					{
						applied90.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.BFHL_d();
					using (applied applied91 = new applied())
					{
						applied91.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.BFHL_c();
					using (applied applied92 = new applied())
					{
						applied92.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.BFHL_c();
					using (applied applied93 = new applied())
					{
						applied93.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.BFHL_b();
					using (applied applied94 = new applied())
					{
						applied94.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.BFHL_a();
					using (applied applied95 = new applied())
					{
						applied95.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.BFHL_a();
					using (applied applied96 = new applied())
					{
						applied96.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Battlefield 2042")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.BF2042_g();
					using (applied applied97 = new applied())
					{
						applied97.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.BF2042_f();
					using (applied applied98 = new applied())
					{
						applied98.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.BF2042_d();
					using (applied applied99 = new applied())
					{
						applied99.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.BF2042_c();
					using (applied applied100 = new applied())
					{
						applied100.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.BF2042_c();
					using (applied applied101 = new applied())
					{
						applied101.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.BF2042_b();
					using (applied applied102 = new applied())
					{
						applied102.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.BF2042_a();
					using (applied applied103 = new applied())
					{
						applied103.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.BF2042_a();
					using (applied applied104 = new applied())
					{
						applied104.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Call Of Duty : Modern Warfare 2 (2022)")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.CODMW2_g();
					using (applied applied105 = new applied())
					{
						applied105.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.CODMW2_f();
					using (applied applied106 = new applied())
					{
						applied106.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.CODMW2_d();
					using (applied applied107 = new applied())
					{
						applied107.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.CODMW2_c();
					using (applied applied108 = new applied())
					{
						applied108.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.CODMW2_c();
					using (applied applied109 = new applied())
					{
						applied109.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.CODMW2_b();
					using (applied applied110 = new applied())
					{
						applied110.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.CODMW2_a();
					using (applied applied111 = new applied())
					{
						applied111.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.CODMW2_a();
					using (applied applied112 = new applied())
					{
						applied112.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Call Of Duty : Warzone 2.0")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.CODWZ2_g();
					using (applied applied113 = new applied())
					{
						applied113.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.CODWZ2_f();
					using (applied applied114 = new applied())
					{
						applied114.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.CODWZ2_d();
					using (applied applied115 = new applied())
					{
						applied115.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.CODWZ2_c();
					using (applied applied116 = new applied())
					{
						applied116.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.CODWZ2_c();
					using (applied applied117 = new applied())
					{
						applied117.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.CODWZ2_b();
					using (applied applied118 = new applied())
					{
						applied118.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.CODWZ2_a();
					using (applied applied119 = new applied())
					{
						applied119.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.CODWZ2_a();
					using (applied applied120 = new applied())
					{
						applied120.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Days Gone")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.DG_g();
					using (applied applied121 = new applied())
					{
						applied121.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.DG_f();
					using (applied applied122 = new applied())
					{
						applied122.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.DG_d();
					using (applied applied123 = new applied())
					{
						applied123.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.DG_c();
					using (applied applied124 = new applied())
					{
						applied124.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.DG_c();
					using (applied applied125 = new applied())
					{
						applied125.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.DG_b();
					using (applied applied126 = new applied())
					{
						applied126.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.DG_a();
					using (applied applied127 = new applied())
					{
						applied127.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.DG_a();
					using (applied applied128 = new applied())
					{
						applied128.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Dead Space" || this.grpbox.Text == "Dead Space (Steam)")
			{
				this.resolutionScaleDLSS = "DLSS_Performance";
				this.resolutionScaleFSR = "AMD_FSR2_Performance";
				if (this.width >= 800 && this.width < 1360)
				{
					this.DS_g();
					using (applied applied129 = new applied())
					{
						applied129.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.DS_f();
					using (applied applied130 = new applied())
					{
						applied130.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.DS_d();
					using (applied applied131 = new applied())
					{
						applied131.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.DS_c();
					using (applied applied132 = new applied())
					{
						applied132.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.DS_c();
					using (applied applied133 = new applied())
					{
						applied133.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.DS_b();
					using (applied applied134 = new applied())
					{
						applied134.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.DS_a();
					using (applied applied135 = new applied())
					{
						applied135.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.DS_a();
					using (applied applied136 = new applied())
					{
						applied136.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Destiny 2")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.Destiny2_g();
					using (applied applied137 = new applied())
					{
						applied137.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.Destiny2_f();
					using (applied applied138 = new applied())
					{
						applied138.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.Destiny2_d();
					using (applied applied139 = new applied())
					{
						applied139.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.Destiny2_c();
					using (applied applied140 = new applied())
					{
						applied140.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.Destiny2_c();
					using (applied applied141 = new applied())
					{
						applied141.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.Destiny2_b();
					using (applied applied142 = new applied())
					{
						applied142.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.Destiny2_a();
					using (applied applied143 = new applied())
					{
						applied143.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.Destiny2_a();
					using (applied applied144 = new applied())
					{
						applied144.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Dying Light 2")
			{
				if (this.dx11.Checked)
				{
					this.graphicsAPIVersion = "d3d11";
				}
				else if (this.dx12.Checked)
				{
					this.graphicsAPIVersion = "d3d12";
				}
				if (this.width >= 800 && this.width < 1360)
				{
					this.DL2_g();
					using (applied applied145 = new applied())
					{
						applied145.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.DL2_f();
					using (applied applied146 = new applied())
					{
						applied146.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.DL2_d();
					using (applied applied147 = new applied())
					{
						applied147.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.DL2_c();
					using (applied applied148 = new applied())
					{
						applied148.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.DL2_c();
					using (applied applied149 = new applied())
					{
						applied149.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.DL2_b();
					using (applied applied150 = new applied())
					{
						applied150.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.DL2_a();
					using (applied applied151 = new applied())
					{
						applied151.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.DL2_a();
					using (applied applied152 = new applied())
					{
						applied152.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Fallout 4")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.Fallout4_g();
					using (applied applied153 = new applied())
					{
						applied153.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.Fallout4_f();
					using (applied applied154 = new applied())
					{
						applied154.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.Fallout4_d();
					using (applied applied155 = new applied())
					{
						applied155.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.Fallout4_c();
					using (applied applied156 = new applied())
					{
						applied156.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.Fallout4_c();
					using (applied applied157 = new applied())
					{
						applied157.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.Fallout4_b();
					using (applied applied158 = new applied())
					{
						applied158.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.Fallout4_a();
					using (applied applied159 = new applied())
					{
						applied159.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.Fallout4_a();
					using (applied applied160 = new applied())
					{
						applied160.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Fallout 76")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.Fallout76_g();
					using (applied applied161 = new applied())
					{
						applied161.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.Fallout76_f();
					using (applied applied162 = new applied())
					{
						applied162.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.Fallout76_d();
					using (applied applied163 = new applied())
					{
						applied163.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.Fallout76_c();
					using (applied applied164 = new applied())
					{
						applied164.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.Fallout76_c();
					using (applied applied165 = new applied())
					{
						applied165.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.Fallout76_b();
					using (applied applied166 = new applied())
					{
						applied166.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.Fallout76_a();
					using (applied applied167 = new applied())
					{
						applied167.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.Fallout76_a();
					using (applied applied168 = new applied())
					{
						applied168.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Far Cry 5")
			{
				string text = File.ReadAllText(this.textBox1.Text);
				string text2 = text;
				Regex regex = new Regex("refreshRateNumerator=(.*)/>");
				Match match = regex.Match(text2);
				if (match.Success)
				{
					this.deviceID = match.Value;
				}
				if (this.width >= 800 && this.width < 1360)
				{
					this.FC5_g();
					using (applied applied169 = new applied())
					{
						applied169.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.FC5_f();
					using (applied applied170 = new applied())
					{
						applied170.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.FC5_d();
					using (applied applied171 = new applied())
					{
						applied171.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.FC5_c();
					using (applied applied172 = new applied())
					{
						applied172.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.FC5_c();
					using (applied applied173 = new applied())
					{
						applied173.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.FC5_b();
					using (applied applied174 = new applied())
					{
						applied174.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.FC5_a();
					using (applied applied175 = new applied())
					{
						applied175.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.FC5_a();
					using (applied applied176 = new applied())
					{
						applied176.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Far Cry 6")
			{
				string text3 = File.ReadAllText(this.textBox1.Text);
				string text4 = text3;
				Regex regex2 = new Regex("refreshRateNumerator=(.*)/>");
				Match match2 = regex2.Match(text4);
				if (match2.Success)
				{
					this.deviceID = match2.Value;
				}
				if (this.width >= 800 && this.width < 1360)
				{
					this.FC6_g();
					using (applied applied177 = new applied())
					{
						applied177.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.FC6_f();
					using (applied applied178 = new applied())
					{
						applied178.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.FC6_d();
					using (applied applied179 = new applied())
					{
						applied179.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.FC6_c();
					using (applied applied180 = new applied())
					{
						applied180.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.FC6_c();
					using (applied applied181 = new applied())
					{
						applied181.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.FC6_b();
					using (applied applied182 = new applied())
					{
						applied182.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.FC6_a();
					using (applied applied183 = new applied())
					{
						applied183.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.FC6_a();
					using (applied applied184 = new applied())
					{
						applied184.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Ghostwire : Tokyo")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.GWT_g();
					using (applied applied185 = new applied())
					{
						applied185.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.GWT_f();
					using (applied applied186 = new applied())
					{
						applied186.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.GWT_d();
					using (applied applied187 = new applied())
					{
						applied187.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.GWT_c();
					using (applied applied188 = new applied())
					{
						applied188.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.GWT_c();
					using (applied applied189 = new applied())
					{
						applied189.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.GWT_b();
					using (applied applied190 = new applied())
					{
						applied190.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.GWT_a();
					using (applied applied191 = new applied())
					{
						applied191.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.GWT_a();
					using (applied applied192 = new applied())
					{
						applied192.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "God Of War (2018)")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.GOW_g();
					using (applied applied193 = new applied())
					{
						applied193.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.GOW_f();
					using (applied applied194 = new applied())
					{
						applied194.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.GOW_d();
					using (applied applied195 = new applied())
					{
						applied195.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.GOW_c();
					using (applied applied196 = new applied())
					{
						applied196.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.GOW_c();
					using (applied applied197 = new applied())
					{
						applied197.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.GOW_b();
					using (applied applied198 = new applied())
					{
						applied198.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.GOW_a();
					using (applied applied199 = new applied())
					{
						applied199.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.GOW_a();
					using (applied applied200 = new applied())
					{
						applied200.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Grand Theft Auto 5")
			{
				this.graphicsAPIVersion = "    <DX_Version value=\"2\" />";
				if (this.width >= 800 && this.width < 1360)
				{
					this.GTAV_g();
					using (applied applied201 = new applied())
					{
						applied201.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.GTAV_f();
					using (applied applied202 = new applied())
					{
						applied202.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.GTAV_d();
					using (applied applied203 = new applied())
					{
						applied203.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.GTAV_c();
					using (applied applied204 = new applied())
					{
						applied204.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.GTAV_c();
					using (applied applied205 = new applied())
					{
						applied205.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.GTAV_b();
					using (applied applied206 = new applied())
					{
						applied206.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.GTAV_a();
					using (applied applied207 = new applied())
					{
						applied207.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.GTAV_a();
					using (applied applied208 = new applied())
					{
						applied208.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "High on Life")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.HOL_g();
					using (applied applied209 = new applied())
					{
						applied209.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.HOL_f();
					using (applied applied210 = new applied())
					{
						applied210.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.HOL_d();
					using (applied applied211 = new applied())
					{
						applied211.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.HOL_c();
					using (applied applied212 = new applied())
					{
						applied212.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.HOL_c();
					using (applied applied213 = new applied())
					{
						applied213.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.HOL_b();
					using (applied applied214 = new applied())
					{
						applied214.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.HOL_a();
					using (applied applied215 = new applied())
					{
						applied215.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.HOL_a();
					using (applied applied216 = new applied())
					{
						applied216.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Hogwarts Legacy")
			{
				this.resolutionScaleDLSS = "DLSS_Performance";
				this.resolutionScaleFSR = "AMD_FSR2_Performance";
				if (this.width >= 800 && this.width < 1360)
				{
					this.HOGL_g();
					using (applied applied217 = new applied())
					{
						applied217.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.HOGL_f();
					using (applied applied218 = new applied())
					{
						applied218.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.HOGL_d();
					using (applied applied219 = new applied())
					{
						applied219.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.HOGL_c();
					using (applied applied220 = new applied())
					{
						applied220.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.HOGL_c();
					using (applied applied221 = new applied())
					{
						applied221.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.HOGL_b();
					using (applied applied222 = new applied())
					{
						applied222.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.HOGL_a();
					using (applied applied223 = new applied())
					{
						applied223.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.HOGL_a();
					using (applied applied224 = new applied())
					{
						applied224.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "League of Legends")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.LOL_g();
					using (applied applied225 = new applied())
					{
						applied225.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.LOL_f();
					using (applied applied226 = new applied())
					{
						applied226.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.LOL_d();
					using (applied applied227 = new applied())
					{
						applied227.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.LOL_c();
					using (applied applied228 = new applied())
					{
						applied228.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.LOL_c();
					using (applied applied229 = new applied())
					{
						applied229.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.LOL_b();
					using (applied applied230 = new applied())
					{
						applied230.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.LOL_a();
					using (applied applied231 = new applied())
					{
						applied231.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.LOL_a();
					using (applied applied232 = new applied())
					{
						applied232.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Marvel's Spider-Man : Miles Morales")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1048992296999325827/1280.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\1280.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\1280.reg");
							process.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\1280.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1048992071102517308/E692D.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\E692D.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process2 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\E692D.reg");
							process2.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\E692D.reg");
						}
					}));
					using (applied applied233 = new applied())
					{
						applied233.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1048992651929714688/1366.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\1360.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process3 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\1360.reg");
							process3.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\1360.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1048992948307624016/55CBA.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\55CBA.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process4 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\55CBA.reg");
							process4.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\55CBA.reg");
						}
					}));
					using (applied applied234 = new applied())
					{
						applied234.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1048993219754602537/1440.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\1440.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process5 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\1440.reg");
							process5.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\1440.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1048993285672271973/85627.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\85627.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process6 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\85627.reg");
							process6.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\85627.reg");
						}
					}));
					using (applied applied235 = new applied())
					{
						applied235.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1048993638312575016/1600.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\1600.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process7 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\1600.reg");
							process7.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\1600.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1048993685162958969/FFB23.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\FFB23.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process8 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\FFB23.reg");
							process8.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\FFB23.reg");
						}
					}));
					using (applied applied236 = new applied())
					{
						applied236.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1048993845922250792/1920.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\1920.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process9 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\1920.reg");
							process9.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\1920.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1048993685162958969/FFB23.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\FFB23.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process10 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\FFB23.reg");
							process10.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\FFB23.reg");
						}
					}));
					using (applied applied237 = new applied())
					{
						applied237.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1048994207815188540/2560.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\2560.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process11 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\2560.reg");
							process11.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\2560.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1048994239469596722/E6354.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\E6354.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process12 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\E6354.reg");
							process12.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\E6354.reg");
						}
					}));
					using (applied applied238 = new applied())
					{
						applied238.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1048994447456751626/3840.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\3840.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process13 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\3840.reg");
							process13.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\3840.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1048994488758042705/26ECF.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\26ECF.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process14 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\26ECF.reg");
							process14.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\26ECF.reg");
						}
					}));
					using (applied applied239 = new applied())
					{
						applied239.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1048994447456751626/3840.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\3840.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process15 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\3840.reg");
							process15.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\3840.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1048994488758042705/26ECF.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\26ECF.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process16 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\26ECF.reg");
							process16.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\26ECF.reg");
						}
					}));
					using (applied applied240 = new applied())
					{
						applied240.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Marvel's Spider-Man Remastered")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1014852080927772742/1280.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\1280.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process17 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\1280.reg");
							process17.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\1280.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1014852169863794698/E692D.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\E692D.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process18 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\E692D.reg");
							process18.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\E692D.reg");
						}
					}));
					using (applied applied241 = new applied())
					{
						applied241.ShowDialog();
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1014852623016415292/1360.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\1360.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process19 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\1360.reg");
							process19.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\1360.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1014852792743120896/55CBA.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\55CBA.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process20 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\55CBA.reg");
							process20.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\55CBA.reg");
						}
					}));
					using (applied applied242 = new applied())
					{
						applied242.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1014853053985325096/1440.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\1440.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process21 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\1440.reg");
							process21.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\1440.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1014853438586232902/85627.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\85627.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process22 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\85627.reg");
							process22.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\85627.reg");
						}
					}));
					using (applied applied243 = new applied())
					{
						applied243.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1014853690550652938/1600.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\1600.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process23 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\1600.reg");
							process23.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\1600.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1014853734469214298/FFB23.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\FFB23.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process24 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\FFB23.reg");
							process24.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\FFB23.reg");
						}
					}));
					using (applied applied244 = new applied())
					{
						applied244.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1014853955588734976/1920.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\1920.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process25 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\1920.reg");
							process25.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\1920.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1014853734469214298/FFB23.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\FFB23.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process26 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\FFB23.reg");
							process26.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\FFB23.reg");
						}
					}));
					using (applied applied245 = new applied())
					{
						applied245.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1014854199982432407/2560.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\2560.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process27 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\2560.reg");
							process27.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\2560.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1014854357302382592/E6354.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\E6354.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process28 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\E6354.reg");
							process28.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\E6354.reg");
						}
					}));
					using (applied applied246 = new applied())
					{
						applied246.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1014854619391860797/3840.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\3840.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process29 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\3840.reg");
							process29.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\3840.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1014854419277422702/26ECF.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\26ECF.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process30 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\26ECF.reg");
							process30.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\26ECF.reg");
						}
					}));
					using (applied applied247 = new applied())
					{
						applied247.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1014854619391860797/3840.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\3840.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process31 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\3840.reg");
							process31.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\3840.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1014854419277422702/26ECF.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\26ECF.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process32 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\26ECF.reg");
							process32.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\26ECF.reg");
						}
					}));
					using (applied applied248 = new applied())
					{
						applied248.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Need for Speed Heat")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.NFSHeat_g();
					using (applied applied249 = new applied())
					{
						applied249.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.NFSHeat_f();
					using (applied applied250 = new applied())
					{
						applied250.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.NFSHeat_d();
					using (applied applied251 = new applied())
					{
						applied251.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.NFSHeat_c();
					using (applied applied252 = new applied())
					{
						applied252.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.NFSHeat_c();
					using (applied applied253 = new applied())
					{
						applied253.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.NFSHeat_b();
					using (applied applied254 = new applied())
					{
						applied254.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.NFSHeat_a();
					using (applied applied255 = new applied())
					{
						applied255.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.NFSHeat_a();
					using (applied applied256 = new applied())
					{
						applied256.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Overwatch 2")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.OW2_g();
					using (applied applied257 = new applied())
					{
						applied257.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.OW2_f();
					using (applied applied258 = new applied())
					{
						applied258.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.OW2_d();
					using (applied applied259 = new applied())
					{
						applied259.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.OW2_c();
					using (applied applied260 = new applied())
					{
						applied260.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.OW2_c();
					using (applied applied261 = new applied())
					{
						applied261.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.OW2_b();
					using (applied applied262 = new applied())
					{
						applied262.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.OW2_a();
					using (applied applied263 = new applied())
					{
						applied263.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.OW2_a();
					using (applied applied264 = new applied())
					{
						applied264.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "PUBG : Battlegrounds")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.PUBG_g();
					using (applied applied265 = new applied())
					{
						applied265.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.PUBG_f();
					using (applied applied266 = new applied())
					{
						applied266.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.PUBG_d();
					using (applied applied267 = new applied())
					{
						applied267.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.PUBG_c();
					using (applied applied268 = new applied())
					{
						applied268.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.PUBG_c();
					using (applied applied269 = new applied())
					{
						applied269.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.PUBG_b();
					using (applied applied270 = new applied())
					{
						applied270.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.PUBG_a();
					using (applied applied271 = new applied())
					{
						applied271.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.PUBG_a();
					using (applied applied272 = new applied())
					{
						applied272.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Rainbow Six Siege")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.RSS_g();
					using (applied applied273 = new applied())
					{
						applied273.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.RSS_f();
					using (applied applied274 = new applied())
					{
						applied274.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.RSS_d();
					using (applied applied275 = new applied())
					{
						applied275.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.RSS_c();
					using (applied applied276 = new applied())
					{
						applied276.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.RSS_c();
					using (applied applied277 = new applied())
					{
						applied277.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.RSS_b();
					using (applied applied278 = new applied())
					{
						applied278.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.RSS_a();
					using (applied applied279 = new applied())
					{
						applied279.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.RSS_a();
					using (applied applied280 = new applied())
					{
						applied280.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Red Dead Redemption 2")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.RDR2_g();
					using (applied applied281 = new applied())
					{
						applied281.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.RDR2_f();
					using (applied applied282 = new applied())
					{
						applied282.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.RDR2_d();
					using (applied applied283 = new applied())
					{
						applied283.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.RDR2_c();
					using (applied applied284 = new applied())
					{
						applied284.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.RDR2_c();
					using (applied applied285 = new applied())
					{
						applied285.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.RDR2_b();
					using (applied applied286 = new applied())
					{
						applied286.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.RDR2_a();
					using (applied applied287 = new applied())
					{
						applied287.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.RDR2_a();
					using (applied applied288 = new applied())
					{
						applied288.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Resident Evil 2 (2019)")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.RE2_g();
					using (applied applied289 = new applied())
					{
						applied289.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.RE2_f();
					using (applied applied290 = new applied())
					{
						applied290.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.RE2_d();
					using (applied applied291 = new applied())
					{
						applied291.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.RE2_c();
					using (applied applied292 = new applied())
					{
						applied292.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.RE2_c();
					using (applied applied293 = new applied())
					{
						applied293.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.RE2_b();
					using (applied applied294 = new applied())
					{
						applied294.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.RE2_a();
					using (applied applied295 = new applied())
					{
						applied295.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.RE2_a();
					using (applied applied296 = new applied())
					{
						applied296.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Resident Evil 3 (2020)")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.RE3_g();
					using (applied applied297 = new applied())
					{
						applied297.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.RE3_f();
					using (applied applied298 = new applied())
					{
						applied298.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.RE3_d();
					using (applied applied299 = new applied())
					{
						applied299.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.RE3_c();
					using (applied applied300 = new applied())
					{
						applied300.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.RE3_c();
					using (applied applied301 = new applied())
					{
						applied301.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.RE3_b();
					using (applied applied302 = new applied())
					{
						applied302.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.RE3_a();
					using (applied applied303 = new applied())
					{
						applied303.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.RE3_a();
					using (applied applied304 = new applied())
					{
						applied304.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Resident Evil : Village")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.optimizationStaticCommander = "73";
					this.REVil_g();
					using (applied applied305 = new applied())
					{
						applied305.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.optimizationStaticCommander = "157";
					this.REVil_f();
					using (applied applied306 = new applied())
					{
						applied306.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.optimizationStaticCommander = "157";
					this.REVil_d();
					using (applied applied307 = new applied())
					{
						applied307.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.optimizationStaticCommander = "171";
					this.REVil_c();
					using (applied applied308 = new applied())
					{
						applied308.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.optimizationStaticCommander = "227";
					this.REVil_c();
					using (applied applied309 = new applied())
					{
						applied309.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.optimizationStaticCommander = "263";
					this.REVil_b();
					using (applied applied310 = new applied())
					{
						applied310.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.optimizationStaticCommander = "276";
					this.REVil_a();
					using (applied applied311 = new applied())
					{
						applied311.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.optimizationStaticCommander = "73";
					this.REVil_a();
					using (applied applied312 = new applied())
					{
						applied312.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Rocket League")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.RL_g();
					using (applied applied313 = new applied())
					{
						applied313.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.RL_f();
					using (applied applied314 = new applied())
					{
						applied314.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.RL_d();
					using (applied applied315 = new applied())
					{
						applied315.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.RL_c();
					using (applied applied316 = new applied())
					{
						applied316.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.RL_c();
					using (applied applied317 = new applied())
					{
						applied317.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.RL_b();
					using (applied applied318 = new applied())
					{
						applied318.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.RL_a();
					using (applied applied319 = new applied())
					{
						applied319.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.RL_a();
					using (applied applied320 = new applied())
					{
						applied320.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "RUST")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num2 = 0;
						Error error;
						do
						{
							bool flag3;
							if (num2 == 1)
							{
								flag3 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059035666807275540/ultra_client.cfg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\client.cfg");
								num2 = 2;
							}
							if (num2 == 2)
							{
								if (!flag3)
								{
									goto IL_77;
								}
								num2 = 3;
							}
							if (num2 == 3)
							{
								error = new Error();
								num2 = 4;
							}
							if (num2 == 0)
							{
								num2 = 1;
							}
						}
						while (num2 != 4);
						try
						{
							error.ShowDialog(this);
						}
						finally
						{
							if (error != null)
							{
								((IDisposable)error).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.rust_cfg);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\client.cfg", this.rust_cfg);
					}));
					using (applied applied321 = new applied())
					{
						applied321.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num3 = 0;
						Error error2;
						do
						{
							bool flag4;
							if (num3 == 1)
							{
								flag4 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059035667079901225/low_client.cfg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\client.cfg");
								num3 = 2;
							}
							if (num3 == 2)
							{
								if (!flag4)
								{
									goto IL_77;
								}
								num3 = 3;
							}
							if (num3 == 3)
							{
								error2 = new Error();
								num3 = 4;
							}
							if (num3 == 0)
							{
								num3 = 1;
							}
						}
						while (num3 != 4);
						try
						{
							error2.ShowDialog(this);
						}
						finally
						{
							if (error2 != null)
							{
								((IDisposable)error2).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.rust_cfg);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\client.cfg", this.rust_cfg);
					}));
					using (applied applied322 = new applied())
					{
						applied322.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num4 = 0;
						Error error3;
						do
						{
							bool flag5;
							if (num4 == 1)
							{
								flag5 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059035667079901225/low_client.cfg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\client.cfg");
								num4 = 2;
							}
							if (num4 == 2)
							{
								if (!flag5)
								{
									goto IL_77;
								}
								num4 = 3;
							}
							if (num4 == 3)
							{
								error3 = new Error();
								num4 = 4;
							}
							if (num4 == 0)
							{
								num4 = 1;
							}
						}
						while (num4 != 4);
						try
						{
							error3.ShowDialog(this);
						}
						finally
						{
							if (error3 != null)
							{
								((IDisposable)error3).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.rust_cfg);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\client.cfg", this.rust_cfg);
					}));
					using (applied applied323 = new applied())
					{
						applied323.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num5 = 0;
						Error error4;
						do
						{
							bool flag6;
							if (num5 == 1)
							{
								flag6 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059035667335749652/recom_client.cfg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\client.cfg");
								num5 = 2;
							}
							if (num5 == 2)
							{
								if (!flag6)
								{
									goto IL_77;
								}
								num5 = 3;
							}
							if (num5 == 3)
							{
								error4 = new Error();
								num5 = 4;
							}
							if (num5 == 0)
							{
								num5 = 1;
							}
						}
						while (num5 != 4);
						try
						{
							error4.ShowDialog(this);
						}
						finally
						{
							if (error4 != null)
							{
								((IDisposable)error4).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.rust_cfg);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\client.cfg", this.rust_cfg);
					}));
					using (applied applied324 = new applied())
					{
						applied324.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num6 = 0;
						Error error5;
						do
						{
							bool flag7;
							if (num6 == 1)
							{
								flag7 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059035667335749652/recom_client.cfg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\client.cfg");
								num6 = 2;
							}
							if (num6 == 2)
							{
								if (!flag7)
								{
									goto IL_77;
								}
								num6 = 3;
							}
							if (num6 == 3)
							{
								error5 = new Error();
								num6 = 4;
							}
							if (num6 == 0)
							{
								num6 = 1;
							}
						}
						while (num6 != 4);
						try
						{
							error5.ShowDialog(this);
						}
						finally
						{
							if (error5 != null)
							{
								((IDisposable)error5).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.rust_cfg);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\client.cfg", this.rust_cfg);
					}));
					using (applied applied325 = new applied())
					{
						applied325.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num7 = 0;
						Error error6;
						do
						{
							bool flag8;
							if (num7 == 1)
							{
								flag8 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059035667608387644/high_client.cfg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\client.cfg");
								num7 = 2;
							}
							if (num7 == 2)
							{
								if (!flag8)
								{
									goto IL_77;
								}
								num7 = 3;
							}
							if (num7 == 3)
							{
								error6 = new Error();
								num7 = 4;
							}
							if (num7 == 0)
							{
								num7 = 1;
							}
						}
						while (num7 != 4);
						try
						{
							error6.ShowDialog(this);
						}
						finally
						{
							if (error6 != null)
							{
								((IDisposable)error6).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.rust_cfg);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\client.cfg", this.rust_cfg);
					}));
					using (applied applied326 = new applied())
					{
						applied326.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num8 = 0;
						Error error7;
						do
						{
							bool flag9;
							if (num8 == 1)
							{
								flag9 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059035667608387644/high_client.cfg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\client.cfg");
								num8 = 2;
							}
							if (num8 == 2)
							{
								if (!flag9)
								{
									goto IL_77;
								}
								num8 = 3;
							}
							if (num8 == 3)
							{
								error7 = new Error();
								num8 = 4;
							}
							if (num8 == 0)
							{
								num8 = 1;
							}
						}
						while (num8 != 4);
						try
						{
							error7.ShowDialog(this);
						}
						finally
						{
							if (error7 != null)
							{
								((IDisposable)error7).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.rust_cfg);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\client.cfg", this.rust_cfg);
					}));
					using (applied applied327 = new applied())
					{
						applied327.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num9 = 0;
						Error error8;
						do
						{
							bool flag10;
							if (num9 == 1)
							{
								flag10 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059035667608387644/high_client.cfg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\client.cfg");
								num9 = 2;
							}
							if (num9 == 2)
							{
								if (!flag10)
								{
									goto IL_77;
								}
								num9 = 3;
							}
							if (num9 == 3)
							{
								error8 = new Error();
								num9 = 4;
							}
							if (num9 == 0)
							{
								num9 = 1;
							}
						}
						while (num9 != 4);
						try
						{
							error8.ShowDialog(this);
						}
						finally
						{
							if (error8 != null)
							{
								((IDisposable)error8).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.rust_cfg);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\client.cfg", this.rust_cfg);
					}));
					using (applied applied328 = new applied())
					{
						applied328.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Sea of Thieves (Microsoft Store)" || this.grpbox.Text == "Sea of Thieves (Steam)")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.SOT_g();
					using (applied applied329 = new applied())
					{
						applied329.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.SOT_f();
					using (applied applied330 = new applied())
					{
						applied330.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.SOT_d();
					using (applied applied331 = new applied())
					{
						applied331.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.SOT_c();
					using (applied applied332 = new applied())
					{
						applied332.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.SOT_c();
					using (applied applied333 = new applied())
					{
						applied333.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.SOT_b();
					using (applied applied334 = new applied())
					{
						applied334.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.SOT_a();
					using (applied applied335 = new applied())
					{
						applied335.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.SOT_a();
					using (applied applied336 = new applied())
					{
						applied336.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Sekiro: Shadows Die Twice")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.SSDT_g();
					using (applied applied337 = new applied())
					{
						applied337.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.SSDT_f();
					using (applied applied338 = new applied())
					{
						applied338.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.SSDT_d();
					using (applied applied339 = new applied())
					{
						applied339.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.SSDT_c();
					using (applied applied340 = new applied())
					{
						applied340.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.SSDT_c();
					using (applied applied341 = new applied())
					{
						applied341.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.SSDT_b();
					using (applied applied342 = new applied())
					{
						applied342.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.SSDT_a();
					using (applied applied343 = new applied())
					{
						applied343.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.SSDT_a();
					using (applied applied344 = new applied())
					{
						applied344.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Sons of the Forest")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.SOTF_g();
					using (applied applied345 = new applied())
					{
						applied345.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.SOTF_f();
					using (applied applied346 = new applied())
					{
						applied346.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.SOTF_d();
					using (applied applied347 = new applied())
					{
						applied347.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.SOTF_c();
					using (applied applied348 = new applied())
					{
						applied348.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.SOTF_c();
					using (applied applied349 = new applied())
					{
						applied349.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.SOTF_b();
					using (applied applied350 = new applied())
					{
						applied350.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.SOTF_a();
					using (applied applied351 = new applied())
					{
						applied351.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.SOTF_a();
					using (applied applied352 = new applied())
					{
						applied352.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Stray")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.Stray_g();
					using (applied applied353 = new applied())
					{
						applied353.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.Stray_f();
					using (applied applied354 = new applied())
					{
						applied354.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.Stray_d();
					using (applied applied355 = new applied())
					{
						applied355.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.Stray_c();
					using (applied applied356 = new applied())
					{
						applied356.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.Stray_c();
					using (applied applied357 = new applied())
					{
						applied357.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.Stray_b();
					using (applied applied358 = new applied())
					{
						applied358.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.Stray_a();
					using (applied applied359 = new applied())
					{
						applied359.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.Stray_a();
					using (applied applied360 = new applied())
					{
						applied360.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "The Forest")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1079650749748871208/1280.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\1280.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process33 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\1280.reg");
							process33.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\1280.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1079650757650948096/G_opt.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\E692D.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process34 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\E692D.reg");
							process34.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\E692D.reg");
						}
					}));
					using (applied applied361 = new applied())
					{
						applied361.ShowDialog();
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1079650750113783919/1366.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\1360.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process35 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\1360.reg");
							process35.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\1360.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1079650757369942056/F_opt.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\55CBA.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process36 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\55CBA.reg");
							process36.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\55CBA.reg");
						}
					}));
					using (applied applied362 = new applied())
					{
						applied362.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1079650750545788998/1600.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\1440.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process37 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\1440.reg");
							process37.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\1440.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1079650749463662622/D_opt.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\85627.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process38 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\85627.reg");
							process38.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\85627.reg");
						}
					}));
					using (applied applied363 = new applied())
					{
						applied363.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1079650750545788998/1600.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\1600.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process39 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\1600.reg");
							process39.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\1600.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1079650749463662622/D_opt.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\FFB23.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process40 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\FFB23.reg");
							process40.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\FFB23.reg");
						}
					}));
					using (applied applied364 = new applied())
					{
						applied364.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1079650750919090267/1920.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\1920.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process41 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\1920.reg");
							process41.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\1920.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1079650749073596436/C_opt.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\FFB23.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process42 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\FFB23.reg");
							process42.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\FFB23.reg");
						}
					}));
					using (applied applied365 = new applied())
					{
						applied365.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1079650747613974559/2560.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\2560.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process43 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\2560.reg");
							process43.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\2560.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1079650748691906580/B_opt.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\E6354.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process44 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\E6354.reg");
							process44.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\E6354.reg");
						}
					}));
					using (applied applied366 = new applied())
					{
						applied366.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1079650747928543253/3840.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\3840.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process45 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\3840.reg");
							process45.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\3840.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1079650748339593226/A_opt.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\26ECF.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process46 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\26ECF.reg");
							process46.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\26ECF.reg");
						}
					}));
					using (applied applied367 = new applied())
					{
						applied367.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1079650747928543253/3840.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\3840.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process47 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\3840.reg");
							process47.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\3840.reg");
						}
					}));
					base.BeginInvoke(new Action(delegate
					{
						if ((Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1079650748339593226/A_opt.reg", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\26ECF.reg") ? 1 : 0) != -4 + sizeof(float))
						{
							Process process48 = Process.Start("regedit.exe", "/s C:\\Nexus_LiteOS_Toolkit\\Downloads\\26ECF.reg");
							process48.WaitForExit();
							File.Delete("C:\\\\Nexus_LiteOS_Toolkit\\\\Downloads\\\\26ECF.reg");
						}
					}));
					using (applied applied368 = new applied())
					{
						applied368.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "The Witcher 3 : Wild Hunt")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.W3WH_g();
					using (applied applied369 = new applied())
					{
						applied369.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.W3WH_f();
					using (applied applied370 = new applied())
					{
						applied370.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.W3WH_d();
					using (applied applied371 = new applied())
					{
						applied371.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.W3WH_c();
					using (applied applied372 = new applied())
					{
						applied372.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.W3WH_c();
					using (applied applied373 = new applied())
					{
						applied373.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.W3WH_b();
					using (applied applied374 = new applied())
					{
						applied374.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.W3WH_a();
					using (applied applied375 = new applied())
					{
						applied375.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.W3WH_a();
					using (applied applied376 = new applied())
					{
						applied376.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Titanfall 2")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.TF2_g();
					using (applied applied377 = new applied())
					{
						applied377.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.TF2_f();
					using (applied applied378 = new applied())
					{
						applied378.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.TF2_d();
					using (applied applied379 = new applied())
					{
						applied379.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.TF2_c();
					using (applied applied380 = new applied())
					{
						applied380.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.TF2_c();
					using (applied applied381 = new applied())
					{
						applied381.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.TF2_b();
					using (applied applied382 = new applied())
					{
						applied382.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.TF2_a();
					using (applied applied383 = new applied())
					{
						applied383.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.TF2_a();
					using (applied applied384 = new applied())
					{
						applied384.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Uncharted : Legacy of Thieves Collection")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.UCLTC_g();
					using (applied applied385 = new applied())
					{
						applied385.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.UCLTC_f();
					using (applied applied386 = new applied())
					{
						applied386.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.UCLTC_d();
					using (applied applied387 = new applied())
					{
						applied387.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.UCLTC_c();
					using (applied applied388 = new applied())
					{
						applied388.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.UCLTC_c();
					using (applied applied389 = new applied())
					{
						applied389.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.UCLTC_b();
					using (applied applied390 = new applied())
					{
						applied390.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.UCLTC_a();
					using (applied applied391 = new applied())
					{
						applied391.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.UCLTC_a();
					using (applied applied392 = new applied())
					{
						applied392.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
			if (this.grpbox.Text == "Valorant")
			{
				if (this.width >= 800 && this.width < 1360)
				{
					this.VAL_g();
					using (applied applied393 = new applied())
					{
						applied393.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width >= 1360 && this.width <= 1366)
				{
					this.VAL_f();
					using (applied applied394 = new applied())
					{
						applied394.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1366 && this.width <= 1440)
				{
					this.VAL_d();
					using (applied applied395 = new applied())
					{
						applied395.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1440 && this.width <= 1600)
				{
					this.VAL_c();
					using (applied applied396 = new applied())
					{
						applied396.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1600 && this.width <= 1920)
				{
					this.VAL_c();
					using (applied applied397 = new applied())
					{
						applied397.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 1920 && this.width <= 2560)
				{
					this.VAL_b();
					using (applied applied398 = new applied())
					{
						applied398.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 2560 && this.width <= 3840)
				{
					this.VAL_a();
					using (applied applied399 = new applied())
					{
						applied399.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				if (this.width > 3840 && this.width <= 15360)
				{
					this.VAL_a();
					using (applied applied400 = new applied())
					{
						applied400.ShowDialog(this);
					}
					this.reset_grpbox();
				}
			}
		}

		// Token: 0x06000449 RID: 1097 RVA: 0x000C53A4 File Offset: 0x000C35A4
		private void ark_g_opt()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/ShooterGame.ShooterGameUserSettings]",
						"MasterAudioVolume=1.000000",
						"MusicAudioVolume=1.000000",
						"SFXAudioVolume=1.000000",
						"VoiceAudioVolume=2.000000",
						"CharacterAudioVolume=1.000000",
						"UIScaling=1.000000",
						"UIQuickbarScaling=0.650000",
						"CameraShakeScale=0.650000",
						"bFirstPersonRiding=False",
						"bThirdPersonPlayer=False",
						"bInventoryHideUnlearnedEngrams=False",
						"bShowStatusNotificationMessages=True",
						"TrueSkyQuality=0.000000",
						"FOVMultiplier=1.000000",
						"GroundClutterDensity=0.000000",
						"bFilmGrain=False",
						"bMotionBlur=False",
						"bUseDistanceFieldAmbientOcclusion=False",
						"bUseSSAO=False",
						"bShowChatBox=True",
						"bCameraViewBob=True",
						"bInvertLookY=False",
						"bFloatingNames=True",
						"bChatBubbles=True",
						"bHideServerInfo=False",
						"bJoinNotifications=False",
						"bCraftablesShowAllItems=False",
						"bLocalInventoryItemsShowAllItems=False",
						"bLocalInventoryCraftingShowAllItems=True",
						"bRemoteInventoryItemsShowAllItems=False",
						"bRemoteInventoryCraftingShowAllItems=False",
						"bRemoteInventoryShowEngrams=True",
						"bForceDisableSuperDetailMode=True",
						"LookLeftRightSensitivity=1.000000",
						"LookUpDownSensitivity=1.000000",
						"GraphicsQuality=4",
						"ActiveLingeringWorldTiles=1",
						"ClientNetQuality=3",
						"LastServerSearchType=0",
						"LastServerSort=2",
						"LastPVESearchType=-1",
						"LastDLCTypeSearchType=-1",
						"LastServerSortAsc=True",
						"LastAutoFavorite=True",
						"LastServerSearchHideFull=False",
						"LastServerSearchProtected=False",
						"LastServerSearchIncludeServersWithActiveMods=True",
						"HideItemTextOverlay=True",
						"bQuickToggleItemNames=True",
						"bDistanceFieldShadowing=False",
						"LODScalar=0.000000",
						"bToggleToTalk=False",
						"HighQualityMaterials=False",
						"HighQualitySurfaces=False",
						"bTemperatureF=False",
						"bDisableTorporEffect=False",
						"bChatShowSteamName=False",
						"bChatShowTribeName=True",
						"bReverseTribeLogOrder=False",
						"EmoteKeyBind1=0",
						"EmoteKeyBind2=0",
						"bNoBloodEffects=True",
						"bLowQualityVFX=True",
						"bSpectatorManualFloatingNames=False",
						"bSuppressAdminIcon=False",
						"bUseSimpleDistanceMovement=False",
						"bDisableMeleeCameraSwingAnims=False",
						"bHighQualityAnisotropicFiltering=False",
						"bUseLowQualityLevelStreaming=True",
						"bPreventInventoryOpeningSounds=False",
						"bPreventItemCraftingSounds=False",
						"bPreventHitMarkers=False",
						"bPreventCrosshair=False",
						"bPreventColorizedItemNames=False",
						"bHighQualityLODs=False",
						"bExtraLevelStreamingDistance=False",
						"bEnableColorGrading=False",
						"DOFSettingInterpTime=0.000000",
						"bDisableBloom=True",
						"bDisableLightShafts=True",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"bDisableMenuTransitions=False",
						"bEnableInventoryItemTooltips=True",
						"bRemoteInventoryShowCraftables=False",
						"bNoTooltipDelay=False",
						"LocalItemSortType=0",
						"LocalCraftingSortType=0",
						"RemoteItemSortType=0",
						"RemoteCraftingSortType=0",
						"VersionMetaTag=1",
						"ShowExplorerNoteSubtitles=False",
						"DisableMenuMusic=False",
						"DisableDefaultCharacterItems=False",
						"bRequestDefaultCharacterItemsOnce=False",
						"bHasSeenGen2Intro=False",
						"bHideFloatingPlayerNames=False",
						"bHideGamepadItemSelectionModifier=False",
						"bToggleExtendedHUDInfo=False",
						"PlayActionWheelClickSound=True",
						"CompanionReactionVerbosity=3",
						"EnableEnvironmentalReactions=True",
						"EnableRespawnReactions=True",
						"EnableDeathReactions=True",
						"EnableSayHelloReactions=True",
						"EnableEmoteReactions=True",
						"EnableMovementSounds=True",
						"DisableSubtitles=False",
						"CompanionSubtitleVerbosityLevel=3",
						"CompanionIsHiddenState=False",
						"MaxAscensionLevel=0",
						"bHostSessionHasBeenOpened=False",
						"bForceTPVCameraOffset=False",
						"bDisableTPVCameraInterpolation=False",
						"bFPVClimbingGear=False",
						"bFPVGlidingGear=False",
						"Gamma1=2.200000",
						"Gamma2=3.000000",
						"AmbientSoundVolume=1.000000",
						"bAllowAnimationStaggering=True",
						"bUseOldThirdPersonCameraTrace=False",
						"bUseOldThirdPersonCameraOffset=False",
						"bLowQualityAnimations=True",
						"bShowedGenesisDLCBackground=False",
						"bShowedGenesis2DLCBackground=False",
						"bViewedAnimatedSeriesTrailer=False",
						"bViewedARK2Trailer=False",
						"bShowRTSKeyBinds=True",
						"bHasCompletedGen2=False",
						"bUseVSync=False",
						"MacroCtrl0=",
						"MacroCtrl1=",
						"MacroCtrl2=",
						"MacroCtrl3=",
						"MacroCtrl4=",
						"MacroCtrl5=",
						"MacroCtrl6=",
						"MacroCtrl7=",
						"MacroCtrl8=",
						"MacroCtrl9=",
						"bUseVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=2",
						"Version=5",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=40",
						"sg.ViewDistanceQuality=2",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.TrueSkyQuality=0",
						"sg.GroundClutterQuality=0",
						"sg.IBLQuality=0",
						"sg.HeightFieldShadowQuality=0",
						"sg.GroundClutterRadius=0",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=40", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				string text3;
				if (num == 3)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num == 4)
				{
					this.get_own_ark_evolved();
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.ark_main, text);
					num = 6;
				}
				if (num == 6)
				{
					File.WriteAllText(this.ark_first, text2);
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.ark_second, text3);
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x0600044A RID: 1098 RVA: 0x000C61A0 File Offset: 0x000C43A0
		private void ark_f_opt()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/ShooterGame.ShooterGameUserSettings]",
						"MasterAudioVolume=1.000000",
						"MusicAudioVolume=1.000000",
						"SFXAudioVolume=1.000000",
						"VoiceAudioVolume=2.000000",
						"CharacterAudioVolume=1.000000",
						"UIScaling=1.000000",
						"UIQuickbarScaling=0.650000",
						"CameraShakeScale=0.650000",
						"bFirstPersonRiding=False",
						"bThirdPersonPlayer=False",
						"bInventoryHideUnlearnedEngrams=False",
						"bShowStatusNotificationMessages=True",
						"TrueSkyQuality=0.000000",
						"FOVMultiplier=1.000000",
						"GroundClutterDensity=0.000000",
						"bFilmGrain=False",
						"bMotionBlur=False",
						"bUseDistanceFieldAmbientOcclusion=False",
						"bUseSSAO=False",
						"bShowChatBox=True",
						"bCameraViewBob=True",
						"bInvertLookY=False",
						"bFloatingNames=True",
						"bChatBubbles=True",
						"bHideServerInfo=False",
						"bJoinNotifications=False",
						"bCraftablesShowAllItems=False",
						"bLocalInventoryItemsShowAllItems=False",
						"bLocalInventoryCraftingShowAllItems=True",
						"bRemoteInventoryItemsShowAllItems=False",
						"bRemoteInventoryCraftingShowAllItems=False",
						"bRemoteInventoryShowEngrams=True",
						"bForceDisableSuperDetailMode=True",
						"LookLeftRightSensitivity=1.000000",
						"LookUpDownSensitivity=1.000000",
						"GraphicsQuality=4",
						"ActiveLingeringWorldTiles=1",
						"ClientNetQuality=3",
						"LastServerSearchType=0",
						"LastServerSort=2",
						"LastPVESearchType=-1",
						"LastDLCTypeSearchType=-1",
						"LastServerSortAsc=True",
						"LastAutoFavorite=True",
						"LastServerSearchHideFull=False",
						"LastServerSearchProtected=False",
						"LastServerSearchIncludeServersWithActiveMods=True",
						"HideItemTextOverlay=True",
						"bQuickToggleItemNames=True",
						"bDistanceFieldShadowing=False",
						"LODScalar=0.000000",
						"bToggleToTalk=False",
						"HighQualityMaterials=False",
						"HighQualitySurfaces=False",
						"bTemperatureF=False",
						"bDisableTorporEffect=False",
						"bChatShowSteamName=False",
						"bChatShowTribeName=True",
						"bReverseTribeLogOrder=False",
						"EmoteKeyBind1=0",
						"EmoteKeyBind2=0",
						"bNoBloodEffects=True",
						"bLowQualityVFX=True",
						"bSpectatorManualFloatingNames=False",
						"bSuppressAdminIcon=False",
						"bUseSimpleDistanceMovement=False",
						"bDisableMeleeCameraSwingAnims=False",
						"bHighQualityAnisotropicFiltering=False",
						"bUseLowQualityLevelStreaming=True",
						"bPreventInventoryOpeningSounds=False",
						"bPreventItemCraftingSounds=False",
						"bPreventHitMarkers=False",
						"bPreventCrosshair=False",
						"bPreventColorizedItemNames=False",
						"bHighQualityLODs=False",
						"bExtraLevelStreamingDistance=False",
						"bEnableColorGrading=False",
						"DOFSettingInterpTime=0.000000",
						"bDisableBloom=True",
						"bDisableLightShafts=True",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"bDisableMenuTransitions=False",
						"bEnableInventoryItemTooltips=True",
						"bRemoteInventoryShowCraftables=False",
						"bNoTooltipDelay=False",
						"LocalItemSortType=0",
						"LocalCraftingSortType=0",
						"RemoteItemSortType=0",
						"RemoteCraftingSortType=0",
						"VersionMetaTag=1",
						"ShowExplorerNoteSubtitles=False",
						"DisableMenuMusic=False",
						"DisableDefaultCharacterItems=False",
						"bRequestDefaultCharacterItemsOnce=False",
						"bHasSeenGen2Intro=False",
						"bHideFloatingPlayerNames=False",
						"bHideGamepadItemSelectionModifier=False",
						"bToggleExtendedHUDInfo=False",
						"PlayActionWheelClickSound=True",
						"CompanionReactionVerbosity=3",
						"EnableEnvironmentalReactions=True",
						"EnableRespawnReactions=True",
						"EnableDeathReactions=True",
						"EnableSayHelloReactions=True",
						"EnableEmoteReactions=True",
						"EnableMovementSounds=True",
						"DisableSubtitles=False",
						"CompanionSubtitleVerbosityLevel=3",
						"CompanionIsHiddenState=False",
						"MaxAscensionLevel=0",
						"bHostSessionHasBeenOpened=False",
						"bForceTPVCameraOffset=False",
						"bDisableTPVCameraInterpolation=False",
						"bFPVClimbingGear=False",
						"bFPVGlidingGear=False",
						"Gamma1=2.200000",
						"Gamma2=3.000000",
						"AmbientSoundVolume=1.000000",
						"bAllowAnimationStaggering=True",
						"bUseOldThirdPersonCameraTrace=False",
						"bUseOldThirdPersonCameraOffset=False",
						"bLowQualityAnimations=True",
						"bShowedGenesisDLCBackground=False",
						"bShowedGenesis2DLCBackground=False",
						"bViewedAnimatedSeriesTrailer=False",
						"bViewedARK2Trailer=False",
						"bShowRTSKeyBinds=True",
						"bHasCompletedGen2=False",
						"bUseVSync=False",
						"MacroCtrl0=",
						"MacroCtrl1=",
						"MacroCtrl2=",
						"MacroCtrl3=",
						"MacroCtrl4=",
						"MacroCtrl5=",
						"MacroCtrl6=",
						"MacroCtrl7=",
						"MacroCtrl8=",
						"MacroCtrl9=",
						"bUseVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=2",
						"Version=5",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=50",
						"sg.ViewDistanceQuality=2",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.TrueSkyQuality=0",
						"sg.GroundClutterQuality=0",
						"sg.IBLQuality=0",
						"sg.HeightFieldShadowQuality=0",
						"sg.GroundClutterRadius=0",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=50", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				string text3;
				if (num == 3)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num == 4)
				{
					this.get_own_ark_evolved();
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.ark_main, text);
					num = 6;
				}
				if (num == 6)
				{
					File.WriteAllText(this.ark_first, text2);
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.ark_second, text3);
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x0600044B RID: 1099 RVA: 0x000C6F9C File Offset: 0x000C519C
		private void ark_d_opt()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/ShooterGame.ShooterGameUserSettings]",
						"MasterAudioVolume=1.000000",
						"MusicAudioVolume=1.000000",
						"SFXAudioVolume=1.000000",
						"VoiceAudioVolume=2.000000",
						"CharacterAudioVolume=1.000000",
						"UIScaling=1.000000",
						"UIQuickbarScaling=0.650000",
						"CameraShakeScale=0.650000",
						"bFirstPersonRiding=False",
						"bThirdPersonPlayer=False",
						"bInventoryHideUnlearnedEngrams=False",
						"bShowStatusNotificationMessages=True",
						"TrueSkyQuality=0.000000",
						"FOVMultiplier=1.000000",
						"GroundClutterDensity=0.000000",
						"bFilmGrain=False",
						"bMotionBlur=False",
						"bUseDistanceFieldAmbientOcclusion=False",
						"bUseSSAO=False",
						"bShowChatBox=True",
						"bCameraViewBob=True",
						"bInvertLookY=False",
						"bFloatingNames=True",
						"bChatBubbles=True",
						"bHideServerInfo=False",
						"bJoinNotifications=False",
						"bCraftablesShowAllItems=False",
						"bLocalInventoryItemsShowAllItems=False",
						"bLocalInventoryCraftingShowAllItems=True",
						"bRemoteInventoryItemsShowAllItems=False",
						"bRemoteInventoryCraftingShowAllItems=False",
						"bRemoteInventoryShowEngrams=True",
						"bForceDisableSuperDetailMode=True",
						"LookLeftRightSensitivity=1.000000",
						"LookUpDownSensitivity=1.000000",
						"GraphicsQuality=4",
						"ActiveLingeringWorldTiles=1",
						"ClientNetQuality=3",
						"LastServerSearchType=0",
						"LastServerSort=2",
						"LastPVESearchType=-1",
						"LastDLCTypeSearchType=-1",
						"LastServerSortAsc=True",
						"LastAutoFavorite=True",
						"LastServerSearchHideFull=False",
						"LastServerSearchProtected=False",
						"LastServerSearchIncludeServersWithActiveMods=True",
						"HideItemTextOverlay=True",
						"bQuickToggleItemNames=True",
						"bDistanceFieldShadowing=False",
						"LODScalar=0.000000",
						"bToggleToTalk=False",
						"HighQualityMaterials=False",
						"HighQualitySurfaces=False",
						"bTemperatureF=False",
						"bDisableTorporEffect=False",
						"bChatShowSteamName=False",
						"bChatShowTribeName=True",
						"bReverseTribeLogOrder=False",
						"EmoteKeyBind1=0",
						"EmoteKeyBind2=0",
						"bNoBloodEffects=True",
						"bLowQualityVFX=True",
						"bSpectatorManualFloatingNames=False",
						"bSuppressAdminIcon=False",
						"bUseSimpleDistanceMovement=False",
						"bDisableMeleeCameraSwingAnims=False",
						"bHighQualityAnisotropicFiltering=False",
						"bUseLowQualityLevelStreaming=True",
						"bPreventInventoryOpeningSounds=False",
						"bPreventItemCraftingSounds=False",
						"bPreventHitMarkers=False",
						"bPreventCrosshair=False",
						"bPreventColorizedItemNames=False",
						"bHighQualityLODs=False",
						"bExtraLevelStreamingDistance=False",
						"bEnableColorGrading=False",
						"DOFSettingInterpTime=0.000000",
						"bDisableBloom=True",
						"bDisableLightShafts=True",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"bDisableMenuTransitions=False",
						"bEnableInventoryItemTooltips=True",
						"bRemoteInventoryShowCraftables=False",
						"bNoTooltipDelay=False",
						"LocalItemSortType=0",
						"LocalCraftingSortType=0",
						"RemoteItemSortType=0",
						"RemoteCraftingSortType=0",
						"VersionMetaTag=1",
						"ShowExplorerNoteSubtitles=False",
						"DisableMenuMusic=False",
						"DisableDefaultCharacterItems=False",
						"bRequestDefaultCharacterItemsOnce=False",
						"bHasSeenGen2Intro=False",
						"bHideFloatingPlayerNames=False",
						"bHideGamepadItemSelectionModifier=False",
						"bToggleExtendedHUDInfo=False",
						"PlayActionWheelClickSound=True",
						"CompanionReactionVerbosity=3",
						"EnableEnvironmentalReactions=True",
						"EnableRespawnReactions=True",
						"EnableDeathReactions=True",
						"EnableSayHelloReactions=True",
						"EnableEmoteReactions=True",
						"EnableMovementSounds=True",
						"DisableSubtitles=False",
						"CompanionSubtitleVerbosityLevel=3",
						"CompanionIsHiddenState=False",
						"MaxAscensionLevel=0",
						"bHostSessionHasBeenOpened=False",
						"bForceTPVCameraOffset=False",
						"bDisableTPVCameraInterpolation=False",
						"bFPVClimbingGear=False",
						"bFPVGlidingGear=False",
						"Gamma1=2.200000",
						"Gamma2=3.000000",
						"AmbientSoundVolume=1.000000",
						"bAllowAnimationStaggering=True",
						"bUseOldThirdPersonCameraTrace=False",
						"bUseOldThirdPersonCameraOffset=False",
						"bLowQualityAnimations=True",
						"bShowedGenesisDLCBackground=False",
						"bShowedGenesis2DLCBackground=False",
						"bViewedAnimatedSeriesTrailer=False",
						"bViewedARK2Trailer=False",
						"bShowRTSKeyBinds=True",
						"bHasCompletedGen2=False",
						"bUseVSync=False",
						"MacroCtrl0=",
						"MacroCtrl1=",
						"MacroCtrl2=",
						"MacroCtrl3=",
						"MacroCtrl4=",
						"MacroCtrl5=",
						"MacroCtrl6=",
						"MacroCtrl7=",
						"MacroCtrl8=",
						"MacroCtrl9=",
						"bUseVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=2",
						"Version=5",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=70",
						"sg.ViewDistanceQuality=2",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.TrueSkyQuality=0",
						"sg.GroundClutterQuality=0",
						"sg.IBLQuality=0",
						"sg.HeightFieldShadowQuality=0",
						"sg.GroundClutterRadius=0",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=70", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				string text3;
				if (num == 3)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num == 4)
				{
					this.get_own_ark_evolved();
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.ark_main, text);
					num = 6;
				}
				if (num == 6)
				{
					File.WriteAllText(this.ark_first, text2);
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.ark_second, text3);
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x0600044C RID: 1100 RVA: 0x000C7D98 File Offset: 0x000C5F98
		private void ark_c_opt()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/ShooterGame.ShooterGameUserSettings]",
						"MasterAudioVolume=1.000000",
						"MusicAudioVolume=1.000000",
						"SFXAudioVolume=1.000000",
						"VoiceAudioVolume=2.000000",
						"CharacterAudioVolume=1.000000",
						"UIScaling=1.000000",
						"UIQuickbarScaling=0.650000",
						"CameraShakeScale=0.650000",
						"bFirstPersonRiding=False",
						"bThirdPersonPlayer=False",
						"bInventoryHideUnlearnedEngrams=False",
						"bShowStatusNotificationMessages=True",
						"TrueSkyQuality=0.000000",
						"FOVMultiplier=1.000000",
						"GroundClutterDensity=0.000000",
						"bFilmGrain=False",
						"bMotionBlur=False",
						"bUseDistanceFieldAmbientOcclusion=False",
						"bUseSSAO=False",
						"bShowChatBox=True",
						"bCameraViewBob=True",
						"bInvertLookY=False",
						"bFloatingNames=True",
						"bChatBubbles=True",
						"bHideServerInfo=False",
						"bJoinNotifications=False",
						"bCraftablesShowAllItems=False",
						"bLocalInventoryItemsShowAllItems=False",
						"bLocalInventoryCraftingShowAllItems=True",
						"bRemoteInventoryItemsShowAllItems=False",
						"bRemoteInventoryCraftingShowAllItems=False",
						"bRemoteInventoryShowEngrams=True",
						"bForceDisableSuperDetailMode=True",
						"LookLeftRightSensitivity=1.000000",
						"LookUpDownSensitivity=1.000000",
						"GraphicsQuality=4",
						"ActiveLingeringWorldTiles=1",
						"ClientNetQuality=3",
						"LastServerSearchType=0",
						"LastServerSort=2",
						"LastPVESearchType=-1",
						"LastDLCTypeSearchType=-1",
						"LastServerSortAsc=True",
						"LastAutoFavorite=True",
						"LastServerSearchHideFull=False",
						"LastServerSearchProtected=False",
						"LastServerSearchIncludeServersWithActiveMods=True",
						"HideItemTextOverlay=True",
						"bQuickToggleItemNames=True",
						"bDistanceFieldShadowing=False",
						"LODScalar=0.000000",
						"bToggleToTalk=False",
						"HighQualityMaterials=False",
						"HighQualitySurfaces=False",
						"bTemperatureF=False",
						"bDisableTorporEffect=False",
						"bChatShowSteamName=False",
						"bChatShowTribeName=True",
						"bReverseTribeLogOrder=False",
						"EmoteKeyBind1=0",
						"EmoteKeyBind2=0",
						"bNoBloodEffects=True",
						"bLowQualityVFX=True",
						"bSpectatorManualFloatingNames=False",
						"bSuppressAdminIcon=False",
						"bUseSimpleDistanceMovement=False",
						"bDisableMeleeCameraSwingAnims=False",
						"bHighQualityAnisotropicFiltering=False",
						"bUseLowQualityLevelStreaming=True",
						"bPreventInventoryOpeningSounds=False",
						"bPreventItemCraftingSounds=False",
						"bPreventHitMarkers=False",
						"bPreventCrosshair=False",
						"bPreventColorizedItemNames=False",
						"bHighQualityLODs=False",
						"bExtraLevelStreamingDistance=False",
						"bEnableColorGrading=False",
						"DOFSettingInterpTime=0.000000",
						"bDisableBloom=True",
						"bDisableLightShafts=True",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"bDisableMenuTransitions=False",
						"bEnableInventoryItemTooltips=True",
						"bRemoteInventoryShowCraftables=False",
						"bNoTooltipDelay=False",
						"LocalItemSortType=0",
						"LocalCraftingSortType=0",
						"RemoteItemSortType=0",
						"RemoteCraftingSortType=0",
						"VersionMetaTag=1",
						"ShowExplorerNoteSubtitles=False",
						"DisableMenuMusic=False",
						"DisableDefaultCharacterItems=False",
						"bRequestDefaultCharacterItemsOnce=False",
						"bHasSeenGen2Intro=False",
						"bHideFloatingPlayerNames=False",
						"bHideGamepadItemSelectionModifier=False",
						"bToggleExtendedHUDInfo=False",
						"PlayActionWheelClickSound=True",
						"CompanionReactionVerbosity=3",
						"EnableEnvironmentalReactions=True",
						"EnableRespawnReactions=True",
						"EnableDeathReactions=True",
						"EnableSayHelloReactions=True",
						"EnableEmoteReactions=True",
						"EnableMovementSounds=True",
						"DisableSubtitles=False",
						"CompanionSubtitleVerbosityLevel=3",
						"CompanionIsHiddenState=False",
						"MaxAscensionLevel=0",
						"bHostSessionHasBeenOpened=False",
						"bForceTPVCameraOffset=False",
						"bDisableTPVCameraInterpolation=False",
						"bFPVClimbingGear=False",
						"bFPVGlidingGear=False",
						"Gamma1=2.200000",
						"Gamma2=3.000000",
						"AmbientSoundVolume=1.000000",
						"bAllowAnimationStaggering=True",
						"bUseOldThirdPersonCameraTrace=False",
						"bUseOldThirdPersonCameraOffset=False",
						"bLowQualityAnimations=True",
						"bShowedGenesisDLCBackground=False",
						"bShowedGenesis2DLCBackground=False",
						"bViewedAnimatedSeriesTrailer=False",
						"bViewedARK2Trailer=False",
						"bShowRTSKeyBinds=True",
						"bHasCompletedGen2=False",
						"bUseVSync=False",
						"MacroCtrl0=",
						"MacroCtrl1=",
						"MacroCtrl2=",
						"MacroCtrl3=",
						"MacroCtrl4=",
						"MacroCtrl5=",
						"MacroCtrl6=",
						"MacroCtrl7=",
						"MacroCtrl8=",
						"MacroCtrl9=",
						"bUseVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=2",
						"Version=5",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=80",
						"sg.ViewDistanceQuality=2",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.TrueSkyQuality=0",
						"sg.GroundClutterQuality=0",
						"sg.IBLQuality=0",
						"sg.HeightFieldShadowQuality=0",
						"sg.GroundClutterRadius=0",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=80", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				string text3;
				if (num == 3)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num == 4)
				{
					this.get_own_ark_evolved();
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.ark_main, text);
					num = 6;
				}
				if (num == 6)
				{
					File.WriteAllText(this.ark_first, text2);
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.ark_second, text3);
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x0600044D RID: 1101 RVA: 0x000C8B94 File Offset: 0x000C6D94
		private void ark_b_opt()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/ShooterGame.ShooterGameUserSettings]",
						"MasterAudioVolume=1.000000",
						"MusicAudioVolume=1.000000",
						"SFXAudioVolume=1.000000",
						"VoiceAudioVolume=2.000000",
						"CharacterAudioVolume=1.000000",
						"UIScaling=1.000000",
						"UIQuickbarScaling=0.650000",
						"CameraShakeScale=0.650000",
						"bFirstPersonRiding=False",
						"bThirdPersonPlayer=False",
						"bInventoryHideUnlearnedEngrams=False",
						"bShowStatusNotificationMessages=True",
						"TrueSkyQuality=0.000000",
						"FOVMultiplier=1.000000",
						"GroundClutterDensity=0.000000",
						"bFilmGrain=False",
						"bMotionBlur=False",
						"bUseDistanceFieldAmbientOcclusion=False",
						"bUseSSAO=False",
						"bShowChatBox=True",
						"bCameraViewBob=True",
						"bInvertLookY=False",
						"bFloatingNames=True",
						"bChatBubbles=True",
						"bHideServerInfo=False",
						"bJoinNotifications=False",
						"bCraftablesShowAllItems=False",
						"bLocalInventoryItemsShowAllItems=False",
						"bLocalInventoryCraftingShowAllItems=True",
						"bRemoteInventoryItemsShowAllItems=False",
						"bRemoteInventoryCraftingShowAllItems=False",
						"bRemoteInventoryShowEngrams=True",
						"bForceDisableSuperDetailMode=True",
						"LookLeftRightSensitivity=1.000000",
						"LookUpDownSensitivity=1.000000",
						"GraphicsQuality=4",
						"ActiveLingeringWorldTiles=1",
						"ClientNetQuality=3",
						"LastServerSearchType=0",
						"LastServerSort=2",
						"LastPVESearchType=-1",
						"LastDLCTypeSearchType=-1",
						"LastServerSortAsc=True",
						"LastAutoFavorite=True",
						"LastServerSearchHideFull=False",
						"LastServerSearchProtected=False",
						"LastServerSearchIncludeServersWithActiveMods=True",
						"HideItemTextOverlay=True",
						"bQuickToggleItemNames=True",
						"bDistanceFieldShadowing=False",
						"LODScalar=0.000000",
						"bToggleToTalk=False",
						"HighQualityMaterials=False",
						"HighQualitySurfaces=False",
						"bTemperatureF=False",
						"bDisableTorporEffect=False",
						"bChatShowSteamName=False",
						"bChatShowTribeName=True",
						"bReverseTribeLogOrder=False",
						"EmoteKeyBind1=0",
						"EmoteKeyBind2=0",
						"bNoBloodEffects=True",
						"bLowQualityVFX=True",
						"bSpectatorManualFloatingNames=False",
						"bSuppressAdminIcon=False",
						"bUseSimpleDistanceMovement=False",
						"bDisableMeleeCameraSwingAnims=False",
						"bHighQualityAnisotropicFiltering=False",
						"bUseLowQualityLevelStreaming=True",
						"bPreventInventoryOpeningSounds=False",
						"bPreventItemCraftingSounds=False",
						"bPreventHitMarkers=False",
						"bPreventCrosshair=False",
						"bPreventColorizedItemNames=False",
						"bHighQualityLODs=False",
						"bExtraLevelStreamingDistance=False",
						"bEnableColorGrading=False",
						"DOFSettingInterpTime=0.000000",
						"bDisableBloom=True",
						"bDisableLightShafts=True",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"bDisableMenuTransitions=False",
						"bEnableInventoryItemTooltips=True",
						"bRemoteInventoryShowCraftables=False",
						"bNoTooltipDelay=False",
						"LocalItemSortType=0",
						"LocalCraftingSortType=0",
						"RemoteItemSortType=0",
						"RemoteCraftingSortType=0",
						"VersionMetaTag=1",
						"ShowExplorerNoteSubtitles=False",
						"DisableMenuMusic=False",
						"DisableDefaultCharacterItems=False",
						"bRequestDefaultCharacterItemsOnce=False",
						"bHasSeenGen2Intro=False",
						"bHideFloatingPlayerNames=False",
						"bHideGamepadItemSelectionModifier=False",
						"bToggleExtendedHUDInfo=False",
						"PlayActionWheelClickSound=True",
						"CompanionReactionVerbosity=3",
						"EnableEnvironmentalReactions=True",
						"EnableRespawnReactions=True",
						"EnableDeathReactions=True",
						"EnableSayHelloReactions=True",
						"EnableEmoteReactions=True",
						"EnableMovementSounds=True",
						"DisableSubtitles=False",
						"CompanionSubtitleVerbosityLevel=3",
						"CompanionIsHiddenState=False",
						"MaxAscensionLevel=0",
						"bHostSessionHasBeenOpened=False",
						"bForceTPVCameraOffset=False",
						"bDisableTPVCameraInterpolation=False",
						"bFPVClimbingGear=False",
						"bFPVGlidingGear=False",
						"Gamma1=2.200000",
						"Gamma2=3.000000",
						"AmbientSoundVolume=1.000000",
						"bAllowAnimationStaggering=True",
						"bUseOldThirdPersonCameraTrace=False",
						"bUseOldThirdPersonCameraOffset=False",
						"bLowQualityAnimations=True",
						"bShowedGenesisDLCBackground=False",
						"bShowedGenesis2DLCBackground=False",
						"bViewedAnimatedSeriesTrailer=False",
						"bViewedARK2Trailer=False",
						"bShowRTSKeyBinds=True",
						"bHasCompletedGen2=False",
						"bUseVSync=False",
						"MacroCtrl0=",
						"MacroCtrl1=",
						"MacroCtrl2=",
						"MacroCtrl3=",
						"MacroCtrl4=",
						"MacroCtrl5=",
						"MacroCtrl6=",
						"MacroCtrl7=",
						"MacroCtrl8=",
						"MacroCtrl9=",
						"bUseVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=2",
						"Version=5",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=80",
						"sg.ViewDistanceQuality=2",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.TrueSkyQuality=0",
						"sg.GroundClutterQuality=0",
						"sg.IBLQuality=0",
						"sg.HeightFieldShadowQuality=0",
						"sg.GroundClutterRadius=0",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=85", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				string text3;
				if (num == 3)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num == 4)
				{
					this.get_own_ark_evolved();
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.ark_main, text);
					num = 6;
				}
				if (num == 6)
				{
					File.WriteAllText(this.ark_first, text2);
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.ark_second, text3);
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x0600044E RID: 1102 RVA: 0x000C9990 File Offset: 0x000C7B90
		private void ark_a_opt()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/ShooterGame.ShooterGameUserSettings]",
						"MasterAudioVolume=1.000000",
						"MusicAudioVolume=1.000000",
						"SFXAudioVolume=1.000000",
						"VoiceAudioVolume=2.000000",
						"CharacterAudioVolume=1.000000",
						"UIScaling=1.000000",
						"UIQuickbarScaling=0.650000",
						"CameraShakeScale=0.650000",
						"bFirstPersonRiding=False",
						"bThirdPersonPlayer=False",
						"bInventoryHideUnlearnedEngrams=False",
						"bShowStatusNotificationMessages=True",
						"TrueSkyQuality=0.000000",
						"FOVMultiplier=1.000000",
						"GroundClutterDensity=0.000000",
						"bFilmGrain=False",
						"bMotionBlur=False",
						"bUseDistanceFieldAmbientOcclusion=False",
						"bUseSSAO=False",
						"bShowChatBox=True",
						"bCameraViewBob=True",
						"bInvertLookY=False",
						"bFloatingNames=True",
						"bChatBubbles=True",
						"bHideServerInfo=False",
						"bJoinNotifications=False",
						"bCraftablesShowAllItems=False",
						"bLocalInventoryItemsShowAllItems=False",
						"bLocalInventoryCraftingShowAllItems=True",
						"bRemoteInventoryItemsShowAllItems=False",
						"bRemoteInventoryCraftingShowAllItems=False",
						"bRemoteInventoryShowEngrams=True",
						"bForceDisableSuperDetailMode=True",
						"LookLeftRightSensitivity=1.000000",
						"LookUpDownSensitivity=1.000000",
						"GraphicsQuality=4",
						"ActiveLingeringWorldTiles=1",
						"ClientNetQuality=3",
						"LastServerSearchType=0",
						"LastServerSort=2",
						"LastPVESearchType=-1",
						"LastDLCTypeSearchType=-1",
						"LastServerSortAsc=True",
						"LastAutoFavorite=True",
						"LastServerSearchHideFull=False",
						"LastServerSearchProtected=False",
						"LastServerSearchIncludeServersWithActiveMods=True",
						"HideItemTextOverlay=True",
						"bQuickToggleItemNames=True",
						"bDistanceFieldShadowing=False",
						"LODScalar=0.000000",
						"bToggleToTalk=False",
						"HighQualityMaterials=False",
						"HighQualitySurfaces=False",
						"bTemperatureF=False",
						"bDisableTorporEffect=False",
						"bChatShowSteamName=False",
						"bChatShowTribeName=True",
						"bReverseTribeLogOrder=False",
						"EmoteKeyBind1=0",
						"EmoteKeyBind2=0",
						"bNoBloodEffects=True",
						"bLowQualityVFX=True",
						"bSpectatorManualFloatingNames=False",
						"bSuppressAdminIcon=False",
						"bUseSimpleDistanceMovement=False",
						"bDisableMeleeCameraSwingAnims=False",
						"bHighQualityAnisotropicFiltering=False",
						"bUseLowQualityLevelStreaming=True",
						"bPreventInventoryOpeningSounds=False",
						"bPreventItemCraftingSounds=False",
						"bPreventHitMarkers=False",
						"bPreventCrosshair=False",
						"bPreventColorizedItemNames=False",
						"bHighQualityLODs=False",
						"bExtraLevelStreamingDistance=False",
						"bEnableColorGrading=False",
						"DOFSettingInterpTime=0.000000",
						"bDisableBloom=True",
						"bDisableLightShafts=True",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"LastJoinedSessionPerCategory=\" \"",
						"bDisableMenuTransitions=False",
						"bEnableInventoryItemTooltips=True",
						"bRemoteInventoryShowCraftables=False",
						"bNoTooltipDelay=False",
						"LocalItemSortType=0",
						"LocalCraftingSortType=0",
						"RemoteItemSortType=0",
						"RemoteCraftingSortType=0",
						"VersionMetaTag=1",
						"ShowExplorerNoteSubtitles=False",
						"DisableMenuMusic=False",
						"DisableDefaultCharacterItems=False",
						"bRequestDefaultCharacterItemsOnce=False",
						"bHasSeenGen2Intro=False",
						"bHideFloatingPlayerNames=False",
						"bHideGamepadItemSelectionModifier=False",
						"bToggleExtendedHUDInfo=False",
						"PlayActionWheelClickSound=True",
						"CompanionReactionVerbosity=3",
						"EnableEnvironmentalReactions=True",
						"EnableRespawnReactions=True",
						"EnableDeathReactions=True",
						"EnableSayHelloReactions=True",
						"EnableEmoteReactions=True",
						"EnableMovementSounds=True",
						"DisableSubtitles=False",
						"CompanionSubtitleVerbosityLevel=3",
						"CompanionIsHiddenState=False",
						"MaxAscensionLevel=0",
						"bHostSessionHasBeenOpened=False",
						"bForceTPVCameraOffset=False",
						"bDisableTPVCameraInterpolation=False",
						"bFPVClimbingGear=False",
						"bFPVGlidingGear=False",
						"Gamma1=2.200000",
						"Gamma2=3.000000",
						"AmbientSoundVolume=1.000000",
						"bAllowAnimationStaggering=True",
						"bUseOldThirdPersonCameraTrace=False",
						"bUseOldThirdPersonCameraOffset=False",
						"bLowQualityAnimations=True",
						"bShowedGenesisDLCBackground=False",
						"bShowedGenesis2DLCBackground=False",
						"bViewedAnimatedSeriesTrailer=False",
						"bViewedARK2Trailer=False",
						"bShowRTSKeyBinds=True",
						"bHasCompletedGen2=False",
						"bUseVSync=False",
						"MacroCtrl0=",
						"MacroCtrl1=",
						"MacroCtrl2=",
						"MacroCtrl3=",
						"MacroCtrl4=",
						"MacroCtrl5=",
						"MacroCtrl6=",
						"MacroCtrl7=",
						"MacroCtrl8=",
						"MacroCtrl9=",
						"bUseVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=2",
						"Version=5",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=90",
						"sg.ViewDistanceQuality=2",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.TrueSkyQuality=0",
						"sg.GroundClutterQuality=0",
						"sg.IBLQuality=0",
						"sg.HeightFieldShadowQuality=0",
						"sg.GroundClutterRadius=0",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=90", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				string text3;
				if (num == 3)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num == 4)
				{
					this.get_own_ark_evolved();
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.ark_main, text);
					num = 6;
				}
				if (num == 6)
				{
					File.WriteAllText(this.ark_first, text2);
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.ark_second, text3);
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x0600044F RID: 1103 RVA: 0x000CA78C File Offset: 0x000C898C
		private void APTI_g()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.apti_settings)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"Version 66",
						"{Video",
						string.Join(Environment.NewLine, array),
						"\tMonitor 0",
						"\tWindowed 0",
						"\tFullscreenBorderless 0",
						"\tResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tPrimaryScaling 0.400000",
						"\tSecondaryScaling 1.000000",
						"\tVSync 0",
						"\tTextureQuality 0",
						"\tTextureFiltering 0",
						"\tPosX 0",
						"\tPosY 0",
						"}",
						"{Graphics",
						"\tVersion 1.0.4",
						"\t{Platform",
						"\t\tEPlatform 0",
						"\t}",
						"\t{HDR10",
						"\t\tEnabled 0",
						"\t}",
						"\t{Texture",
						"\t\tMaxAnisotropy 4",
						"\t\tLODBias 0",
						"\t\tMaxLOD 0",
						"\t}",
						"\t{DrawDistance",
						"\t\tDrawDistanceMultiplier 0.500000",
						"\t\tMIDrawDistanceMultiplier 0.500000",
						"\t}",
						"\t{MassInstancing",
						"\t\tTrimRatio 0.300000",
						"\t}",
						"\t{Terrain",
						"\t}",
						"\t{Shadows",
						"\t\tMaxSliceCount 4",
						"\t\tSize 1",
						"\t\tMaxDist 4000.000000",
						"\t\tDLightContributionCullingThresholdS0 0.000000",
						"\t\tDLightContributionCullingThresholdS1 0.000000",
						"\t\tDLightContributionCullingThresholdS2 0.000000",
						"\t\tDLightContributionCullingThresholdS3 0.000000",
						"\t\tOmniContributionCullingThreshold 0.000000",
						"\t}",
						"\t{SSRaytracedShadows",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{Water",
						"\t\tFFTSize 128",
						"\t}",
						"\t{VolumetricClouds",
						"\t\tQuality 0",
						"\t}",
						"\t{VolumetricLights",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{LightShafts",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSR",
						"\t\tEnabled 0",
						"\t\tHalfRes 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSAO",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSSSS",
						"\t\tEnabled 1",
						"\t\tQuality 3",
						"\t}",
						"\t{AA",
						"\t\tEnabled 1",
						"\t\tType 2",
						"\t\tQuality 0",
						"\t}",
						"\t{Bloom",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{DOF",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{MotionBlur",
						"\t\tEnabled 0",
						"\t\tQuality 3",
						"\t}",
						"\t{PostProcess",
						"\t\tEnabled 1",
						"\t\tEyeAdaptation 1",
						"\t\tColorGrading 0",
						"\t\tSharpen 0",
						"\t\tFringe 0",
						"\t\tLensDistortion 0",
						"\t\tDirt 0",
						"\t\tLensFlare 0",
						"\t\tFilmGrain 0",
						"\t\tVignette 0",
						"\t\tLensBlurMultiplier 0.000000",
						"\t\tFringeMultiplier 0.000000",
						"\t}",
						"}",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.SetAttributes(this.apti_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.apti_settings, text);
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000450 RID: 1104 RVA: 0x000CADD4 File Offset: 0x000C8FD4
		private void APTI_f()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.apti_settings)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"Version 66",
						"{Video",
						string.Join(Environment.NewLine, array),
						"\tMonitor 0",
						"\tWindowed 0",
						"\tFullscreenBorderless 0",
						"\tResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tPrimaryScaling 0.500000",
						"\tSecondaryScaling 1.000000",
						"\tVSync 0",
						"\tTextureQuality 0",
						"\tTextureFiltering 0",
						"\tPosX 0",
						"\tPosY 0",
						"}",
						"{Graphics",
						"\tVersion 1.0.4",
						"\t{Platform",
						"\t\tEPlatform 0",
						"\t}",
						"\t{HDR10",
						"\t\tEnabled 0",
						"\t}",
						"\t{Texture",
						"\t\tMaxAnisotropy 4",
						"\t\tLODBias 0",
						"\t\tMaxLOD 0",
						"\t}",
						"\t{DrawDistance",
						"\t\tDrawDistanceMultiplier 0.600000",
						"\t\tMIDrawDistanceMultiplier 0.600000",
						"\t}",
						"\t{MassInstancing",
						"\t\tTrimRatio 0.300000",
						"\t}",
						"\t{Terrain",
						"\t}",
						"\t{Shadows",
						"\t\tMaxSliceCount 4",
						"\t\tSize 1",
						"\t\tMaxDist 5000.000000",
						"\t\tDLightContributionCullingThresholdS0 0.000000",
						"\t\tDLightContributionCullingThresholdS1 0.000000",
						"\t\tDLightContributionCullingThresholdS2 0.000000",
						"\t\tDLightContributionCullingThresholdS3 0.000000",
						"\t\tOmniContributionCullingThreshold 0.000000",
						"\t}",
						"\t{SSRaytracedShadows",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{Water",
						"\t\tFFTSize 128",
						"\t}",
						"\t{VolumetricClouds",
						"\t\tQuality 0",
						"\t}",
						"\t{VolumetricLights",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{LightShafts",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSR",
						"\t\tEnabled 0",
						"\t\tHalfRes 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSAO",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSSSS",
						"\t\tEnabled 1",
						"\t\tQuality 3",
						"\t}",
						"\t{AA",
						"\t\tEnabled 1",
						"\t\tType 2",
						"\t\tQuality 0",
						"\t}",
						"\t{Bloom",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{DOF",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{MotionBlur",
						"\t\tEnabled 0",
						"\t\tQuality 3",
						"\t}",
						"\t{PostProcess",
						"\t\tEnabled 1",
						"\t\tEyeAdaptation 1",
						"\t\tColorGrading 0",
						"\t\tSharpen 0",
						"\t\tFringe 0",
						"\t\tLensDistortion 0",
						"\t\tDirt 0",
						"\t\tLensFlare 0",
						"\t\tFilmGrain 0",
						"\t\tVignette 0",
						"\t\tLensBlurMultiplier 0.000000",
						"\t\tFringeMultiplier 0.000000",
						"\t}",
						"}",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.SetAttributes(this.apti_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.apti_settings, text);
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000451 RID: 1105 RVA: 0x000CB41C File Offset: 0x000C961C
		private void APTI_d()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.apti_settings)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"Version 66",
						"{Video",
						string.Join(Environment.NewLine, array),
						"\tMonitor 0",
						"\tWindowed 0",
						"\tFullscreenBorderless 0",
						"\tResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tPrimaryScaling 0.700000",
						"\tSecondaryScaling 1.000000",
						"\tVSync 0",
						"\tTextureQuality 0",
						"\tTextureFiltering 0",
						"\tPosX 0",
						"\tPosY 0",
						"}",
						"{Graphics",
						"\tVersion 1.0.4",
						"\t{Platform",
						"\t\tEPlatform 0",
						"\t}",
						"\t{HDR10",
						"\t\tEnabled 0",
						"\t}",
						"\t{Texture",
						"\t\tMaxAnisotropy 4",
						"\t\tLODBias 0",
						"\t\tMaxLOD 0",
						"\t}",
						"\t{DrawDistance",
						"\t\tDrawDistanceMultiplier 0.700000",
						"\t\tMIDrawDistanceMultiplier 0.700000",
						"\t}",
						"\t{MassInstancing",
						"\t\tTrimRatio 0.300000",
						"\t}",
						"\t{Terrain",
						"\t}",
						"\t{Shadows",
						"\t\tMaxSliceCount 4",
						"\t\tSize 1",
						"\t\tMaxDist 6000.000000",
						"\t\tDLightContributionCullingThresholdS0 0.000000",
						"\t\tDLightContributionCullingThresholdS1 0.000000",
						"\t\tDLightContributionCullingThresholdS2 0.000000",
						"\t\tDLightContributionCullingThresholdS3 0.000000",
						"\t\tOmniContributionCullingThreshold 0.000000",
						"\t}",
						"\t{SSRaytracedShadows",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{Water",
						"\t\tFFTSize 128",
						"\t}",
						"\t{VolumetricClouds",
						"\t\tQuality 0",
						"\t}",
						"\t{VolumetricLights",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{LightShafts",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSR",
						"\t\tEnabled 0",
						"\t\tHalfRes 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSAO",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSSSS",
						"\t\tEnabled 1",
						"\t\tQuality 3",
						"\t}",
						"\t{AA",
						"\t\tEnabled 1",
						"\t\tType 2",
						"\t\tQuality 0",
						"\t}",
						"\t{Bloom",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{DOF",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{MotionBlur",
						"\t\tEnabled 0",
						"\t\tQuality 3",
						"\t}",
						"\t{PostProcess",
						"\t\tEnabled 1",
						"\t\tEyeAdaptation 1",
						"\t\tColorGrading 0",
						"\t\tSharpen 0",
						"\t\tFringe 0",
						"\t\tLensDistortion 0",
						"\t\tDirt 0",
						"\t\tLensFlare 0",
						"\t\tFilmGrain 0",
						"\t\tVignette 0",
						"\t\tLensBlurMultiplier 0.000000",
						"\t\tFringeMultiplier 0.000000",
						"\t}",
						"}",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.SetAttributes(this.apti_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.apti_settings, text);
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000452 RID: 1106 RVA: 0x000CBA64 File Offset: 0x000C9C64
		private void APTI_c()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.apti_settings)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"Version 66",
						"{Video",
						string.Join(Environment.NewLine, array),
						"\tMonitor 0",
						"\tWindowed 0",
						"\tFullscreenBorderless 0",
						"\tResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tPrimaryScaling 0.800000",
						"\tSecondaryScaling 1.000000",
						"\tVSync 0",
						"\tTextureQuality 0",
						"\tTextureFiltering 0",
						"\tPosX 0",
						"\tPosY 0",
						"}",
						"{Graphics",
						"\tVersion 1.0.4",
						"\t{Platform",
						"\t\tEPlatform 0",
						"\t}",
						"\t{HDR10",
						"\t\tEnabled 0",
						"\t}",
						"\t{Texture",
						"\t\tMaxAnisotropy 4",
						"\t\tLODBias 0",
						"\t\tMaxLOD 0",
						"\t}",
						"\t{DrawDistance",
						"\t\tDrawDistanceMultiplier 0.700000",
						"\t\tMIDrawDistanceMultiplier 0.700000",
						"\t}",
						"\t{MassInstancing",
						"\t\tTrimRatio 0.300000",
						"\t}",
						"\t{Terrain",
						"\t}",
						"\t{Shadows",
						"\t\tMaxSliceCount 4",
						"\t\tSize 1",
						"\t\tMaxDist 6000.000000",
						"\t\tDLightContributionCullingThresholdS0 0.000000",
						"\t\tDLightContributionCullingThresholdS1 0.000000",
						"\t\tDLightContributionCullingThresholdS2 0.000000",
						"\t\tDLightContributionCullingThresholdS3 0.000000",
						"\t\tOmniContributionCullingThreshold 0.000000",
						"\t}",
						"\t{SSRaytracedShadows",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{Water",
						"\t\tFFTSize 128",
						"\t}",
						"\t{VolumetricClouds",
						"\t\tQuality 0",
						"\t}",
						"\t{VolumetricLights",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{LightShafts",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSR",
						"\t\tEnabled 0",
						"\t\tHalfRes 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSAO",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSSSS",
						"\t\tEnabled 1",
						"\t\tQuality 3",
						"\t}",
						"\t{AA",
						"\t\tEnabled 1",
						"\t\tType 2",
						"\t\tQuality 0",
						"\t}",
						"\t{Bloom",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{DOF",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{MotionBlur",
						"\t\tEnabled 0",
						"\t\tQuality 3",
						"\t}",
						"\t{PostProcess",
						"\t\tEnabled 1",
						"\t\tEyeAdaptation 1",
						"\t\tColorGrading 0",
						"\t\tSharpen 0",
						"\t\tFringe 0",
						"\t\tLensDistortion 0",
						"\t\tDirt 0",
						"\t\tLensFlare 0",
						"\t\tFilmGrain 0",
						"\t\tVignette 0",
						"\t\tLensBlurMultiplier 0.000000",
						"\t\tFringeMultiplier 0.000000",
						"\t}",
						"}",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.SetAttributes(this.apti_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.apti_settings, text);
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000453 RID: 1107 RVA: 0x000CC0AC File Offset: 0x000CA2AC
		private void APTI_b()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.apti_settings)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"Version 66",
						"{Video",
						string.Join(Environment.NewLine, array),
						"\tMonitor 0",
						"\tWindowed 0",
						"\tFullscreenBorderless 0",
						"\tResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tPrimaryScaling 0.800000",
						"\tSecondaryScaling 1.000000",
						"\tVSync 0",
						"\tTextureQuality 0",
						"\tTextureFiltering 0",
						"\tPosX 0",
						"\tPosY 0",
						"}",
						"{Graphics",
						"\tVersion 1.0.4",
						"\t{Platform",
						"\t\tEPlatform 0",
						"\t}",
						"\t{HDR10",
						"\t\tEnabled 0",
						"\t}",
						"\t{Texture",
						"\t\tMaxAnisotropy 4",
						"\t\tLODBias 0",
						"\t\tMaxLOD 0",
						"\t}",
						"\t{DrawDistance",
						"\t\tDrawDistanceMultiplier 0.800000",
						"\t\tMIDrawDistanceMultiplier 0.800000",
						"\t}",
						"\t{MassInstancing",
						"\t\tTrimRatio 0.300000",
						"\t}",
						"\t{Terrain",
						"\t}",
						"\t{Shadows",
						"\t\tMaxSliceCount 4",
						"\t\tSize 1",
						"\t\tMaxDist 6000.000000",
						"\t\tDLightContributionCullingThresholdS0 0.000000",
						"\t\tDLightContributionCullingThresholdS1 0.000000",
						"\t\tDLightContributionCullingThresholdS2 0.000000",
						"\t\tDLightContributionCullingThresholdS3 0.000000",
						"\t\tOmniContributionCullingThreshold 0.000000",
						"\t}",
						"\t{SSRaytracedShadows",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{Water",
						"\t\tFFTSize 128",
						"\t}",
						"\t{VolumetricClouds",
						"\t\tQuality 0",
						"\t}",
						"\t{VolumetricLights",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{LightShafts",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSR",
						"\t\tEnabled 0",
						"\t\tHalfRes 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSAO",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSSSS",
						"\t\tEnabled 1",
						"\t\tQuality 3",
						"\t}",
						"\t{AA",
						"\t\tEnabled 1",
						"\t\tType 2",
						"\t\tQuality 0",
						"\t}",
						"\t{Bloom",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{DOF",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{MotionBlur",
						"\t\tEnabled 0",
						"\t\tQuality 3",
						"\t}",
						"\t{PostProcess",
						"\t\tEnabled 1",
						"\t\tEyeAdaptation 1",
						"\t\tColorGrading 0",
						"\t\tSharpen 0",
						"\t\tFringe 0",
						"\t\tLensDistortion 0",
						"\t\tDirt 0",
						"\t\tLensFlare 0",
						"\t\tFilmGrain 0",
						"\t\tVignette 0",
						"\t\tLensBlurMultiplier 0.000000",
						"\t\tFringeMultiplier 0.000000",
						"\t}",
						"}",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.SetAttributes(this.apti_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.apti_settings, text);
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000454 RID: 1108 RVA: 0x000CC6F4 File Offset: 0x000CA8F4
		private void APTI_a()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.apti_settings)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"Version 66",
						"{Video",
						string.Join(Environment.NewLine, array),
						"\tMonitor 0",
						"\tWindowed 0",
						"\tFullscreenBorderless 0",
						"\tResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tPrimaryScaling 0.900000",
						"\tSecondaryScaling 1.000000",
						"\tVSync 0",
						"\tTextureQuality 0",
						"\tTextureFiltering 0",
						"\tPosX 0",
						"\tPosY 0",
						"}",
						"{Graphics",
						"\tVersion 1.0.4",
						"\t{Platform",
						"\t\tEPlatform 0",
						"\t}",
						"\t{HDR10",
						"\t\tEnabled 0",
						"\t}",
						"\t{Texture",
						"\t\tMaxAnisotropy 4",
						"\t\tLODBias 0",
						"\t\tMaxLOD 0",
						"\t}",
						"\t{DrawDistance",
						"\t\tDrawDistanceMultiplier 0.800000",
						"\t\tMIDrawDistanceMultiplier 0.800000",
						"\t}",
						"\t{MassInstancing",
						"\t\tTrimRatio 0.300000",
						"\t}",
						"\t{Terrain",
						"\t}",
						"\t{Shadows",
						"\t\tMaxSliceCount 4",
						"\t\tSize 1",
						"\t\tMaxDist 6000.000000",
						"\t\tDLightContributionCullingThresholdS0 0.000000",
						"\t\tDLightContributionCullingThresholdS1 0.000000",
						"\t\tDLightContributionCullingThresholdS2 0.000000",
						"\t\tDLightContributionCullingThresholdS3 0.000000",
						"\t\tOmniContributionCullingThreshold 0.000000",
						"\t}",
						"\t{SSRaytracedShadows",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{Water",
						"\t\tFFTSize 128",
						"\t}",
						"\t{VolumetricClouds",
						"\t\tQuality 0",
						"\t}",
						"\t{VolumetricLights",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{LightShafts",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSR",
						"\t\tEnabled 0",
						"\t\tHalfRes 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSAO",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSSSS",
						"\t\tEnabled 1",
						"\t\tQuality 3",
						"\t}",
						"\t{AA",
						"\t\tEnabled 1",
						"\t\tType 2",
						"\t\tQuality 0",
						"\t}",
						"\t{Bloom",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{DOF",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{MotionBlur",
						"\t\tEnabled 0",
						"\t\tQuality 3",
						"\t}",
						"\t{PostProcess",
						"\t\tEnabled 1",
						"\t\tEyeAdaptation 1",
						"\t\tColorGrading 0",
						"\t\tSharpen 0",
						"\t\tFringe 0",
						"\t\tLensDistortion 0",
						"\t\tDirt 0",
						"\t\tLensFlare 0",
						"\t\tFilmGrain 0",
						"\t\tVignette 0",
						"\t\tLensBlurMultiplier 0.000000",
						"\t\tFringeMultiplier 0.000000",
						"\t}",
						"}",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.SetAttributes(this.apti_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.apti_settings, text);
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000455 RID: 1109 RVA: 0x000CCD3C File Offset: 0x000CAF3C
		private void APTR_g()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.aptr_settings)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"Version 66",
						"{Video",
						string.Join(Environment.NewLine, array),
						"\tMonitor 0",
						"\tWindowed 1",
						"\tFullscreenBorderless 1",
						"\tWindowActive 0",
						"\tResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tFullScreenResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tPosX 0",
						"\tPosY 0",
						"\tAntiAliasing TAA",
						"\tDLSSMode AUTO",
						"\tDLSSG 0",
						"\tReflex OFF",
						"\tPrimaryScaling 0.500000",
						"\tSecondaryScaling 1.000000",
						"\tSharpenAmount 1.000000",
						"\tVSync 0",
						"\tHDR10 1",
						"\tRaytracing 0",
						"\tPreferD3D12 " + this.graphicsAPIVersion,
						"\tFrameLimiter 0",
						"}",
						"{Graphics",
						"\tVersion 1.1.0",
						"\tPreset Custom",
						"\t{Texture",
						"\t\tMaxAnisotropy 0",
						"\t\tQuality 3",
						"\t}",
						"\t{DrawDistance",
						"\t\tDrawDistanceMultiplierLod 0.350000",
						"\t\tDrawDistanceMultiplierFade 1.100000",
						"\t\tMIDrawDistanceMultiplierLod 0.350000",
						"\t\tMIDrawDistanceMultiplierFade 0.350000",
						"\t}",
						"\t{MassInstancing",
						"\t\tTrimRatio 0.400000",
						"\t}",
						"\t{Terrain",
						"\t\tLoDFactor 0.500000",
						"\t\tPOMMaxDist 10.000000",
						"\t\tPOMSubsplitsMaxDist 3.000000",
						"\t}",
						"\t{Shadows",
						"\t\tMaxSliceCount 4",
						"\t\tSize 512",
						"\t\tDLightContributionCullingThresholdS0 0.000000",
						"\t\tDLightContributionCullingThresholdS1 0.000000",
						"\t\tDLightContributionCullingThresholdS2 0.000000",
						"\t\tDLightContributionCullingThresholdS3 0.000000",
						"\t\tOmniContributionCullingThreshold 0.000000",
						"\t}",
						"\t{SSRaytracedShadows",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{Water",
						"\t\tFFTSize 128",
						"\t}",
						"\t{VolumetricLights",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{VolumetricFog",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{RaytracedShadows",
						"\t\tEnabled 0",
						"\t}",
						"\t{LightShafts",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSR",
						"\t\tEnabled 0",
						"\t\tHalfRes 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSAO",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSSSS",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{DOF",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{MotionBlur",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{PostProcess",
						"\t\tEnabled 1",
						"\t\tEyeAdaptation 1",
						"\t\tColorGrading 0",
						"\t\tSharpen 1",
						"\t\tFringe 0",
						"\t\tLensDistortion 0",
						"\t\tDirt 0",
						"\t\tLensFlare 0",
						"\t\tFilmGrain 0",
						"\t\tVignette 0",
						"\t\tLensBlurMultiplier 0.000000",
						"\t\tFringeMultiplier 0.000000",
						"\t}",
						"}",
						"InstalledPackagesPath \"\"",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.SetAttributes(this.aptr_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.aptr_settings, text);
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000456 RID: 1110 RVA: 0x000CD3D0 File Offset: 0x000CB5D0
		private void APTR_f()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.aptr_settings)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"Version 66",
						"{Video",
						string.Join(Environment.NewLine, array),
						"\tMonitor 0",
						"\tWindowed 1",
						"\tFullscreenBorderless 1",
						"\tWindowActive 0",
						"\tResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tFullScreenResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tPosX 0",
						"\tPosY 0",
						"\tAntiAliasing TAA",
						"\tDLSSMode AUTO",
						"\tDLSSG 0",
						"\tReflex OFF",
						"\tPrimaryScaling 0.600000",
						"\tSecondaryScaling 1.000000",
						"\tSharpenAmount 1.000000",
						"\tVSync 0",
						"\tHDR10 1",
						"\tRaytracing 0",
						"\tPreferD3D12 " + this.graphicsAPIVersion,
						"\tFrameLimiter 0",
						"}",
						"{Graphics",
						"\tVersion 1.1.0",
						"\tPreset Custom",
						"\t{Texture",
						"\t\tMaxAnisotropy 0",
						"\t\tQuality 3",
						"\t}",
						"\t{DrawDistance",
						"\t\tDrawDistanceMultiplierLod 0.450000",
						"\t\tDrawDistanceMultiplierFade 1.200000",
						"\t\tMIDrawDistanceMultiplierLod 0.450000",
						"\t\tMIDrawDistanceMultiplierFade 0.450000",
						"\t}",
						"\t{MassInstancing",
						"\t\tTrimRatio 0.400000",
						"\t}",
						"\t{Terrain",
						"\t\tLoDFactor 0.600000",
						"\t\tPOMMaxDist 10.000000",
						"\t\tPOMSubsplitsMaxDist 3.500000",
						"\t}",
						"\t{Shadows",
						"\t\tMaxSliceCount 4",
						"\t\tSize 512",
						"\t\tDLightContributionCullingThresholdS0 0.000000",
						"\t\tDLightContributionCullingThresholdS1 0.000000",
						"\t\tDLightContributionCullingThresholdS2 0.000000",
						"\t\tDLightContributionCullingThresholdS3 0.000000",
						"\t\tOmniContributionCullingThreshold 0.000000",
						"\t}",
						"\t{SSRaytracedShadows",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{Water",
						"\t\tFFTSize 128",
						"\t}",
						"\t{VolumetricLights",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{VolumetricFog",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{RaytracedShadows",
						"\t\tEnabled 0",
						"\t}",
						"\t{LightShafts",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSR",
						"\t\tEnabled 0",
						"\t\tHalfRes 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSAO",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSSSS",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{DOF",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{MotionBlur",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{PostProcess",
						"\t\tEnabled 1",
						"\t\tEyeAdaptation 1",
						"\t\tColorGrading 0",
						"\t\tSharpen 1",
						"\t\tFringe 0",
						"\t\tLensDistortion 0",
						"\t\tDirt 0",
						"\t\tLensFlare 0",
						"\t\tFilmGrain 0",
						"\t\tVignette 0",
						"\t\tLensBlurMultiplier 0.000000",
						"\t\tFringeMultiplier 0.000000",
						"\t}",
						"}",
						"InstalledPackagesPath \"\"",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.SetAttributes(this.aptr_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.aptr_settings, text);
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000457 RID: 1111 RVA: 0x000CDA64 File Offset: 0x000CBC64
		private void APTR_d()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.aptr_settings)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"Version 66",
						"{Video",
						string.Join(Environment.NewLine, array),
						"\tMonitor 0",
						"\tWindowed 1",
						"\tFullscreenBorderless 1",
						"\tWindowActive 0",
						"\tResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tFullScreenResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tPosX 0",
						"\tPosY 0",
						"\tAntiAliasing TAA",
						"\tDLSSMode AUTO",
						"\tDLSSG 0",
						"\tReflex OFF",
						"\tPrimaryScaling 0.700000",
						"\tSecondaryScaling 1.000000",
						"\tSharpenAmount 1.000000",
						"\tVSync 0",
						"\tHDR10 1",
						"\tRaytracing 0",
						"\tPreferD3D12 " + this.graphicsAPIVersion,
						"\tFrameLimiter 0",
						"}",
						"{Graphics",
						"\tVersion 1.1.0",
						"\tPreset Custom",
						"\t{Texture",
						"\t\tMaxAnisotropy 0",
						"\t\tQuality 3",
						"\t}",
						"\t{DrawDistance",
						"\t\tDrawDistanceMultiplierLod 0.650000",
						"\t\tDrawDistanceMultiplierFade 1.400000",
						"\t\tMIDrawDistanceMultiplierLod 0.650000",
						"\t\tMIDrawDistanceMultiplierFade 0.650000",
						"\t}",
						"\t{MassInstancing",
						"\t\tTrimRatio 0.400000",
						"\t}",
						"\t{Terrain",
						"\t\tLoDFactor 0.700000",
						"\t\tPOMMaxDist 12.000000",
						"\t\tPOMSubsplitsMaxDist 4.500000",
						"\t}",
						"\t{Shadows",
						"\t\tMaxSliceCount 4",
						"\t\tSize 512",
						"\t\tDLightContributionCullingThresholdS0 0.000000",
						"\t\tDLightContributionCullingThresholdS1 0.000000",
						"\t\tDLightContributionCullingThresholdS2 0.000000",
						"\t\tDLightContributionCullingThresholdS3 0.000000",
						"\t\tOmniContributionCullingThreshold 0.000000",
						"\t}",
						"\t{SSRaytracedShadows",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{Water",
						"\t\tFFTSize 128",
						"\t}",
						"\t{VolumetricLights",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{VolumetricFog",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{RaytracedShadows",
						"\t\tEnabled 0",
						"\t}",
						"\t{LightShafts",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSR",
						"\t\tEnabled 0",
						"\t\tHalfRes 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSAO",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSSSS",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{DOF",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{MotionBlur",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{PostProcess",
						"\t\tEnabled 1",
						"\t\tEyeAdaptation 1",
						"\t\tColorGrading 0",
						"\t\tSharpen 1",
						"\t\tFringe 0",
						"\t\tLensDistortion 0",
						"\t\tDirt 0",
						"\t\tLensFlare 0",
						"\t\tFilmGrain 0",
						"\t\tVignette 0",
						"\t\tLensBlurMultiplier 0.000000",
						"\t\tFringeMultiplier 0.000000",
						"\t}",
						"}",
						"InstalledPackagesPath \"\"",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.SetAttributes(this.aptr_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.aptr_settings, text);
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000458 RID: 1112 RVA: 0x000CE0F8 File Offset: 0x000CC2F8
		private void APTR_c()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.aptr_settings)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"Version 66",
						"{Video",
						string.Join(Environment.NewLine, array),
						"\tMonitor 0",
						"\tWindowed 1",
						"\tFullscreenBorderless 1",
						"\tWindowActive 0",
						"\tResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tFullScreenResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tPosX 0",
						"\tPosY 0",
						"\tAntiAliasing TAA",
						"\tDLSSMode AUTO",
						"\tDLSSG 0",
						"\tReflex OFF",
						"\tPrimaryScaling 0.800000",
						"\tSecondaryScaling 1.000000",
						"\tSharpenAmount 1.000000",
						"\tVSync 0",
						"\tHDR10 1",
						"\tRaytracing 0",
						"\tPreferD3D12 " + this.graphicsAPIVersion,
						"\tFrameLimiter 0",
						"}",
						"{Graphics",
						"\tVersion 1.1.0",
						"\tPreset Custom",
						"\t{Texture",
						"\t\tMaxAnisotropy 0",
						"\t\tQuality 3",
						"\t}",
						"\t{DrawDistance",
						"\t\tDrawDistanceMultiplierLod 0.650000",
						"\t\tDrawDistanceMultiplierFade 1.400000",
						"\t\tMIDrawDistanceMultiplierLod 0.650000",
						"\t\tMIDrawDistanceMultiplierFade 0.650000",
						"\t}",
						"\t{MassInstancing",
						"\t\tTrimRatio 0.400000",
						"\t}",
						"\t{Terrain",
						"\t\tLoDFactor 0.700000",
						"\t\tPOMMaxDist 13.000000",
						"\t\tPOMSubsplitsMaxDist 5.000000",
						"\t}",
						"\t{Shadows",
						"\t\tMaxSliceCount 4",
						"\t\tSize 512",
						"\t\tDLightContributionCullingThresholdS0 0.000000",
						"\t\tDLightContributionCullingThresholdS1 0.000000",
						"\t\tDLightContributionCullingThresholdS2 0.000000",
						"\t\tDLightContributionCullingThresholdS3 0.000000",
						"\t\tOmniContributionCullingThreshold 0.000000",
						"\t}",
						"\t{SSRaytracedShadows",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{Water",
						"\t\tFFTSize 128",
						"\t}",
						"\t{VolumetricLights",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{VolumetricFog",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{RaytracedShadows",
						"\t\tEnabled 0",
						"\t}",
						"\t{LightShafts",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSR",
						"\t\tEnabled 0",
						"\t\tHalfRes 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSAO",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSSSS",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{DOF",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{MotionBlur",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{PostProcess",
						"\t\tEnabled 1",
						"\t\tEyeAdaptation 1",
						"\t\tColorGrading 0",
						"\t\tSharpen 1",
						"\t\tFringe 0",
						"\t\tLensDistortion 0",
						"\t\tDirt 0",
						"\t\tLensFlare 0",
						"\t\tFilmGrain 0",
						"\t\tVignette 0",
						"\t\tLensBlurMultiplier 0.000000",
						"\t\tFringeMultiplier 0.000000",
						"\t}",
						"}",
						"InstalledPackagesPath \"\"",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.SetAttributes(this.aptr_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.aptr_settings, text);
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000459 RID: 1113 RVA: 0x000CE78C File Offset: 0x000CC98C
		private void APTR_b()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.aptr_settings)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"Version 66",
						"{Video",
						string.Join(Environment.NewLine, array),
						"\tMonitor 0",
						"\tWindowed 1",
						"\tFullscreenBorderless 1",
						"\tWindowActive 0",
						"\tResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tFullScreenResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tPosX 0",
						"\tPosY 0",
						"\tAntiAliasing TAA",
						"\tDLSSMode AUTO",
						"\tDLSSG 0",
						"\tReflex OFF",
						"\tPrimaryScaling 0.900000",
						"\tSecondaryScaling 1.000000",
						"\tSharpenAmount 1.000000",
						"\tVSync 0",
						"\tHDR10 1",
						"\tRaytracing 0",
						"\tPreferD3D12 " + this.graphicsAPIVersion,
						"\tFrameLimiter 0",
						"}",
						"{Graphics",
						"\tVersion 1.1.0",
						"\tPreset Custom",
						"\t{Texture",
						"\t\tMaxAnisotropy 0",
						"\t\tQuality 3",
						"\t}",
						"\t{DrawDistance",
						"\t\tDrawDistanceMultiplierLod 0.750000",
						"\t\tDrawDistanceMultiplierFade 1.500000",
						"\t\tMIDrawDistanceMultiplierLod 0.750000",
						"\t\tMIDrawDistanceMultiplierFade 0.750000",
						"\t}",
						"\t{MassInstancing",
						"\t\tTrimRatio 0.400000",
						"\t}",
						"\t{Terrain",
						"\t\tLoDFactor 0.800000",
						"\t\tPOMMaxDist 14.000000",
						"\t\tPOMSubsplitsMaxDist 5.000000",
						"\t}",
						"\t{Shadows",
						"\t\tMaxSliceCount 4",
						"\t\tSize 512",
						"\t\tDLightContributionCullingThresholdS0 0.000000",
						"\t\tDLightContributionCullingThresholdS1 0.000000",
						"\t\tDLightContributionCullingThresholdS2 0.000000",
						"\t\tDLightContributionCullingThresholdS3 0.000000",
						"\t\tOmniContributionCullingThreshold 0.000000",
						"\t}",
						"\t{SSRaytracedShadows",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{Water",
						"\t\tFFTSize 128",
						"\t}",
						"\t{VolumetricLights",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{VolumetricFog",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{RaytracedShadows",
						"\t\tEnabled 0",
						"\t}",
						"\t{LightShafts",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSR",
						"\t\tEnabled 0",
						"\t\tHalfRes 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSAO",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSSSS",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{DOF",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{MotionBlur",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{PostProcess",
						"\t\tEnabled 1",
						"\t\tEyeAdaptation 1",
						"\t\tColorGrading 0",
						"\t\tSharpen 1",
						"\t\tFringe 0",
						"\t\tLensDistortion 0",
						"\t\tDirt 0",
						"\t\tLensFlare 0",
						"\t\tFilmGrain 0",
						"\t\tVignette 0",
						"\t\tLensBlurMultiplier 0.000000",
						"\t\tFringeMultiplier 0.000000",
						"\t}",
						"}",
						"InstalledPackagesPath \"\"",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.SetAttributes(this.aptr_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.aptr_settings, text);
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x0600045A RID: 1114 RVA: 0x000CEE20 File Offset: 0x000CD020
		private void APTR_a()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.aptr_settings)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"Version 66",
						"{Video",
						string.Join(Environment.NewLine, array),
						"\tMonitor 0",
						"\tWindowed 1",
						"\tFullscreenBorderless 1",
						"\tWindowActive 0",
						"\tResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tFullScreenResolution " + this.DefaultWidth + " " + this.DefaultHeight,
						"\tPosX 0",
						"\tPosY 0",
						"\tAntiAliasing TAA",
						"\tDLSSMode AUTO",
						"\tDLSSG 0",
						"\tReflex OFF",
						"\tPrimaryScaling 0.1000000",
						"\tSecondaryScaling 1.000000",
						"\tSharpenAmount 1.000000",
						"\tVSync 0",
						"\tHDR10 1",
						"\tRaytracing 0",
						"\tPreferD3D12 " + this.graphicsAPIVersion,
						"\tFrameLimiter 0",
						"}",
						"{Graphics",
						"\tVersion 1.1.0",
						"\tPreset Custom",
						"\t{Texture",
						"\t\tMaxAnisotropy 0",
						"\t\tQuality 3",
						"\t}",
						"\t{DrawDistance",
						"\t\tDrawDistanceMultiplierLod 0.750000",
						"\t\tDrawDistanceMultiplierFade 1.500000",
						"\t\tMIDrawDistanceMultiplierLod 0.750000",
						"\t\tMIDrawDistanceMultiplierFade 0.750000",
						"\t}",
						"\t{MassInstancing",
						"\t\tTrimRatio 0.400000",
						"\t}",
						"\t{Terrain",
						"\t\tLoDFactor 0.800000",
						"\t\tPOMMaxDist 15.000000",
						"\t\tPOMSubsplitsMaxDist 5.000000",
						"\t}",
						"\t{Shadows",
						"\t\tMaxSliceCount 4",
						"\t\tSize 512",
						"\t\tDLightContributionCullingThresholdS0 0.000000",
						"\t\tDLightContributionCullingThresholdS1 0.000000",
						"\t\tDLightContributionCullingThresholdS2 0.000000",
						"\t\tDLightContributionCullingThresholdS3 0.000000",
						"\t\tOmniContributionCullingThreshold 0.000000",
						"\t}",
						"\t{SSRaytracedShadows",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{Water",
						"\t\tFFTSize 128",
						"\t}",
						"\t{VolumetricLights",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{VolumetricFog",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{RaytracedShadows",
						"\t\tEnabled 0",
						"\t}",
						"\t{LightShafts",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSR",
						"\t\tEnabled 0",
						"\t\tHalfRes 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSAO",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{SSSSS",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{DOF",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{MotionBlur",
						"\t\tEnabled 0",
						"\t\tQuality 0",
						"\t}",
						"\t{PostProcess",
						"\t\tEnabled 1",
						"\t\tEyeAdaptation 1",
						"\t\tColorGrading 0",
						"\t\tSharpen 1",
						"\t\tFringe 0",
						"\t\tLensDistortion 0",
						"\t\tDirt 0",
						"\t\tLensFlare 0",
						"\t\tFilmGrain 0",
						"\t\tVignette 0",
						"\t\tLensBlurMultiplier 0.000000",
						"\t\tFringeMultiplier 0.000000",
						"\t}",
						"}",
						"InstalledPackagesPath \"\"",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.SetAttributes(this.aptr_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.aptr_settings, text);
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x0600045B RID: 1115 RVA: 0x000CF4B4 File Offset: 0x000CD6B4
		private void AH_g()
		{
			int num = 0;
			for (;;)
			{
				string text;
				if (num == 1)
				{
					text = "0";
					num = 2;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 4;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=60.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=40", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/Script/WindowsTargetPlatform.WindowsTargetSettings]", this.graphicsAPIVersion, "", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				string text4;
				if (num == 7)
				{
					text4 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				string text5;
				if (num == 8)
				{
					text5 = string.Join(Environment.NewLine, new string[]
					{
						"[PresetIndex]",
						"0:Audio=0",
						"1:Controls=-1",
						"2:Display=-1",
						"3:Quality=-1",
						"4:Gameplay=-1",
						"5:Input=0",
						"6:GamepadScheme=0",
						"",
						"[0:Audio]",
						"Общая громкость=100.000000",
						"Громкость музыки=100.000000",
						"Громкость диалогов=100.000000",
						"Громкость эффектов=100.000000",
						"Громкость окружающей среды=100.000000",
						"Громкость интерфейсов=100.000000",
						"Лицензионный Контент=0",
						"Язык Озвучки=1",
						"",
						"[1:Controls]",
						"Mouse_01=0.500000",
						"Gamepad_01=5.000000",
						"Gamepad_02=5.000000",
						"Gamepad_03=0",
						"Gamepad_04=0",
						"",
						"[2:Display]",
						"7=11",
						"Gamma=0.500000",
						"FullScreen=0",
						"VSync=0",
						"FPS limit=240",
						"Resolution=" + this.DefaultWidth + "x" + this.DefaultHeight,
						"5=0",
						"",
						"[3:Quality]",
						"Depth of field=0",
						"Motion blur=0",
						"Sharpen=1.000000",
						"Vignette=0",
						"AAliasing=3",
						"DLSS=" + text,
						"FidelityFX=0",
						"DynamicResolution=0",
						"TargetFPSDynRes=8.333333",
						"TargetFPS=40",
						"Shadow=0",
						"AmbientLight=0",
						"VFX=0",
						"ObjectAmount=0",
						"Material quality=0",
						"Volumetric fog=0",
						"PostProcess=0",
						"Texture=0",
						"Texture Anisotropy=0",
						"Geometry=0",
						"grass=0",
						"RTX enable=0",
						"RTX shadow=0",
						"RTX reflections=0",
						"",
						"[4:Gameplay]",
						"0=en",
						"Art Subtitiles=0",
						"Subtitiles=1",
						"Difficulty=1",
						"",
						"[5:Input]",
						"InputAction.Gameplay.ActivateHealthSlot-0=X",
						"InputAction.Gameplay.ActivateSlot1-0=One",
						"InputAction.Gameplay.ActivateSlot2-0=Two",
						"InputAction.Gameplay.ActivateSlot3-0=Three",
						"InputAction.Gameplay.ActivateSlot4-0=Four",
						"InputAction.Gameplay.CancelInteraction-0=Q",
						"InputAction.Gameplay.Crouch-0=LeftControl",
						"InputAction.Gameplay.Dodge-0=LeftShift",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=LeftMouseButton",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=RightMouseButton",
						"InputAction.Gameplay.GrabbaleDrop-0=F",
						"InputAction.Gameplay.GrabbaleThrow-0=F",
						"InputAction.Gameplay.HealConsumableNext-0=C",
						"InputAction.Gameplay.HealConsumablePrevious-0=Z",
						"InputAction.Gameplay.Jump-0=SpaceBar",
						"InputAction.Gameplay.LookUpRate-0=Down",
						"InputAction.Gameplay.LookUpRate-1=Up",
						"InputAction.Gameplay.Move-0=W",
						"InputAction.Gameplay.Move-1=A",
						"InputAction.Gameplay.Move-2=S",
						"InputAction.Gameplay.Move-3=D",
						"InputAction.Gameplay.MoveUp-0=SpaceBar",
						"InputAction.Gameplay.MoveUp-1=LeftControl",
						"InputAction.Gameplay.QuickRespawn-0=SpaceBar",
						"InputAction.Gameplay.RadialMenu-0=Tab",
						"InputAction.Gameplay.Reload-0=R",
						"InputAction.Gameplay.Scannner-0=LeftAlt",
						"InputAction.Gameplay.ScrollCassettes-0=MouseWheelAxis",
						"InputAction.Gameplay.ScrollWeapon-0=MouseWheelAxis",
						"InputAction.Gameplay.SelectCassetteSlot-0=RightMouseButton",
						"InputAction.Gameplay.Shocker-0=V",
						"InputAction.Gameplay.StartCasseteSelection-0=MiddleMouseButton",
						"InputAction.Gameplay.StealthKill-0=F",
						"InputAction.Gameplay.SwitchAbilityLeft-0=Q",
						"InputAction.Gameplay.SwitchAbilityRight-0=E",
						"InputAction.Gameplay.SwitchCameraView-0=T",
						"InputAction.Gameplay.ToggleInventory-0=I",
						"InputAction.Gameplay.ToggleSelectedAbility-0=RightMouseButton",
						"InputAction.Gameplay.ToggleWorldMap-0=M",
						"InputAction.Gameplay.TurnRate-0=Left",
						"InputAction.Gameplay.TurnRate-1=Right",
						"InputAction.Gameplay.Use-0=F",
						"InputAction.Gameplay.UseHold-0=F",
						"",
						"[6:GamepadScheme]",
						"InputAction.Gameplay.ActivateHealthSlot-0=Gamepad_DPad_Down",
						"InputAction.Gameplay.ActivateSpecialAbility-0=Gamepad_LeftShoulder",
						"InputAction.Gameplay.CancelInteraction-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.Crouch-0=Gamepad_RightThumbstick",
						"InputAction.Gameplay.Dodge-0=Gamepad_FaceButton_Right",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=Gamepad_RightTriggerAxis",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=Gamepad_LeftTriggerAxis",
						"InputAction.Gameplay.GrabbaleDrop-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.GrabbaleThrow-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.Jump-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.LookUpRate-0=Gamepad_RightY",
						"InputAction.Gameplay.Move-0=Gamepad_Left2D",
						"InputAction.Gameplay.QuickRespawn-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.RadialMenu-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Reload-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Scannner-0=Gamepad_LeftThumbstick",
						"InputAction.Gameplay.SelectNextWeapon-0=Gamepad_DPad_Right",
						"InputAction.Gameplay.SelectPreviousWeapon-0=Gamepad_DPad_Left",
						"InputAction.Gameplay.Shocker-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.StealthKill-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.SwapSpecialAbilitiesIndexes-0=Gamepad_DPad_Up",
						"InputAction.Gameplay.ToggleInventory-0=Gamepad_Special_Left",
						"InputAction.Gameplay.ToggleWorldMap-0=Gamepad_Special_Left",
						"InputAction.Gameplay.TurnRate-0=Gamepad_RightX",
						"InputAction.Gameplay.Use-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.UseHold-0=Gamepad_RightShoulder",
						""
					});
					num = 9;
				}
				if (num != 10)
				{
					goto IL_EEF;
				}
				bool flag;
				if (flag)
				{
					num = 11;
					goto IL_EEF;
				}
				goto IL_F32;
				IL_F41:
				if (num == 15)
				{
					File.WriteAllText(this.atomicHeart_main, text2);
					num = 16;
				}
				if (num == 16)
				{
					File.WriteAllText(this.atomicHeart_first, text3);
					num = 17;
				}
				if (num == 17)
				{
					File.WriteAllText(this.atomicHeart_second, text4);
					num = 18;
				}
				if (num == 18)
				{
					File.WriteAllText(this.atomicHeart_third, text5);
					num = 19;
				}
				if (num == 13)
				{
					File.Delete(this.textBox1.Text);
					num = 14;
				}
				if (num == 9)
				{
					flag = this.grpbox.Text == "Atomic Heart (Microsoft Store)";
					num = 10;
				}
				if (num == 4)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
				if (num != 19)
				{
					continue;
				}
				break;
				IL_EEF:
				bool flag2;
				if (num == 11)
				{
					flag2 = File.Exists(this.textBox1.Text);
					num = 12;
				}
				if (num == 12)
				{
					if (!flag2)
					{
						goto IL_F32;
					}
					num = 13;
				}
				if (num != 14)
				{
					goto IL_F41;
				}
				IL_F32:
				this.get_own_AH();
				num = 15;
				goto IL_F41;
			}
		}

		// Token: 0x0600045C RID: 1116 RVA: 0x000D0550 File Offset: 0x000CE750
		private void AH_f()
		{
			int num = 0;
			for (;;)
			{
				string text;
				if (num == 1)
				{
					text = "0";
					num = 2;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 4;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=70.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=50", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/Script/WindowsTargetPlatform.WindowsTargetSettings]", this.graphicsAPIVersion, "", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				string text4;
				if (num == 7)
				{
					text4 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				string text5;
				if (num == 8)
				{
					text5 = string.Join(Environment.NewLine, new string[]
					{
						"[PresetIndex]",
						"0:Audio=0",
						"1:Controls=-1",
						"2:Display=-1",
						"3:Quality=-1",
						"4:Gameplay=-1",
						"5:Input=0",
						"6:GamepadScheme=0",
						"",
						"[0:Audio]",
						"Общая громкость=100.000000",
						"Громкость музыки=100.000000",
						"Громкость диалогов=100.000000",
						"Громкость эффектов=100.000000",
						"Громкость окружающей среды=100.000000",
						"Громкость интерфейсов=100.000000",
						"Лицензионный Контент=0",
						"Язык Озвучки=1",
						"",
						"[1:Controls]",
						"Mouse_01=0.500000",
						"Gamepad_01=5.000000",
						"Gamepad_02=5.000000",
						"Gamepad_03=0",
						"Gamepad_04=0",
						"",
						"[2:Display]",
						"7=11",
						"Gamma=0.500000",
						"FullScreen=0",
						"VSync=0",
						"FPS limit=240",
						"Resolution=" + this.DefaultWidth + "x" + this.DefaultHeight,
						"5=0",
						"",
						"[3:Quality]",
						"Depth of field=0",
						"Motion blur=0",
						"Sharpen=1.000000",
						"Vignette=0",
						"AAliasing=3",
						"DLSS=" + text,
						"FidelityFX=0",
						"DynamicResolution=0",
						"TargetFPSDynRes=8.333333",
						"TargetFPS=40",
						"Shadow=0",
						"AmbientLight=0",
						"VFX=0",
						"ObjectAmount=0",
						"Material quality=0",
						"Volumetric fog=0",
						"PostProcess=0",
						"Texture=0",
						"Texture Anisotropy=0",
						"Geometry=0",
						"grass=0",
						"RTX enable=0",
						"RTX shadow=0",
						"RTX reflections=0",
						"",
						"[4:Gameplay]",
						"0=en",
						"Art Subtitiles=0",
						"Subtitiles=1",
						"Difficulty=1",
						"",
						"[5:Input]",
						"InputAction.Gameplay.ActivateHealthSlot-0=X",
						"InputAction.Gameplay.ActivateSlot1-0=One",
						"InputAction.Gameplay.ActivateSlot2-0=Two",
						"InputAction.Gameplay.ActivateSlot3-0=Three",
						"InputAction.Gameplay.ActivateSlot4-0=Four",
						"InputAction.Gameplay.CancelInteraction-0=Q",
						"InputAction.Gameplay.Crouch-0=LeftControl",
						"InputAction.Gameplay.Dodge-0=LeftShift",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=LeftMouseButton",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=RightMouseButton",
						"InputAction.Gameplay.GrabbaleDrop-0=F",
						"InputAction.Gameplay.GrabbaleThrow-0=F",
						"InputAction.Gameplay.HealConsumableNext-0=C",
						"InputAction.Gameplay.HealConsumablePrevious-0=Z",
						"InputAction.Gameplay.Jump-0=SpaceBar",
						"InputAction.Gameplay.LookUpRate-0=Down",
						"InputAction.Gameplay.LookUpRate-1=Up",
						"InputAction.Gameplay.Move-0=W",
						"InputAction.Gameplay.Move-1=A",
						"InputAction.Gameplay.Move-2=S",
						"InputAction.Gameplay.Move-3=D",
						"InputAction.Gameplay.MoveUp-0=SpaceBar",
						"InputAction.Gameplay.MoveUp-1=LeftControl",
						"InputAction.Gameplay.QuickRespawn-0=SpaceBar",
						"InputAction.Gameplay.RadialMenu-0=Tab",
						"InputAction.Gameplay.Reload-0=R",
						"InputAction.Gameplay.Scannner-0=LeftAlt",
						"InputAction.Gameplay.ScrollCassettes-0=MouseWheelAxis",
						"InputAction.Gameplay.ScrollWeapon-0=MouseWheelAxis",
						"InputAction.Gameplay.SelectCassetteSlot-0=RightMouseButton",
						"InputAction.Gameplay.Shocker-0=V",
						"InputAction.Gameplay.StartCasseteSelection-0=MiddleMouseButton",
						"InputAction.Gameplay.StealthKill-0=F",
						"InputAction.Gameplay.SwitchAbilityLeft-0=Q",
						"InputAction.Gameplay.SwitchAbilityRight-0=E",
						"InputAction.Gameplay.SwitchCameraView-0=T",
						"InputAction.Gameplay.ToggleInventory-0=I",
						"InputAction.Gameplay.ToggleSelectedAbility-0=RightMouseButton",
						"InputAction.Gameplay.ToggleWorldMap-0=M",
						"InputAction.Gameplay.TurnRate-0=Left",
						"InputAction.Gameplay.TurnRate-1=Right",
						"InputAction.Gameplay.Use-0=F",
						"InputAction.Gameplay.UseHold-0=F",
						"",
						"[6:GamepadScheme]",
						"InputAction.Gameplay.ActivateHealthSlot-0=Gamepad_DPad_Down",
						"InputAction.Gameplay.ActivateSpecialAbility-0=Gamepad_LeftShoulder",
						"InputAction.Gameplay.CancelInteraction-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.Crouch-0=Gamepad_RightThumbstick",
						"InputAction.Gameplay.Dodge-0=Gamepad_FaceButton_Right",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=Gamepad_RightTriggerAxis",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=Gamepad_LeftTriggerAxis",
						"InputAction.Gameplay.GrabbaleDrop-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.GrabbaleThrow-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.Jump-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.LookUpRate-0=Gamepad_RightY",
						"InputAction.Gameplay.Move-0=Gamepad_Left2D",
						"InputAction.Gameplay.QuickRespawn-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.RadialMenu-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Reload-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Scannner-0=Gamepad_LeftThumbstick",
						"InputAction.Gameplay.SelectNextWeapon-0=Gamepad_DPad_Right",
						"InputAction.Gameplay.SelectPreviousWeapon-0=Gamepad_DPad_Left",
						"InputAction.Gameplay.Shocker-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.StealthKill-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.SwapSpecialAbilitiesIndexes-0=Gamepad_DPad_Up",
						"InputAction.Gameplay.ToggleInventory-0=Gamepad_Special_Left",
						"InputAction.Gameplay.ToggleWorldMap-0=Gamepad_Special_Left",
						"InputAction.Gameplay.TurnRate-0=Gamepad_RightX",
						"InputAction.Gameplay.Use-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.UseHold-0=Gamepad_RightShoulder",
						""
					});
					num = 9;
				}
				if (num != 10)
				{
					goto IL_EEF;
				}
				bool flag;
				if (flag)
				{
					num = 11;
					goto IL_EEF;
				}
				goto IL_F32;
				IL_F41:
				if (num == 15)
				{
					File.WriteAllText(this.atomicHeart_main, text2);
					num = 16;
				}
				if (num == 16)
				{
					File.WriteAllText(this.atomicHeart_first, text3);
					num = 17;
				}
				if (num == 17)
				{
					File.WriteAllText(this.atomicHeart_second, text4);
					num = 18;
				}
				if (num == 18)
				{
					File.WriteAllText(this.atomicHeart_third, text5);
					num = 19;
				}
				if (num == 13)
				{
					File.Delete(this.textBox1.Text);
					num = 14;
				}
				if (num == 9)
				{
					flag = this.grpbox.Text == "Atomic Heart (Microsoft Store)";
					num = 10;
				}
				if (num == 4)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
				if (num != 19)
				{
					continue;
				}
				break;
				IL_EEF:
				bool flag2;
				if (num == 11)
				{
					flag2 = File.Exists(this.textBox1.Text);
					num = 12;
				}
				if (num == 12)
				{
					if (!flag2)
					{
						goto IL_F32;
					}
					num = 13;
				}
				if (num != 14)
				{
					goto IL_F41;
				}
				IL_F32:
				this.get_own_AH();
				num = 15;
				goto IL_F41;
			}
		}

		// Token: 0x0600045D RID: 1117 RVA: 0x000D15EC File Offset: 0x000CF7EC
		private void AH_d()
		{
			int num = 0;
			for (;;)
			{
				string text;
				if (num == 1)
				{
					text = "0";
					num = 2;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 4;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=80.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=70", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/Script/WindowsTargetPlatform.WindowsTargetSettings]", this.graphicsAPIVersion, "", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				string text4;
				if (num == 7)
				{
					text4 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				string text5;
				if (num == 8)
				{
					text5 = string.Join(Environment.NewLine, new string[]
					{
						"[PresetIndex]",
						"0:Audio=0",
						"1:Controls=-1",
						"2:Display=-1",
						"3:Quality=-1",
						"4:Gameplay=-1",
						"5:Input=0",
						"6:GamepadScheme=0",
						"",
						"[0:Audio]",
						"Общая громкость=100.000000",
						"Громкость музыки=100.000000",
						"Громкость диалогов=100.000000",
						"Громкость эффектов=100.000000",
						"Громкость окружающей среды=100.000000",
						"Громкость интерфейсов=100.000000",
						"Лицензионный Контент=0",
						"Язык Озвучки=1",
						"",
						"[1:Controls]",
						"Mouse_01=0.500000",
						"Gamepad_01=5.000000",
						"Gamepad_02=5.000000",
						"Gamepad_03=0",
						"Gamepad_04=0",
						"",
						"[2:Display]",
						"7=11",
						"Gamma=0.500000",
						"FullScreen=0",
						"VSync=0",
						"FPS limit=240",
						"Resolution=" + this.DefaultWidth + "x" + this.DefaultHeight,
						"5=0",
						"",
						"[3:Quality]",
						"Depth of field=0",
						"Motion blur=0",
						"Sharpen=1.000000",
						"Vignette=0",
						"AAliasing=3",
						"DLSS=" + text,
						"FidelityFX=0",
						"DynamicResolution=0",
						"TargetFPSDynRes=8.333333",
						"TargetFPS=40",
						"Shadow=0",
						"AmbientLight=0",
						"VFX=0",
						"ObjectAmount=0",
						"Material quality=0",
						"Volumetric fog=0",
						"PostProcess=0",
						"Texture=0",
						"Texture Anisotropy=0",
						"Geometry=0",
						"grass=0",
						"RTX enable=0",
						"RTX shadow=0",
						"RTX reflections=0",
						"",
						"[4:Gameplay]",
						"0=en",
						"Art Subtitiles=0",
						"Subtitiles=1",
						"Difficulty=1",
						"",
						"[5:Input]",
						"InputAction.Gameplay.ActivateHealthSlot-0=X",
						"InputAction.Gameplay.ActivateSlot1-0=One",
						"InputAction.Gameplay.ActivateSlot2-0=Two",
						"InputAction.Gameplay.ActivateSlot3-0=Three",
						"InputAction.Gameplay.ActivateSlot4-0=Four",
						"InputAction.Gameplay.CancelInteraction-0=Q",
						"InputAction.Gameplay.Crouch-0=LeftControl",
						"InputAction.Gameplay.Dodge-0=LeftShift",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=LeftMouseButton",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=RightMouseButton",
						"InputAction.Gameplay.GrabbaleDrop-0=F",
						"InputAction.Gameplay.GrabbaleThrow-0=F",
						"InputAction.Gameplay.HealConsumableNext-0=C",
						"InputAction.Gameplay.HealConsumablePrevious-0=Z",
						"InputAction.Gameplay.Jump-0=SpaceBar",
						"InputAction.Gameplay.LookUpRate-0=Down",
						"InputAction.Gameplay.LookUpRate-1=Up",
						"InputAction.Gameplay.Move-0=W",
						"InputAction.Gameplay.Move-1=A",
						"InputAction.Gameplay.Move-2=S",
						"InputAction.Gameplay.Move-3=D",
						"InputAction.Gameplay.MoveUp-0=SpaceBar",
						"InputAction.Gameplay.MoveUp-1=LeftControl",
						"InputAction.Gameplay.QuickRespawn-0=SpaceBar",
						"InputAction.Gameplay.RadialMenu-0=Tab",
						"InputAction.Gameplay.Reload-0=R",
						"InputAction.Gameplay.Scannner-0=LeftAlt",
						"InputAction.Gameplay.ScrollCassettes-0=MouseWheelAxis",
						"InputAction.Gameplay.ScrollWeapon-0=MouseWheelAxis",
						"InputAction.Gameplay.SelectCassetteSlot-0=RightMouseButton",
						"InputAction.Gameplay.Shocker-0=V",
						"InputAction.Gameplay.StartCasseteSelection-0=MiddleMouseButton",
						"InputAction.Gameplay.StealthKill-0=F",
						"InputAction.Gameplay.SwitchAbilityLeft-0=Q",
						"InputAction.Gameplay.SwitchAbilityRight-0=E",
						"InputAction.Gameplay.SwitchCameraView-0=T",
						"InputAction.Gameplay.ToggleInventory-0=I",
						"InputAction.Gameplay.ToggleSelectedAbility-0=RightMouseButton",
						"InputAction.Gameplay.ToggleWorldMap-0=M",
						"InputAction.Gameplay.TurnRate-0=Left",
						"InputAction.Gameplay.TurnRate-1=Right",
						"InputAction.Gameplay.Use-0=F",
						"InputAction.Gameplay.UseHold-0=F",
						"",
						"[6:GamepadScheme]",
						"InputAction.Gameplay.ActivateHealthSlot-0=Gamepad_DPad_Down",
						"InputAction.Gameplay.ActivateSpecialAbility-0=Gamepad_LeftShoulder",
						"InputAction.Gameplay.CancelInteraction-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.Crouch-0=Gamepad_RightThumbstick",
						"InputAction.Gameplay.Dodge-0=Gamepad_FaceButton_Right",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=Gamepad_RightTriggerAxis",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=Gamepad_LeftTriggerAxis",
						"InputAction.Gameplay.GrabbaleDrop-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.GrabbaleThrow-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.Jump-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.LookUpRate-0=Gamepad_RightY",
						"InputAction.Gameplay.Move-0=Gamepad_Left2D",
						"InputAction.Gameplay.QuickRespawn-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.RadialMenu-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Reload-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Scannner-0=Gamepad_LeftThumbstick",
						"InputAction.Gameplay.SelectNextWeapon-0=Gamepad_DPad_Right",
						"InputAction.Gameplay.SelectPreviousWeapon-0=Gamepad_DPad_Left",
						"InputAction.Gameplay.Shocker-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.StealthKill-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.SwapSpecialAbilitiesIndexes-0=Gamepad_DPad_Up",
						"InputAction.Gameplay.ToggleInventory-0=Gamepad_Special_Left",
						"InputAction.Gameplay.ToggleWorldMap-0=Gamepad_Special_Left",
						"InputAction.Gameplay.TurnRate-0=Gamepad_RightX",
						"InputAction.Gameplay.Use-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.UseHold-0=Gamepad_RightShoulder",
						""
					});
					num = 9;
				}
				if (num != 10)
				{
					goto IL_EEF;
				}
				bool flag;
				if (flag)
				{
					num = 11;
					goto IL_EEF;
				}
				goto IL_F32;
				IL_F41:
				if (num == 15)
				{
					File.WriteAllText(this.atomicHeart_main, text2);
					num = 16;
				}
				if (num == 16)
				{
					File.WriteAllText(this.atomicHeart_first, text3);
					num = 17;
				}
				if (num == 17)
				{
					File.WriteAllText(this.atomicHeart_second, text4);
					num = 18;
				}
				if (num == 18)
				{
					File.WriteAllText(this.atomicHeart_third, text5);
					num = 19;
				}
				if (num == 13)
				{
					File.Delete(this.textBox1.Text);
					num = 14;
				}
				if (num == 9)
				{
					flag = this.grpbox.Text == "Atomic Heart (Microsoft Store)";
					num = 10;
				}
				if (num == 4)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
				if (num != 19)
				{
					continue;
				}
				break;
				IL_EEF:
				bool flag2;
				if (num == 11)
				{
					flag2 = File.Exists(this.textBox1.Text);
					num = 12;
				}
				if (num == 12)
				{
					if (!flag2)
					{
						goto IL_F32;
					}
					num = 13;
				}
				if (num != 14)
				{
					goto IL_F41;
				}
				IL_F32:
				this.get_own_AH();
				num = 15;
				goto IL_F41;
			}
		}

		// Token: 0x0600045E RID: 1118 RVA: 0x000D2688 File Offset: 0x000D0888
		private void AH_c()
		{
			int num = 0;
			for (;;)
			{
				string text;
				if (num == 1)
				{
					text = "0";
					num = 2;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 4;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=90.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=80", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/Script/WindowsTargetPlatform.WindowsTargetSettings]", this.graphicsAPIVersion, "", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				string text4;
				if (num == 7)
				{
					text4 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				string text5;
				if (num == 8)
				{
					text5 = string.Join(Environment.NewLine, new string[]
					{
						"[PresetIndex]",
						"0:Audio=0",
						"1:Controls=-1",
						"2:Display=-1",
						"3:Quality=-1",
						"4:Gameplay=-1",
						"5:Input=0",
						"6:GamepadScheme=0",
						"",
						"[0:Audio]",
						"Общая громкость=100.000000",
						"Громкость музыки=100.000000",
						"Громкость диалогов=100.000000",
						"Громкость эффектов=100.000000",
						"Громкость окружающей среды=100.000000",
						"Громкость интерфейсов=100.000000",
						"Лицензионный Контент=0",
						"Язык Озвучки=1",
						"",
						"[1:Controls]",
						"Mouse_01=0.500000",
						"Gamepad_01=5.000000",
						"Gamepad_02=5.000000",
						"Gamepad_03=0",
						"Gamepad_04=0",
						"",
						"[2:Display]",
						"7=11",
						"Gamma=0.500000",
						"FullScreen=0",
						"VSync=0",
						"FPS limit=240",
						"Resolution=" + this.DefaultWidth + "x" + this.DefaultHeight,
						"5=0",
						"",
						"[3:Quality]",
						"Depth of field=0",
						"Motion blur=0",
						"Sharpen=1.000000",
						"Vignette=0",
						"AAliasing=3",
						"DLSS=" + text,
						"FidelityFX=0",
						"DynamicResolution=0",
						"TargetFPSDynRes=8.333333",
						"TargetFPS=40",
						"Shadow=0",
						"AmbientLight=0",
						"VFX=0",
						"ObjectAmount=0",
						"Material quality=0",
						"Volumetric fog=0",
						"PostProcess=0",
						"Texture=0",
						"Texture Anisotropy=0",
						"Geometry=0",
						"grass=0",
						"RTX enable=0",
						"RTX shadow=0",
						"RTX reflections=0",
						"",
						"[4:Gameplay]",
						"0=en",
						"Art Subtitiles=0",
						"Subtitiles=1",
						"Difficulty=1",
						"",
						"[5:Input]",
						"InputAction.Gameplay.ActivateHealthSlot-0=X",
						"InputAction.Gameplay.ActivateSlot1-0=One",
						"InputAction.Gameplay.ActivateSlot2-0=Two",
						"InputAction.Gameplay.ActivateSlot3-0=Three",
						"InputAction.Gameplay.ActivateSlot4-0=Four",
						"InputAction.Gameplay.CancelInteraction-0=Q",
						"InputAction.Gameplay.Crouch-0=LeftControl",
						"InputAction.Gameplay.Dodge-0=LeftShift",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=LeftMouseButton",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=RightMouseButton",
						"InputAction.Gameplay.GrabbaleDrop-0=F",
						"InputAction.Gameplay.GrabbaleThrow-0=F",
						"InputAction.Gameplay.HealConsumableNext-0=C",
						"InputAction.Gameplay.HealConsumablePrevious-0=Z",
						"InputAction.Gameplay.Jump-0=SpaceBar",
						"InputAction.Gameplay.LookUpRate-0=Down",
						"InputAction.Gameplay.LookUpRate-1=Up",
						"InputAction.Gameplay.Move-0=W",
						"InputAction.Gameplay.Move-1=A",
						"InputAction.Gameplay.Move-2=S",
						"InputAction.Gameplay.Move-3=D",
						"InputAction.Gameplay.MoveUp-0=SpaceBar",
						"InputAction.Gameplay.MoveUp-1=LeftControl",
						"InputAction.Gameplay.QuickRespawn-0=SpaceBar",
						"InputAction.Gameplay.RadialMenu-0=Tab",
						"InputAction.Gameplay.Reload-0=R",
						"InputAction.Gameplay.Scannner-0=LeftAlt",
						"InputAction.Gameplay.ScrollCassettes-0=MouseWheelAxis",
						"InputAction.Gameplay.ScrollWeapon-0=MouseWheelAxis",
						"InputAction.Gameplay.SelectCassetteSlot-0=RightMouseButton",
						"InputAction.Gameplay.Shocker-0=V",
						"InputAction.Gameplay.StartCasseteSelection-0=MiddleMouseButton",
						"InputAction.Gameplay.StealthKill-0=F",
						"InputAction.Gameplay.SwitchAbilityLeft-0=Q",
						"InputAction.Gameplay.SwitchAbilityRight-0=E",
						"InputAction.Gameplay.SwitchCameraView-0=T",
						"InputAction.Gameplay.ToggleInventory-0=I",
						"InputAction.Gameplay.ToggleSelectedAbility-0=RightMouseButton",
						"InputAction.Gameplay.ToggleWorldMap-0=M",
						"InputAction.Gameplay.TurnRate-0=Left",
						"InputAction.Gameplay.TurnRate-1=Right",
						"InputAction.Gameplay.Use-0=F",
						"InputAction.Gameplay.UseHold-0=F",
						"",
						"[6:GamepadScheme]",
						"InputAction.Gameplay.ActivateHealthSlot-0=Gamepad_DPad_Down",
						"InputAction.Gameplay.ActivateSpecialAbility-0=Gamepad_LeftShoulder",
						"InputAction.Gameplay.CancelInteraction-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.Crouch-0=Gamepad_RightThumbstick",
						"InputAction.Gameplay.Dodge-0=Gamepad_FaceButton_Right",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=Gamepad_RightTriggerAxis",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=Gamepad_LeftTriggerAxis",
						"InputAction.Gameplay.GrabbaleDrop-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.GrabbaleThrow-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.Jump-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.LookUpRate-0=Gamepad_RightY",
						"InputAction.Gameplay.Move-0=Gamepad_Left2D",
						"InputAction.Gameplay.QuickRespawn-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.RadialMenu-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Reload-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Scannner-0=Gamepad_LeftThumbstick",
						"InputAction.Gameplay.SelectNextWeapon-0=Gamepad_DPad_Right",
						"InputAction.Gameplay.SelectPreviousWeapon-0=Gamepad_DPad_Left",
						"InputAction.Gameplay.Shocker-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.StealthKill-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.SwapSpecialAbilitiesIndexes-0=Gamepad_DPad_Up",
						"InputAction.Gameplay.ToggleInventory-0=Gamepad_Special_Left",
						"InputAction.Gameplay.ToggleWorldMap-0=Gamepad_Special_Left",
						"InputAction.Gameplay.TurnRate-0=Gamepad_RightX",
						"InputAction.Gameplay.Use-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.UseHold-0=Gamepad_RightShoulder",
						""
					});
					num = 9;
				}
				if (num != 10)
				{
					goto IL_EEF;
				}
				bool flag;
				if (flag)
				{
					num = 11;
					goto IL_EEF;
				}
				goto IL_F32;
				IL_F41:
				if (num == 15)
				{
					File.WriteAllText(this.atomicHeart_main, text2);
					num = 16;
				}
				if (num == 16)
				{
					File.WriteAllText(this.atomicHeart_first, text3);
					num = 17;
				}
				if (num == 17)
				{
					File.WriteAllText(this.atomicHeart_second, text4);
					num = 18;
				}
				if (num == 18)
				{
					File.WriteAllText(this.atomicHeart_third, text5);
					num = 19;
				}
				if (num == 13)
				{
					File.Delete(this.textBox1.Text);
					num = 14;
				}
				if (num == 9)
				{
					flag = this.grpbox.Text == "Atomic Heart (Microsoft Store)";
					num = 10;
				}
				if (num == 4)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
				if (num != 19)
				{
					continue;
				}
				break;
				IL_EEF:
				bool flag2;
				if (num == 11)
				{
					flag2 = File.Exists(this.textBox1.Text);
					num = 12;
				}
				if (num == 12)
				{
					if (!flag2)
					{
						goto IL_F32;
					}
					num = 13;
				}
				if (num != 14)
				{
					goto IL_F41;
				}
				IL_F32:
				this.get_own_AH();
				num = 15;
				goto IL_F41;
			}
		}

		// Token: 0x0600045F RID: 1119 RVA: 0x000D3724 File Offset: 0x000D1924
		private void AH_b()
		{
			int num = 0;
			for (;;)
			{
				string text;
				if (num == 1)
				{
					text = "0";
					num = 2;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 4;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=95.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=85", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/Script/WindowsTargetPlatform.WindowsTargetSettings]", this.graphicsAPIVersion, "", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				string text4;
				if (num == 7)
				{
					text4 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				string text5;
				if (num == 8)
				{
					text5 = string.Join(Environment.NewLine, new string[]
					{
						"[PresetIndex]",
						"0:Audio=0",
						"1:Controls=-1",
						"2:Display=-1",
						"3:Quality=-1",
						"4:Gameplay=-1",
						"5:Input=0",
						"6:GamepadScheme=0",
						"",
						"[0:Audio]",
						"Общая громкость=100.000000",
						"Громкость музыки=100.000000",
						"Громкость диалогов=100.000000",
						"Громкость эффектов=100.000000",
						"Громкость окружающей среды=100.000000",
						"Громкость интерфейсов=100.000000",
						"Лицензионный Контент=0",
						"Язык Озвучки=1",
						"",
						"[1:Controls]",
						"Mouse_01=0.500000",
						"Gamepad_01=5.000000",
						"Gamepad_02=5.000000",
						"Gamepad_03=0",
						"Gamepad_04=0",
						"",
						"[2:Display]",
						"7=11",
						"Gamma=0.500000",
						"FullScreen=0",
						"VSync=0",
						"FPS limit=240",
						"Resolution=" + this.DefaultWidth + "x" + this.DefaultHeight,
						"5=0",
						"",
						"[3:Quality]",
						"Depth of field=0",
						"Motion blur=0",
						"Sharpen=1.000000",
						"Vignette=0",
						"AAliasing=3",
						"DLSS=" + text,
						"FidelityFX=0",
						"DynamicResolution=0",
						"TargetFPSDynRes=8.333333",
						"TargetFPS=40",
						"Shadow=0",
						"AmbientLight=0",
						"VFX=0",
						"ObjectAmount=0",
						"Material quality=0",
						"Volumetric fog=0",
						"PostProcess=0",
						"Texture=0",
						"Texture Anisotropy=0",
						"Geometry=0",
						"grass=0",
						"RTX enable=0",
						"RTX shadow=0",
						"RTX reflections=0",
						"",
						"[4:Gameplay]",
						"0=en",
						"Art Subtitiles=0",
						"Subtitiles=1",
						"Difficulty=1",
						"",
						"[5:Input]",
						"InputAction.Gameplay.ActivateHealthSlot-0=X",
						"InputAction.Gameplay.ActivateSlot1-0=One",
						"InputAction.Gameplay.ActivateSlot2-0=Two",
						"InputAction.Gameplay.ActivateSlot3-0=Three",
						"InputAction.Gameplay.ActivateSlot4-0=Four",
						"InputAction.Gameplay.CancelInteraction-0=Q",
						"InputAction.Gameplay.Crouch-0=LeftControl",
						"InputAction.Gameplay.Dodge-0=LeftShift",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=LeftMouseButton",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=RightMouseButton",
						"InputAction.Gameplay.GrabbaleDrop-0=F",
						"InputAction.Gameplay.GrabbaleThrow-0=F",
						"InputAction.Gameplay.HealConsumableNext-0=C",
						"InputAction.Gameplay.HealConsumablePrevious-0=Z",
						"InputAction.Gameplay.Jump-0=SpaceBar",
						"InputAction.Gameplay.LookUpRate-0=Down",
						"InputAction.Gameplay.LookUpRate-1=Up",
						"InputAction.Gameplay.Move-0=W",
						"InputAction.Gameplay.Move-1=A",
						"InputAction.Gameplay.Move-2=S",
						"InputAction.Gameplay.Move-3=D",
						"InputAction.Gameplay.MoveUp-0=SpaceBar",
						"InputAction.Gameplay.MoveUp-1=LeftControl",
						"InputAction.Gameplay.QuickRespawn-0=SpaceBar",
						"InputAction.Gameplay.RadialMenu-0=Tab",
						"InputAction.Gameplay.Reload-0=R",
						"InputAction.Gameplay.Scannner-0=LeftAlt",
						"InputAction.Gameplay.ScrollCassettes-0=MouseWheelAxis",
						"InputAction.Gameplay.ScrollWeapon-0=MouseWheelAxis",
						"InputAction.Gameplay.SelectCassetteSlot-0=RightMouseButton",
						"InputAction.Gameplay.Shocker-0=V",
						"InputAction.Gameplay.StartCasseteSelection-0=MiddleMouseButton",
						"InputAction.Gameplay.StealthKill-0=F",
						"InputAction.Gameplay.SwitchAbilityLeft-0=Q",
						"InputAction.Gameplay.SwitchAbilityRight-0=E",
						"InputAction.Gameplay.SwitchCameraView-0=T",
						"InputAction.Gameplay.ToggleInventory-0=I",
						"InputAction.Gameplay.ToggleSelectedAbility-0=RightMouseButton",
						"InputAction.Gameplay.ToggleWorldMap-0=M",
						"InputAction.Gameplay.TurnRate-0=Left",
						"InputAction.Gameplay.TurnRate-1=Right",
						"InputAction.Gameplay.Use-0=F",
						"InputAction.Gameplay.UseHold-0=F",
						"",
						"[6:GamepadScheme]",
						"InputAction.Gameplay.ActivateHealthSlot-0=Gamepad_DPad_Down",
						"InputAction.Gameplay.ActivateSpecialAbility-0=Gamepad_LeftShoulder",
						"InputAction.Gameplay.CancelInteraction-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.Crouch-0=Gamepad_RightThumbstick",
						"InputAction.Gameplay.Dodge-0=Gamepad_FaceButton_Right",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=Gamepad_RightTriggerAxis",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=Gamepad_LeftTriggerAxis",
						"InputAction.Gameplay.GrabbaleDrop-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.GrabbaleThrow-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.Jump-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.LookUpRate-0=Gamepad_RightY",
						"InputAction.Gameplay.Move-0=Gamepad_Left2D",
						"InputAction.Gameplay.QuickRespawn-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.RadialMenu-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Reload-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Scannner-0=Gamepad_LeftThumbstick",
						"InputAction.Gameplay.SelectNextWeapon-0=Gamepad_DPad_Right",
						"InputAction.Gameplay.SelectPreviousWeapon-0=Gamepad_DPad_Left",
						"InputAction.Gameplay.Shocker-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.StealthKill-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.SwapSpecialAbilitiesIndexes-0=Gamepad_DPad_Up",
						"InputAction.Gameplay.ToggleInventory-0=Gamepad_Special_Left",
						"InputAction.Gameplay.ToggleWorldMap-0=Gamepad_Special_Left",
						"InputAction.Gameplay.TurnRate-0=Gamepad_RightX",
						"InputAction.Gameplay.Use-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.UseHold-0=Gamepad_RightShoulder",
						""
					});
					num = 9;
				}
				if (num != 10)
				{
					goto IL_EEF;
				}
				bool flag;
				if (flag)
				{
					num = 11;
					goto IL_EEF;
				}
				goto IL_F32;
				IL_F41:
				if (num == 15)
				{
					File.WriteAllText(this.atomicHeart_main, text2);
					num = 16;
				}
				if (num == 16)
				{
					File.WriteAllText(this.atomicHeart_first, text3);
					num = 17;
				}
				if (num == 17)
				{
					File.WriteAllText(this.atomicHeart_second, text4);
					num = 18;
				}
				if (num == 18)
				{
					File.WriteAllText(this.atomicHeart_third, text5);
					num = 19;
				}
				if (num == 13)
				{
					File.Delete(this.textBox1.Text);
					num = 14;
				}
				if (num == 9)
				{
					flag = this.grpbox.Text == "Atomic Heart (Microsoft Store)";
					num = 10;
				}
				if (num == 4)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
				if (num != 19)
				{
					continue;
				}
				break;
				IL_EEF:
				bool flag2;
				if (num == 11)
				{
					flag2 = File.Exists(this.textBox1.Text);
					num = 12;
				}
				if (num == 12)
				{
					if (!flag2)
					{
						goto IL_F32;
					}
					num = 13;
				}
				if (num != 14)
				{
					goto IL_F41;
				}
				IL_F32:
				this.get_own_AH();
				num = 15;
				goto IL_F41;
			}
		}

		// Token: 0x06000460 RID: 1120 RVA: 0x000D47C0 File Offset: 0x000D29C0
		private void AH_a()
		{
			int num = 0;
			for (;;)
			{
				string text;
				if (num == 1)
				{
					text = "0";
					num = 2;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 4;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=100.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=90", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/Script/WindowsTargetPlatform.WindowsTargetSettings]", this.graphicsAPIVersion, "", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				string text4;
				if (num == 7)
				{
					text4 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				string text5;
				if (num == 8)
				{
					text5 = string.Join(Environment.NewLine, new string[]
					{
						"[PresetIndex]",
						"0:Audio=0",
						"1:Controls=-1",
						"2:Display=-1",
						"3:Quality=-1",
						"4:Gameplay=-1",
						"5:Input=0",
						"6:GamepadScheme=0",
						"",
						"[0:Audio]",
						"Общая громкость=100.000000",
						"Громкость музыки=100.000000",
						"Громкость диалогов=100.000000",
						"Громкость эффектов=100.000000",
						"Громкость окружающей среды=100.000000",
						"Громкость интерфейсов=100.000000",
						"Лицензионный Контент=0",
						"Язык Озвучки=1",
						"",
						"[1:Controls]",
						"Mouse_01=0.500000",
						"Gamepad_01=5.000000",
						"Gamepad_02=5.000000",
						"Gamepad_03=0",
						"Gamepad_04=0",
						"",
						"[2:Display]",
						"7=11",
						"Gamma=0.500000",
						"FullScreen=0",
						"VSync=0",
						"FPS limit=240",
						"Resolution=" + this.DefaultWidth + "x" + this.DefaultHeight,
						"5=0",
						"",
						"[3:Quality]",
						"Depth of field=0",
						"Motion blur=0",
						"Sharpen=1.000000",
						"Vignette=0",
						"AAliasing=3",
						"DLSS=" + text,
						"FidelityFX=0",
						"DynamicResolution=0",
						"TargetFPSDynRes=8.333333",
						"TargetFPS=40",
						"Shadow=0",
						"AmbientLight=0",
						"VFX=0",
						"ObjectAmount=0",
						"Material quality=0",
						"Volumetric fog=0",
						"PostProcess=0",
						"Texture=0",
						"Texture Anisotropy=0",
						"Geometry=0",
						"grass=0",
						"RTX enable=0",
						"RTX shadow=0",
						"RTX reflections=0",
						"",
						"[4:Gameplay]",
						"0=en",
						"Art Subtitiles=0",
						"Subtitiles=1",
						"Difficulty=1",
						"",
						"[5:Input]",
						"InputAction.Gameplay.ActivateHealthSlot-0=X",
						"InputAction.Gameplay.ActivateSlot1-0=One",
						"InputAction.Gameplay.ActivateSlot2-0=Two",
						"InputAction.Gameplay.ActivateSlot3-0=Three",
						"InputAction.Gameplay.ActivateSlot4-0=Four",
						"InputAction.Gameplay.CancelInteraction-0=Q",
						"InputAction.Gameplay.Crouch-0=LeftControl",
						"InputAction.Gameplay.Dodge-0=LeftShift",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=LeftMouseButton",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=RightMouseButton",
						"InputAction.Gameplay.GrabbaleDrop-0=F",
						"InputAction.Gameplay.GrabbaleThrow-0=F",
						"InputAction.Gameplay.HealConsumableNext-0=C",
						"InputAction.Gameplay.HealConsumablePrevious-0=Z",
						"InputAction.Gameplay.Jump-0=SpaceBar",
						"InputAction.Gameplay.LookUpRate-0=Down",
						"InputAction.Gameplay.LookUpRate-1=Up",
						"InputAction.Gameplay.Move-0=W",
						"InputAction.Gameplay.Move-1=A",
						"InputAction.Gameplay.Move-2=S",
						"InputAction.Gameplay.Move-3=D",
						"InputAction.Gameplay.MoveUp-0=SpaceBar",
						"InputAction.Gameplay.MoveUp-1=LeftControl",
						"InputAction.Gameplay.QuickRespawn-0=SpaceBar",
						"InputAction.Gameplay.RadialMenu-0=Tab",
						"InputAction.Gameplay.Reload-0=R",
						"InputAction.Gameplay.Scannner-0=LeftAlt",
						"InputAction.Gameplay.ScrollCassettes-0=MouseWheelAxis",
						"InputAction.Gameplay.ScrollWeapon-0=MouseWheelAxis",
						"InputAction.Gameplay.SelectCassetteSlot-0=RightMouseButton",
						"InputAction.Gameplay.Shocker-0=V",
						"InputAction.Gameplay.StartCasseteSelection-0=MiddleMouseButton",
						"InputAction.Gameplay.StealthKill-0=F",
						"InputAction.Gameplay.SwitchAbilityLeft-0=Q",
						"InputAction.Gameplay.SwitchAbilityRight-0=E",
						"InputAction.Gameplay.SwitchCameraView-0=T",
						"InputAction.Gameplay.ToggleInventory-0=I",
						"InputAction.Gameplay.ToggleSelectedAbility-0=RightMouseButton",
						"InputAction.Gameplay.ToggleWorldMap-0=M",
						"InputAction.Gameplay.TurnRate-0=Left",
						"InputAction.Gameplay.TurnRate-1=Right",
						"InputAction.Gameplay.Use-0=F",
						"InputAction.Gameplay.UseHold-0=F",
						"",
						"[6:GamepadScheme]",
						"InputAction.Gameplay.ActivateHealthSlot-0=Gamepad_DPad_Down",
						"InputAction.Gameplay.ActivateSpecialAbility-0=Gamepad_LeftShoulder",
						"InputAction.Gameplay.CancelInteraction-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.Crouch-0=Gamepad_RightThumbstick",
						"InputAction.Gameplay.Dodge-0=Gamepad_FaceButton_Right",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=Gamepad_RightTriggerAxis",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=Gamepad_LeftTriggerAxis",
						"InputAction.Gameplay.GrabbaleDrop-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.GrabbaleThrow-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.Jump-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.LookUpRate-0=Gamepad_RightY",
						"InputAction.Gameplay.Move-0=Gamepad_Left2D",
						"InputAction.Gameplay.QuickRespawn-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.RadialMenu-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Reload-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Scannner-0=Gamepad_LeftThumbstick",
						"InputAction.Gameplay.SelectNextWeapon-0=Gamepad_DPad_Right",
						"InputAction.Gameplay.SelectPreviousWeapon-0=Gamepad_DPad_Left",
						"InputAction.Gameplay.Shocker-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.StealthKill-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.SwapSpecialAbilitiesIndexes-0=Gamepad_DPad_Up",
						"InputAction.Gameplay.ToggleInventory-0=Gamepad_Special_Left",
						"InputAction.Gameplay.ToggleWorldMap-0=Gamepad_Special_Left",
						"InputAction.Gameplay.TurnRate-0=Gamepad_RightX",
						"InputAction.Gameplay.Use-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.UseHold-0=Gamepad_RightShoulder",
						""
					});
					num = 9;
				}
				if (num != 10)
				{
					goto IL_EEF;
				}
				bool flag;
				if (flag)
				{
					num = 11;
					goto IL_EEF;
				}
				goto IL_F32;
				IL_F41:
				if (num == 15)
				{
					File.WriteAllText(this.atomicHeart_main, text2);
					num = 16;
				}
				if (num == 16)
				{
					File.WriteAllText(this.atomicHeart_first, text3);
					num = 17;
				}
				if (num == 17)
				{
					File.WriteAllText(this.atomicHeart_second, text4);
					num = 18;
				}
				if (num == 18)
				{
					File.WriteAllText(this.atomicHeart_third, text5);
					num = 19;
				}
				if (num == 13)
				{
					File.Delete(this.textBox1.Text);
					num = 14;
				}
				if (num == 9)
				{
					flag = this.grpbox.Text == "Atomic Heart (Microsoft Store)";
					num = 10;
				}
				if (num == 4)
				{
					(from s in File.ReadAllLines(this.atomicHeart_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
				if (num != 19)
				{
					continue;
				}
				break;
				IL_EEF:
				bool flag2;
				if (num == 11)
				{
					flag2 = File.Exists(this.textBox1.Text);
					num = 12;
				}
				if (num == 12)
				{
					if (!flag2)
					{
						goto IL_F32;
					}
					num = 13;
				}
				if (num != 14)
				{
					goto IL_F41;
				}
				IL_F32:
				this.get_own_AH();
				num = 15;
				goto IL_F41;
			}
		}

		// Token: 0x06000461 RID: 1121 RVA: 0x000D585C File Offset: 0x000D3A5C
		private void AHS_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = "0";
					num = 2;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 4;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=60.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=40", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/Script/WindowsTargetPlatform.WindowsTargetSettings]", this.graphicsAPIVersion, "", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				string text4;
				if (num == 7)
				{
					text4 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				string text5;
				if (num == 8)
				{
					text5 = string.Join(Environment.NewLine, new string[]
					{
						"[PresetIndex]",
						"0:Audio=0",
						"1:Controls=-1",
						"2:Display=-1",
						"3:Quality=-1",
						"4:Gameplay=-1",
						"5:Input=0",
						"6:GamepadScheme=0",
						"",
						"[0:Audio]",
						"Общая громкость=100.000000",
						"Громкость музыки=100.000000",
						"Громкость диалогов=100.000000",
						"Громкость эффектов=100.000000",
						"Громкость окружающей среды=100.000000",
						"Громкость интерфейсов=100.000000",
						"Лицензионный Контент=0",
						"Язык Озвучки=1",
						"",
						"[1:Controls]",
						"Mouse_01=0.500000",
						"Gamepad_01=5.000000",
						"Gamepad_02=5.000000",
						"Gamepad_03=0",
						"Gamepad_04=0",
						"",
						"[2:Display]",
						"7=11",
						"Gamma=0.500000",
						"FullScreen=0",
						"VSync=0",
						"FPS limit=240",
						"Resolution=" + this.DefaultWidth + "x" + this.DefaultHeight,
						"5=0",
						"",
						"[3:Quality]",
						"Depth of field=0",
						"Motion blur=0",
						"Sharpen=1.000000",
						"Vignette=0",
						"AAliasing=3",
						"DLSS=" + text,
						"FidelityFX=0",
						"DynamicResolution=0",
						"TargetFPSDynRes=8.333333",
						"TargetFPS=40",
						"Shadow=0",
						"AmbientLight=0",
						"VFX=0",
						"ObjectAmount=0",
						"Material quality=0",
						"Volumetric fog=0",
						"PostProcess=0",
						"Texture=0",
						"Texture Anisotropy=0",
						"Geometry=0",
						"grass=0",
						"RTX enable=0",
						"RTX shadow=0",
						"RTX reflections=0",
						"",
						"[4:Gameplay]",
						"0=en",
						"Art Subtitiles=0",
						"Subtitiles=1",
						"Difficulty=1",
						"",
						"[5:Input]",
						"InputAction.Gameplay.ActivateHealthSlot-0=X",
						"InputAction.Gameplay.ActivateSlot1-0=One",
						"InputAction.Gameplay.ActivateSlot2-0=Two",
						"InputAction.Gameplay.ActivateSlot3-0=Three",
						"InputAction.Gameplay.ActivateSlot4-0=Four",
						"InputAction.Gameplay.CancelInteraction-0=Q",
						"InputAction.Gameplay.Crouch-0=LeftControl",
						"InputAction.Gameplay.Dodge-0=LeftShift",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=LeftMouseButton",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=RightMouseButton",
						"InputAction.Gameplay.GrabbaleDrop-0=F",
						"InputAction.Gameplay.GrabbaleThrow-0=F",
						"InputAction.Gameplay.HealConsumableNext-0=C",
						"InputAction.Gameplay.HealConsumablePrevious-0=Z",
						"InputAction.Gameplay.Jump-0=SpaceBar",
						"InputAction.Gameplay.LookUpRate-0=Down",
						"InputAction.Gameplay.LookUpRate-1=Up",
						"InputAction.Gameplay.Move-0=W",
						"InputAction.Gameplay.Move-1=A",
						"InputAction.Gameplay.Move-2=S",
						"InputAction.Gameplay.Move-3=D",
						"InputAction.Gameplay.MoveUp-0=SpaceBar",
						"InputAction.Gameplay.MoveUp-1=LeftControl",
						"InputAction.Gameplay.QuickRespawn-0=SpaceBar",
						"InputAction.Gameplay.RadialMenu-0=Tab",
						"InputAction.Gameplay.Reload-0=R",
						"InputAction.Gameplay.Scannner-0=LeftAlt",
						"InputAction.Gameplay.ScrollCassettes-0=MouseWheelAxis",
						"InputAction.Gameplay.ScrollWeapon-0=MouseWheelAxis",
						"InputAction.Gameplay.SelectCassetteSlot-0=RightMouseButton",
						"InputAction.Gameplay.Shocker-0=V",
						"InputAction.Gameplay.StartCasseteSelection-0=MiddleMouseButton",
						"InputAction.Gameplay.StealthKill-0=F",
						"InputAction.Gameplay.SwitchAbilityLeft-0=Q",
						"InputAction.Gameplay.SwitchAbilityRight-0=E",
						"InputAction.Gameplay.SwitchCameraView-0=T",
						"InputAction.Gameplay.ToggleInventory-0=I",
						"InputAction.Gameplay.ToggleSelectedAbility-0=RightMouseButton",
						"InputAction.Gameplay.ToggleWorldMap-0=M",
						"InputAction.Gameplay.TurnRate-0=Left",
						"InputAction.Gameplay.TurnRate-1=Right",
						"InputAction.Gameplay.Use-0=F",
						"InputAction.Gameplay.UseHold-0=F",
						"",
						"[6:GamepadScheme]",
						"InputAction.Gameplay.ActivateHealthSlot-0=Gamepad_DPad_Down",
						"InputAction.Gameplay.ActivateSpecialAbility-0=Gamepad_LeftShoulder",
						"InputAction.Gameplay.CancelInteraction-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.Crouch-0=Gamepad_RightThumbstick",
						"InputAction.Gameplay.Dodge-0=Gamepad_FaceButton_Right",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=Gamepad_RightTriggerAxis",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=Gamepad_LeftTriggerAxis",
						"InputAction.Gameplay.GrabbaleDrop-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.GrabbaleThrow-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.Jump-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.LookUpRate-0=Gamepad_RightY",
						"InputAction.Gameplay.Move-0=Gamepad_Left2D",
						"InputAction.Gameplay.QuickRespawn-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.RadialMenu-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Reload-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Scannner-0=Gamepad_LeftThumbstick",
						"InputAction.Gameplay.SelectNextWeapon-0=Gamepad_DPad_Right",
						"InputAction.Gameplay.SelectPreviousWeapon-0=Gamepad_DPad_Left",
						"InputAction.Gameplay.Shocker-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.StealthKill-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.SwapSpecialAbilitiesIndexes-0=Gamepad_DPad_Up",
						"InputAction.Gameplay.ToggleInventory-0=Gamepad_Special_Left",
						"InputAction.Gameplay.ToggleWorldMap-0=Gamepad_Special_Left",
						"InputAction.Gameplay.TurnRate-0=Gamepad_RightX",
						"InputAction.Gameplay.Use-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.UseHold-0=Gamepad_RightShoulder",
						""
					});
					num = 9;
				}
				if (num == 10)
				{
					File.WriteAllText(this.atomicHeartS_main, text2);
					num = 11;
				}
				if (num == 11)
				{
					File.WriteAllText(this.atomicHeartS_first, text3);
					num = 12;
				}
				if (num == 12)
				{
					File.WriteAllText(this.atomicHeartS_second, text4);
					num = 13;
				}
				if (num == 13)
				{
					File.WriteAllText(this.atomicHeartS_third, text5);
					num = 14;
				}
				if (num == 9)
				{
					this.get_own_AHS();
					num = 10;
				}
				if (num == 4)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 14);
		}

		// Token: 0x06000462 RID: 1122 RVA: 0x000D685C File Offset: 0x000D4A5C
		private void AHS_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = "0";
					num = 2;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 4;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=70.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=50", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/Script/WindowsTargetPlatform.WindowsTargetSettings]", this.graphicsAPIVersion, "", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				string text4;
				if (num == 7)
				{
					text4 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				string text5;
				if (num == 8)
				{
					text5 = string.Join(Environment.NewLine, new string[]
					{
						"[PresetIndex]",
						"0:Audio=0",
						"1:Controls=-1",
						"2:Display=-1",
						"3:Quality=-1",
						"4:Gameplay=-1",
						"5:Input=0",
						"6:GamepadScheme=0",
						"",
						"[0:Audio]",
						"Общая громкость=100.000000",
						"Громкость музыки=100.000000",
						"Громкость диалогов=100.000000",
						"Громкость эффектов=100.000000",
						"Громкость окружающей среды=100.000000",
						"Громкость интерфейсов=100.000000",
						"Лицензионный Контент=0",
						"Язык Озвучки=1",
						"",
						"[1:Controls]",
						"Mouse_01=0.500000",
						"Gamepad_01=5.000000",
						"Gamepad_02=5.000000",
						"Gamepad_03=0",
						"Gamepad_04=0",
						"",
						"[2:Display]",
						"7=11",
						"Gamma=0.500000",
						"FullScreen=0",
						"VSync=0",
						"FPS limit=240",
						"Resolution=" + this.DefaultWidth + "x" + this.DefaultHeight,
						"5=0",
						"",
						"[3:Quality]",
						"Depth of field=0",
						"Motion blur=0",
						"Sharpen=1.000000",
						"Vignette=0",
						"AAliasing=3",
						"DLSS=" + text,
						"FidelityFX=0",
						"DynamicResolution=0",
						"TargetFPSDynRes=8.333333",
						"TargetFPS=40",
						"Shadow=0",
						"AmbientLight=0",
						"VFX=0",
						"ObjectAmount=0",
						"Material quality=0",
						"Volumetric fog=0",
						"PostProcess=0",
						"Texture=0",
						"Texture Anisotropy=0",
						"Geometry=0",
						"grass=0",
						"RTX enable=0",
						"RTX shadow=0",
						"RTX reflections=0",
						"",
						"[4:Gameplay]",
						"0=en",
						"Art Subtitiles=0",
						"Subtitiles=1",
						"Difficulty=1",
						"",
						"[5:Input]",
						"InputAction.Gameplay.ActivateHealthSlot-0=X",
						"InputAction.Gameplay.ActivateSlot1-0=One",
						"InputAction.Gameplay.ActivateSlot2-0=Two",
						"InputAction.Gameplay.ActivateSlot3-0=Three",
						"InputAction.Gameplay.ActivateSlot4-0=Four",
						"InputAction.Gameplay.CancelInteraction-0=Q",
						"InputAction.Gameplay.Crouch-0=LeftControl",
						"InputAction.Gameplay.Dodge-0=LeftShift",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=LeftMouseButton",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=RightMouseButton",
						"InputAction.Gameplay.GrabbaleDrop-0=F",
						"InputAction.Gameplay.GrabbaleThrow-0=F",
						"InputAction.Gameplay.HealConsumableNext-0=C",
						"InputAction.Gameplay.HealConsumablePrevious-0=Z",
						"InputAction.Gameplay.Jump-0=SpaceBar",
						"InputAction.Gameplay.LookUpRate-0=Down",
						"InputAction.Gameplay.LookUpRate-1=Up",
						"InputAction.Gameplay.Move-0=W",
						"InputAction.Gameplay.Move-1=A",
						"InputAction.Gameplay.Move-2=S",
						"InputAction.Gameplay.Move-3=D",
						"InputAction.Gameplay.MoveUp-0=SpaceBar",
						"InputAction.Gameplay.MoveUp-1=LeftControl",
						"InputAction.Gameplay.QuickRespawn-0=SpaceBar",
						"InputAction.Gameplay.RadialMenu-0=Tab",
						"InputAction.Gameplay.Reload-0=R",
						"InputAction.Gameplay.Scannner-0=LeftAlt",
						"InputAction.Gameplay.ScrollCassettes-0=MouseWheelAxis",
						"InputAction.Gameplay.ScrollWeapon-0=MouseWheelAxis",
						"InputAction.Gameplay.SelectCassetteSlot-0=RightMouseButton",
						"InputAction.Gameplay.Shocker-0=V",
						"InputAction.Gameplay.StartCasseteSelection-0=MiddleMouseButton",
						"InputAction.Gameplay.StealthKill-0=F",
						"InputAction.Gameplay.SwitchAbilityLeft-0=Q",
						"InputAction.Gameplay.SwitchAbilityRight-0=E",
						"InputAction.Gameplay.SwitchCameraView-0=T",
						"InputAction.Gameplay.ToggleInventory-0=I",
						"InputAction.Gameplay.ToggleSelectedAbility-0=RightMouseButton",
						"InputAction.Gameplay.ToggleWorldMap-0=M",
						"InputAction.Gameplay.TurnRate-0=Left",
						"InputAction.Gameplay.TurnRate-1=Right",
						"InputAction.Gameplay.Use-0=F",
						"InputAction.Gameplay.UseHold-0=F",
						"",
						"[6:GamepadScheme]",
						"InputAction.Gameplay.ActivateHealthSlot-0=Gamepad_DPad_Down",
						"InputAction.Gameplay.ActivateSpecialAbility-0=Gamepad_LeftShoulder",
						"InputAction.Gameplay.CancelInteraction-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.Crouch-0=Gamepad_RightThumbstick",
						"InputAction.Gameplay.Dodge-0=Gamepad_FaceButton_Right",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=Gamepad_RightTriggerAxis",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=Gamepad_LeftTriggerAxis",
						"InputAction.Gameplay.GrabbaleDrop-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.GrabbaleThrow-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.Jump-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.LookUpRate-0=Gamepad_RightY",
						"InputAction.Gameplay.Move-0=Gamepad_Left2D",
						"InputAction.Gameplay.QuickRespawn-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.RadialMenu-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Reload-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Scannner-0=Gamepad_LeftThumbstick",
						"InputAction.Gameplay.SelectNextWeapon-0=Gamepad_DPad_Right",
						"InputAction.Gameplay.SelectPreviousWeapon-0=Gamepad_DPad_Left",
						"InputAction.Gameplay.Shocker-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.StealthKill-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.SwapSpecialAbilitiesIndexes-0=Gamepad_DPad_Up",
						"InputAction.Gameplay.ToggleInventory-0=Gamepad_Special_Left",
						"InputAction.Gameplay.ToggleWorldMap-0=Gamepad_Special_Left",
						"InputAction.Gameplay.TurnRate-0=Gamepad_RightX",
						"InputAction.Gameplay.Use-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.UseHold-0=Gamepad_RightShoulder",
						""
					});
					num = 9;
				}
				if (num == 10)
				{
					File.WriteAllText(this.atomicHeartS_main, text2);
					num = 11;
				}
				if (num == 11)
				{
					File.WriteAllText(this.atomicHeartS_first, text3);
					num = 12;
				}
				if (num == 12)
				{
					File.WriteAllText(this.atomicHeartS_second, text4);
					num = 13;
				}
				if (num == 13)
				{
					File.WriteAllText(this.atomicHeartS_third, text5);
					num = 14;
				}
				if (num == 9)
				{
					this.get_own_AHS();
					num = 10;
				}
				if (num == 4)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 14);
		}

		// Token: 0x06000463 RID: 1123 RVA: 0x000D785C File Offset: 0x000D5A5C
		private void AHS_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = "0";
					num = 2;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 4;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=80.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=70", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/Script/WindowsTargetPlatform.WindowsTargetSettings]", this.graphicsAPIVersion, "", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				string text4;
				if (num == 7)
				{
					text4 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				string text5;
				if (num == 8)
				{
					text5 = string.Join(Environment.NewLine, new string[]
					{
						"[PresetIndex]",
						"0:Audio=0",
						"1:Controls=-1",
						"2:Display=-1",
						"3:Quality=-1",
						"4:Gameplay=-1",
						"5:Input=0",
						"6:GamepadScheme=0",
						"",
						"[0:Audio]",
						"Общая громкость=100.000000",
						"Громкость музыки=100.000000",
						"Громкость диалогов=100.000000",
						"Громкость эффектов=100.000000",
						"Громкость окружающей среды=100.000000",
						"Громкость интерфейсов=100.000000",
						"Лицензионный Контент=0",
						"Язык Озвучки=1",
						"",
						"[1:Controls]",
						"Mouse_01=0.500000",
						"Gamepad_01=5.000000",
						"Gamepad_02=5.000000",
						"Gamepad_03=0",
						"Gamepad_04=0",
						"",
						"[2:Display]",
						"7=11",
						"Gamma=0.500000",
						"FullScreen=0",
						"VSync=0",
						"FPS limit=240",
						"Resolution=" + this.DefaultWidth + "x" + this.DefaultHeight,
						"5=0",
						"",
						"[3:Quality]",
						"Depth of field=0",
						"Motion blur=0",
						"Sharpen=1.000000",
						"Vignette=0",
						"AAliasing=3",
						"DLSS=" + text,
						"FidelityFX=0",
						"DynamicResolution=0",
						"TargetFPSDynRes=8.333333",
						"TargetFPS=40",
						"Shadow=0",
						"AmbientLight=0",
						"VFX=0",
						"ObjectAmount=0",
						"Material quality=0",
						"Volumetric fog=0",
						"PostProcess=0",
						"Texture=0",
						"Texture Anisotropy=0",
						"Geometry=0",
						"grass=0",
						"RTX enable=0",
						"RTX shadow=0",
						"RTX reflections=0",
						"",
						"[4:Gameplay]",
						"0=en",
						"Art Subtitiles=0",
						"Subtitiles=1",
						"Difficulty=1",
						"",
						"[5:Input]",
						"InputAction.Gameplay.ActivateHealthSlot-0=X",
						"InputAction.Gameplay.ActivateSlot1-0=One",
						"InputAction.Gameplay.ActivateSlot2-0=Two",
						"InputAction.Gameplay.ActivateSlot3-0=Three",
						"InputAction.Gameplay.ActivateSlot4-0=Four",
						"InputAction.Gameplay.CancelInteraction-0=Q",
						"InputAction.Gameplay.Crouch-0=LeftControl",
						"InputAction.Gameplay.Dodge-0=LeftShift",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=LeftMouseButton",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=RightMouseButton",
						"InputAction.Gameplay.GrabbaleDrop-0=F",
						"InputAction.Gameplay.GrabbaleThrow-0=F",
						"InputAction.Gameplay.HealConsumableNext-0=C",
						"InputAction.Gameplay.HealConsumablePrevious-0=Z",
						"InputAction.Gameplay.Jump-0=SpaceBar",
						"InputAction.Gameplay.LookUpRate-0=Down",
						"InputAction.Gameplay.LookUpRate-1=Up",
						"InputAction.Gameplay.Move-0=W",
						"InputAction.Gameplay.Move-1=A",
						"InputAction.Gameplay.Move-2=S",
						"InputAction.Gameplay.Move-3=D",
						"InputAction.Gameplay.MoveUp-0=SpaceBar",
						"InputAction.Gameplay.MoveUp-1=LeftControl",
						"InputAction.Gameplay.QuickRespawn-0=SpaceBar",
						"InputAction.Gameplay.RadialMenu-0=Tab",
						"InputAction.Gameplay.Reload-0=R",
						"InputAction.Gameplay.Scannner-0=LeftAlt",
						"InputAction.Gameplay.ScrollCassettes-0=MouseWheelAxis",
						"InputAction.Gameplay.ScrollWeapon-0=MouseWheelAxis",
						"InputAction.Gameplay.SelectCassetteSlot-0=RightMouseButton",
						"InputAction.Gameplay.Shocker-0=V",
						"InputAction.Gameplay.StartCasseteSelection-0=MiddleMouseButton",
						"InputAction.Gameplay.StealthKill-0=F",
						"InputAction.Gameplay.SwitchAbilityLeft-0=Q",
						"InputAction.Gameplay.SwitchAbilityRight-0=E",
						"InputAction.Gameplay.SwitchCameraView-0=T",
						"InputAction.Gameplay.ToggleInventory-0=I",
						"InputAction.Gameplay.ToggleSelectedAbility-0=RightMouseButton",
						"InputAction.Gameplay.ToggleWorldMap-0=M",
						"InputAction.Gameplay.TurnRate-0=Left",
						"InputAction.Gameplay.TurnRate-1=Right",
						"InputAction.Gameplay.Use-0=F",
						"InputAction.Gameplay.UseHold-0=F",
						"",
						"[6:GamepadScheme]",
						"InputAction.Gameplay.ActivateHealthSlot-0=Gamepad_DPad_Down",
						"InputAction.Gameplay.ActivateSpecialAbility-0=Gamepad_LeftShoulder",
						"InputAction.Gameplay.CancelInteraction-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.Crouch-0=Gamepad_RightThumbstick",
						"InputAction.Gameplay.Dodge-0=Gamepad_FaceButton_Right",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=Gamepad_RightTriggerAxis",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=Gamepad_LeftTriggerAxis",
						"InputAction.Gameplay.GrabbaleDrop-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.GrabbaleThrow-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.Jump-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.LookUpRate-0=Gamepad_RightY",
						"InputAction.Gameplay.Move-0=Gamepad_Left2D",
						"InputAction.Gameplay.QuickRespawn-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.RadialMenu-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Reload-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Scannner-0=Gamepad_LeftThumbstick",
						"InputAction.Gameplay.SelectNextWeapon-0=Gamepad_DPad_Right",
						"InputAction.Gameplay.SelectPreviousWeapon-0=Gamepad_DPad_Left",
						"InputAction.Gameplay.Shocker-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.StealthKill-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.SwapSpecialAbilitiesIndexes-0=Gamepad_DPad_Up",
						"InputAction.Gameplay.ToggleInventory-0=Gamepad_Special_Left",
						"InputAction.Gameplay.ToggleWorldMap-0=Gamepad_Special_Left",
						"InputAction.Gameplay.TurnRate-0=Gamepad_RightX",
						"InputAction.Gameplay.Use-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.UseHold-0=Gamepad_RightShoulder",
						""
					});
					num = 9;
				}
				if (num == 10)
				{
					File.WriteAllText(this.atomicHeartS_main, text2);
					num = 11;
				}
				if (num == 11)
				{
					File.WriteAllText(this.atomicHeartS_first, text3);
					num = 12;
				}
				if (num == 12)
				{
					File.WriteAllText(this.atomicHeartS_second, text4);
					num = 13;
				}
				if (num == 13)
				{
					File.WriteAllText(this.atomicHeartS_third, text5);
					num = 14;
				}
				if (num == 9)
				{
					this.get_own_AHS();
					num = 10;
				}
				if (num == 4)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 14);
		}

		// Token: 0x06000464 RID: 1124 RVA: 0x000D885C File Offset: 0x000D6A5C
		private void AHS_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = "0";
					num = 2;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 4;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=90.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=80", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/Script/WindowsTargetPlatform.WindowsTargetSettings]", this.graphicsAPIVersion, "", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				string text4;
				if (num == 7)
				{
					text4 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				string text5;
				if (num == 8)
				{
					text5 = string.Join(Environment.NewLine, new string[]
					{
						"[PresetIndex]",
						"0:Audio=0",
						"1:Controls=-1",
						"2:Display=-1",
						"3:Quality=-1",
						"4:Gameplay=-1",
						"5:Input=0",
						"6:GamepadScheme=0",
						"",
						"[0:Audio]",
						"Общая громкость=100.000000",
						"Громкость музыки=100.000000",
						"Громкость диалогов=100.000000",
						"Громкость эффектов=100.000000",
						"Громкость окружающей среды=100.000000",
						"Громкость интерфейсов=100.000000",
						"Лицензионный Контент=0",
						"Язык Озвучки=1",
						"",
						"[1:Controls]",
						"Mouse_01=0.500000",
						"Gamepad_01=5.000000",
						"Gamepad_02=5.000000",
						"Gamepad_03=0",
						"Gamepad_04=0",
						"",
						"[2:Display]",
						"7=11",
						"Gamma=0.500000",
						"FullScreen=0",
						"VSync=0",
						"FPS limit=240",
						"Resolution=" + this.DefaultWidth + "x" + this.DefaultHeight,
						"5=0",
						"",
						"[3:Quality]",
						"Depth of field=0",
						"Motion blur=0",
						"Sharpen=1.000000",
						"Vignette=0",
						"AAliasing=3",
						"DLSS=" + text,
						"FidelityFX=0",
						"DynamicResolution=0",
						"TargetFPSDynRes=8.333333",
						"TargetFPS=40",
						"Shadow=0",
						"AmbientLight=0",
						"VFX=0",
						"ObjectAmount=0",
						"Material quality=0",
						"Volumetric fog=0",
						"PostProcess=0",
						"Texture=0",
						"Texture Anisotropy=0",
						"Geometry=0",
						"grass=0",
						"RTX enable=0",
						"RTX shadow=0",
						"RTX reflections=0",
						"",
						"[4:Gameplay]",
						"0=en",
						"Art Subtitiles=0",
						"Subtitiles=1",
						"Difficulty=1",
						"",
						"[5:Input]",
						"InputAction.Gameplay.ActivateHealthSlot-0=X",
						"InputAction.Gameplay.ActivateSlot1-0=One",
						"InputAction.Gameplay.ActivateSlot2-0=Two",
						"InputAction.Gameplay.ActivateSlot3-0=Three",
						"InputAction.Gameplay.ActivateSlot4-0=Four",
						"InputAction.Gameplay.CancelInteraction-0=Q",
						"InputAction.Gameplay.Crouch-0=LeftControl",
						"InputAction.Gameplay.Dodge-0=LeftShift",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=LeftMouseButton",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=RightMouseButton",
						"InputAction.Gameplay.GrabbaleDrop-0=F",
						"InputAction.Gameplay.GrabbaleThrow-0=F",
						"InputAction.Gameplay.HealConsumableNext-0=C",
						"InputAction.Gameplay.HealConsumablePrevious-0=Z",
						"InputAction.Gameplay.Jump-0=SpaceBar",
						"InputAction.Gameplay.LookUpRate-0=Down",
						"InputAction.Gameplay.LookUpRate-1=Up",
						"InputAction.Gameplay.Move-0=W",
						"InputAction.Gameplay.Move-1=A",
						"InputAction.Gameplay.Move-2=S",
						"InputAction.Gameplay.Move-3=D",
						"InputAction.Gameplay.MoveUp-0=SpaceBar",
						"InputAction.Gameplay.MoveUp-1=LeftControl",
						"InputAction.Gameplay.QuickRespawn-0=SpaceBar",
						"InputAction.Gameplay.RadialMenu-0=Tab",
						"InputAction.Gameplay.Reload-0=R",
						"InputAction.Gameplay.Scannner-0=LeftAlt",
						"InputAction.Gameplay.ScrollCassettes-0=MouseWheelAxis",
						"InputAction.Gameplay.ScrollWeapon-0=MouseWheelAxis",
						"InputAction.Gameplay.SelectCassetteSlot-0=RightMouseButton",
						"InputAction.Gameplay.Shocker-0=V",
						"InputAction.Gameplay.StartCasseteSelection-0=MiddleMouseButton",
						"InputAction.Gameplay.StealthKill-0=F",
						"InputAction.Gameplay.SwitchAbilityLeft-0=Q",
						"InputAction.Gameplay.SwitchAbilityRight-0=E",
						"InputAction.Gameplay.SwitchCameraView-0=T",
						"InputAction.Gameplay.ToggleInventory-0=I",
						"InputAction.Gameplay.ToggleSelectedAbility-0=RightMouseButton",
						"InputAction.Gameplay.ToggleWorldMap-0=M",
						"InputAction.Gameplay.TurnRate-0=Left",
						"InputAction.Gameplay.TurnRate-1=Right",
						"InputAction.Gameplay.Use-0=F",
						"InputAction.Gameplay.UseHold-0=F",
						"",
						"[6:GamepadScheme]",
						"InputAction.Gameplay.ActivateHealthSlot-0=Gamepad_DPad_Down",
						"InputAction.Gameplay.ActivateSpecialAbility-0=Gamepad_LeftShoulder",
						"InputAction.Gameplay.CancelInteraction-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.Crouch-0=Gamepad_RightThumbstick",
						"InputAction.Gameplay.Dodge-0=Gamepad_FaceButton_Right",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=Gamepad_RightTriggerAxis",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=Gamepad_LeftTriggerAxis",
						"InputAction.Gameplay.GrabbaleDrop-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.GrabbaleThrow-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.Jump-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.LookUpRate-0=Gamepad_RightY",
						"InputAction.Gameplay.Move-0=Gamepad_Left2D",
						"InputAction.Gameplay.QuickRespawn-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.RadialMenu-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Reload-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Scannner-0=Gamepad_LeftThumbstick",
						"InputAction.Gameplay.SelectNextWeapon-0=Gamepad_DPad_Right",
						"InputAction.Gameplay.SelectPreviousWeapon-0=Gamepad_DPad_Left",
						"InputAction.Gameplay.Shocker-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.StealthKill-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.SwapSpecialAbilitiesIndexes-0=Gamepad_DPad_Up",
						"InputAction.Gameplay.ToggleInventory-0=Gamepad_Special_Left",
						"InputAction.Gameplay.ToggleWorldMap-0=Gamepad_Special_Left",
						"InputAction.Gameplay.TurnRate-0=Gamepad_RightX",
						"InputAction.Gameplay.Use-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.UseHold-0=Gamepad_RightShoulder",
						""
					});
					num = 9;
				}
				if (num == 10)
				{
					File.WriteAllText(this.atomicHeartS_main, text2);
					num = 11;
				}
				if (num == 11)
				{
					File.WriteAllText(this.atomicHeartS_first, text3);
					num = 12;
				}
				if (num == 12)
				{
					File.WriteAllText(this.atomicHeartS_second, text4);
					num = 13;
				}
				if (num == 13)
				{
					File.WriteAllText(this.atomicHeartS_third, text5);
					num = 14;
				}
				if (num == 9)
				{
					this.get_own_AHS();
					num = 10;
				}
				if (num == 4)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 14);
		}

		// Token: 0x06000465 RID: 1125 RVA: 0x000D985C File Offset: 0x000D7A5C
		private void AHS_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = "0";
					num = 2;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 4;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=95.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=85", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/Script/WindowsTargetPlatform.WindowsTargetSettings]", this.graphicsAPIVersion, "", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				string text4;
				if (num == 7)
				{
					text4 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				string text5;
				if (num == 8)
				{
					text5 = string.Join(Environment.NewLine, new string[]
					{
						"[PresetIndex]",
						"0:Audio=0",
						"1:Controls=-1",
						"2:Display=-1",
						"3:Quality=-1",
						"4:Gameplay=-1",
						"5:Input=0",
						"6:GamepadScheme=0",
						"",
						"[0:Audio]",
						"Общая громкость=100.000000",
						"Громкость музыки=100.000000",
						"Громкость диалогов=100.000000",
						"Громкость эффектов=100.000000",
						"Громкость окружающей среды=100.000000",
						"Громкость интерфейсов=100.000000",
						"Лицензионный Контент=0",
						"Язык Озвучки=1",
						"",
						"[1:Controls]",
						"Mouse_01=0.500000",
						"Gamepad_01=5.000000",
						"Gamepad_02=5.000000",
						"Gamepad_03=0",
						"Gamepad_04=0",
						"",
						"[2:Display]",
						"7=11",
						"Gamma=0.500000",
						"FullScreen=0",
						"VSync=0",
						"FPS limit=240",
						"Resolution=" + this.DefaultWidth + "x" + this.DefaultHeight,
						"5=0",
						"",
						"[3:Quality]",
						"Depth of field=0",
						"Motion blur=0",
						"Sharpen=1.000000",
						"Vignette=0",
						"AAliasing=3",
						"DLSS=" + text,
						"FidelityFX=0",
						"DynamicResolution=0",
						"TargetFPSDynRes=8.333333",
						"TargetFPS=40",
						"Shadow=0",
						"AmbientLight=0",
						"VFX=0",
						"ObjectAmount=0",
						"Material quality=0",
						"Volumetric fog=0",
						"PostProcess=0",
						"Texture=0",
						"Texture Anisotropy=0",
						"Geometry=0",
						"grass=0",
						"RTX enable=0",
						"RTX shadow=0",
						"RTX reflections=0",
						"",
						"[4:Gameplay]",
						"0=en",
						"Art Subtitiles=0",
						"Subtitiles=1",
						"Difficulty=1",
						"",
						"[5:Input]",
						"InputAction.Gameplay.ActivateHealthSlot-0=X",
						"InputAction.Gameplay.ActivateSlot1-0=One",
						"InputAction.Gameplay.ActivateSlot2-0=Two",
						"InputAction.Gameplay.ActivateSlot3-0=Three",
						"InputAction.Gameplay.ActivateSlot4-0=Four",
						"InputAction.Gameplay.CancelInteraction-0=Q",
						"InputAction.Gameplay.Crouch-0=LeftControl",
						"InputAction.Gameplay.Dodge-0=LeftShift",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=LeftMouseButton",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=RightMouseButton",
						"InputAction.Gameplay.GrabbaleDrop-0=F",
						"InputAction.Gameplay.GrabbaleThrow-0=F",
						"InputAction.Gameplay.HealConsumableNext-0=C",
						"InputAction.Gameplay.HealConsumablePrevious-0=Z",
						"InputAction.Gameplay.Jump-0=SpaceBar",
						"InputAction.Gameplay.LookUpRate-0=Down",
						"InputAction.Gameplay.LookUpRate-1=Up",
						"InputAction.Gameplay.Move-0=W",
						"InputAction.Gameplay.Move-1=A",
						"InputAction.Gameplay.Move-2=S",
						"InputAction.Gameplay.Move-3=D",
						"InputAction.Gameplay.MoveUp-0=SpaceBar",
						"InputAction.Gameplay.MoveUp-1=LeftControl",
						"InputAction.Gameplay.QuickRespawn-0=SpaceBar",
						"InputAction.Gameplay.RadialMenu-0=Tab",
						"InputAction.Gameplay.Reload-0=R",
						"InputAction.Gameplay.Scannner-0=LeftAlt",
						"InputAction.Gameplay.ScrollCassettes-0=MouseWheelAxis",
						"InputAction.Gameplay.ScrollWeapon-0=MouseWheelAxis",
						"InputAction.Gameplay.SelectCassetteSlot-0=RightMouseButton",
						"InputAction.Gameplay.Shocker-0=V",
						"InputAction.Gameplay.StartCasseteSelection-0=MiddleMouseButton",
						"InputAction.Gameplay.StealthKill-0=F",
						"InputAction.Gameplay.SwitchAbilityLeft-0=Q",
						"InputAction.Gameplay.SwitchAbilityRight-0=E",
						"InputAction.Gameplay.SwitchCameraView-0=T",
						"InputAction.Gameplay.ToggleInventory-0=I",
						"InputAction.Gameplay.ToggleSelectedAbility-0=RightMouseButton",
						"InputAction.Gameplay.ToggleWorldMap-0=M",
						"InputAction.Gameplay.TurnRate-0=Left",
						"InputAction.Gameplay.TurnRate-1=Right",
						"InputAction.Gameplay.Use-0=F",
						"InputAction.Gameplay.UseHold-0=F",
						"",
						"[6:GamepadScheme]",
						"InputAction.Gameplay.ActivateHealthSlot-0=Gamepad_DPad_Down",
						"InputAction.Gameplay.ActivateSpecialAbility-0=Gamepad_LeftShoulder",
						"InputAction.Gameplay.CancelInteraction-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.Crouch-0=Gamepad_RightThumbstick",
						"InputAction.Gameplay.Dodge-0=Gamepad_FaceButton_Right",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=Gamepad_RightTriggerAxis",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=Gamepad_LeftTriggerAxis",
						"InputAction.Gameplay.GrabbaleDrop-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.GrabbaleThrow-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.Jump-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.LookUpRate-0=Gamepad_RightY",
						"InputAction.Gameplay.Move-0=Gamepad_Left2D",
						"InputAction.Gameplay.QuickRespawn-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.RadialMenu-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Reload-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Scannner-0=Gamepad_LeftThumbstick",
						"InputAction.Gameplay.SelectNextWeapon-0=Gamepad_DPad_Right",
						"InputAction.Gameplay.SelectPreviousWeapon-0=Gamepad_DPad_Left",
						"InputAction.Gameplay.Shocker-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.StealthKill-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.SwapSpecialAbilitiesIndexes-0=Gamepad_DPad_Up",
						"InputAction.Gameplay.ToggleInventory-0=Gamepad_Special_Left",
						"InputAction.Gameplay.ToggleWorldMap-0=Gamepad_Special_Left",
						"InputAction.Gameplay.TurnRate-0=Gamepad_RightX",
						"InputAction.Gameplay.Use-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.UseHold-0=Gamepad_RightShoulder",
						""
					});
					num = 9;
				}
				if (num == 10)
				{
					File.WriteAllText(this.atomicHeartS_main, text2);
					num = 11;
				}
				if (num == 11)
				{
					File.WriteAllText(this.atomicHeartS_first, text3);
					num = 12;
				}
				if (num == 12)
				{
					File.WriteAllText(this.atomicHeartS_second, text4);
					num = 13;
				}
				if (num == 13)
				{
					File.WriteAllText(this.atomicHeartS_third, text5);
					num = 14;
				}
				if (num == 9)
				{
					this.get_own_AHS();
					num = 10;
				}
				if (num == 4)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 14);
		}

		// Token: 0x06000466 RID: 1126 RVA: 0x000DA85C File Offset: 0x000D8A5C
		private void AHS_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = "0";
					num = 2;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 4;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=100.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=90", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/Script/WindowsTargetPlatform.WindowsTargetSettings]", this.graphicsAPIVersion, "", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				string text4;
				if (num == 7)
				{
					text4 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				string text5;
				if (num == 8)
				{
					text5 = string.Join(Environment.NewLine, new string[]
					{
						"[PresetIndex]",
						"0:Audio=0",
						"1:Controls=-1",
						"2:Display=-1",
						"3:Quality=-1",
						"4:Gameplay=-1",
						"5:Input=0",
						"6:GamepadScheme=0",
						"",
						"[0:Audio]",
						"Общая громкость=100.000000",
						"Громкость музыки=100.000000",
						"Громкость диалогов=100.000000",
						"Громкость эффектов=100.000000",
						"Громкость окружающей среды=100.000000",
						"Громкость интерфейсов=100.000000",
						"Лицензионный Контент=0",
						"Язык Озвучки=1",
						"",
						"[1:Controls]",
						"Mouse_01=0.500000",
						"Gamepad_01=5.000000",
						"Gamepad_02=5.000000",
						"Gamepad_03=0",
						"Gamepad_04=0",
						"",
						"[2:Display]",
						"7=11",
						"Gamma=0.500000",
						"FullScreen=0",
						"VSync=0",
						"FPS limit=240",
						"Resolution=" + this.DefaultWidth + "x" + this.DefaultHeight,
						"5=0",
						"",
						"[3:Quality]",
						"Depth of field=0",
						"Motion blur=0",
						"Sharpen=1.000000",
						"Vignette=0",
						"AAliasing=3",
						"DLSS=" + text,
						"FidelityFX=0",
						"DynamicResolution=0",
						"TargetFPSDynRes=8.333333",
						"TargetFPS=40",
						"Shadow=0",
						"AmbientLight=0",
						"VFX=0",
						"ObjectAmount=0",
						"Material quality=0",
						"Volumetric fog=0",
						"PostProcess=0",
						"Texture=0",
						"Texture Anisotropy=0",
						"Geometry=0",
						"grass=0",
						"RTX enable=0",
						"RTX shadow=0",
						"RTX reflections=0",
						"",
						"[4:Gameplay]",
						"0=en",
						"Art Subtitiles=0",
						"Subtitiles=1",
						"Difficulty=1",
						"",
						"[5:Input]",
						"InputAction.Gameplay.ActivateHealthSlot-0=X",
						"InputAction.Gameplay.ActivateSlot1-0=One",
						"InputAction.Gameplay.ActivateSlot2-0=Two",
						"InputAction.Gameplay.ActivateSlot3-0=Three",
						"InputAction.Gameplay.ActivateSlot4-0=Four",
						"InputAction.Gameplay.CancelInteraction-0=Q",
						"InputAction.Gameplay.Crouch-0=LeftControl",
						"InputAction.Gameplay.Dodge-0=LeftShift",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=LeftMouseButton",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=RightMouseButton",
						"InputAction.Gameplay.GrabbaleDrop-0=F",
						"InputAction.Gameplay.GrabbaleThrow-0=F",
						"InputAction.Gameplay.HealConsumableNext-0=C",
						"InputAction.Gameplay.HealConsumablePrevious-0=Z",
						"InputAction.Gameplay.Jump-0=SpaceBar",
						"InputAction.Gameplay.LookUpRate-0=Down",
						"InputAction.Gameplay.LookUpRate-1=Up",
						"InputAction.Gameplay.Move-0=W",
						"InputAction.Gameplay.Move-1=A",
						"InputAction.Gameplay.Move-2=S",
						"InputAction.Gameplay.Move-3=D",
						"InputAction.Gameplay.MoveUp-0=SpaceBar",
						"InputAction.Gameplay.MoveUp-1=LeftControl",
						"InputAction.Gameplay.QuickRespawn-0=SpaceBar",
						"InputAction.Gameplay.RadialMenu-0=Tab",
						"InputAction.Gameplay.Reload-0=R",
						"InputAction.Gameplay.Scannner-0=LeftAlt",
						"InputAction.Gameplay.ScrollCassettes-0=MouseWheelAxis",
						"InputAction.Gameplay.ScrollWeapon-0=MouseWheelAxis",
						"InputAction.Gameplay.SelectCassetteSlot-0=RightMouseButton",
						"InputAction.Gameplay.Shocker-0=V",
						"InputAction.Gameplay.StartCasseteSelection-0=MiddleMouseButton",
						"InputAction.Gameplay.StealthKill-0=F",
						"InputAction.Gameplay.SwitchAbilityLeft-0=Q",
						"InputAction.Gameplay.SwitchAbilityRight-0=E",
						"InputAction.Gameplay.SwitchCameraView-0=T",
						"InputAction.Gameplay.ToggleInventory-0=I",
						"InputAction.Gameplay.ToggleSelectedAbility-0=RightMouseButton",
						"InputAction.Gameplay.ToggleWorldMap-0=M",
						"InputAction.Gameplay.TurnRate-0=Left",
						"InputAction.Gameplay.TurnRate-1=Right",
						"InputAction.Gameplay.Use-0=F",
						"InputAction.Gameplay.UseHold-0=F",
						"",
						"[6:GamepadScheme]",
						"InputAction.Gameplay.ActivateHealthSlot-0=Gamepad_DPad_Down",
						"InputAction.Gameplay.ActivateSpecialAbility-0=Gamepad_LeftShoulder",
						"InputAction.Gameplay.CancelInteraction-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.Crouch-0=Gamepad_RightThumbstick",
						"InputAction.Gameplay.Dodge-0=Gamepad_FaceButton_Right",
						"InputAction.Gameplay.EquippedItemPrimaryAction-0=Gamepad_RightTriggerAxis",
						"InputAction.Gameplay.EquippedItemSecondaryAction-0=Gamepad_LeftTriggerAxis",
						"InputAction.Gameplay.GrabbaleDrop-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.GrabbaleThrow-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.Jump-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.LookUpRate-0=Gamepad_RightY",
						"InputAction.Gameplay.Move-0=Gamepad_Left2D",
						"InputAction.Gameplay.QuickRespawn-0=Gamepad_FaceButton_Bottom",
						"InputAction.Gameplay.RadialMenu-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Reload-0=Gamepad_FaceButton_Top",
						"InputAction.Gameplay.Scannner-0=Gamepad_LeftThumbstick",
						"InputAction.Gameplay.SelectNextWeapon-0=Gamepad_DPad_Right",
						"InputAction.Gameplay.SelectPreviousWeapon-0=Gamepad_DPad_Left",
						"InputAction.Gameplay.Shocker-0=Gamepad_FaceButton_Left",
						"InputAction.Gameplay.StealthKill-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.SwapSpecialAbilitiesIndexes-0=Gamepad_DPad_Up",
						"InputAction.Gameplay.ToggleInventory-0=Gamepad_Special_Left",
						"InputAction.Gameplay.ToggleWorldMap-0=Gamepad_Special_Left",
						"InputAction.Gameplay.TurnRate-0=Gamepad_RightX",
						"InputAction.Gameplay.Use-0=Gamepad_RightShoulder",
						"InputAction.Gameplay.UseHold-0=Gamepad_RightShoulder",
						""
					});
					num = 9;
				}
				if (num == 10)
				{
					File.WriteAllText(this.atomicHeartS_main, text2);
					num = 11;
				}
				if (num == 11)
				{
					File.WriteAllText(this.atomicHeartS_first, text3);
					num = 12;
				}
				if (num == 12)
				{
					File.WriteAllText(this.atomicHeartS_second, text4);
					num = 13;
				}
				if (num == 13)
				{
					File.WriteAllText(this.atomicHeartS_third, text5);
					num = 14;
				}
				if (num == 9)
				{
					this.get_own_AHS();
					num = 10;
				}
				if (num == 4)
				{
					(from s in File.ReadAllLines(this.atomicHeartS_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 14);
		}

		// Token: 0x06000467 RID: 1127 RVA: 0x000DB85C File Offset: 0x000D9A5C
		private void ACOD_g()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.assassins_creed_odessey, FileAttributes.Normal);
					num = 6;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.assassins_creed_odessey, text);
					num = 7;
				}
				if (num == 4)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Language]",
						"Client=en-US",
						"Text=en-US",
						"Sound=en-US",
						"Subtitles=en-US",
						"[Graphics]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"DisplayIndex=0",
						"WindowPosX=0",
						"WindowPosY=0",
						"FullscreenWidth=" + this.DefaultWidth,
						"FullscreenHeight=" + this.DefaultHeight,
						"WindowedWidth=" + this.DefaultWidth,
						"WindowedHeight=" + this.DefaultHeight,
						"WindowMaximised=0",
						string.Join(Environment.NewLine, array3),
						"WindowMode=3",
						"VSyncMode=0",
						"MaxFPS=90",
						"IsFpsLimitEnabled=0",
						"PixelDensity=0.50000",
						"LastUsedFullscreenMode=0",
						"KeepStandardAspect=0",
						"HDREnabled=0",
						"Freesync2Enabled=0",
						"AdaptiveQuality=0",
						"Antialiasing=0",
						"Bloom=0",
						"Character=0",
						"CharacterTexture=0",
						"Cloud=0",
						"Clutter=0",
						"CrowdDensity=0",
						"Culling=0",
						"DOF=0",
						"Environment=0",
						"Fog=0",
						"Lighting=0",
						"Rain=0",
						"Reflection=0",
						"Shadow=0",
						"SSAO=0",
						"Terrain=0",
						"Tessellation=3",
						"Texture=0",
						"TextureFiltering=2",
						"Water=0",
						"AntiAliasingMode=0",
						"Multisampling=0",
						"MultiSampleType=0",
						"PostFX=0",
						"GlobalIllumination=0",
						"Anisotropic=0",
						"AnisotropicFiltering=0",
						"OceanQuality=0",
						"LODBlend=0",
						"GodRays=0",
						"UseGodRays=0",
						"DisableHairAniso=0",
						"VolumetricFog=0",
						"UseVolumetricFog=0",
						"ApexParticles=0",
						"PostEffectsQuality=0",
						"ShadowDistance=0",
						"DistanceLODEnabled=0",
						"DistanceLOD=2",
						"SmallObjectsCullDistanceModifier=5",
						"MediumObjectsCullDistanceModifier=5",
						"AdvancedDynamicLighting=0",
						"Layers=0",
						"MaxNPCLODLevel=0",
						"UseDriverWorkaround=0",
						"MinSkipMipTextureSize=128",
						"MipMapsToSkipCharacter=1",
						"[Options]",
						"FOVScale=0.85000",
						""
					});
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x06000468 RID: 1128 RVA: 0x000DBDD0 File Offset: 0x000D9FD0
		private void ACOD_f()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.assassins_creed_odessey, FileAttributes.Normal);
					num = 6;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.assassins_creed_odessey, text);
					num = 7;
				}
				if (num == 4)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Language]",
						"Client=en-US",
						"Text=en-US",
						"Sound=en-US",
						"Subtitles=en-US",
						"[Graphics]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"DisplayIndex=0",
						"WindowPosX=0",
						"WindowPosY=0",
						"FullscreenWidth=" + this.DefaultWidth,
						"FullscreenHeight=" + this.DefaultHeight,
						"WindowedWidth=" + this.DefaultWidth,
						"WindowedHeight=" + this.DefaultHeight,
						"WindowMaximised=0",
						string.Join(Environment.NewLine, array3),
						"WindowMode=3",
						"VSyncMode=0",
						"MaxFPS=90",
						"IsFpsLimitEnabled=0",
						"PixelDensity=0.60000",
						"LastUsedFullscreenMode=0",
						"KeepStandardAspect=0",
						"HDREnabled=0",
						"Freesync2Enabled=0",
						"AdaptiveQuality=0",
						"Antialiasing=0",
						"Bloom=0",
						"Character=0",
						"CharacterTexture=0",
						"Cloud=0",
						"Clutter=0",
						"CrowdDensity=0",
						"Culling=0",
						"DOF=0",
						"Environment=0",
						"Fog=0",
						"Lighting=0",
						"Rain=0",
						"Reflection=0",
						"Shadow=0",
						"SSAO=0",
						"Terrain=0",
						"Tessellation=3",
						"Texture=0",
						"TextureFiltering=2",
						"Water=0",
						"AntiAliasingMode=0",
						"Multisampling=0",
						"MultiSampleType=0",
						"PostFX=0",
						"GlobalIllumination=0",
						"Anisotropic=0",
						"AnisotropicFiltering=0",
						"OceanQuality=0",
						"LODBlend=0",
						"GodRays=0",
						"UseGodRays=0",
						"DisableHairAniso=0",
						"VolumetricFog=0",
						"UseVolumetricFog=0",
						"ApexParticles=0",
						"PostEffectsQuality=0",
						"ShadowDistance=0",
						"DistanceLODEnabled=0",
						"DistanceLOD=2",
						"SmallObjectsCullDistanceModifier=5",
						"MediumObjectsCullDistanceModifier=5",
						"AdvancedDynamicLighting=0",
						"Layers=0",
						"MaxNPCLODLevel=0",
						"UseDriverWorkaround=0",
						"MinSkipMipTextureSize=128",
						"MipMapsToSkipCharacter=1",
						"[Options]",
						"FOVScale=0.85000",
						""
					});
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x06000469 RID: 1129 RVA: 0x000DC344 File Offset: 0x000DA544
		private void ACOD_d()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.assassins_creed_odessey, FileAttributes.Normal);
					num = 6;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.assassins_creed_odessey, text);
					num = 7;
				}
				if (num == 4)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Language]",
						"Client=en-US",
						"Text=en-US",
						"Sound=en-US",
						"Subtitles=en-US",
						"[Graphics]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"DisplayIndex=0",
						"WindowPosX=0",
						"WindowPosY=0",
						"FullscreenWidth=" + this.DefaultWidth,
						"FullscreenHeight=" + this.DefaultHeight,
						"WindowedWidth=" + this.DefaultWidth,
						"WindowedHeight=" + this.DefaultHeight,
						"WindowMaximised=0",
						string.Join(Environment.NewLine, array3),
						"WindowMode=3",
						"VSyncMode=0",
						"MaxFPS=90",
						"IsFpsLimitEnabled=0",
						"PixelDensity=0.70000",
						"LastUsedFullscreenMode=0",
						"KeepStandardAspect=0",
						"HDREnabled=0",
						"Freesync2Enabled=0",
						"AdaptiveQuality=0",
						"Antialiasing=0",
						"Bloom=0",
						"Character=0",
						"CharacterTexture=0",
						"Cloud=0",
						"Clutter=0",
						"CrowdDensity=0",
						"Culling=0",
						"DOF=0",
						"Environment=0",
						"Fog=0",
						"Lighting=0",
						"Rain=0",
						"Reflection=0",
						"Shadow=0",
						"SSAO=0",
						"Terrain=0",
						"Tessellation=3",
						"Texture=0",
						"TextureFiltering=2",
						"Water=0",
						"AntiAliasingMode=0",
						"Multisampling=0",
						"MultiSampleType=0",
						"PostFX=0",
						"GlobalIllumination=0",
						"Anisotropic=0",
						"AnisotropicFiltering=0",
						"OceanQuality=0",
						"LODBlend=0",
						"GodRays=0",
						"UseGodRays=0",
						"DisableHairAniso=0",
						"VolumetricFog=0",
						"UseVolumetricFog=0",
						"ApexParticles=0",
						"PostEffectsQuality=0",
						"ShadowDistance=0",
						"DistanceLODEnabled=0",
						"DistanceLOD=2",
						"SmallObjectsCullDistanceModifier=5",
						"MediumObjectsCullDistanceModifier=5",
						"AdvancedDynamicLighting=0",
						"Layers=0",
						"MaxNPCLODLevel=0",
						"UseDriverWorkaround=0",
						"MinSkipMipTextureSize=128",
						"MipMapsToSkipCharacter=1",
						"[Options]",
						"FOVScale=0.85000",
						""
					});
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x0600046A RID: 1130 RVA: 0x000DC8B8 File Offset: 0x000DAAB8
		private void ACOD_c()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.assassins_creed_odessey, FileAttributes.Normal);
					num = 6;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.assassins_creed_odessey, text);
					num = 7;
				}
				if (num == 4)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Language]",
						"Client=en-US",
						"Text=en-US",
						"Sound=en-US",
						"Subtitles=en-US",
						"[Graphics]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"DisplayIndex=0",
						"WindowPosX=0",
						"WindowPosY=0",
						"FullscreenWidth=" + this.DefaultWidth,
						"FullscreenHeight=" + this.DefaultHeight,
						"WindowedWidth=" + this.DefaultWidth,
						"WindowedHeight=" + this.DefaultHeight,
						"WindowMaximised=0",
						string.Join(Environment.NewLine, array3),
						"WindowMode=3",
						"VSyncMode=0",
						"MaxFPS=90",
						"IsFpsLimitEnabled=0",
						"PixelDensity=0.80000",
						"LastUsedFullscreenMode=0",
						"KeepStandardAspect=0",
						"HDREnabled=0",
						"Freesync2Enabled=0",
						"AdaptiveQuality=0",
						"Antialiasing=0",
						"Bloom=0",
						"Character=0",
						"CharacterTexture=0",
						"Cloud=0",
						"Clutter=0",
						"CrowdDensity=0",
						"Culling=0",
						"DOF=0",
						"Environment=0",
						"Fog=0",
						"Lighting=0",
						"Rain=0",
						"Reflection=0",
						"Shadow=0",
						"SSAO=0",
						"Terrain=0",
						"Tessellation=3",
						"Texture=0",
						"TextureFiltering=2",
						"Water=0",
						"AntiAliasingMode=0",
						"Multisampling=0",
						"MultiSampleType=0",
						"PostFX=0",
						"GlobalIllumination=0",
						"Anisotropic=0",
						"AnisotropicFiltering=0",
						"OceanQuality=0",
						"LODBlend=0",
						"GodRays=0",
						"UseGodRays=0",
						"DisableHairAniso=0",
						"VolumetricFog=0",
						"UseVolumetricFog=0",
						"ApexParticles=0",
						"PostEffectsQuality=0",
						"ShadowDistance=0",
						"DistanceLODEnabled=0",
						"DistanceLOD=2",
						"SmallObjectsCullDistanceModifier=5",
						"MediumObjectsCullDistanceModifier=5",
						"AdvancedDynamicLighting=0",
						"Layers=0",
						"MaxNPCLODLevel=0",
						"UseDriverWorkaround=0",
						"MinSkipMipTextureSize=128",
						"MipMapsToSkipCharacter=1",
						"[Options]",
						"FOVScale=0.85000",
						""
					});
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x0600046B RID: 1131 RVA: 0x000DCE2C File Offset: 0x000DB02C
		private void ACOD_b()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.assassins_creed_odessey, FileAttributes.Normal);
					num = 6;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.assassins_creed_odessey, text);
					num = 7;
				}
				if (num == 4)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Language]",
						"Client=en-US",
						"Text=en-US",
						"Sound=en-US",
						"Subtitles=en-US",
						"[Graphics]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"DisplayIndex=0",
						"WindowPosX=0",
						"WindowPosY=0",
						"FullscreenWidth=" + this.DefaultWidth,
						"FullscreenHeight=" + this.DefaultHeight,
						"WindowedWidth=" + this.DefaultWidth,
						"WindowedHeight=" + this.DefaultHeight,
						"WindowMaximised=0",
						string.Join(Environment.NewLine, array3),
						"WindowMode=3",
						"VSyncMode=0",
						"MaxFPS=90",
						"IsFpsLimitEnabled=0",
						"PixelDensity=0.90000",
						"LastUsedFullscreenMode=0",
						"KeepStandardAspect=0",
						"HDREnabled=0",
						"Freesync2Enabled=0",
						"AdaptiveQuality=0",
						"Antialiasing=0",
						"Bloom=0",
						"Character=0",
						"CharacterTexture=0",
						"Cloud=0",
						"Clutter=0",
						"CrowdDensity=0",
						"Culling=0",
						"DOF=0",
						"Environment=0",
						"Fog=0",
						"Lighting=0",
						"Rain=0",
						"Reflection=0",
						"Shadow=0",
						"SSAO=0",
						"Terrain=0",
						"Tessellation=3",
						"Texture=0",
						"TextureFiltering=2",
						"Water=0",
						"AntiAliasingMode=0",
						"Multisampling=0",
						"MultiSampleType=0",
						"PostFX=0",
						"GlobalIllumination=0",
						"Anisotropic=0",
						"AnisotropicFiltering=0",
						"OceanQuality=0",
						"LODBlend=0",
						"GodRays=0",
						"UseGodRays=0",
						"DisableHairAniso=0",
						"VolumetricFog=0",
						"UseVolumetricFog=0",
						"ApexParticles=0",
						"PostEffectsQuality=0",
						"ShadowDistance=0",
						"DistanceLODEnabled=0",
						"DistanceLOD=2",
						"SmallObjectsCullDistanceModifier=5",
						"MediumObjectsCullDistanceModifier=5",
						"AdvancedDynamicLighting=0",
						"Layers=0",
						"MaxNPCLODLevel=0",
						"UseDriverWorkaround=0",
						"MinSkipMipTextureSize=128",
						"MipMapsToSkipCharacter=1",
						"[Options]",
						"FOVScale=0.85000",
						""
					});
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x0600046C RID: 1132 RVA: 0x000DD3A0 File Offset: 0x000DB5A0
		private void ACOD_a()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.assassins_creed_odessey)
						where s.Contains("RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.assassins_creed_odessey, FileAttributes.Normal);
					num = 6;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.assassins_creed_odessey, text);
					num = 7;
				}
				if (num == 4)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Language]",
						"Client=en-US",
						"Text=en-US",
						"Sound=en-US",
						"Subtitles=en-US",
						"[Graphics]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"DisplayIndex=0",
						"WindowPosX=0",
						"WindowPosY=0",
						"FullscreenWidth=" + this.DefaultWidth,
						"FullscreenHeight=" + this.DefaultHeight,
						"WindowedWidth=" + this.DefaultWidth,
						"WindowedHeight=" + this.DefaultHeight,
						"WindowMaximised=0",
						string.Join(Environment.NewLine, array3),
						"WindowMode=3",
						"VSyncMode=0",
						"MaxFPS=90",
						"IsFpsLimitEnabled=0",
						"PixelDensity=1.00000",
						"LastUsedFullscreenMode=0",
						"KeepStandardAspect=0",
						"HDREnabled=0",
						"Freesync2Enabled=0",
						"AdaptiveQuality=0",
						"Antialiasing=0",
						"Bloom=0",
						"Character=0",
						"CharacterTexture=0",
						"Cloud=0",
						"Clutter=0",
						"CrowdDensity=0",
						"Culling=0",
						"DOF=0",
						"Environment=0",
						"Fog=0",
						"Lighting=0",
						"Rain=0",
						"Reflection=0",
						"Shadow=0",
						"SSAO=0",
						"Terrain=0",
						"Tessellation=3",
						"Texture=0",
						"TextureFiltering=2",
						"Water=0",
						"AntiAliasingMode=0",
						"Multisampling=0",
						"MultiSampleType=0",
						"PostFX=0",
						"GlobalIllumination=0",
						"Anisotropic=0",
						"AnisotropicFiltering=0",
						"OceanQuality=0",
						"LODBlend=0",
						"GodRays=0",
						"UseGodRays=0",
						"DisableHairAniso=0",
						"VolumetricFog=0",
						"UseVolumetricFog=0",
						"ApexParticles=0",
						"PostEffectsQuality=0",
						"ShadowDistance=0",
						"DistanceLODEnabled=0",
						"DistanceLOD=2",
						"SmallObjectsCullDistanceModifier=5",
						"MediumObjectsCullDistanceModifier=5",
						"AdvancedDynamicLighting=0",
						"Layers=0",
						"MaxNPCLODLevel=0",
						"UseDriverWorkaround=0",
						"MinSkipMipTextureSize=128",
						"MipMapsToSkipCharacter=1",
						"[Options]",
						"FOVScale=0.85000",
						""
					});
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x0600046D RID: 1133 RVA: 0x000DD914 File Offset: 0x000DBB14
		private void ACVAL_g()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.assassins_creed_valhalla, FileAttributes.Normal);
					num = 6;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.assassins_creed_valhalla, text);
					num = 7;
				}
				if (num == 4)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Language]",
						"Client=en-US",
						"Text=en-US",
						"Sound=en-US",
						"Subtitles=en-US",
						"[Graphics]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"DisplayIndex=0",
						"WindowPosX=0",
						"WindowPosY=0",
						"FullscreenWidth=" + this.DefaultWidth,
						"FullscreenHeight=" + this.DefaultHeight,
						"WindowedWidth=" + this.DefaultWidth,
						"WindowedHeight=" + this.DefaultHeight,
						"WindowMaximised=0",
						string.Join(Environment.NewLine, array3),
						"WindowMode=3",
						"VSyncMode=0",
						"MaxFPS=0",
						"IsFpsLimitEnabled=0",
						"PixelDensity=0.50000",
						"LastUsedFullscreenMode=0",
						"KeepStandardAspect=0",
						"HDREnabled=0",
						"Freesync2Enabled=0",
						"UpsampleType=0",
						"FSRQuality=0",
						"AdaptiveQuality=0",
						"Antialiasing=0",
						"Bloom=0",
						"Character=0",
						"CharacterTexture=0",
						"Cloud=0",
						"Clutter=0",
						"CrowdDensity=0",
						"Culling=0",
						"DOF=0",
						"Environment=0",
						"Fog=2",
						"Lighting=0",
						"MotionBlur=0",
						"Rain=0",
						"Reflection=0",
						"Shadow=0",
						"SSAO=2",
						"Terrain=0",
						"Tessellation=0",
						"Texture=0",
						"TextureFiltering=0",
						"Water=0",
						"AntiAliasingMode=0",
						"Multisampling=0",
						"MultiSampleType=0",
						"PostFX=0",
						"GlobalIllumination=0",
						"Anisotropic=0",
						"AnisotropicFiltering=0",
						"OceanQuality=0",
						"LODBlend=0",
						"GodRays=0",
						"UseGodRays=0",
						"DisableHairAniso=0",
						"VolumetricFog=0",
						"UseVolumetricFog=0",
						"ApexParticles=0",
						"PostEffectsQuality=0",
						"ShadowDistance=0",
						"DistanceLODEnabled=0",
						"DistanceLOD=2",
						"SmallObjectsCullDistanceModifier=5",
						"MediumObjectsCullDistanceModifier=5",
						"AdvancedDynamicLighting=0",
						"Layers=0",
						"MaxNPCLODLevel=0",
						"UseDriverWorkaround=0",
						"MinSkipMipTextureSize=128",
						"MipMapsToSkipCharacter=1",
						"[Options]",
						"FOVScale=0.85000",
						""
					});
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x0600046E RID: 1134 RVA: 0x000DDEAC File Offset: 0x000DC0AC
		private void ACVAL_f()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.assassins_creed_valhalla, FileAttributes.Normal);
					num = 6;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.assassins_creed_valhalla, text);
					num = 7;
				}
				if (num == 4)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Language]",
						"Client=en-US",
						"Text=en-US",
						"Sound=en-US",
						"Subtitles=en-US",
						"[Graphics]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"DisplayIndex=0",
						"WindowPosX=0",
						"WindowPosY=0",
						"FullscreenWidth=" + this.DefaultWidth,
						"FullscreenHeight=" + this.DefaultHeight,
						"WindowedWidth=" + this.DefaultWidth,
						"WindowedHeight=" + this.DefaultHeight,
						"WindowMaximised=0",
						string.Join(Environment.NewLine, array3),
						"WindowMode=3",
						"VSyncMode=0",
						"MaxFPS=0",
						"IsFpsLimitEnabled=0",
						"PixelDensity=0.60000",
						"LastUsedFullscreenMode=0",
						"KeepStandardAspect=0",
						"HDREnabled=0",
						"Freesync2Enabled=0",
						"UpsampleType=0",
						"FSRQuality=0",
						"AdaptiveQuality=0",
						"Antialiasing=0",
						"Bloom=0",
						"Character=0",
						"CharacterTexture=0",
						"Cloud=0",
						"Clutter=0",
						"CrowdDensity=0",
						"Culling=0",
						"DOF=0",
						"Environment=0",
						"Fog=2",
						"Lighting=0",
						"MotionBlur=0",
						"Rain=0",
						"Reflection=0",
						"Shadow=0",
						"SSAO=2",
						"Terrain=0",
						"Tessellation=0",
						"Texture=0",
						"TextureFiltering=0",
						"Water=0",
						"AntiAliasingMode=0",
						"Multisampling=0",
						"MultiSampleType=0",
						"PostFX=0",
						"GlobalIllumination=0",
						"Anisotropic=0",
						"AnisotropicFiltering=0",
						"OceanQuality=0",
						"LODBlend=0",
						"GodRays=0",
						"UseGodRays=0",
						"DisableHairAniso=0",
						"VolumetricFog=0",
						"UseVolumetricFog=0",
						"ApexParticles=0",
						"PostEffectsQuality=0",
						"ShadowDistance=0",
						"DistanceLODEnabled=0",
						"DistanceLOD=2",
						"SmallObjectsCullDistanceModifier=5",
						"MediumObjectsCullDistanceModifier=5",
						"AdvancedDynamicLighting=0",
						"Layers=0",
						"MaxNPCLODLevel=0",
						"UseDriverWorkaround=0",
						"MinSkipMipTextureSize=128",
						"MipMapsToSkipCharacter=1",
						"[Options]",
						"FOVScale=0.85000",
						""
					});
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x0600046F RID: 1135 RVA: 0x000DE444 File Offset: 0x000DC644
		private void ACVAL_d()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.assassins_creed_valhalla, FileAttributes.Normal);
					num = 6;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.assassins_creed_valhalla, text);
					num = 7;
				}
				if (num == 4)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Language]",
						"Client=en-US",
						"Text=en-US",
						"Sound=en-US",
						"Subtitles=en-US",
						"[Graphics]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"DisplayIndex=0",
						"WindowPosX=0",
						"WindowPosY=0",
						"FullscreenWidth=" + this.DefaultWidth,
						"FullscreenHeight=" + this.DefaultHeight,
						"WindowedWidth=" + this.DefaultWidth,
						"WindowedHeight=" + this.DefaultHeight,
						"WindowMaximised=0",
						string.Join(Environment.NewLine, array3),
						"WindowMode=3",
						"VSyncMode=0",
						"MaxFPS=0",
						"IsFpsLimitEnabled=0",
						"PixelDensity=0.70000",
						"LastUsedFullscreenMode=0",
						"KeepStandardAspect=0",
						"HDREnabled=0",
						"Freesync2Enabled=0",
						"UpsampleType=0",
						"FSRQuality=0",
						"AdaptiveQuality=0",
						"Antialiasing=0",
						"Bloom=0",
						"Character=0",
						"CharacterTexture=0",
						"Cloud=0",
						"Clutter=0",
						"CrowdDensity=0",
						"Culling=0",
						"DOF=0",
						"Environment=0",
						"Fog=2",
						"Lighting=0",
						"MotionBlur=0",
						"Rain=0",
						"Reflection=0",
						"Shadow=0",
						"SSAO=2",
						"Terrain=0",
						"Tessellation=0",
						"Texture=0",
						"TextureFiltering=0",
						"Water=0",
						"AntiAliasingMode=0",
						"Multisampling=0",
						"MultiSampleType=0",
						"PostFX=0",
						"GlobalIllumination=0",
						"Anisotropic=0",
						"AnisotropicFiltering=0",
						"OceanQuality=0",
						"LODBlend=0",
						"GodRays=0",
						"UseGodRays=0",
						"DisableHairAniso=0",
						"VolumetricFog=0",
						"UseVolumetricFog=0",
						"ApexParticles=0",
						"PostEffectsQuality=0",
						"ShadowDistance=0",
						"DistanceLODEnabled=0",
						"DistanceLOD=2",
						"SmallObjectsCullDistanceModifier=5",
						"MediumObjectsCullDistanceModifier=5",
						"AdvancedDynamicLighting=0",
						"Layers=0",
						"MaxNPCLODLevel=0",
						"UseDriverWorkaround=0",
						"MinSkipMipTextureSize=128",
						"MipMapsToSkipCharacter=1",
						"[Options]",
						"FOVScale=0.85000",
						""
					});
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x06000470 RID: 1136 RVA: 0x000DE9DC File Offset: 0x000DCBDC
		private void ACVAL_c()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.assassins_creed_valhalla, FileAttributes.Normal);
					num = 6;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.assassins_creed_valhalla, text);
					num = 7;
				}
				if (num == 4)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Language]",
						"Client=en-US",
						"Text=en-US",
						"Sound=en-US",
						"Subtitles=en-US",
						"[Graphics]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"DisplayIndex=0",
						"WindowPosX=0",
						"WindowPosY=0",
						"FullscreenWidth=" + this.DefaultWidth,
						"FullscreenHeight=" + this.DefaultHeight,
						"WindowedWidth=" + this.DefaultWidth,
						"WindowedHeight=" + this.DefaultHeight,
						"WindowMaximised=0",
						string.Join(Environment.NewLine, array3),
						"WindowMode=3",
						"VSyncMode=0",
						"MaxFPS=0",
						"IsFpsLimitEnabled=0",
						"PixelDensity=0.80000",
						"LastUsedFullscreenMode=0",
						"KeepStandardAspect=0",
						"HDREnabled=0",
						"Freesync2Enabled=0",
						"UpsampleType=0",
						"FSRQuality=0",
						"AdaptiveQuality=0",
						"Antialiasing=0",
						"Bloom=0",
						"Character=0",
						"CharacterTexture=0",
						"Cloud=0",
						"Clutter=0",
						"CrowdDensity=0",
						"Culling=0",
						"DOF=0",
						"Environment=0",
						"Fog=2",
						"Lighting=0",
						"MotionBlur=0",
						"Rain=0",
						"Reflection=0",
						"Shadow=0",
						"SSAO=2",
						"Terrain=0",
						"Tessellation=0",
						"Texture=0",
						"TextureFiltering=0",
						"Water=0",
						"AntiAliasingMode=0",
						"Multisampling=0",
						"MultiSampleType=0",
						"PostFX=0",
						"GlobalIllumination=0",
						"Anisotropic=0",
						"AnisotropicFiltering=0",
						"OceanQuality=0",
						"LODBlend=0",
						"GodRays=0",
						"UseGodRays=0",
						"DisableHairAniso=0",
						"VolumetricFog=0",
						"UseVolumetricFog=0",
						"ApexParticles=0",
						"PostEffectsQuality=0",
						"ShadowDistance=0",
						"DistanceLODEnabled=0",
						"DistanceLOD=2",
						"SmallObjectsCullDistanceModifier=5",
						"MediumObjectsCullDistanceModifier=5",
						"AdvancedDynamicLighting=0",
						"Layers=0",
						"MaxNPCLODLevel=0",
						"UseDriverWorkaround=0",
						"MinSkipMipTextureSize=128",
						"MipMapsToSkipCharacter=1",
						"[Options]",
						"FOVScale=0.85000",
						""
					});
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x06000471 RID: 1137 RVA: 0x000DEF74 File Offset: 0x000DD174
		private void ACVAL_b()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.assassins_creed_valhalla, FileAttributes.Normal);
					num = 6;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.assassins_creed_valhalla, text);
					num = 7;
				}
				if (num == 4)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Language]",
						"Client=en-US",
						"Text=en-US",
						"Sound=en-US",
						"Subtitles=en-US",
						"[Graphics]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"DisplayIndex=0",
						"WindowPosX=0",
						"WindowPosY=0",
						"FullscreenWidth=" + this.DefaultWidth,
						"FullscreenHeight=" + this.DefaultHeight,
						"WindowedWidth=" + this.DefaultWidth,
						"WindowedHeight=" + this.DefaultHeight,
						"WindowMaximised=0",
						string.Join(Environment.NewLine, array3),
						"WindowMode=3",
						"VSyncMode=0",
						"MaxFPS=0",
						"IsFpsLimitEnabled=0",
						"PixelDensity=0.90000",
						"LastUsedFullscreenMode=0",
						"KeepStandardAspect=0",
						"HDREnabled=0",
						"Freesync2Enabled=0",
						"UpsampleType=0",
						"FSRQuality=0",
						"AdaptiveQuality=0",
						"Antialiasing=0",
						"Bloom=0",
						"Character=0",
						"CharacterTexture=0",
						"Cloud=0",
						"Clutter=0",
						"CrowdDensity=0",
						"Culling=0",
						"DOF=0",
						"Environment=0",
						"Fog=2",
						"Lighting=0",
						"MotionBlur=0",
						"Rain=0",
						"Reflection=0",
						"Shadow=0",
						"SSAO=2",
						"Terrain=0",
						"Tessellation=0",
						"Texture=0",
						"TextureFiltering=0",
						"Water=0",
						"AntiAliasingMode=0",
						"Multisampling=0",
						"MultiSampleType=0",
						"PostFX=0",
						"GlobalIllumination=0",
						"Anisotropic=0",
						"AnisotropicFiltering=0",
						"OceanQuality=0",
						"LODBlend=0",
						"GodRays=0",
						"UseGodRays=0",
						"DisableHairAniso=0",
						"VolumetricFog=0",
						"UseVolumetricFog=0",
						"ApexParticles=0",
						"PostEffectsQuality=0",
						"ShadowDistance=0",
						"DistanceLODEnabled=0",
						"DistanceLOD=2",
						"SmallObjectsCullDistanceModifier=5",
						"MediumObjectsCullDistanceModifier=5",
						"AdvancedDynamicLighting=0",
						"Layers=0",
						"MaxNPCLODLevel=0",
						"UseDriverWorkaround=0",
						"MinSkipMipTextureSize=128",
						"MipMapsToSkipCharacter=1",
						"[Options]",
						"FOVScale=0.85000",
						""
					});
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x06000472 RID: 1138 RVA: 0x000DF50C File Offset: 0x000DD70C
		private void ACVAL_a()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("Adapter")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.assassins_creed_valhalla)
						where s.Contains("RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.assassins_creed_valhalla, FileAttributes.Normal);
					num = 6;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.assassins_creed_valhalla, text);
					num = 7;
				}
				if (num == 4)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Language]",
						"Client=en-US",
						"Text=en-US",
						"Sound=en-US",
						"Subtitles=en-US",
						"[Graphics]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"DisplayIndex=0",
						"WindowPosX=0",
						"WindowPosY=0",
						"FullscreenWidth=" + this.DefaultWidth,
						"FullscreenHeight=" + this.DefaultHeight,
						"WindowedWidth=" + this.DefaultWidth,
						"WindowedHeight=" + this.DefaultHeight,
						"WindowMaximised=0",
						string.Join(Environment.NewLine, array3),
						"WindowMode=3",
						"VSyncMode=0",
						"MaxFPS=0",
						"IsFpsLimitEnabled=0",
						"PixelDensity=1.00000",
						"LastUsedFullscreenMode=0",
						"KeepStandardAspect=0",
						"HDREnabled=0",
						"Freesync2Enabled=0",
						"UpsampleType=0",
						"FSRQuality=0",
						"AdaptiveQuality=0",
						"Antialiasing=0",
						"Bloom=0",
						"Character=0",
						"CharacterTexture=0",
						"Cloud=0",
						"Clutter=0",
						"CrowdDensity=0",
						"Culling=0",
						"DOF=0",
						"Environment=0",
						"Fog=2",
						"Lighting=0",
						"MotionBlur=0",
						"Rain=0",
						"Reflection=0",
						"Shadow=0",
						"SSAO=2",
						"Terrain=0",
						"Tessellation=0",
						"Texture=0",
						"TextureFiltering=0",
						"Water=0",
						"AntiAliasingMode=0",
						"Multisampling=0",
						"MultiSampleType=0",
						"PostFX=0",
						"GlobalIllumination=0",
						"Anisotropic=0",
						"AnisotropicFiltering=0",
						"OceanQuality=0",
						"LODBlend=0",
						"GodRays=0",
						"UseGodRays=0",
						"DisableHairAniso=0",
						"VolumetricFog=0",
						"UseVolumetricFog=0",
						"ApexParticles=0",
						"PostEffectsQuality=0",
						"ShadowDistance=0",
						"DistanceLODEnabled=0",
						"DistanceLOD=2",
						"SmallObjectsCullDistanceModifier=5",
						"MediumObjectsCullDistanceModifier=5",
						"AdvancedDynamicLighting=0",
						"Layers=0",
						"MaxNPCLODLevel=0",
						"UseDriverWorkaround=0",
						"MinSkipMipTextureSize=128",
						"MipMapsToSkipCharacter=1",
						"[Options]",
						"FOVScale=0.85000",
						""
					});
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x06000473 RID: 1139 RVA: 0x000DFAA4 File Offset: 0x000DDCA4
		private void APX_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"\"VideoConfig\"",
						"{",
						"\t\"setting.cl_gib_allow\"\t\t\"0\"",
						"\t\"setting.cl_particle_fallback_base\"\t\t\"3\"",
						"\t\"setting.cl_particle_fallback_multiplier\"\t\t\"2\"",
						"\t\"setting.cl_ragdoll_maxcount\"\t\t\"0\"",
						"\t\"setting.cl_ragdoll_self_collision\"\t\t\"1\"",
						"\t\"setting.mat_forceaniso\"\t\t\"1\"",
						"\t\"setting.mat_mip_linear\"\t\t\"0\"",
						"\t\"setting.stream_memory\"\t\t\"160000\"",
						"\t\"setting.mat_picmip\"\t\t\"1\"",
						"\t\"setting.particle_cpu_level\"\t\t\"0\"",
						"\t\"setting.r_createmodeldecals\"\t\t\"0\"",
						"\t\"setting.r_decals\"\t\t\"0\"",
						"\t\"setting.r_lod_switch_scale\"\t\t\"0.0\"",
						"\t\"setting.shadow_enable\"\t\t\"0\"",
						"\t\"setting.shadow_depth_dimen_min\"\t\t\"0\"",
						"\t\"setting.shadow_depth_upres_factor_max\"\t\t\"0\"",
						"\t\"setting.shadow_maxdynamic\"\t\t\"0\"",
						"\t\"setting.ssao_enabled\"\t\t\"0\"",
						"\t\"setting.ssao_downsample\"\t\t\"3\"",
						"\t\"setting.dvs_enable\"\t\t\"1\"",
						"\t\"setting.dvs_gpuframetime_min\"\t\t\"11047\"",
						"\t\"setting.dvs_gpuframetime_max\"\t\t\"11395\"",
						"\t\"setting.defaultres\"\t\t\"" + this.DefaultWidth + "\"",
						"\t\"setting.defaultresheight\"\t\t\"" + this.DefaultHeight + "\"",
						"\t\"setting.fullscreen\"\t\t\"1\"",
						"\t\"setting.nowindowborder\"\t\t\"0\"",
						"\t\"setting.volumetric_lighting\"\t\t\"0\"",
						"\t\"setting.mat_vsync_mode\"\t\t\"0\"",
						"\t\"setting.mat_backbuffer_count\"\t\t\"1\"",
						"\t\"setting.mat_antialias_mode\"\t\t\"12\"",
						"\t\"setting.csm_enabled\"\t\t\"1\"",
						"\t\"setting.csm_coverage\"\t\t\"1\"",
						"\t\"setting.csm_cascade_res\"\t\t\"0\"",
						"\t\"setting.fadeDistScale\"\t\t\"0.100000\"",
						"\t\"setting.dvs_supersample_enable\"\t\t\"0\"",
						"\t\"setting.gamma\"\t\t\"1.000000\"",
						"\t\"setting.configversion\"\t\t\"7\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000474 RID: 1140 RVA: 0x000DFD60 File Offset: 0x000DDF60
		private void APX_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"\"VideoConfig\"",
						"{",
						"\t\"setting.cl_gib_allow\"\t\t\"0\"",
						"\t\"setting.cl_particle_fallback_base\"\t\t\"3\"",
						"\t\"setting.cl_particle_fallback_multiplier\"\t\t\"2\"",
						"\t\"setting.cl_ragdoll_maxcount\"\t\t\"0\"",
						"\t\"setting.cl_ragdoll_self_collision\"\t\t\"1\"",
						"\t\"setting.mat_forceaniso\"\t\t\"1\"",
						"\t\"setting.mat_mip_linear\"\t\t\"0\"",
						"\t\"setting.stream_memory\"\t\t\"160000\"",
						"\t\"setting.mat_picmip\"\t\t\"1\"",
						"\t\"setting.particle_cpu_level\"\t\t\"0\"",
						"\t\"setting.r_createmodeldecals\"\t\t\"0\"",
						"\t\"setting.r_decals\"\t\t\"0\"",
						"\t\"setting.r_lod_switch_scale\"\t\t\"0.1\"",
						"\t\"setting.shadow_enable\"\t\t\"0\"",
						"\t\"setting.shadow_depth_dimen_min\"\t\t\"0\"",
						"\t\"setting.shadow_depth_upres_factor_max\"\t\t\"0\"",
						"\t\"setting.shadow_maxdynamic\"\t\t\"0\"",
						"\t\"setting.ssao_enabled\"\t\t\"0\"",
						"\t\"setting.ssao_downsample\"\t\t\"3\"",
						"\t\"setting.dvs_enable\"\t\t\"1\"",
						"\t\"setting.dvs_gpuframetime_min\"\t\t\"13195\"",
						"\t\"setting.dvs_gpuframetime_max\"\t\t\"13611\"",
						"\t\"setting.defaultres\"\t\t\"" + this.DefaultWidth + "\"",
						"\t\"setting.defaultresheight\"\t\t\"" + this.DefaultHeight + "\"",
						"\t\"setting.fullscreen\"\t\t\"1\"",
						"\t\"setting.nowindowborder\"\t\t\"0\"",
						"\t\"setting.volumetric_lighting\"\t\t\"0\"",
						"\t\"setting.mat_vsync_mode\"\t\t\"0\"",
						"\t\"setting.mat_backbuffer_count\"\t\t\"1\"",
						"\t\"setting.mat_antialias_mode\"\t\t\"12\"",
						"\t\"setting.csm_enabled\"\t\t\"1\"",
						"\t\"setting.csm_coverage\"\t\t\"1\"",
						"\t\"setting.csm_cascade_res\"\t\t\"0\"",
						"\t\"setting.fadeDistScale\"\t\t\"0.200000\"",
						"\t\"setting.dvs_supersample_enable\"\t\t\"0\"",
						"\t\"setting.gamma\"\t\t\"1.000000\"",
						"\t\"setting.configversion\"\t\t\"7\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000475 RID: 1141 RVA: 0x000E001C File Offset: 0x000DE21C
		private void APX_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"\"VideoConfig\"",
						"{",
						"\t\"setting.cl_gib_allow\"\t\t\"0\"",
						"\t\"setting.cl_particle_fallback_base\"\t\t\"3\"",
						"\t\"setting.cl_particle_fallback_multiplier\"\t\t\"2\"",
						"\t\"setting.cl_ragdoll_maxcount\"\t\t\"0\"",
						"\t\"setting.cl_ragdoll_self_collision\"\t\t\"1\"",
						"\t\"setting.mat_forceaniso\"\t\t\"1\"",
						"\t\"setting.mat_mip_linear\"\t\t\"0\"",
						"\t\"setting.stream_memory\"\t\t\"160000\"",
						"\t\"setting.mat_picmip\"\t\t\"1\"",
						"\t\"setting.particle_cpu_level\"\t\t\"0\"",
						"\t\"setting.r_createmodeldecals\"\t\t\"0\"",
						"\t\"setting.r_decals\"\t\t\"0\"",
						"\t\"setting.r_lod_switch_scale\"\t\t\"0.3\"",
						"\t\"setting.shadow_enable\"\t\t\"0\"",
						"\t\"setting.shadow_depth_dimen_min\"\t\t\"0\"",
						"\t\"setting.shadow_depth_upres_factor_max\"\t\t\"0\"",
						"\t\"setting.shadow_maxdynamic\"\t\t\"0\"",
						"\t\"setting.ssao_enabled\"\t\t\"0\"",
						"\t\"setting.ssao_downsample\"\t\t\"3\"",
						"\t\"setting.dvs_enable\"\t\t\"1\"",
						"\t\"setting.dvs_gpuframetime_min\"\t\t\"14845\"",
						"\t\"setting.dvs_gpuframetime_max\"\t\t\"15313\"",
						"\t\"setting.defaultres\"\t\t\"" + this.DefaultWidth + "\"",
						"\t\"setting.defaultresheight\"\t\t\"" + this.DefaultHeight + "\"",
						"\t\"setting.fullscreen\"\t\t\"1\"",
						"\t\"setting.nowindowborder\"\t\t\"0\"",
						"\t\"setting.volumetric_lighting\"\t\t\"0\"",
						"\t\"setting.mat_vsync_mode\"\t\t\"0\"",
						"\t\"setting.mat_backbuffer_count\"\t\t\"1\"",
						"\t\"setting.mat_antialias_mode\"\t\t\"12\"",
						"\t\"setting.csm_enabled\"\t\t\"1\"",
						"\t\"setting.csm_coverage\"\t\t\"1\"",
						"\t\"setting.csm_cascade_res\"\t\t\"0\"",
						"\t\"setting.fadeDistScale\"\t\t\"0.400000\"",
						"\t\"setting.dvs_supersample_enable\"\t\t\"0\"",
						"\t\"setting.gamma\"\t\t\"1.000000\"",
						"\t\"setting.configversion\"\t\t\"7\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000476 RID: 1142 RVA: 0x000E02D8 File Offset: 0x000DE4D8
		private void APX_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"\"VideoConfig\"",
						"{",
						"\t\"setting.cl_gib_allow\"\t\t\"0\"",
						"\t\"setting.cl_particle_fallback_base\"\t\t\"3\"",
						"\t\"setting.cl_particle_fallback_multiplier\"\t\t\"2\"",
						"\t\"setting.cl_ragdoll_maxcount\"\t\t\"0\"",
						"\t\"setting.cl_ragdoll_self_collision\"\t\t\"1\"",
						"\t\"setting.mat_forceaniso\"\t\t\"1\"",
						"\t\"setting.mat_mip_linear\"\t\t\"0\"",
						"\t\"setting.stream_memory\"\t\t\"160000\"",
						"\t\"setting.mat_picmip\"\t\t\"1\"",
						"\t\"setting.particle_cpu_level\"\t\t\"0\"",
						"\t\"setting.r_createmodeldecals\"\t\t\"0\"",
						"\t\"setting.r_decals\"\t\t\"0\"",
						"\t\"setting.r_lod_switch_scale\"\t\t\"0.4\"",
						"\t\"setting.shadow_enable\"\t\t\"0\"",
						"\t\"setting.shadow_depth_dimen_min\"\t\t\"0\"",
						"\t\"setting.shadow_depth_upres_factor_max\"\t\t\"0\"",
						"\t\"setting.shadow_maxdynamic\"\t\t\"0\"",
						"\t\"setting.ssao_enabled\"\t\t\"0\"",
						"\t\"setting.ssao_downsample\"\t\t\"3\"",
						"\t\"setting.dvs_enable\"\t\t\"1\"",
						"\t\"setting.dvs_gpuframetime_min\"\t\t\"16965\"",
						"\t\"setting.dvs_gpuframetime_max\"\t\t\"17500\"",
						"\t\"setting.defaultres\"\t\t\"" + this.DefaultWidth + "\"",
						"\t\"setting.defaultresheight\"\t\t\"" + this.DefaultHeight + "\"",
						"\t\"setting.fullscreen\"\t\t\"1\"",
						"\t\"setting.nowindowborder\"\t\t\"0\"",
						"\t\"setting.volumetric_lighting\"\t\t\"0\"",
						"\t\"setting.mat_vsync_mode\"\t\t\"0\"",
						"\t\"setting.mat_backbuffer_count\"\t\t\"1\"",
						"\t\"setting.mat_antialias_mode\"\t\t\"12\"",
						"\t\"setting.csm_enabled\"\t\t\"1\"",
						"\t\"setting.csm_coverage\"\t\t\"1\"",
						"\t\"setting.csm_cascade_res\"\t\t\"0\"",
						"\t\"setting.fadeDistScale\"\t\t\"0.500000\"",
						"\t\"setting.dvs_supersample_enable\"\t\t\"0\"",
						"\t\"setting.gamma\"\t\t\"1.000000\"",
						"\t\"setting.configversion\"\t\t\"7\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000477 RID: 1143 RVA: 0x000E0594 File Offset: 0x000DE794
		private void APX_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"\"VideoConfig\"",
						"{",
						"\t\"setting.cl_gib_allow\"\t\t\"0\"",
						"\t\"setting.cl_particle_fallback_base\"\t\t\"3\"",
						"\t\"setting.cl_particle_fallback_multiplier\"\t\t\"2\"",
						"\t\"setting.cl_ragdoll_maxcount\"\t\t\"0\"",
						"\t\"setting.cl_ragdoll_self_collision\"\t\t\"1\"",
						"\t\"setting.mat_forceaniso\"\t\t\"1\"",
						"\t\"setting.mat_mip_linear\"\t\t\"0\"",
						"\t\"setting.stream_memory\"\t\t\"160000\"",
						"\t\"setting.mat_picmip\"\t\t\"1\"",
						"\t\"setting.particle_cpu_level\"\t\t\"0\"",
						"\t\"setting.r_createmodeldecals\"\t\t\"0\"",
						"\t\"setting.r_decals\"\t\t\"0\"",
						"\t\"setting.r_lod_switch_scale\"\t\t\"0.5\"",
						"\t\"setting.shadow_enable\"\t\t\"0\"",
						"\t\"setting.shadow_depth_dimen_min\"\t\t\"0\"",
						"\t\"setting.shadow_depth_upres_factor_max\"\t\t\"0\"",
						"\t\"setting.shadow_maxdynamic\"\t\t\"0\"",
						"\t\"setting.ssao_enabled\"\t\t\"0\"",
						"\t\"setting.ssao_downsample\"\t\t\"3\"",
						"\t\"setting.dvs_enable\"\t\t\"1\"",
						"\t\"setting.dvs_gpuframetime_min\"\t\t\"19793\"",
						"\t\"setting.dvs_gpuframetime_max\"\t\t\"20417\"",
						"\t\"setting.defaultres\"\t\t\"" + this.DefaultWidth + "\"",
						"\t\"setting.defaultresheight\"\t\t\"" + this.DefaultHeight + "\"",
						"\t\"setting.fullscreen\"\t\t\"1\"",
						"\t\"setting.nowindowborder\"\t\t\"0\"",
						"\t\"setting.volumetric_lighting\"\t\t\"0\"",
						"\t\"setting.mat_vsync_mode\"\t\t\"0\"",
						"\t\"setting.mat_backbuffer_count\"\t\t\"1\"",
						"\t\"setting.mat_antialias_mode\"\t\t\"12\"",
						"\t\"setting.csm_enabled\"\t\t\"1\"",
						"\t\"setting.csm_coverage\"\t\t\"1\"",
						"\t\"setting.csm_cascade_res\"\t\t\"0\"",
						"\t\"setting.fadeDistScale\"\t\t\"0.600000\"",
						"\t\"setting.dvs_supersample_enable\"\t\t\"0\"",
						"\t\"setting.gamma\"\t\t\"1.000000\"",
						"\t\"setting.configversion\"\t\t\"7\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000478 RID: 1144 RVA: 0x000E0850 File Offset: 0x000DEA50
		private void APX_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"\"VideoConfig\"",
						"{",
						"\t\"setting.cl_gib_allow\"\t\t\"0\"",
						"\t\"setting.cl_particle_fallback_base\"\t\t\"3\"",
						"\t\"setting.cl_particle_fallback_multiplier\"\t\t\"2\"",
						"\t\"setting.cl_ragdoll_maxcount\"\t\t\"0\"",
						"\t\"setting.cl_ragdoll_self_collision\"\t\t\"1\"",
						"\t\"setting.mat_forceaniso\"\t\t\"1\"",
						"\t\"setting.mat_mip_linear\"\t\t\"0\"",
						"\t\"setting.stream_memory\"\t\t\"160000\"",
						"\t\"setting.mat_picmip\"\t\t\"1\"",
						"\t\"setting.particle_cpu_level\"\t\t\"0\"",
						"\t\"setting.r_createmodeldecals\"\t\t\"0\"",
						"\t\"setting.r_decals\"\t\t\"0\"",
						"\t\"setting.r_lod_switch_scale\"\t\t\"0.6\"",
						"\t\"setting.shadow_enable\"\t\t\"0\"",
						"\t\"setting.shadow_depth_dimen_min\"\t\t\"0\"",
						"\t\"setting.shadow_depth_upres_factor_max\"\t\t\"0\"",
						"\t\"setting.shadow_maxdynamic\"\t\t\"0\"",
						"\t\"setting.ssao_enabled\"\t\t\"0\"",
						"\t\"setting.ssao_downsample\"\t\t\"3\"",
						"\t\"setting.dvs_enable\"\t\t\"1\"",
						"\t\"setting.dvs_gpuframetime_min\"\t\t\"22619\"",
						"\t\"setting.dvs_gpuframetime_max\"\t\t\"23333\"",
						"\t\"setting.defaultres\"\t\t\"" + this.DefaultWidth + "\"",
						"\t\"setting.defaultresheight\"\t\t\"" + this.DefaultHeight + "\"",
						"\t\"setting.fullscreen\"\t\t\"1\"",
						"\t\"setting.nowindowborder\"\t\t\"0\"",
						"\t\"setting.volumetric_lighting\"\t\t\"0\"",
						"\t\"setting.mat_vsync_mode\"\t\t\"0\"",
						"\t\"setting.mat_backbuffer_count\"\t\t\"1\"",
						"\t\"setting.mat_antialias_mode\"\t\t\"12\"",
						"\t\"setting.csm_enabled\"\t\t\"1\"",
						"\t\"setting.csm_coverage\"\t\t\"1\"",
						"\t\"setting.csm_cascade_res\"\t\t\"0\"",
						"\t\"setting.fadeDistScale\"\t\t\"0.700000\"",
						"\t\"setting.dvs_supersample_enable\"\t\t\"0\"",
						"\t\"setting.gamma\"\t\t\"1.000000\"",
						"\t\"setting.configversion\"\t\t\"7\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000479 RID: 1145 RVA: 0x000E0B0C File Offset: 0x000DED0C
		private void BF1_g()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield1_usercfg, text);
					num = 8;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.battlefield1_profile, text2);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield1_usercfg, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield1_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 3",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 1",
						"GstRender.ColorBlindCustomColorEnemy 189/54/49/255/2.0/0.58297/0.46998/1.0",
						"GstRender.ColorBlindCustomColorNeutral 197/197/197/255/0.0/0.0/0.77300/1.0",
						"GstRender.ColorBlindCustomColorSquad 74/155/44/255/104.0/0.55100/0.39199/1.0",
						"GstRender.ColorBlindCustomColorTeam 64/118/199/255/216.0/0.55/0.51900/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DisplayMappingHdr10PeakLuma 5000.000000",
						"GstRender.Dx12AutoDetect 0",
						"GstRender.Dx12Enabled " + this.graphicsAPIVersion,
						"GstRender.Dx12KillSwitch 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 165.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HighDynamicRange 0",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.400000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.SniperSweetspotDoF 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield1_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x0600047A RID: 1146 RVA: 0x000E11D4 File Offset: 0x000DF3D4
		private void BF1_f()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield1_usercfg, text);
					num = 8;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.battlefield1_profile, text2);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield1_usercfg, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield1_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 3",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 1",
						"GstRender.ColorBlindCustomColorEnemy 189/54/49/255/2.0/0.58297/0.46998/1.0",
						"GstRender.ColorBlindCustomColorNeutral 197/197/197/255/0.0/0.0/0.77300/1.0",
						"GstRender.ColorBlindCustomColorSquad 74/155/44/255/104.0/0.55100/0.39199/1.0",
						"GstRender.ColorBlindCustomColorTeam 64/118/199/255/216.0/0.55/0.51900/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DisplayMappingHdr10PeakLuma 5000.000000",
						"GstRender.Dx12AutoDetect 0",
						"GstRender.Dx12Enabled " + this.graphicsAPIVersion,
						"GstRender.Dx12KillSwitch 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 165.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HighDynamicRange 0",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.500000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.SniperSweetspotDoF 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield1_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x0600047B RID: 1147 RVA: 0x000E189C File Offset: 0x000DFA9C
		private void BF1_d()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield1_usercfg, text);
					num = 8;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.battlefield1_profile, text2);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield1_usercfg, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield1_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 3",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 1",
						"GstRender.ColorBlindCustomColorEnemy 189/54/49/255/2.0/0.58297/0.46998/1.0",
						"GstRender.ColorBlindCustomColorNeutral 197/197/197/255/0.0/0.0/0.77300/1.0",
						"GstRender.ColorBlindCustomColorSquad 74/155/44/255/104.0/0.55100/0.39199/1.0",
						"GstRender.ColorBlindCustomColorTeam 64/118/199/255/216.0/0.55/0.51900/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DisplayMappingHdr10PeakLuma 5000.000000",
						"GstRender.Dx12AutoDetect 0",
						"GstRender.Dx12Enabled " + this.graphicsAPIVersion,
						"GstRender.Dx12KillSwitch 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 165.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HighDynamicRange 0",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.700000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.SniperSweetspotDoF 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield1_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x0600047C RID: 1148 RVA: 0x000E1F64 File Offset: 0x000E0164
		private void BF1_c()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield1_usercfg, text);
					num = 8;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.battlefield1_profile, text2);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield1_usercfg, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield1_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 3",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 1",
						"GstRender.ColorBlindCustomColorEnemy 189/54/49/255/2.0/0.58297/0.46998/1.0",
						"GstRender.ColorBlindCustomColorNeutral 197/197/197/255/0.0/0.0/0.77300/1.0",
						"GstRender.ColorBlindCustomColorSquad 74/155/44/255/104.0/0.55100/0.39199/1.0",
						"GstRender.ColorBlindCustomColorTeam 64/118/199/255/216.0/0.55/0.51900/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DisplayMappingHdr10PeakLuma 5000.000000",
						"GstRender.Dx12AutoDetect 0",
						"GstRender.Dx12Enabled " + this.graphicsAPIVersion,
						"GstRender.Dx12KillSwitch 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 165.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HighDynamicRange 0",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.800000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.SniperSweetspotDoF 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield1_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x0600047D RID: 1149 RVA: 0x000E262C File Offset: 0x000E082C
		private void BF1_b()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield1_usercfg, text);
					num = 8;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.battlefield1_profile, text2);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield1_usercfg, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield1_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 3",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 1",
						"GstRender.ColorBlindCustomColorEnemy 189/54/49/255/2.0/0.58297/0.46998/1.0",
						"GstRender.ColorBlindCustomColorNeutral 197/197/197/255/0.0/0.0/0.77300/1.0",
						"GstRender.ColorBlindCustomColorSquad 74/155/44/255/104.0/0.55100/0.39199/1.0",
						"GstRender.ColorBlindCustomColorTeam 64/118/199/255/216.0/0.55/0.51900/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DisplayMappingHdr10PeakLuma 5000.000000",
						"GstRender.Dx12AutoDetect 0",
						"GstRender.Dx12Enabled " + this.graphicsAPIVersion,
						"GstRender.Dx12KillSwitch 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 165.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HighDynamicRange 0",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.850000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.SniperSweetspotDoF 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield1_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x0600047E RID: 1150 RVA: 0x000E2CF4 File Offset: 0x000E0EF4
		private void BF1_a()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield1_usercfg, text);
					num = 8;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.battlefield1_profile, text2);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield1_usercfg, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield1_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 3",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 1",
						"GstRender.ColorBlindCustomColorEnemy 189/54/49/255/2.0/0.58297/0.46998/1.0",
						"GstRender.ColorBlindCustomColorNeutral 197/197/197/255/0.0/0.0/0.77300/1.0",
						"GstRender.ColorBlindCustomColorSquad 74/155/44/255/104.0/0.55100/0.39199/1.0",
						"GstRender.ColorBlindCustomColorTeam 64/118/199/255/216.0/0.55/0.51900/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DisplayMappingHdr10PeakLuma 5000.000000",
						"GstRender.Dx12AutoDetect 0",
						"GstRender.Dx12Enabled " + this.graphicsAPIVersion,
						"GstRender.Dx12KillSwitch 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 165.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HighDynamicRange 0",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.900000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.SniperSweetspotDoF 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield1_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x0600047F RID: 1151 RVA: 0x000E33BC File Offset: 0x000E15BC
		private void BF4_g()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield4_profile, text);
					num = 8;
				}
				if (num == 8)
				{
					string text2;
					File.WriteAllText(this.battlefield4_usercfg, text2);
					num = 9;
				}
				if (num == 6)
				{
					File.SetAttributes(this.battlefield4_usercfg, FileAttributes.Normal);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield4_profile, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 1",
						"GstRender.FieldOfViewVehicle 55.000000",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 60.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HUDScale 0.500000",
						"GstRender.LightingQuality 0",
						"GstRender.MantleEnabled 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled  0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.400000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						string.Join(Environment.NewLine, array2),
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefield4_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield4_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x06000480 RID: 1152 RVA: 0x000E3A04 File Offset: 0x000E1C04
		private void BF4_f()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield4_profile, text);
					num = 8;
				}
				if (num == 8)
				{
					string text2;
					File.WriteAllText(this.battlefield4_usercfg, text2);
					num = 9;
				}
				if (num == 6)
				{
					File.SetAttributes(this.battlefield4_usercfg, FileAttributes.Normal);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield4_profile, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 1",
						"GstRender.FieldOfViewVehicle 55.000000",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 60.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HUDScale 0.500000",
						"GstRender.LightingQuality 0",
						"GstRender.MantleEnabled 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled  0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.500000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						string.Join(Environment.NewLine, array2),
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefield4_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield4_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x06000481 RID: 1153 RVA: 0x000E404C File Offset: 0x000E224C
		private void BF4_d()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield4_profile, text);
					num = 8;
				}
				if (num == 8)
				{
					string text2;
					File.WriteAllText(this.battlefield4_usercfg, text2);
					num = 9;
				}
				if (num == 6)
				{
					File.SetAttributes(this.battlefield4_usercfg, FileAttributes.Normal);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield4_profile, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 1",
						"GstRender.FieldOfViewVehicle 55.000000",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 60.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HUDScale 0.500000",
						"GstRender.LightingQuality 0",
						"GstRender.MantleEnabled 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled  0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.700000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						string.Join(Environment.NewLine, array2),
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefield4_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield4_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x06000482 RID: 1154 RVA: 0x000E4694 File Offset: 0x000E2894
		private void BF4_c()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield4_profile, text);
					num = 8;
				}
				if (num == 8)
				{
					string text2;
					File.WriteAllText(this.battlefield4_usercfg, text2);
					num = 9;
				}
				if (num == 6)
				{
					File.SetAttributes(this.battlefield4_usercfg, FileAttributes.Normal);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield4_profile, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 1",
						"GstRender.FieldOfViewVehicle 55.000000",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 60.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HUDScale 0.500000",
						"GstRender.LightingQuality 0",
						"GstRender.MantleEnabled 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled  0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.800000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						string.Join(Environment.NewLine, array2),
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefield4_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield4_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x06000483 RID: 1155 RVA: 0x000E4CDC File Offset: 0x000E2EDC
		private void BF4_b()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield4_profile, text);
					num = 8;
				}
				if (num == 8)
				{
					string text2;
					File.WriteAllText(this.battlefield4_usercfg, text2);
					num = 9;
				}
				if (num == 6)
				{
					File.SetAttributes(this.battlefield4_usercfg, FileAttributes.Normal);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield4_profile, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 1",
						"GstRender.FieldOfViewVehicle 55.000000",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 60.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HUDScale 0.500000",
						"GstRender.LightingQuality 0",
						"GstRender.MantleEnabled 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled  0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.850000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						string.Join(Environment.NewLine, array2),
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefield4_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield4_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x06000484 RID: 1156 RVA: 0x000E5324 File Offset: 0x000E3524
		private void BF4_a()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield4_profile, text);
					num = 8;
				}
				if (num == 8)
				{
					string text2;
					File.WriteAllText(this.battlefield4_usercfg, text2);
					num = 9;
				}
				if (num == 6)
				{
					File.SetAttributes(this.battlefield4_usercfg, FileAttributes.Normal);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield4_profile, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 1",
						"GstRender.FieldOfViewVehicle 55.000000",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 60.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HUDScale 0.500000",
						"GstRender.LightingQuality 0",
						"GstRender.MantleEnabled 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled  0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.900000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						string.Join(Environment.NewLine, array2),
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefield4_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield4_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x06000485 RID: 1157 RVA: 0x000E596C File Offset: 0x000E3B6C
		private void BF5_g()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield5_usercfg, text);
					num = 8;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.battlefield5_profile, text2);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield5_usercfg, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield5_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 1",
						"GstRender.ColorBlindCustomColorEnemy 190/55/50/255/2.0/0.583/0.470/1.0",
						"GstRender.ColorBlindCustomColorNeutral 77/77/77/255/0/0.0/0.30/1.0",
						"GstRender.ColorBlindCustomColorSquad 75/155/45/255/104.0/0.551/0.392/1.0",
						"GstRender.ColorBlindCustomColorSquadMember1 176/44/207/255/288.6.0/0.65/0.49/1.0",
						"GstRender.ColorBlindCustomColorSquadMember2 20/142/216/255/202.65/0.83/0.46/1.0",
						"GstRender.ColorBlindCustomColorSquadMember3 95/228/54/255/105.86/0.76/0.55/1.0",
						"GstRender.ColorBlindCustomColorSquadMember4 219/143/52/255/32.7/0.7/0.53/1.0",
						"GstRender.ColorBlindCustomColorSquadMember5 132/100/159/255/273/0.7/0.37/0.62",
						"GstRender.ColorBlindCustomColorTeam 65/120/200/255/216/0.55/0.519/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DLSSEnabled 0",
						"GstRender.DisplayMappingHdr10PeakLuma 1000.000000",
						"GstRender.Dx12AutoDetect 0",
						"GstRender.Dx12Enabled " + this.graphicsAPIVersion,
						"GstRender.Dx12KillSwitch 0",
						"GstRender.DxREnabled 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 165.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.FutureFrameRendering 0",
						"GstRender.HighDynamicRange 0",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OptionHudBackgroundOpacity 0.500000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.RaytraceReflectionQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.400000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.SignificanceQuality 0",
						"GstRender.SpectatorChromaticAberration 0",
						"GstRender.SpectatorFilmGrain 0",
						"GstRender.SpectatorLensDistortion 0",
						"GstRender.SpectatorMotionBlur 0.000000",
						"GstRender.SpectatorResolutionScale 0.400000",
						"GstRender.SpectatorVignette 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.Vignette 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						"GstRender.uiUpscaling 1",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield5_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000486 RID: 1158 RVA: 0x000E610C File Offset: 0x000E430C
		private void BF5_f()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield5_usercfg, text);
					num = 8;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.battlefield5_profile, text2);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield5_usercfg, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield5_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 1",
						"GstRender.ColorBlindCustomColorEnemy 190/55/50/255/2.0/0.583/0.470/1.0",
						"GstRender.ColorBlindCustomColorNeutral 77/77/77/255/0/0.0/0.30/1.0",
						"GstRender.ColorBlindCustomColorSquad 75/155/45/255/104.0/0.551/0.392/1.0",
						"GstRender.ColorBlindCustomColorSquadMember1 176/44/207/255/288.6.0/0.65/0.49/1.0",
						"GstRender.ColorBlindCustomColorSquadMember2 20/142/216/255/202.65/0.83/0.46/1.0",
						"GstRender.ColorBlindCustomColorSquadMember3 95/228/54/255/105.86/0.76/0.55/1.0",
						"GstRender.ColorBlindCustomColorSquadMember4 219/143/52/255/32.7/0.7/0.53/1.0",
						"GstRender.ColorBlindCustomColorSquadMember5 132/100/159/255/273/0.7/0.37/0.62",
						"GstRender.ColorBlindCustomColorTeam 65/120/200/255/216/0.55/0.519/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DLSSEnabled 0",
						"GstRender.DisplayMappingHdr10PeakLuma 1000.000000",
						"GstRender.Dx12AutoDetect 0",
						"GstRender.Dx12Enabled " + this.graphicsAPIVersion,
						"GstRender.Dx12KillSwitch 0",
						"GstRender.DxREnabled 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 165.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.FutureFrameRendering 0",
						"GstRender.HighDynamicRange 0",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OptionHudBackgroundOpacity 0.500000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.RaytraceReflectionQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.500000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.SignificanceQuality 0",
						"GstRender.SpectatorChromaticAberration 0",
						"GstRender.SpectatorFilmGrain 0",
						"GstRender.SpectatorLensDistortion 0",
						"GstRender.SpectatorMotionBlur 0.000000",
						"GstRender.SpectatorResolutionScale 0.500000",
						"GstRender.SpectatorVignette 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.Vignette 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						"GstRender.uiUpscaling 1",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield5_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000487 RID: 1159 RVA: 0x000E68AC File Offset: 0x000E4AAC
		private void BF5_d()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield5_usercfg, text);
					num = 8;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.battlefield5_profile, text2);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield5_usercfg, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield5_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 1",
						"GstRender.ColorBlindCustomColorEnemy 190/55/50/255/2.0/0.583/0.470/1.0",
						"GstRender.ColorBlindCustomColorNeutral 77/77/77/255/0/0.0/0.30/1.0",
						"GstRender.ColorBlindCustomColorSquad 75/155/45/255/104.0/0.551/0.392/1.0",
						"GstRender.ColorBlindCustomColorSquadMember1 176/44/207/255/288.6.0/0.65/0.49/1.0",
						"GstRender.ColorBlindCustomColorSquadMember2 20/142/216/255/202.65/0.83/0.46/1.0",
						"GstRender.ColorBlindCustomColorSquadMember3 95/228/54/255/105.86/0.76/0.55/1.0",
						"GstRender.ColorBlindCustomColorSquadMember4 219/143/52/255/32.7/0.7/0.53/1.0",
						"GstRender.ColorBlindCustomColorSquadMember5 132/100/159/255/273/0.7/0.37/0.62",
						"GstRender.ColorBlindCustomColorTeam 65/120/200/255/216/0.55/0.519/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DLSSEnabled 0",
						"GstRender.DisplayMappingHdr10PeakLuma 1000.000000",
						"GstRender.Dx12AutoDetect 0",
						"GstRender.Dx12Enabled " + this.graphicsAPIVersion,
						"GstRender.Dx12KillSwitch 0",
						"GstRender.DxREnabled 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 165.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.FutureFrameRendering 0",
						"GstRender.HighDynamicRange 0",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OptionHudBackgroundOpacity 0.500000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.RaytraceReflectionQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.700000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.SignificanceQuality 0",
						"GstRender.SpectatorChromaticAberration 0",
						"GstRender.SpectatorFilmGrain 0",
						"GstRender.SpectatorLensDistortion 0",
						"GstRender.SpectatorMotionBlur 0.000000",
						"GstRender.SpectatorResolutionScale 0.700000",
						"GstRender.SpectatorVignette 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.Vignette 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						"GstRender.uiUpscaling 1",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield5_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000488 RID: 1160 RVA: 0x000E704C File Offset: 0x000E524C
		private void BF5_c()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield5_usercfg, text);
					num = 8;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.battlefield5_profile, text2);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield5_usercfg, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield5_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 1",
						"GstRender.ColorBlindCustomColorEnemy 190/55/50/255/2.0/0.583/0.470/1.0",
						"GstRender.ColorBlindCustomColorNeutral 77/77/77/255/0/0.0/0.30/1.0",
						"GstRender.ColorBlindCustomColorSquad 75/155/45/255/104.0/0.551/0.392/1.0",
						"GstRender.ColorBlindCustomColorSquadMember1 176/44/207/255/288.6.0/0.65/0.49/1.0",
						"GstRender.ColorBlindCustomColorSquadMember2 20/142/216/255/202.65/0.83/0.46/1.0",
						"GstRender.ColorBlindCustomColorSquadMember3 95/228/54/255/105.86/0.76/0.55/1.0",
						"GstRender.ColorBlindCustomColorSquadMember4 219/143/52/255/32.7/0.7/0.53/1.0",
						"GstRender.ColorBlindCustomColorSquadMember5 132/100/159/255/273/0.7/0.37/0.62",
						"GstRender.ColorBlindCustomColorTeam 65/120/200/255/216/0.55/0.519/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DLSSEnabled 0",
						"GstRender.DisplayMappingHdr10PeakLuma 1000.000000",
						"GstRender.Dx12AutoDetect 0",
						"GstRender.Dx12Enabled " + this.graphicsAPIVersion,
						"GstRender.Dx12KillSwitch 0",
						"GstRender.DxREnabled 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 165.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.FutureFrameRendering 0",
						"GstRender.HighDynamicRange 0",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OptionHudBackgroundOpacity 0.500000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.RaytraceReflectionQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.800000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.SignificanceQuality 0",
						"GstRender.SpectatorChromaticAberration 0",
						"GstRender.SpectatorFilmGrain 0",
						"GstRender.SpectatorLensDistortion 0",
						"GstRender.SpectatorMotionBlur 0.000000",
						"GstRender.SpectatorResolutionScale 0.800000",
						"GstRender.SpectatorVignette 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.Vignette 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						"GstRender.uiUpscaling 1",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield5_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000489 RID: 1161 RVA: 0x000E77EC File Offset: 0x000E59EC
		private void BF5_b()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield5_usercfg, text);
					num = 8;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.battlefield5_profile, text2);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield5_usercfg, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield5_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 1",
						"GstRender.ColorBlindCustomColorEnemy 190/55/50/255/2.0/0.583/0.470/1.0",
						"GstRender.ColorBlindCustomColorNeutral 77/77/77/255/0/0.0/0.30/1.0",
						"GstRender.ColorBlindCustomColorSquad 75/155/45/255/104.0/0.551/0.392/1.0",
						"GstRender.ColorBlindCustomColorSquadMember1 176/44/207/255/288.6.0/0.65/0.49/1.0",
						"GstRender.ColorBlindCustomColorSquadMember2 20/142/216/255/202.65/0.83/0.46/1.0",
						"GstRender.ColorBlindCustomColorSquadMember3 95/228/54/255/105.86/0.76/0.55/1.0",
						"GstRender.ColorBlindCustomColorSquadMember4 219/143/52/255/32.7/0.7/0.53/1.0",
						"GstRender.ColorBlindCustomColorSquadMember5 132/100/159/255/273/0.7/0.37/0.62",
						"GstRender.ColorBlindCustomColorTeam 65/120/200/255/216/0.55/0.519/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DLSSEnabled 0",
						"GstRender.DisplayMappingHdr10PeakLuma 1000.000000",
						"GstRender.Dx12AutoDetect 0",
						"GstRender.Dx12Enabled " + this.graphicsAPIVersion,
						"GstRender.Dx12KillSwitch 0",
						"GstRender.DxREnabled 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 165.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.FutureFrameRendering 0",
						"GstRender.HighDynamicRange 0",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OptionHudBackgroundOpacity 0.500000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.RaytraceReflectionQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.850000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.SignificanceQuality 0",
						"GstRender.SpectatorChromaticAberration 0",
						"GstRender.SpectatorFilmGrain 0",
						"GstRender.SpectatorLensDistortion 0",
						"GstRender.SpectatorMotionBlur 0.000000",
						"GstRender.SpectatorResolutionScale 0.850000",
						"GstRender.SpectatorVignette 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.Vignette 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						"GstRender.uiUpscaling 1",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield5_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x0600048A RID: 1162 RVA: 0x000E7F8C File Offset: 0x000E618C
		private void BF5_a()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefield5_usercfg, text);
					num = 8;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.battlefield5_profile, text2);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefield5_usercfg, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield5_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 1",
						"GstRender.ColorBlindCustomColorEnemy 190/55/50/255/2.0/0.583/0.470/1.0",
						"GstRender.ColorBlindCustomColorNeutral 77/77/77/255/0/0.0/0.30/1.0",
						"GstRender.ColorBlindCustomColorSquad 75/155/45/255/104.0/0.551/0.392/1.0",
						"GstRender.ColorBlindCustomColorSquadMember1 176/44/207/255/288.6.0/0.65/0.49/1.0",
						"GstRender.ColorBlindCustomColorSquadMember2 20/142/216/255/202.65/0.83/0.46/1.0",
						"GstRender.ColorBlindCustomColorSquadMember3 95/228/54/255/105.86/0.76/0.55/1.0",
						"GstRender.ColorBlindCustomColorSquadMember4 219/143/52/255/32.7/0.7/0.53/1.0",
						"GstRender.ColorBlindCustomColorSquadMember5 132/100/159/255/273/0.7/0.37/0.62",
						"GstRender.ColorBlindCustomColorTeam 65/120/200/255/216/0.55/0.519/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DLSSEnabled 0",
						"GstRender.DisplayMappingHdr10PeakLuma 1000.000000",
						"GstRender.Dx12AutoDetect 0",
						"GstRender.Dx12Enabled " + this.graphicsAPIVersion,
						"GstRender.Dx12KillSwitch 0",
						"GstRender.DxREnabled 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 165.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.FutureFrameRendering 0",
						"GstRender.HighDynamicRange 0",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OptionHudBackgroundOpacity 0.500000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.RaytraceReflectionQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.900000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.SignificanceQuality 0",
						"GstRender.SpectatorChromaticAberration 0",
						"GstRender.SpectatorFilmGrain 0",
						"GstRender.SpectatorLensDistortion 0",
						"GstRender.SpectatorMotionBlur 0.000000",
						"GstRender.SpectatorResolutionScale 0.850000",
						"GstRender.SpectatorVignette 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.Vignette 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						"GstRender.uiUpscaling 1",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield5_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x0600048B RID: 1163 RVA: 0x000E872C File Offset: 0x000E692C
		private void BFHL_g()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefieldhl_profile, text);
					num = 8;
				}
				if (num == 8)
				{
					string text2;
					File.WriteAllText(this.battlefieldhl_usercfg, text2);
					num = 9;
				}
				if (num == 6)
				{
					File.SetAttributes(this.battlefieldhl_usercfg, FileAttributes.Normal);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefieldhl_profile, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 1",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfView 65.000000",
						"GstRender.FieldOfViewScaleADS 1",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 60.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HUDScale 0.500000",
						"GstRender.LightingQuality 0",
						"GstRender.MantleEnabled 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled  0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.400000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						string.Join(Environment.NewLine, array2),
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefieldhl_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefieldhl_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x0600048C RID: 1164 RVA: 0x000E8D68 File Offset: 0x000E6F68
		private void BFHL_f()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefieldhl_profile, text);
					num = 8;
				}
				if (num == 8)
				{
					string text2;
					File.WriteAllText(this.battlefieldhl_usercfg, text2);
					num = 9;
				}
				if (num == 6)
				{
					File.SetAttributes(this.battlefieldhl_usercfg, FileAttributes.Normal);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefieldhl_profile, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 1",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfView 65.000000",
						"GstRender.FieldOfViewScaleADS 1",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 60.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HUDScale 0.500000",
						"GstRender.LightingQuality 0",
						"GstRender.MantleEnabled 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled  0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.500000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						string.Join(Environment.NewLine, array2),
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefieldhl_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefieldhl_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x0600048D RID: 1165 RVA: 0x000E93A4 File Offset: 0x000E75A4
		private void BFHL_d()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefieldhl_profile, text);
					num = 8;
				}
				if (num == 8)
				{
					string text2;
					File.WriteAllText(this.battlefieldhl_usercfg, text2);
					num = 9;
				}
				if (num == 6)
				{
					File.SetAttributes(this.battlefieldhl_usercfg, FileAttributes.Normal);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefieldhl_profile, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 1",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfView 65.000000",
						"GstRender.FieldOfViewScaleADS 1",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 60.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HUDScale 0.500000",
						"GstRender.LightingQuality 0",
						"GstRender.MantleEnabled 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled  0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.700000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						string.Join(Environment.NewLine, array2),
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefieldhl_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefieldhl_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x0600048E RID: 1166 RVA: 0x000E99E0 File Offset: 0x000E7BE0
		private void BFHL_c()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefieldhl_profile, text);
					num = 8;
				}
				if (num == 8)
				{
					string text2;
					File.WriteAllText(this.battlefieldhl_usercfg, text2);
					num = 9;
				}
				if (num == 6)
				{
					File.SetAttributes(this.battlefieldhl_usercfg, FileAttributes.Normal);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefieldhl_profile, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 1",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfView 65.000000",
						"GstRender.FieldOfViewScaleADS 1",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 60.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HUDScale 0.500000",
						"GstRender.LightingQuality 0",
						"GstRender.MantleEnabled 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled  0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.800000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						string.Join(Environment.NewLine, array2),
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefieldhl_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefieldhl_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x0600048F RID: 1167 RVA: 0x000EA01C File Offset: 0x000E821C
		private void BFHL_b()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefieldhl_profile, text);
					num = 8;
				}
				if (num == 8)
				{
					string text2;
					File.WriteAllText(this.battlefieldhl_usercfg, text2);
					num = 9;
				}
				if (num == 6)
				{
					File.SetAttributes(this.battlefieldhl_usercfg, FileAttributes.Normal);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefieldhl_profile, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 1",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfView 65.000000",
						"GstRender.FieldOfViewScaleADS 1",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 60.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HUDScale 0.500000",
						"GstRender.LightingQuality 0",
						"GstRender.MantleEnabled 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled  0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.850000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						string.Join(Environment.NewLine, array2),
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefieldhl_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefieldhl_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x06000490 RID: 1168 RVA: 0x000EA658 File Offset: 0x000E8858
		private void BFHL_a()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					string text;
					File.WriteAllText(this.battlefieldhl_profile, text);
					num = 8;
				}
				if (num == 8)
				{
					string text2;
					File.WriteAllText(this.battlefieldhl_usercfg, text2);
					num = 9;
				}
				if (num == 6)
				{
					File.SetAttributes(this.battlefieldhl_usercfg, FileAttributes.Normal);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.battlefieldhl_profile, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 1",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfView 65.000000",
						"GstRender.FieldOfViewScaleADS 1",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenRefreshRate 60.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.HUDScale 0.500000",
						"GstRender.LightingQuality 0",
						"GstRender.MantleEnabled 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled  0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0",
						"GstRender.ResolutionScale 0.900000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 0.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.WeaponDOF 0",
						string.Join(Environment.NewLine, array2),
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefieldhl_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefieldhl_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x06000491 RID: 1169 RVA: 0x000EAC94 File Offset: 0x000E8E94
		private void BF2042_g()
		{
			int num = 0;
			do
			{
				if (num == 5)
				{
					string text;
					File.WriteAllText(this.battlefield2042_profile, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield2042_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 2",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 0",
						"GstRender.ColorBlindCustomColorEnemy 190/55/50/255/2.0/0.583/0.470/1.0",
						"GstRender.ColorBlindCustomColorNeutral 77/77/77/255/0/0.0/0.30/1.0",
						"GstRender.ColorBlindCustomColorSquad 75/155/45/255/104.0/0.551/0.392/1.0",
						"GstRender.ColorBlindCustomColorSquadMember1 176/44/207/255/288.6.0/0.65/0.49/1.0",
						"GstRender.ColorBlindCustomColorSquadMember2 20/142/216/255/202.65/0.83/0.46/1.0",
						"GstRender.ColorBlindCustomColorSquadMember3 95/228/54/255/105.86/0.76/0.55/1.0",
						"GstRender.ColorBlindCustomColorSquadMember4 219/143/52/255/32.7/0.7/0.53/1.0",
						"GstRender.ColorBlindCustomColorSquadMember5 132/100/159/255/273/0.7/0.37/0.62",
						"GstRender.ColorBlindCustomColorTeam 65/120/200/255/216/0.55/0.519/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CrosshairThickness 1",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DLSSEnabled 0",
						"GstRender.DRSEnabled 1",
						"GstRender.DRSRefreshRateTarget 2",
						"GstRender.DamageIndicatorSoldierThickness 2",
						"GstRender.DamageIndicatorVehicleThickness 2",
						"GstRender.DisplayMappingHdr10PeakLuma 1000.000000",
						"GstRender.Dx12Enabled 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 1",
						"GstRender.FullscreenRefreshRate 0.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.FutureFrameRendering 0",
						"GstRender.HUD-Enemy -10604289",
						"GstRender.HUD-Friendly 654303231",
						"GstRender.HUD-Neutral -1059004161",
						"GstRender.HUD-Squad 16711935",
						"GstRender.HighDynamicRange 1",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.NvidiaDLSSMode 0",
						"GstRender.NvidiaReflex 0",
						"GstRender.NvidiaReflexFlashIndicator 0",
						"GstRender.OptionHudBackgroundOpacity 0.500000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.RTAO 0",
						"GstRender.RaytracingAmbientOcclusion 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0.000000",
						"GstRender.ResolutionScale 0.400000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 1.000000",
						"GstRender.ShadowQuality 1",
						"GstRender.SignificanceQuality 0",
						"GstRender.SoldierCompassVisibility 1",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.SubtitleBackgroundAlpha 0.800000",
						"GstRender.SubtitleUseOutline 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.Vignette 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						"GstRender.uiUpscaling 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefield2042_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield2042_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x06000492 RID: 1170 RVA: 0x000EB204 File Offset: 0x000E9404
		private void BF2042_f()
		{
			int num = 0;
			do
			{
				if (num == 5)
				{
					string text;
					File.WriteAllText(this.battlefield2042_profile, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield2042_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 2",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 0",
						"GstRender.ColorBlindCustomColorEnemy 190/55/50/255/2.0/0.583/0.470/1.0",
						"GstRender.ColorBlindCustomColorNeutral 77/77/77/255/0/0.0/0.30/1.0",
						"GstRender.ColorBlindCustomColorSquad 75/155/45/255/104.0/0.551/0.392/1.0",
						"GstRender.ColorBlindCustomColorSquadMember1 176/44/207/255/288.6.0/0.65/0.49/1.0",
						"GstRender.ColorBlindCustomColorSquadMember2 20/142/216/255/202.65/0.83/0.46/1.0",
						"GstRender.ColorBlindCustomColorSquadMember3 95/228/54/255/105.86/0.76/0.55/1.0",
						"GstRender.ColorBlindCustomColorSquadMember4 219/143/52/255/32.7/0.7/0.53/1.0",
						"GstRender.ColorBlindCustomColorSquadMember5 132/100/159/255/273/0.7/0.37/0.62",
						"GstRender.ColorBlindCustomColorTeam 65/120/200/255/216/0.55/0.519/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CrosshairThickness 1",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DLSSEnabled 0",
						"GstRender.DRSEnabled 1",
						"GstRender.DRSRefreshRateTarget 2",
						"GstRender.DamageIndicatorSoldierThickness 2",
						"GstRender.DamageIndicatorVehicleThickness 2",
						"GstRender.DisplayMappingHdr10PeakLuma 1000.000000",
						"GstRender.Dx12Enabled 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 1",
						"GstRender.FullscreenRefreshRate 0.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.FutureFrameRendering 0",
						"GstRender.HUD-Enemy -10604289",
						"GstRender.HUD-Friendly 654303231",
						"GstRender.HUD-Neutral -1059004161",
						"GstRender.HUD-Squad 16711935",
						"GstRender.HighDynamicRange 1",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.NvidiaDLSSMode 0",
						"GstRender.NvidiaReflex 0",
						"GstRender.NvidiaReflexFlashIndicator 0",
						"GstRender.OptionHudBackgroundOpacity 0.500000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.RTAO 0",
						"GstRender.RaytracingAmbientOcclusion 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0.000000",
						"GstRender.ResolutionScale 0.500000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 1.000000",
						"GstRender.ShadowQuality 1",
						"GstRender.SignificanceQuality 0",
						"GstRender.SoldierCompassVisibility 1",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.SubtitleBackgroundAlpha 0.800000",
						"GstRender.SubtitleUseOutline 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.Vignette 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						"GstRender.uiUpscaling 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefield2042_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield2042_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x06000493 RID: 1171 RVA: 0x000EB774 File Offset: 0x000E9974
		private void BF2042_d()
		{
			int num = 0;
			do
			{
				if (num == 5)
				{
					string text;
					File.WriteAllText(this.battlefield2042_profile, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield2042_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 2",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 0",
						"GstRender.ColorBlindCustomColorEnemy 190/55/50/255/2.0/0.583/0.470/1.0",
						"GstRender.ColorBlindCustomColorNeutral 77/77/77/255/0/0.0/0.30/1.0",
						"GstRender.ColorBlindCustomColorSquad 75/155/45/255/104.0/0.551/0.392/1.0",
						"GstRender.ColorBlindCustomColorSquadMember1 176/44/207/255/288.6.0/0.65/0.49/1.0",
						"GstRender.ColorBlindCustomColorSquadMember2 20/142/216/255/202.65/0.83/0.46/1.0",
						"GstRender.ColorBlindCustomColorSquadMember3 95/228/54/255/105.86/0.76/0.55/1.0",
						"GstRender.ColorBlindCustomColorSquadMember4 219/143/52/255/32.7/0.7/0.53/1.0",
						"GstRender.ColorBlindCustomColorSquadMember5 132/100/159/255/273/0.7/0.37/0.62",
						"GstRender.ColorBlindCustomColorTeam 65/120/200/255/216/0.55/0.519/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CrosshairThickness 1",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DLSSEnabled 0",
						"GstRender.DRSEnabled 1",
						"GstRender.DRSRefreshRateTarget 2",
						"GstRender.DamageIndicatorSoldierThickness 2",
						"GstRender.DamageIndicatorVehicleThickness 2",
						"GstRender.DisplayMappingHdr10PeakLuma 1000.000000",
						"GstRender.Dx12Enabled 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 1",
						"GstRender.FullscreenRefreshRate 0.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.FutureFrameRendering 0",
						"GstRender.HUD-Enemy -10604289",
						"GstRender.HUD-Friendly 654303231",
						"GstRender.HUD-Neutral -1059004161",
						"GstRender.HUD-Squad 16711935",
						"GstRender.HighDynamicRange 1",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.NvidiaDLSSMode 0",
						"GstRender.NvidiaReflex 0",
						"GstRender.NvidiaReflexFlashIndicator 0",
						"GstRender.OptionHudBackgroundOpacity 0.500000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.RTAO 0",
						"GstRender.RaytracingAmbientOcclusion 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0.000000",
						"GstRender.ResolutionScale 0.700000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 1.000000",
						"GstRender.ShadowQuality 1",
						"GstRender.SignificanceQuality 0",
						"GstRender.SoldierCompassVisibility 1",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.SubtitleBackgroundAlpha 0.800000",
						"GstRender.SubtitleUseOutline 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.Vignette 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						"GstRender.uiUpscaling 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefield2042_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield2042_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x06000494 RID: 1172 RVA: 0x000EBCE4 File Offset: 0x000E9EE4
		private void BF2042_c()
		{
			int num = 0;
			do
			{
				if (num == 5)
				{
					string text;
					File.WriteAllText(this.battlefield2042_profile, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield2042_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 2",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 0",
						"GstRender.ColorBlindCustomColorEnemy 190/55/50/255/2.0/0.583/0.470/1.0",
						"GstRender.ColorBlindCustomColorNeutral 77/77/77/255/0/0.0/0.30/1.0",
						"GstRender.ColorBlindCustomColorSquad 75/155/45/255/104.0/0.551/0.392/1.0",
						"GstRender.ColorBlindCustomColorSquadMember1 176/44/207/255/288.6.0/0.65/0.49/1.0",
						"GstRender.ColorBlindCustomColorSquadMember2 20/142/216/255/202.65/0.83/0.46/1.0",
						"GstRender.ColorBlindCustomColorSquadMember3 95/228/54/255/105.86/0.76/0.55/1.0",
						"GstRender.ColorBlindCustomColorSquadMember4 219/143/52/255/32.7/0.7/0.53/1.0",
						"GstRender.ColorBlindCustomColorSquadMember5 132/100/159/255/273/0.7/0.37/0.62",
						"GstRender.ColorBlindCustomColorTeam 65/120/200/255/216/0.55/0.519/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CrosshairThickness 1",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DLSSEnabled 0",
						"GstRender.DRSEnabled 1",
						"GstRender.DRSRefreshRateTarget 1",
						"GstRender.DamageIndicatorSoldierThickness 2",
						"GstRender.DamageIndicatorVehicleThickness 2",
						"GstRender.DisplayMappingHdr10PeakLuma 1000.000000",
						"GstRender.Dx12Enabled 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 1",
						"GstRender.FullscreenRefreshRate 0.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.FutureFrameRendering 0",
						"GstRender.HUD-Enemy -10604289",
						"GstRender.HUD-Friendly 654303231",
						"GstRender.HUD-Neutral -1059004161",
						"GstRender.HUD-Squad 16711935",
						"GstRender.HighDynamicRange 1",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.NvidiaDLSSMode 0",
						"GstRender.NvidiaReflex 0",
						"GstRender.NvidiaReflexFlashIndicator 0",
						"GstRender.OptionHudBackgroundOpacity 0.500000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.RTAO 0",
						"GstRender.RaytracingAmbientOcclusion 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0.000000",
						"GstRender.ResolutionScale 0.800000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 1.000000",
						"GstRender.ShadowQuality 1",
						"GstRender.SignificanceQuality 0",
						"GstRender.SoldierCompassVisibility 1",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.SubtitleBackgroundAlpha 0.800000",
						"GstRender.SubtitleUseOutline 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.Vignette 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						"GstRender.uiUpscaling 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefield2042_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield2042_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x06000495 RID: 1173 RVA: 0x000EC254 File Offset: 0x000EA454
		private void BF2042_b()
		{
			int num = 0;
			do
			{
				if (num == 5)
				{
					string text;
					File.WriteAllText(this.battlefield2042_profile, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield2042_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 2",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 0",
						"GstRender.ColorBlindCustomColorEnemy 190/55/50/255/2.0/0.583/0.470/1.0",
						"GstRender.ColorBlindCustomColorNeutral 77/77/77/255/0/0.0/0.30/1.0",
						"GstRender.ColorBlindCustomColorSquad 75/155/45/255/104.0/0.551/0.392/1.0",
						"GstRender.ColorBlindCustomColorSquadMember1 176/44/207/255/288.6.0/0.65/0.49/1.0",
						"GstRender.ColorBlindCustomColorSquadMember2 20/142/216/255/202.65/0.83/0.46/1.0",
						"GstRender.ColorBlindCustomColorSquadMember3 95/228/54/255/105.86/0.76/0.55/1.0",
						"GstRender.ColorBlindCustomColorSquadMember4 219/143/52/255/32.7/0.7/0.53/1.0",
						"GstRender.ColorBlindCustomColorSquadMember5 132/100/159/255/273/0.7/0.37/0.62",
						"GstRender.ColorBlindCustomColorTeam 65/120/200/255/216/0.55/0.519/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CrosshairThickness 1",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DLSSEnabled 0",
						"GstRender.DRSEnabled 1",
						"GstRender.DRSRefreshRateTarget 1",
						"GstRender.DamageIndicatorSoldierThickness 2",
						"GstRender.DamageIndicatorVehicleThickness 2",
						"GstRender.DisplayMappingHdr10PeakLuma 1000.000000",
						"GstRender.Dx12Enabled 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 1",
						"GstRender.FullscreenRefreshRate 0.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.FutureFrameRendering 0",
						"GstRender.HUD-Enemy -10604289",
						"GstRender.HUD-Friendly 654303231",
						"GstRender.HUD-Neutral -1059004161",
						"GstRender.HUD-Squad 16711935",
						"GstRender.HighDynamicRange 1",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.NvidiaDLSSMode 0",
						"GstRender.NvidiaReflex 0",
						"GstRender.NvidiaReflexFlashIndicator 0",
						"GstRender.OptionHudBackgroundOpacity 0.500000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.RTAO 0",
						"GstRender.RaytracingAmbientOcclusion 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0.000000",
						"GstRender.ResolutionScale 0.800000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 1.000000",
						"GstRender.ShadowQuality 1",
						"GstRender.SignificanceQuality 0",
						"GstRender.SoldierCompassVisibility 1",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.SubtitleBackgroundAlpha 0.800000",
						"GstRender.SubtitleUseOutline 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.Vignette 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						"GstRender.uiUpscaling 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefield2042_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield2042_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x06000496 RID: 1174 RVA: 0x000EC7C4 File Offset: 0x000EA9C4
		private void BF2042_a()
		{
			int num = 0;
			do
			{
				if (num == 5)
				{
					string text;
					File.WriteAllText(this.battlefield2042_profile, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.battlefield2042_profile, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 2",
						"GstRender.AntiAliasingDeferred 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.ChromaticAberration 0",
						"GstRender.ClampGpuMemory 0",
						"GstRender.ColorBlindCustomColorEnemy 190/55/50/255/2.0/0.583/0.470/1.0",
						"GstRender.ColorBlindCustomColorNeutral 77/77/77/255/0/0.0/0.30/1.0",
						"GstRender.ColorBlindCustomColorSquad 75/155/45/255/104.0/0.551/0.392/1.0",
						"GstRender.ColorBlindCustomColorSquadMember1 176/44/207/255/288.6.0/0.65/0.49/1.0",
						"GstRender.ColorBlindCustomColorSquadMember2 20/142/216/255/202.65/0.83/0.46/1.0",
						"GstRender.ColorBlindCustomColorSquadMember3 95/228/54/255/105.86/0.76/0.55/1.0",
						"GstRender.ColorBlindCustomColorSquadMember4 219/143/52/255/32.7/0.7/0.53/1.0",
						"GstRender.ColorBlindCustomColorSquadMember5 132/100/159/255/273/0.7/0.37/0.62",
						"GstRender.ColorBlindCustomColorTeam 65/120/200/255/216/0.55/0.519/1.0",
						"GstRender.ColorBlindMode 0",
						"GstRender.ConsoleAntiAlias 0",
						"GstRender.Contrast 0.500000",
						"GstRender.CrosshairThickness 1",
						"GstRender.CyclicCrashPrevention 0",
						"GstRender.DLSSEnabled 0",
						"GstRender.DRSEnabled 1",
						"GstRender.DRSRefreshRateTarget 0",
						"GstRender.DamageIndicatorSoldierThickness 2",
						"GstRender.DamageIndicatorVehicleThickness 2",
						"GstRender.DisplayMappingHdr10PeakLuma 1000.000000",
						"GstRender.Dx12Enabled 0",
						"GstRender.EffectsQuality 0",
						"GstRender.Enlighten 0",
						"GstRender.FieldOfViewScaleADS 0",
						"GstRender.FieldOfViewVertical 55.000000",
						"GstRender.FieldOfViewVerticalVehicle 55.000000",
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenEnabled 1",
						"GstRender.FullscreenMode 1",
						"GstRender.FullscreenRefreshRate 0.000000",
						"GstRender.FullscreenScreen 0",
						"GstRender.FutureFrameRendering 0",
						"GstRender.HUD-Enemy -10604289",
						"GstRender.HUD-Friendly 654303231",
						"GstRender.HUD-Neutral -1059004161",
						"GstRender.HUD-Squad 16711935",
						"GstRender.HighDynamicRange 1",
						"GstRender.HighDynamicRangeMode 0",
						"GstRender.HighResUIScaleFactor 0.500000",
						"GstRender.LensDistortion 0",
						"GstRender.LightingQuality 0",
						"GstRender.MaxVariableFps 4",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.NvidiaDLSSMode 0",
						"GstRender.NvidiaReflex 0",
						"GstRender.NvidiaReflexFlashIndicator 0",
						"GstRender.OptionHudBackgroundOpacity 0.500000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PostProcessQuality 0",
						"GstRender.RTAO 0",
						"GstRender.RaytracingAmbientOcclusion 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionHertz 0.000000",
						"GstRender.ResolutionScale 0.850000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShaderQuality 1.000000",
						"GstRender.ShadowQuality 1",
						"GstRender.SignificanceQuality 0",
						"GstRender.SoldierCompassVisibility 1",
						"GstRender.StereoConvergence 1.000000",
						"GstRender.Stereoscopy 0",
						"GstRender.SubtitleBackgroundAlpha 0.800000",
						"GstRender.SubtitleUseOutline 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.TransparentShadows 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						"GstRender.Vignette 0",
						"GstRender.WeaponDOF 0",
						"GstRender.WindowBordersEnable 1",
						"GstRender.uiUpscaling 0",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.battlefield2042_profile)
						where s.Contains("GstInput")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.battlefield2042_profile)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x06000497 RID: 1175 RVA: 0x000ECD34 File Offset: 0x000EAF34
		private void CODMW2_g()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					File.SetAttributes(this.cod_mw2_settings, FileAttributes.Normal);
					num = 8;
				}
				if (num == 8)
				{
					string text;
					File.WriteAllText(this.cod_mw2_settings, text);
					num = 9;
				}
				if (num == 6)
				{
					string[] array;
					string[] array2;
					string[] array3;
					string[] array4;
					string[] array5;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"// generated by Infinity Ward, do not modify",
						"unbindall",
						"bind TAB \"+scores\"",
						"bind ESCAPE \"togglemenu\"",
						"bind SPACE \"+gostand\"",
						"bind 1 \"weapnext\"",
						"bind 2 \"weapnext\"",
						"bind 3 \"+actionslot 3\"",
						"bind 4 \"+actionslot 4\"",
						"bind 5 \"+actionslot 2\"",
						"bind ` \"toggleconsole\"",
						"bind A \"+moveleft\"",
						"bind C \"togglecrouch\"",
						"bind D \"+moveright\"",
						"bind E \"+melee\"",
						"bind F \"+activate\"",
						"bind G \"+frag\"",
						"bind N \"+actionslot 1\"",
						"bind Q \"+smoke\"",
						"bind R \"+reload\"",
						"bind S \"+back\"",
						"bind W \"+forward\"",
						"bind ~ \"toggleconsole\"",
						"bind PAUSE \"pause\"",
						"bind CTRL \"toggleprone\"",
						"bind SHIFT \"+breath_sprint\"",
						"bind MOUSE1 \"+attack\"",
						"bind MOUSE2 \"+toggleads_throw\"",
						"bind MOUSE3 \"+frag\"",
						"seta ai_badPathSpam \"0\"",
						"seta ai_corpseCount \"0\"",
						"seta ai_ShowCanshootChecks \"0\"",
						"seta cg_blood \"0\"",
						"seta cg_bloodLimit \"0\"",
						"seta cg_bloodLimitMsec \"330\"",
						"seta cg_brass \"1\"",
						"seta cg_cursorHints \"3\"",
						"seta cg_debugInfoCornerOffset \"0 0\"",
						"seta cg_drawBreathHint \"1\"",
						"seta cg_drawFPS \"Off\"",
						"seta cg_drawFPSLabels \"1\"",
						"seta cg_drawMantleHint \"1\"",
						"seta cg_drawTurretCrosshair \"1\"",
						"seta cg_drawViewpos \"0\"",
						"seta cg_gameBoldMessageWidth \"390\"",
						"seta cg_gameMessageWidth \"500\"",
						"seta cg_hintFadeTime \"100\"",
						"seta cg_hudDamageIconHeight \"64\"",
						"seta cg_hudDamageIconInScope \"0\"",
						"seta cg_hudDamageIconOffset \"128\"",
						"seta cg_hudDamageIconTime \"6000\"",
						"seta cg_hudDamageIconWidth \"128\"",
						"seta cg_hudGrenadeIconEnabledFlash \"0\"",
						"seta cg_hudGrenadeIconInScope \"1\"",
						"seta cg_hudGrenadeIconMaxHeight \"104\"",
						"seta cg_hudGrenadeIconMaxRangeFlash \"500\"",
						"seta cg_hudGrenadeIconMaxRangeFrag \"256\"",
						"seta cg_hudStanceHintPrints \"0\"",
						"seta cg_invalidCmdHintBlinkInterval \"600\"",
						"seta cg_invalidCmdHintDuration \"1800\"",
						"seta cg_laserlight \"1\"",
						"seta cg_mapLocationSelectionCursorSpeed \"0.6\"",
						"seta cg_marks_ents_player_only \"0\"",
						"seta cg_nopredict \"0\"",
						"seta cg_small_dev_string_fontscale \"1\"",
						"seta cg_splatterHitAlpha \"1\"",
						"seta cg_splatterHitFadeInTime \"0.05\"",
						"seta cg_splatterHitFadeOutTime \"0.1\"",
						"seta cg_splatterHitFullInTime \"0\"",
						"seta cg_splatterHitInnerAngle \"15\"",
						"seta cg_splatterHitInnerRadius \"0\"",
						"seta cg_splatterHitOuterAngle \"30\"",
						"seta cg_splatterHitOuterRadius \"0.2\"",
						"seta cg_splatterTrackAlpha \"1\"",
						"seta cg_splatterTrackFadeInTime \"0\"",
						"seta cg_splatterTrackFadeOutTime \"0.5\"",
						"seta cg_splatterTrackFullInTime \"0.3\"",
						"seta cg_splatterTrackInnerAngle \"5\"",
						"seta cg_splatterTrackInnerRadius \"0.4\"",
						"seta cg_splatterTrackOuterAngle \"20\"",
						"seta cg_splatterTrackOuterRadius \"0.6\"",
						"seta cg_sprintMeterDisabledColor \"0.8 0.1 0.1 0.2\"",
						"seta cg_sprintMeterEmptyColor \"0.7 0.5 0.2 0.8\"",
						"seta cg_sprintMeterFullColor \"0.8 0.8 0.8 0.8\"",
						"seta cg_subtitleMinTime \"3\"",
						"seta cg_subtitleWidthStandard \"320\"",
						"seta cg_subtitleWidthWidescreen \"320\"",
						"seta cg_viewZSmoothingMax \"16\"",
						"seta cg_viewZSmoothingMin \"1\"",
						"seta cg_viewZSmoothingTime \"0.1\"",
						"seta cg_waterSheeting_brightness \"0\"",
						"seta cg_waterSheeting_contrast \"1\"",
						"seta cg_waterSheeting_darkTint \"1 1 1\"",
						"seta cg_waterSheeting_desaturation \"0\"",
						"seta cg_waterSheeting_distortionScaleFactor \"0.021961 1 0 0\"",
						"seta cg_waterSheeting_enable \"0\"",
						"seta cg_waterSheeting_fadeDuration \"2\"",
						"seta cg_waterSheeting_lightTint \"0.780261 1 1\"",
						"seta cg_waterSheeting_magnitude \"0.0655388\"",
						"seta cg_waterSheeting_radius \"4.44051\"",
						"seta cg_weaponCycleDelay \"0\"",
						"seta cl_freelook \"1\"",
						"seta cl_maxpackets \"1000\"",
						"seta cl_mouseAccel \"0\"",
						"seta cl_packetdup \"0\"",
						"seta cl_pitchspeed \"140\"",
						"seta cl_yawspeed \"140\"",
						"seta com_recommendedSet \"1\"",
						"seta compassSize \"1\"",
						"seta con_errormessagetime \"8\"",
						"seta con_gameMsgWindow0FadeInTime \"0.25\"",
						"seta con_gameMsgWindow0FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow0Filter \"gamenotify obituary\"",
						"seta con_gameMsgWindow0LineCount \"6\"",
						"seta con_gameMsgWindow0MsgTime \"5\"",
						"seta con_gameMsgWindow0ScrollTime \"0.25\"",
						"seta con_gameMsgWindow0SplitscreenScale \"1\"",
						"seta con_gameMsgWindow1FadeInTime \"0.25\"",
						"seta con_gameMsgWindow1FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow1Filter \"boldgame\"",
						"seta con_gameMsgWindow1LineCount \"6\"",
						"seta con_gameMsgWindow1MsgTime \"8\"",
						"seta con_gameMsgWindow1ScrollTime \"0.25\"",
						"seta con_gameMsgWindow1SplitscreenScale \"1.5\"",
						"seta con_gameMsgWindow2FadeInTime \"0.75\"",
						"seta con_gameMsgWindow2FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow2Filter \"subtitle\"",
						"seta con_gameMsgWindow2LineCount \"7\"",
						"seta con_gameMsgWindow2MsgTime \"5\"",
						"seta con_gameMsgWindow2ScrollTime \"0.25\"",
						"seta con_gameMsgWindow2SplitscreenScale \"1.5\"",
						"seta con_gameMsgWindow3FadeInTime \"0.25\"",
						"seta con_gameMsgWindow3FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow3Filter \"\"",
						"seta con_gameMsgWindow3LineCount \"6\"",
						"seta con_gameMsgWindow3MsgTime \"5\"",
						"seta con_gameMsgWindow3ScrollTime \"0.25\"",
						"seta con_gameMsgWindow3SplitscreenScale \"1.5\"",
						"seta con_inputBoxColor \"0.25 0.25 0.2 1\"",
						"seta con_inputHintBoxColor \"0.4 0.4 0.35 1\"",
						"seta con_matchPrefixOnly \"1\"",
						"seta con_minicon \"0\"",
						"seta con_miniconlines \"5\"",
						"seta con_minicontime \"4\"",
						"seta con_outputBarColor \"1 1 0.95 0.6\"",
						"seta con_outputSliderColor \"0.15 0.15 0.1 0.6\"",
						"seta con_outputWindowColor \"0.35 0.35 0.3 0.75\"",
						"seta con_typewriterColorGlowCheckpoint \"0.6 0.5 0.6 1\"",
						"seta con_typewriterColorGlowCompleted \"0 0.3 0.8 1\"",
						"seta con_typewriterColorGlowFailed \"0.8 0 0 1\"",
						"seta con_typewriterColorGlowUpdated \"0 0.6 0.18 1\"",
						"seta con_typewriterDecayDuration \"700\"",
						"seta con_typewriterDecayStartTime \"6000\"",
						"seta con_typewriterPrintSpeed \"50\"",
						"seta disable_tank_shock_minspec \"0\"",
						"seta dynEnt_active \"1\"",
						"seta fx_marks \"0\"",
						"seta fx_marks_ents \"1\"",
						"seta fx_marks_smodels \"1\"",
						"seta g_deathDelay \"3000\"",
						"seta glass_angular_vel \"5 35\"",
						"seta glass_debug \"0\"",
						"seta glass_edge_angle \"5 10\"",
						"seta glass_fall_delay \"0.2 0.9\"",
						"seta glass_fall_gravity \"800\"",
						"seta glass_fall_ratio \"1.5 3\"",
						"seta glass_fringe_maxcoverage \"0.2\"",
						"seta glass_fringe_maxsize \"150\"",
						"seta glass_fx_chance \"0.25\"",
						"seta glass_hinge_friction \"50\"",
						"seta glass_linear_vel \"200 400\"",
						"seta glass_max_pieces_per_frame \"100\"",
						"seta glass_max_shatter_fx_per_frame \"6\"",
						"seta glass_physics_chance \"0.15\"",
						"seta glass_physics_maxdist \"512\"",
						"seta glass_shard_maxsize \"300\"",
						"seta glass_shattered_scale \"48\"",
						"seta glass_trace_interval \"100\"",
						"seta hud_deathQuoteFadeTime \"1000\"",
						"seta hud_fade_healthbar \"2\"",
						"seta hud_fade_sprint \"1.7\"",
						"seta hud_fadeout_speed \"0.1\"",
						"seta hud_flash_period_offhand \"0.5\"",
						"seta hud_flash_time_offhand \"2\"",
						"seta hud_health_pulserate_critical \"0.5\"",
						"seta hud_health_pulserate_injured \"1\"",
						"seta hud_health_startpulse_critical \"0.33\"",
						"seta hud_health_startpulse_injured \"1\"",
						"seta hud_letterBoxFadeTime \"1000\"",
						"seta in_gpuSync \"1\"",
						"seta in_mouse \"1\"",
						"seta intro \"1\"",
						"seta invasion_minspec \"0\"",
						"seta laserLight \"1\"",
						"seta laserLightWithoutNightvision \"0\"",
						"seta loc_forceEnglish \"0\"",
						"seta loc_language \"0\"",
						"seta m_filter \"0\"",
						"seta m_forward \"0.25\"",
						"seta m_pitch \"0.022\"",
						"seta m_side \"0.25\"",
						"seta m_yaw \"0.022\"",
						"seta min_spec_ai \"0\"",
						"seta monkeytoy \"1\"",
						"seta net_noipx \"0\"",
						"seta net_noudp \"0\"",
						"seta net_socksEnabled \"0\"",
						"seta net_socksPassword \"\"",
						"seta net_socksPort \"1080\"",
						"seta net_socksServer \"\"",
						"seta net_socksUsername \"\"",
						"seta r_aaAlpha \"dither (fast)\"",
						"seta r_aaMaxQuality \"0\"",
						"seta r_aaSamples \"0\"",
						"seta r_altModelLightingUpdate \"1\"",
						"seta r_arcadia_culldist \"0\"",
						"seta r_aspectRatio \"wide 16:9\"",
						"seta r_autopriority \"0\"",
						"seta r_blacklevel \"0\"",
						"seta r_customMode \"\"",
						"seta r_dcburning_culldist \"0\"",
						"seta r_debugLineWidth \"1\"",
						"seta r_depthPrepass \"None\"",
						"seta r_displayRefresh \"60 Hz\"",
						"seta r_distortion \"0\"",
						"seta r_dlightLimit \"0\"",
						"seta r_dof_enable \"0\"",
						"seta r_drawSun \"0\"",
						"seta r_drawWater \"0\"",
						"seta r_fastSkin \"0\"",
						"seta r_fullscreen \"1\"",
						"seta r_gamma \"0.8\"",
						"seta r_glow_allowed \"0\"",
						"seta r_gpuSync2 \"1\"",
						"seta r_gulag_lessdrones \"0\"",
						"seta r_ignorehwgamma \"0\"",
						"seta r_inGameVideo \"1\"",
						"seta r_lodBiasRigid \"0\"",
						"seta r_lodBiasSkinned \"0\"",
						"seta r_lodScaleRigid \"1\"",
						"seta r_lodScaleSkinned \"1\"",
						string.Concat(new string[] { "seta r_mode \"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"seta r_monitor \"0\"",
						"seta r_multiGpu \"0\"",
						"seta r_picmip \"2\"",
						"seta r_picmip_bump \"3\"",
						"seta r_picmip_manual \"1\"",
						"seta r_picmip_spec \"3\"",
						"seta r_picmip_water \"3\"",
						"seta r_polygonOffsetBias \"-1\"",
						"seta r_polygonOffsetScale \"-1\"",
						"seta r_portalBevels \"0.7\"",
						"seta r_preloadShaders \"0\"",
						"seta r_rendererPreference \"Default\"",
						"seta r_roadkill_less_sparks \"0\"",
						"seta r_specular \"0\"",
						"seta r_texFilterAnisoMax \"4\"",
						"seta r_texFilterAnisoMin \"1\"",
						"seta r_texFilterMipMode \"Unchanged\"",
						"seta r_vsync \"1\"",
						"seta r_zFeather \"0\"",
						"seta ragdoll_enable \"0\"",
						"seta ragdoll_max_simulating \"16\"",
						string.Join(Environment.NewLine, array),
						"seta sm_enable \"0\"",
						"seta sm_maxLights \"0\"",
						"seta sm_sunShadowScaleLocked \"1\"",
						"seta snd_cinematicVolumeScale \"0.5\"",
						"seta snd_enableEq \"1\"",
						"seta snd_errorOnMissing \"0\"",
						"seta snd_khz \"44\"",
						"seta snd_outputConfiguration \"Windows default\"",
						"seta snd_touchStreamFilesOnLoad \"0\"",
						"seta snd_volume \"0.8\"",
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array5),
						"seta ui_bigFont \"0.4\"",
						"seta ui_extraBigFont \"0.55\"",
						"seta ui_mousePitch \"0\"",
						"seta ui_smallFont \"0.25\"",
						"seta vid_xpos \"3\"",
						"seta vid_ypos \"22\"",
						"con_hidechannel *; con_showchannel dontfilter error gamenotify boldgame subtitle obituary logfile_only console_only gfx sound files devgui profile ui client server system playerweap ai anim physics fx leaderboards parserscript script network",
						""
					});
					num = 7;
				}
				if (num == 5)
				{
					string[] array = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("seta sensitivity")
						select s).ToArray<string>();
					num = 6;
				}
				if (num == 4)
				{
					string[] array5 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_sysMB")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 3)
				{
					string[] array4 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_gpu")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 2)
				{
					string[] array3 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_configureGHz")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_configSum")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x06000498 RID: 1176 RVA: 0x000EDD1C File Offset: 0x000EBF1C
		private void CODMW2_f()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					File.SetAttributes(this.cod_mw2_settings, FileAttributes.Normal);
					num = 8;
				}
				if (num == 8)
				{
					string text;
					File.WriteAllText(this.cod_mw2_settings, text);
					num = 9;
				}
				if (num == 6)
				{
					string[] array;
					string[] array2;
					string[] array3;
					string[] array4;
					string[] array5;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"// generated by Infinity Ward, do not modify",
						"unbindall",
						"bind TAB \"+scores\"",
						"bind ESCAPE \"togglemenu\"",
						"bind SPACE \"+gostand\"",
						"bind 1 \"weapnext\"",
						"bind 2 \"weapnext\"",
						"bind 3 \"+actionslot 3\"",
						"bind 4 \"+actionslot 4\"",
						"bind 5 \"+actionslot 2\"",
						"bind ` \"toggleconsole\"",
						"bind A \"+moveleft\"",
						"bind C \"togglecrouch\"",
						"bind D \"+moveright\"",
						"bind E \"+melee\"",
						"bind F \"+activate\"",
						"bind G \"+frag\"",
						"bind N \"+actionslot 1\"",
						"bind Q \"+smoke\"",
						"bind R \"+reload\"",
						"bind S \"+back\"",
						"bind W \"+forward\"",
						"bind ~ \"toggleconsole\"",
						"bind PAUSE \"pause\"",
						"bind CTRL \"toggleprone\"",
						"bind SHIFT \"+breath_sprint\"",
						"bind MOUSE1 \"+attack\"",
						"bind MOUSE2 \"+toggleads_throw\"",
						"bind MOUSE3 \"+frag\"",
						"seta ai_badPathSpam \"0\"",
						"seta ai_corpseCount \"0\"",
						"seta ai_ShowCanshootChecks \"0\"",
						"seta cg_blood \"1\"",
						"seta cg_bloodLimit \"0\"",
						"seta cg_bloodLimitMsec \"330\"",
						"seta cg_brass \"1\"",
						"seta cg_cursorHints \"3\"",
						"seta cg_debugInfoCornerOffset \"0 0\"",
						"seta cg_drawBreathHint \"1\"",
						"seta cg_drawFPS \"Off\"",
						"seta cg_drawFPSLabels \"1\"",
						"seta cg_drawMantleHint \"1\"",
						"seta cg_drawTurretCrosshair \"1\"",
						"seta cg_drawViewpos \"0\"",
						"seta cg_gameBoldMessageWidth \"390\"",
						"seta cg_gameMessageWidth \"500\"",
						"seta cg_hintFadeTime \"100\"",
						"seta cg_hudDamageIconHeight \"64\"",
						"seta cg_hudDamageIconInScope \"0\"",
						"seta cg_hudDamageIconOffset \"128\"",
						"seta cg_hudDamageIconTime \"6000\"",
						"seta cg_hudDamageIconWidth \"128\"",
						"seta cg_hudGrenadeIconEnabledFlash \"0\"",
						"seta cg_hudGrenadeIconInScope \"1\"",
						"seta cg_hudGrenadeIconMaxHeight \"104\"",
						"seta cg_hudGrenadeIconMaxRangeFlash \"500\"",
						"seta cg_hudGrenadeIconMaxRangeFrag \"256\"",
						"seta cg_hudStanceHintPrints \"0\"",
						"seta cg_invalidCmdHintBlinkInterval \"600\"",
						"seta cg_invalidCmdHintDuration \"1800\"",
						"seta cg_laserlight \"1\"",
						"seta cg_mapLocationSelectionCursorSpeed \"0.6\"",
						"seta cg_marks_ents_player_only \"0\"",
						"seta cg_nopredict \"0\"",
						"seta cg_small_dev_string_fontscale \"1\"",
						"seta cg_splatterHitAlpha \"1\"",
						"seta cg_splatterHitFadeInTime \"0.05\"",
						"seta cg_splatterHitFadeOutTime \"0.1\"",
						"seta cg_splatterHitFullInTime \"0\"",
						"seta cg_splatterHitInnerAngle \"15\"",
						"seta cg_splatterHitInnerRadius \"0\"",
						"seta cg_splatterHitOuterAngle \"30\"",
						"seta cg_splatterHitOuterRadius \"0.2\"",
						"seta cg_splatterTrackAlpha \"1\"",
						"seta cg_splatterTrackFadeInTime \"0\"",
						"seta cg_splatterTrackFadeOutTime \"0.5\"",
						"seta cg_splatterTrackFullInTime \"0.3\"",
						"seta cg_splatterTrackInnerAngle \"5\"",
						"seta cg_splatterTrackInnerRadius \"0.4\"",
						"seta cg_splatterTrackOuterAngle \"20\"",
						"seta cg_splatterTrackOuterRadius \"0.6\"",
						"seta cg_sprintMeterDisabledColor \"0.8 0.1 0.1 0.2\"",
						"seta cg_sprintMeterEmptyColor \"0.7 0.5 0.2 0.8\"",
						"seta cg_sprintMeterFullColor \"0.8 0.8 0.8 0.8\"",
						"seta cg_subtitleMinTime \"3\"",
						"seta cg_subtitleWidthStandard \"320\"",
						"seta cg_subtitleWidthWidescreen \"320\"",
						"seta cg_viewZSmoothingMax \"16\"",
						"seta cg_viewZSmoothingMin \"1\"",
						"seta cg_viewZSmoothingTime \"0.1\"",
						"seta cg_waterSheeting_brightness \"0\"",
						"seta cg_waterSheeting_contrast \"1\"",
						"seta cg_waterSheeting_darkTint \"1 1 1\"",
						"seta cg_waterSheeting_desaturation \"0\"",
						"seta cg_waterSheeting_distortionScaleFactor \"0.021961 1 0 0\"",
						"seta cg_waterSheeting_enable \"0\"",
						"seta cg_waterSheeting_fadeDuration \"2\"",
						"seta cg_waterSheeting_lightTint \"0.780261 1 1\"",
						"seta cg_waterSheeting_magnitude \"0.0655388\"",
						"seta cg_waterSheeting_radius \"4.44051\"",
						"seta cg_weaponCycleDelay \"0\"",
						"seta cl_freelook \"1\"",
						"seta cl_maxpackets \"1000\"",
						"seta cl_mouseAccel \"0\"",
						"seta cl_packetdup \"0\"",
						"seta cl_pitchspeed \"140\"",
						"seta cl_yawspeed \"140\"",
						"seta com_recommendedSet \"1\"",
						"seta compassSize \"1\"",
						"seta con_errormessagetime \"8\"",
						"seta con_gameMsgWindow0FadeInTime \"0.25\"",
						"seta con_gameMsgWindow0FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow0Filter \"gamenotify obituary\"",
						"seta con_gameMsgWindow0LineCount \"6\"",
						"seta con_gameMsgWindow0MsgTime \"5\"",
						"seta con_gameMsgWindow0ScrollTime \"0.25\"",
						"seta con_gameMsgWindow0SplitscreenScale \"1\"",
						"seta con_gameMsgWindow1FadeInTime \"0.25\"",
						"seta con_gameMsgWindow1FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow1Filter \"boldgame\"",
						"seta con_gameMsgWindow1LineCount \"6\"",
						"seta con_gameMsgWindow1MsgTime \"8\"",
						"seta con_gameMsgWindow1ScrollTime \"0.25\"",
						"seta con_gameMsgWindow1SplitscreenScale \"1.5\"",
						"seta con_gameMsgWindow2FadeInTime \"0.75\"",
						"seta con_gameMsgWindow2FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow2Filter \"subtitle\"",
						"seta con_gameMsgWindow2LineCount \"7\"",
						"seta con_gameMsgWindow2MsgTime \"5\"",
						"seta con_gameMsgWindow2ScrollTime \"0.25\"",
						"seta con_gameMsgWindow2SplitscreenScale \"1.5\"",
						"seta con_gameMsgWindow3FadeInTime \"0.25\"",
						"seta con_gameMsgWindow3FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow3Filter \"\"",
						"seta con_gameMsgWindow3LineCount \"6\"",
						"seta con_gameMsgWindow3MsgTime \"5\"",
						"seta con_gameMsgWindow3ScrollTime \"0.25\"",
						"seta con_gameMsgWindow3SplitscreenScale \"1.5\"",
						"seta con_inputBoxColor \"0.25 0.25 0.2 1\"",
						"seta con_inputHintBoxColor \"0.4 0.4 0.35 1\"",
						"seta con_matchPrefixOnly \"1\"",
						"seta con_minicon \"0\"",
						"seta con_miniconlines \"5\"",
						"seta con_minicontime \"4\"",
						"seta con_outputBarColor \"1 1 0.95 0.6\"",
						"seta con_outputSliderColor \"0.15 0.15 0.1 0.6\"",
						"seta con_outputWindowColor \"0.35 0.35 0.3 0.75\"",
						"seta con_typewriterColorGlowCheckpoint \"0.6 0.5 0.6 1\"",
						"seta con_typewriterColorGlowCompleted \"0 0.3 0.8 1\"",
						"seta con_typewriterColorGlowFailed \"0.8 0 0 1\"",
						"seta con_typewriterColorGlowUpdated \"0 0.6 0.18 1\"",
						"seta con_typewriterDecayDuration \"700\"",
						"seta con_typewriterDecayStartTime \"6000\"",
						"seta con_typewriterPrintSpeed \"50\"",
						"seta disable_tank_shock_minspec \"0\"",
						"seta dynEnt_active \"1\"",
						"seta fx_marks \"0\"",
						"seta fx_marks_ents \"1\"",
						"seta fx_marks_smodels \"1\"",
						"seta g_deathDelay \"3000\"",
						"seta glass_angular_vel \"5 35\"",
						"seta glass_debug \"0\"",
						"seta glass_edge_angle \"5 10\"",
						"seta glass_fall_delay \"0.2 0.9\"",
						"seta glass_fall_gravity \"800\"",
						"seta glass_fall_ratio \"1.5 3\"",
						"seta glass_fringe_maxcoverage \"0.2\"",
						"seta glass_fringe_maxsize \"150\"",
						"seta glass_fx_chance \"0.25\"",
						"seta glass_hinge_friction \"50\"",
						"seta glass_linear_vel \"200 400\"",
						"seta glass_max_pieces_per_frame \"100\"",
						"seta glass_max_shatter_fx_per_frame \"6\"",
						"seta glass_physics_chance \"0.15\"",
						"seta glass_physics_maxdist \"512\"",
						"seta glass_shard_maxsize \"300\"",
						"seta glass_shattered_scale \"48\"",
						"seta glass_trace_interval \"100\"",
						"seta hud_deathQuoteFadeTime \"1000\"",
						"seta hud_fade_healthbar \"2\"",
						"seta hud_fade_sprint \"1.7\"",
						"seta hud_fadeout_speed \"0.1\"",
						"seta hud_flash_period_offhand \"0.5\"",
						"seta hud_flash_time_offhand \"2\"",
						"seta hud_health_pulserate_critical \"0.5\"",
						"seta hud_health_pulserate_injured \"1\"",
						"seta hud_health_startpulse_critical \"0.33\"",
						"seta hud_health_startpulse_injured \"1\"",
						"seta hud_letterBoxFadeTime \"1000\"",
						"seta in_gpuSync \"1\"",
						"seta in_mouse \"1\"",
						"seta intro \"1\"",
						"seta invasion_minspec \"0\"",
						"seta laserLight \"1\"",
						"seta laserLightWithoutNightvision \"0\"",
						"seta loc_forceEnglish \"0\"",
						"seta loc_language \"0\"",
						"seta m_filter \"0\"",
						"seta m_forward \"0.25\"",
						"seta m_pitch \"0.022\"",
						"seta m_side \"0.25\"",
						"seta m_yaw \"0.022\"",
						"seta min_spec_ai \"0\"",
						"seta monkeytoy \"1\"",
						"seta net_noipx \"0\"",
						"seta net_noudp \"0\"",
						"seta net_socksEnabled \"0\"",
						"seta net_socksPassword \"\"",
						"seta net_socksPort \"1080\"",
						"seta net_socksServer \"\"",
						"seta net_socksUsername \"\"",
						"seta r_aaAlpha \"dither (fast)\"",
						"seta r_aaMaxQuality \"0\"",
						"seta r_aaSamples \"0\"",
						"seta r_altModelLightingUpdate \"1\"",
						"seta r_arcadia_culldist \"0\"",
						"seta r_aspectRatio \"wide 16:9\"",
						"seta r_autopriority \"0\"",
						"seta r_blacklevel \"0\"",
						"seta r_customMode \"\"",
						"seta r_dcburning_culldist \"0\"",
						"seta r_debugLineWidth \"1\"",
						"seta r_depthPrepass \"None\"",
						"seta r_displayRefresh \"60 Hz\"",
						"seta r_distortion \"0\"",
						"seta r_dlightLimit \"0\"",
						"seta r_dof_enable \"0\"",
						"seta r_drawSun \"0\"",
						"seta r_drawWater \"0\"",
						"seta r_fastSkin \"0\"",
						"seta r_fullscreen \"1\"",
						"seta r_gamma \"0.8\"",
						"seta r_glow_allowed \"0\"",
						"seta r_gpuSync2 \"1\"",
						"seta r_gulag_lessdrones \"0\"",
						"seta r_ignorehwgamma \"0\"",
						"seta r_inGameVideo \"1\"",
						"seta r_lodBiasRigid \"0\"",
						"seta r_lodBiasSkinned \"0\"",
						"seta r_lodScaleRigid \"1\"",
						"seta r_lodScaleSkinned \"1\"",
						string.Concat(new string[] { "seta r_mode \"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"seta r_monitor \"0\"",
						"seta r_multiGpu \"0\"",
						"seta r_picmip \"2\"",
						"seta r_picmip_bump \"3\"",
						"seta r_picmip_manual \"1\"",
						"seta r_picmip_spec \"3\"",
						"seta r_picmip_water \"3\"",
						"seta r_polygonOffsetBias \"-1\"",
						"seta r_polygonOffsetScale \"-1\"",
						"seta r_portalBevels \"0.7\"",
						"seta r_preloadShaders \"0\"",
						"seta r_rendererPreference \"Default\"",
						"seta r_roadkill_less_sparks \"0\"",
						"seta r_specular \"0\"",
						"seta r_texFilterAnisoMax \"4\"",
						"seta r_texFilterAnisoMin \"1\"",
						"seta r_texFilterMipMode \"Unchanged\"",
						"seta r_vsync \"1\"",
						"seta r_zFeather \"0\"",
						"seta ragdoll_enable \"0\"",
						"seta ragdoll_max_simulating \"16\"",
						string.Join(Environment.NewLine, array),
						"seta sm_enable \"0\"",
						"seta sm_maxLights \"0\"",
						"seta sm_sunShadowScaleLocked \"1\"",
						"seta snd_cinematicVolumeScale \"0.5\"",
						"seta snd_enableEq \"1\"",
						"seta snd_errorOnMissing \"0\"",
						"seta snd_khz \"44\"",
						"seta snd_outputConfiguration \"Windows default\"",
						"seta snd_touchStreamFilesOnLoad \"0\"",
						"seta snd_volume \"0.8\"",
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array5),
						"seta ui_bigFont \"0.4\"",
						"seta ui_extraBigFont \"0.55\"",
						"seta ui_mousePitch \"0\"",
						"seta ui_smallFont \"0.25\"",
						"seta vid_xpos \"3\"",
						"seta vid_ypos \"22\"",
						"con_hidechannel *; con_showchannel dontfilter error gamenotify boldgame subtitle obituary logfile_only console_only gfx sound files devgui profile ui client server system playerweap ai anim physics fx leaderboards parserscript script network",
						""
					});
					num = 7;
				}
				if (num == 5)
				{
					string[] array = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("seta sensitivity")
						select s).ToArray<string>();
					num = 6;
				}
				if (num == 4)
				{
					string[] array5 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_sysMB")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 3)
				{
					string[] array4 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_gpu")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 2)
				{
					string[] array3 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_configureGHz")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_configSum")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x06000499 RID: 1177 RVA: 0x000EED04 File Offset: 0x000ECF04
		private void CODMW2_d()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					File.SetAttributes(this.cod_mw2_settings, FileAttributes.Normal);
					num = 8;
				}
				if (num == 8)
				{
					string text;
					File.WriteAllText(this.cod_mw2_settings, text);
					num = 9;
				}
				if (num == 6)
				{
					string[] array;
					string[] array2;
					string[] array3;
					string[] array4;
					string[] array5;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"// generated by Infinity Ward, do not modify",
						"unbindall",
						"bind TAB \"+scores\"",
						"bind ESCAPE \"togglemenu\"",
						"bind SPACE \"+gostand\"",
						"bind 1 \"weapnext\"",
						"bind 2 \"weapnext\"",
						"bind 3 \"+actionslot 3\"",
						"bind 4 \"+actionslot 4\"",
						"bind 5 \"+actionslot 2\"",
						"bind ` \"toggleconsole\"",
						"bind A \"+moveleft\"",
						"bind C \"togglecrouch\"",
						"bind D \"+moveright\"",
						"bind E \"+melee\"",
						"bind F \"+activate\"",
						"bind G \"+frag\"",
						"bind N \"+actionslot 1\"",
						"bind Q \"+smoke\"",
						"bind R \"+reload\"",
						"bind S \"+back\"",
						"bind W \"+forward\"",
						"bind ~ \"toggleconsole\"",
						"bind PAUSE \"pause\"",
						"bind CTRL \"toggleprone\"",
						"bind SHIFT \"+breath_sprint\"",
						"bind MOUSE1 \"+attack\"",
						"bind MOUSE2 \"+toggleads_throw\"",
						"bind MOUSE3 \"+frag\"",
						"seta ai_badPathSpam \"0\"",
						"seta ai_corpseCount \"0\"",
						"seta ai_ShowCanshootChecks \"0\"",
						"seta cg_blood \"1\"",
						"seta cg_bloodLimit \"0\"",
						"seta cg_bloodLimitMsec \"330\"",
						"seta cg_brass \"1\"",
						"seta cg_cursorHints \"3\"",
						"seta cg_debugInfoCornerOffset \"0 0\"",
						"seta cg_drawBreathHint \"1\"",
						"seta cg_drawFPS \"Off\"",
						"seta cg_drawFPSLabels \"1\"",
						"seta cg_drawMantleHint \"1\"",
						"seta cg_drawTurretCrosshair \"1\"",
						"seta cg_drawViewpos \"0\"",
						"seta cg_gameBoldMessageWidth \"390\"",
						"seta cg_gameMessageWidth \"500\"",
						"seta cg_hintFadeTime \"100\"",
						"seta cg_hudDamageIconHeight \"64\"",
						"seta cg_hudDamageIconInScope \"0\"",
						"seta cg_hudDamageIconOffset \"128\"",
						"seta cg_hudDamageIconTime \"6000\"",
						"seta cg_hudDamageIconWidth \"128\"",
						"seta cg_hudGrenadeIconEnabledFlash \"0\"",
						"seta cg_hudGrenadeIconInScope \"1\"",
						"seta cg_hudGrenadeIconMaxHeight \"104\"",
						"seta cg_hudGrenadeIconMaxRangeFlash \"500\"",
						"seta cg_hudGrenadeIconMaxRangeFrag \"256\"",
						"seta cg_hudStanceHintPrints \"0\"",
						"seta cg_invalidCmdHintBlinkInterval \"600\"",
						"seta cg_invalidCmdHintDuration \"1800\"",
						"seta cg_laserlight \"1\"",
						"seta cg_mapLocationSelectionCursorSpeed \"0.6\"",
						"seta cg_marks_ents_player_only \"0\"",
						"seta cg_nopredict \"0\"",
						"seta cg_small_dev_string_fontscale \"1\"",
						"seta cg_splatterHitAlpha \"1\"",
						"seta cg_splatterHitFadeInTime \"0.05\"",
						"seta cg_splatterHitFadeOutTime \"0.1\"",
						"seta cg_splatterHitFullInTime \"0\"",
						"seta cg_splatterHitInnerAngle \"15\"",
						"seta cg_splatterHitInnerRadius \"0\"",
						"seta cg_splatterHitOuterAngle \"30\"",
						"seta cg_splatterHitOuterRadius \"0.2\"",
						"seta cg_splatterTrackAlpha \"1\"",
						"seta cg_splatterTrackFadeInTime \"0\"",
						"seta cg_splatterTrackFadeOutTime \"0.5\"",
						"seta cg_splatterTrackFullInTime \"0.3\"",
						"seta cg_splatterTrackInnerAngle \"5\"",
						"seta cg_splatterTrackInnerRadius \"0.4\"",
						"seta cg_splatterTrackOuterAngle \"20\"",
						"seta cg_splatterTrackOuterRadius \"0.6\"",
						"seta cg_sprintMeterDisabledColor \"0.8 0.1 0.1 0.2\"",
						"seta cg_sprintMeterEmptyColor \"0.7 0.5 0.2 0.8\"",
						"seta cg_sprintMeterFullColor \"0.8 0.8 0.8 0.8\"",
						"seta cg_subtitleMinTime \"3\"",
						"seta cg_subtitleWidthStandard \"320\"",
						"seta cg_subtitleWidthWidescreen \"320\"",
						"seta cg_viewZSmoothingMax \"16\"",
						"seta cg_viewZSmoothingMin \"1\"",
						"seta cg_viewZSmoothingTime \"0.1\"",
						"seta cg_waterSheeting_brightness \"0\"",
						"seta cg_waterSheeting_contrast \"1\"",
						"seta cg_waterSheeting_darkTint \"1 1 1\"",
						"seta cg_waterSheeting_desaturation \"0\"",
						"seta cg_waterSheeting_distortionScaleFactor \"0.021961 1 0 0\"",
						"seta cg_waterSheeting_enable \"0\"",
						"seta cg_waterSheeting_fadeDuration \"2\"",
						"seta cg_waterSheeting_lightTint \"0.780261 1 1\"",
						"seta cg_waterSheeting_magnitude \"0.0655388\"",
						"seta cg_waterSheeting_radius \"4.44051\"",
						"seta cg_weaponCycleDelay \"0\"",
						"seta cl_freelook \"1\"",
						"seta cl_maxpackets \"1000\"",
						"seta cl_mouseAccel \"0\"",
						"seta cl_packetdup \"0\"",
						"seta cl_pitchspeed \"140\"",
						"seta cl_yawspeed \"140\"",
						"seta com_recommendedSet \"1\"",
						"seta compassSize \"1\"",
						"seta con_errormessagetime \"8\"",
						"seta con_gameMsgWindow0FadeInTime \"0.25\"",
						"seta con_gameMsgWindow0FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow0Filter \"gamenotify obituary\"",
						"seta con_gameMsgWindow0LineCount \"6\"",
						"seta con_gameMsgWindow0MsgTime \"5\"",
						"seta con_gameMsgWindow0ScrollTime \"0.25\"",
						"seta con_gameMsgWindow0SplitscreenScale \"1\"",
						"seta con_gameMsgWindow1FadeInTime \"0.25\"",
						"seta con_gameMsgWindow1FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow1Filter \"boldgame\"",
						"seta con_gameMsgWindow1LineCount \"6\"",
						"seta con_gameMsgWindow1MsgTime \"8\"",
						"seta con_gameMsgWindow1ScrollTime \"0.25\"",
						"seta con_gameMsgWindow1SplitscreenScale \"1.5\"",
						"seta con_gameMsgWindow2FadeInTime \"0.75\"",
						"seta con_gameMsgWindow2FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow2Filter \"subtitle\"",
						"seta con_gameMsgWindow2LineCount \"7\"",
						"seta con_gameMsgWindow2MsgTime \"5\"",
						"seta con_gameMsgWindow2ScrollTime \"0.25\"",
						"seta con_gameMsgWindow2SplitscreenScale \"1.5\"",
						"seta con_gameMsgWindow3FadeInTime \"0.25\"",
						"seta con_gameMsgWindow3FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow3Filter \"\"",
						"seta con_gameMsgWindow3LineCount \"6\"",
						"seta con_gameMsgWindow3MsgTime \"5\"",
						"seta con_gameMsgWindow3ScrollTime \"0.25\"",
						"seta con_gameMsgWindow3SplitscreenScale \"1.5\"",
						"seta con_inputBoxColor \"0.25 0.25 0.2 1\"",
						"seta con_inputHintBoxColor \"0.4 0.4 0.35 1\"",
						"seta con_matchPrefixOnly \"1\"",
						"seta con_minicon \"0\"",
						"seta con_miniconlines \"5\"",
						"seta con_minicontime \"4\"",
						"seta con_outputBarColor \"1 1 0.95 0.6\"",
						"seta con_outputSliderColor \"0.15 0.15 0.1 0.6\"",
						"seta con_outputWindowColor \"0.35 0.35 0.3 0.75\"",
						"seta con_typewriterColorGlowCheckpoint \"0.6 0.5 0.6 1\"",
						"seta con_typewriterColorGlowCompleted \"0 0.3 0.8 1\"",
						"seta con_typewriterColorGlowFailed \"0.8 0 0 1\"",
						"seta con_typewriterColorGlowUpdated \"0 0.6 0.18 1\"",
						"seta con_typewriterDecayDuration \"700\"",
						"seta con_typewriterDecayStartTime \"6000\"",
						"seta con_typewriterPrintSpeed \"50\"",
						"seta disable_tank_shock_minspec \"0\"",
						"seta dynEnt_active \"1\"",
						"seta fx_marks \"0\"",
						"seta fx_marks_ents \"1\"",
						"seta fx_marks_smodels \"1\"",
						"seta g_deathDelay \"3000\"",
						"seta glass_angular_vel \"5 35\"",
						"seta glass_debug \"0\"",
						"seta glass_edge_angle \"5 10\"",
						"seta glass_fall_delay \"0.2 0.9\"",
						"seta glass_fall_gravity \"800\"",
						"seta glass_fall_ratio \"1.5 3\"",
						"seta glass_fringe_maxcoverage \"0.2\"",
						"seta glass_fringe_maxsize \"150\"",
						"seta glass_fx_chance \"0.25\"",
						"seta glass_hinge_friction \"50\"",
						"seta glass_linear_vel \"200 400\"",
						"seta glass_max_pieces_per_frame \"100\"",
						"seta glass_max_shatter_fx_per_frame \"6\"",
						"seta glass_physics_chance \"0.15\"",
						"seta glass_physics_maxdist \"512\"",
						"seta glass_shard_maxsize \"300\"",
						"seta glass_shattered_scale \"48\"",
						"seta glass_trace_interval \"100\"",
						"seta hud_deathQuoteFadeTime \"1000\"",
						"seta hud_fade_healthbar \"2\"",
						"seta hud_fade_sprint \"1.7\"",
						"seta hud_fadeout_speed \"0.1\"",
						"seta hud_flash_period_offhand \"0.5\"",
						"seta hud_flash_time_offhand \"2\"",
						"seta hud_health_pulserate_critical \"0.5\"",
						"seta hud_health_pulserate_injured \"1\"",
						"seta hud_health_startpulse_critical \"0.33\"",
						"seta hud_health_startpulse_injured \"1\"",
						"seta hud_letterBoxFadeTime \"1000\"",
						"seta in_gpuSync \"1\"",
						"seta in_mouse \"1\"",
						"seta intro \"1\"",
						"seta invasion_minspec \"0\"",
						"seta laserLight \"1\"",
						"seta laserLightWithoutNightvision \"0\"",
						"seta loc_forceEnglish \"0\"",
						"seta loc_language \"0\"",
						"seta m_filter \"0\"",
						"seta m_forward \"0.25\"",
						"seta m_pitch \"0.022\"",
						"seta m_side \"0.25\"",
						"seta m_yaw \"0.022\"",
						"seta min_spec_ai \"0\"",
						"seta monkeytoy \"1\"",
						"seta net_noipx \"0\"",
						"seta net_noudp \"0\"",
						"seta net_socksEnabled \"0\"",
						"seta net_socksPassword \"\"",
						"seta net_socksPort \"1080\"",
						"seta net_socksServer \"\"",
						"seta net_socksUsername \"\"",
						"seta r_aaAlpha \"dither (fast)\"",
						"seta r_aaMaxQuality \"0\"",
						"seta r_aaSamples \"0\"",
						"seta r_altModelLightingUpdate \"1\"",
						"seta r_arcadia_culldist \"0\"",
						"seta r_aspectRatio \"wide 16:9\"",
						"seta r_autopriority \"0\"",
						"seta r_blacklevel \"0\"",
						"seta r_customMode \"\"",
						"seta r_dcburning_culldist \"0\"",
						"seta r_debugLineWidth \"1\"",
						"seta r_depthPrepass \"None\"",
						"seta r_displayRefresh \"60 Hz\"",
						"seta r_distortion \"0\"",
						"seta r_dlightLimit \"0\"",
						"seta r_dof_enable \"0\"",
						"seta r_drawSun \"1\"",
						"seta r_drawWater \"1\"",
						"seta r_fastSkin \"0\"",
						"seta r_fullscreen \"1\"",
						"seta r_gamma \"0.8\"",
						"seta r_glow_allowed \"1\"",
						"seta r_gpuSync2 \"1\"",
						"seta r_gulag_lessdrones \"0\"",
						"seta r_ignorehwgamma \"0\"",
						"seta r_inGameVideo \"1\"",
						"seta r_lodBiasRigid \"0\"",
						"seta r_lodBiasSkinned \"0\"",
						"seta r_lodScaleRigid \"1\"",
						"seta r_lodScaleSkinned \"1\"",
						string.Concat(new string[] { "seta r_mode \"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"seta r_monitor \"0\"",
						"seta r_multiGpu \"0\"",
						"seta r_picmip \"2\"",
						"seta r_picmip_bump \"3\"",
						"seta r_picmip_manual \"1\"",
						"seta r_picmip_spec \"3\"",
						"seta r_picmip_water \"0\"",
						"seta r_polygonOffsetBias \"-1\"",
						"seta r_polygonOffsetScale \"-1\"",
						"seta r_portalBevels \"0.7\"",
						"seta r_preloadShaders \"0\"",
						"seta r_rendererPreference \"Default\"",
						"seta r_roadkill_less_sparks \"0\"",
						"seta r_specular \"0\"",
						"seta r_texFilterAnisoMax \"4\"",
						"seta r_texFilterAnisoMin \"1\"",
						"seta r_texFilterMipMode \"Unchanged\"",
						"seta r_vsync \"1\"",
						"seta r_zFeather \"0\"",
						"seta ragdoll_enable \"0\"",
						"seta ragdoll_max_simulating \"16\"",
						string.Join(Environment.NewLine, array),
						"seta sm_enable \"0\"",
						"seta sm_maxLights \"0\"",
						"seta sm_sunShadowScaleLocked \"1\"",
						"seta snd_cinematicVolumeScale \"0.5\"",
						"seta snd_enableEq \"1\"",
						"seta snd_errorOnMissing \"0\"",
						"seta snd_khz \"44\"",
						"seta snd_outputConfiguration \"Windows default\"",
						"seta snd_touchStreamFilesOnLoad \"0\"",
						"seta snd_volume \"0.8\"",
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array5),
						"seta ui_bigFont \"0.4\"",
						"seta ui_extraBigFont \"0.55\"",
						"seta ui_mousePitch \"0\"",
						"seta ui_smallFont \"0.25\"",
						"seta vid_xpos \"3\"",
						"seta vid_ypos \"22\"",
						"con_hidechannel *; con_showchannel dontfilter error gamenotify boldgame subtitle obituary logfile_only console_only gfx sound files devgui profile ui client server system playerweap ai anim physics fx leaderboards parserscript script network",
						""
					});
					num = 7;
				}
				if (num == 5)
				{
					string[] array = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("seta sensitivity")
						select s).ToArray<string>();
					num = 6;
				}
				if (num == 4)
				{
					string[] array5 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_sysMB")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 3)
				{
					string[] array4 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_gpu")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 2)
				{
					string[] array3 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_configureGHz")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_configSum")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x0600049A RID: 1178 RVA: 0x000EFCEC File Offset: 0x000EDEEC
		private void CODMW2_c()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					File.SetAttributes(this.cod_mw2_settings, FileAttributes.Normal);
					num = 8;
				}
				if (num == 8)
				{
					string text;
					File.WriteAllText(this.cod_mw2_settings, text);
					num = 9;
				}
				if (num == 6)
				{
					string[] array;
					string[] array2;
					string[] array3;
					string[] array4;
					string[] array5;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"// generated by Infinity Ward, do not modify",
						"unbindall",
						"bind TAB \"+scores\"",
						"bind ESCAPE \"togglemenu\"",
						"bind SPACE \"+gostand\"",
						"bind 1 \"weapnext\"",
						"bind 2 \"weapnext\"",
						"bind 3 \"+actionslot 3\"",
						"bind 4 \"+actionslot 4\"",
						"bind 5 \"+actionslot 2\"",
						"bind ` \"toggleconsole\"",
						"bind A \"+moveleft\"",
						"bind C \"togglecrouch\"",
						"bind D \"+moveright\"",
						"bind E \"+melee\"",
						"bind F \"+activate\"",
						"bind G \"+frag\"",
						"bind N \"+actionslot 1\"",
						"bind Q \"+smoke\"",
						"bind R \"+reload\"",
						"bind S \"+back\"",
						"bind W \"+forward\"",
						"bind ~ \"toggleconsole\"",
						"bind PAUSE \"pause\"",
						"bind CTRL \"toggleprone\"",
						"bind SHIFT \"+breath_sprint\"",
						"bind MOUSE1 \"+attack\"",
						"bind MOUSE2 \"+toggleads_throw\"",
						"bind MOUSE3 \"+frag\"",
						"seta ai_badPathSpam \"0\"",
						"seta ai_corpseCount \"8\"",
						"seta ai_ShowCanshootChecks \"0\"",
						"seta cg_blood \"1\"",
						"seta cg_bloodLimit \"0\"",
						"seta cg_bloodLimitMsec \"330\"",
						"seta cg_brass \"1\"",
						"seta cg_cursorHints \"3\"",
						"seta cg_debugInfoCornerOffset \"0 0\"",
						"seta cg_drawBreathHint \"1\"",
						"seta cg_drawFPS \"Off\"",
						"seta cg_drawFPSLabels \"1\"",
						"seta cg_drawMantleHint \"1\"",
						"seta cg_drawTurretCrosshair \"1\"",
						"seta cg_drawViewpos \"0\"",
						"seta cg_gameBoldMessageWidth \"390\"",
						"seta cg_gameMessageWidth \"500\"",
						"seta cg_hintFadeTime \"100\"",
						"seta cg_hudDamageIconHeight \"64\"",
						"seta cg_hudDamageIconInScope \"0\"",
						"seta cg_hudDamageIconOffset \"128\"",
						"seta cg_hudDamageIconTime \"6000\"",
						"seta cg_hudDamageIconWidth \"128\"",
						"seta cg_hudGrenadeIconEnabledFlash \"0\"",
						"seta cg_hudGrenadeIconInScope \"1\"",
						"seta cg_hudGrenadeIconMaxHeight \"104\"",
						"seta cg_hudGrenadeIconMaxRangeFlash \"500\"",
						"seta cg_hudGrenadeIconMaxRangeFrag \"256\"",
						"seta cg_hudStanceHintPrints \"0\"",
						"seta cg_invalidCmdHintBlinkInterval \"600\"",
						"seta cg_invalidCmdHintDuration \"1800\"",
						"seta cg_laserlight \"1\"",
						"seta cg_mapLocationSelectionCursorSpeed \"0.6\"",
						"seta cg_marks_ents_player_only \"0\"",
						"seta cg_nopredict \"0\"",
						"seta cg_small_dev_string_fontscale \"1\"",
						"seta cg_splatterHitAlpha \"1\"",
						"seta cg_splatterHitFadeInTime \"0.05\"",
						"seta cg_splatterHitFadeOutTime \"0.1\"",
						"seta cg_splatterHitFullInTime \"0\"",
						"seta cg_splatterHitInnerAngle \"15\"",
						"seta cg_splatterHitInnerRadius \"0\"",
						"seta cg_splatterHitOuterAngle \"30\"",
						"seta cg_splatterHitOuterRadius \"0.2\"",
						"seta cg_splatterTrackAlpha \"1\"",
						"seta cg_splatterTrackFadeInTime \"0\"",
						"seta cg_splatterTrackFadeOutTime \"0.5\"",
						"seta cg_splatterTrackFullInTime \"0.3\"",
						"seta cg_splatterTrackInnerAngle \"5\"",
						"seta cg_splatterTrackInnerRadius \"0.4\"",
						"seta cg_splatterTrackOuterAngle \"20\"",
						"seta cg_splatterTrackOuterRadius \"0.6\"",
						"seta cg_sprintMeterDisabledColor \"0.8 0.1 0.1 0.2\"",
						"seta cg_sprintMeterEmptyColor \"0.7 0.5 0.2 0.8\"",
						"seta cg_sprintMeterFullColor \"0.8 0.8 0.8 0.8\"",
						"seta cg_subtitleMinTime \"3\"",
						"seta cg_subtitleWidthStandard \"320\"",
						"seta cg_subtitleWidthWidescreen \"320\"",
						"seta cg_viewZSmoothingMax \"16\"",
						"seta cg_viewZSmoothingMin \"1\"",
						"seta cg_viewZSmoothingTime \"0.1\"",
						"seta cg_waterSheeting_brightness \"0\"",
						"seta cg_waterSheeting_contrast \"1\"",
						"seta cg_waterSheeting_darkTint \"1 1 1\"",
						"seta cg_waterSheeting_desaturation \"0\"",
						"seta cg_waterSheeting_distortionScaleFactor \"0.021961 1 0 0\"",
						"seta cg_waterSheeting_enable \"0\"",
						"seta cg_waterSheeting_fadeDuration \"2\"",
						"seta cg_waterSheeting_lightTint \"0.780261 1 1\"",
						"seta cg_waterSheeting_magnitude \"0.0655388\"",
						"seta cg_waterSheeting_radius \"4.44051\"",
						"seta cg_weaponCycleDelay \"0\"",
						"seta cl_freelook \"1\"",
						"seta cl_maxpackets \"1000\"",
						"seta cl_mouseAccel \"0\"",
						"seta cl_packetdup \"0\"",
						"seta cl_pitchspeed \"140\"",
						"seta cl_yawspeed \"140\"",
						"seta com_recommendedSet \"1\"",
						"seta compassSize \"1\"",
						"seta con_errormessagetime \"8\"",
						"seta con_gameMsgWindow0FadeInTime \"0.25\"",
						"seta con_gameMsgWindow0FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow0Filter \"gamenotify obituary\"",
						"seta con_gameMsgWindow0LineCount \"6\"",
						"seta con_gameMsgWindow0MsgTime \"5\"",
						"seta con_gameMsgWindow0ScrollTime \"0.25\"",
						"seta con_gameMsgWindow0SplitscreenScale \"1\"",
						"seta con_gameMsgWindow1FadeInTime \"0.25\"",
						"seta con_gameMsgWindow1FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow1Filter \"boldgame\"",
						"seta con_gameMsgWindow1LineCount \"6\"",
						"seta con_gameMsgWindow1MsgTime \"8\"",
						"seta con_gameMsgWindow1ScrollTime \"0.25\"",
						"seta con_gameMsgWindow1SplitscreenScale \"1.5\"",
						"seta con_gameMsgWindow2FadeInTime \"0.75\"",
						"seta con_gameMsgWindow2FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow2Filter \"subtitle\"",
						"seta con_gameMsgWindow2LineCount \"7\"",
						"seta con_gameMsgWindow2MsgTime \"5\"",
						"seta con_gameMsgWindow2ScrollTime \"0.25\"",
						"seta con_gameMsgWindow2SplitscreenScale \"1.5\"",
						"seta con_gameMsgWindow3FadeInTime \"0.25\"",
						"seta con_gameMsgWindow3FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow3Filter \"\"",
						"seta con_gameMsgWindow3LineCount \"6\"",
						"seta con_gameMsgWindow3MsgTime \"5\"",
						"seta con_gameMsgWindow3ScrollTime \"0.25\"",
						"seta con_gameMsgWindow3SplitscreenScale \"1.5\"",
						"seta con_inputBoxColor \"0.25 0.25 0.2 1\"",
						"seta con_inputHintBoxColor \"0.4 0.4 0.35 1\"",
						"seta con_matchPrefixOnly \"1\"",
						"seta con_minicon \"0\"",
						"seta con_miniconlines \"5\"",
						"seta con_minicontime \"4\"",
						"seta con_outputBarColor \"1 1 0.95 0.6\"",
						"seta con_outputSliderColor \"0.15 0.15 0.1 0.6\"",
						"seta con_outputWindowColor \"0.35 0.35 0.3 0.75\"",
						"seta con_typewriterColorGlowCheckpoint \"0.6 0.5 0.6 1\"",
						"seta con_typewriterColorGlowCompleted \"0 0.3 0.8 1\"",
						"seta con_typewriterColorGlowFailed \"0.8 0 0 1\"",
						"seta con_typewriterColorGlowUpdated \"0 0.6 0.18 1\"",
						"seta con_typewriterDecayDuration \"700\"",
						"seta con_typewriterDecayStartTime \"6000\"",
						"seta con_typewriterPrintSpeed \"50\"",
						"seta disable_tank_shock_minspec \"0\"",
						"seta dynEnt_active \"1\"",
						"seta fx_marks \"0\"",
						"seta fx_marks_ents \"1\"",
						"seta fx_marks_smodels \"1\"",
						"seta g_deathDelay \"3000\"",
						"seta glass_angular_vel \"5 35\"",
						"seta glass_debug \"0\"",
						"seta glass_edge_angle \"5 10\"",
						"seta glass_fall_delay \"0.2 0.9\"",
						"seta glass_fall_gravity \"800\"",
						"seta glass_fall_ratio \"1.5 3\"",
						"seta glass_fringe_maxcoverage \"0.2\"",
						"seta glass_fringe_maxsize \"150\"",
						"seta glass_fx_chance \"0.25\"",
						"seta glass_hinge_friction \"50\"",
						"seta glass_linear_vel \"200 400\"",
						"seta glass_max_pieces_per_frame \"100\"",
						"seta glass_max_shatter_fx_per_frame \"6\"",
						"seta glass_physics_chance \"0.15\"",
						"seta glass_physics_maxdist \"512\"",
						"seta glass_shard_maxsize \"300\"",
						"seta glass_shattered_scale \"48\"",
						"seta glass_trace_interval \"100\"",
						"seta hud_deathQuoteFadeTime \"1000\"",
						"seta hud_fade_healthbar \"2\"",
						"seta hud_fade_sprint \"1.7\"",
						"seta hud_fadeout_speed \"0.1\"",
						"seta hud_flash_period_offhand \"0.5\"",
						"seta hud_flash_time_offhand \"2\"",
						"seta hud_health_pulserate_critical \"0.5\"",
						"seta hud_health_pulserate_injured \"1\"",
						"seta hud_health_startpulse_critical \"0.33\"",
						"seta hud_health_startpulse_injured \"1\"",
						"seta hud_letterBoxFadeTime \"1000\"",
						"seta in_gpuSync \"1\"",
						"seta in_mouse \"1\"",
						"seta intro \"1\"",
						"seta invasion_minspec \"0\"",
						"seta laserLight \"1\"",
						"seta laserLightWithoutNightvision \"0\"",
						"seta loc_forceEnglish \"0\"",
						"seta loc_language \"0\"",
						"seta m_filter \"0\"",
						"seta m_forward \"0.25\"",
						"seta m_pitch \"0.022\"",
						"seta m_side \"0.25\"",
						"seta m_yaw \"0.022\"",
						"seta min_spec_ai \"0\"",
						"seta monkeytoy \"1\"",
						"seta net_noipx \"0\"",
						"seta net_noudp \"0\"",
						"seta net_socksEnabled \"0\"",
						"seta net_socksPassword \"\"",
						"seta net_socksPort \"1080\"",
						"seta net_socksServer \"\"",
						"seta net_socksUsername \"\"",
						"seta r_aaAlpha \"dither (fast)\"",
						"seta r_aaMaxQuality \"0\"",
						"seta r_aaSamples \"0\"",
						"seta r_altModelLightingUpdate \"1\"",
						"seta r_arcadia_culldist \"0\"",
						"seta r_aspectRatio \"wide 16:9\"",
						"seta r_autopriority \"0\"",
						"seta r_blacklevel \"0\"",
						"seta r_customMode \"\"",
						"seta r_dcburning_culldist \"0\"",
						"seta r_debugLineWidth \"1\"",
						"seta r_depthPrepass \"None\"",
						"seta r_displayRefresh \"60 Hz\"",
						"seta r_distortion \"0\"",
						"seta r_dlightLimit \"0\"",
						"seta r_dof_enable \"0\"",
						"seta r_drawSun \"1\"",
						"seta r_drawWater \"1\"",
						"seta r_fastSkin \"0\"",
						"seta r_fullscreen \"1\"",
						"seta r_gamma \"0.8\"",
						"seta r_glow_allowed \"1\"",
						"seta r_gpuSync2 \"1\"",
						"seta r_gulag_lessdrones \"0\"",
						"seta r_ignorehwgamma \"0\"",
						"seta r_inGameVideo \"1\"",
						"seta r_lodBiasRigid \"0\"",
						"seta r_lodBiasSkinned \"0\"",
						"seta r_lodScaleRigid \"1\"",
						"seta r_lodScaleSkinned \"1\"",
						string.Concat(new string[] { "seta r_mode \"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"seta r_monitor \"0\"",
						"seta r_multiGpu \"0\"",
						"seta r_picmip \"2\"",
						"seta r_picmip_bump \"2\"",
						"seta r_picmip_manual \"1\"",
						"seta r_picmip_spec \"2\"",
						"seta r_picmip_water \"0\"",
						"seta r_polygonOffsetBias \"-1\"",
						"seta r_polygonOffsetScale \"-1\"",
						"seta r_portalBevels \"0.7\"",
						"seta r_preloadShaders \"0\"",
						"seta r_rendererPreference \"Default\"",
						"seta r_roadkill_less_sparks \"0\"",
						"seta r_specular \"0\"",
						"seta r_texFilterAnisoMax \"4\"",
						"seta r_texFilterAnisoMin \"1\"",
						"seta r_texFilterMipMode \"Unchanged\"",
						"seta r_vsync \"1\"",
						"seta r_zFeather \"0\"",
						"seta ragdoll_enable \"0\"",
						"seta ragdoll_max_simulating \"16\"",
						string.Join(Environment.NewLine, array),
						"seta sm_enable \"1\"",
						"seta sm_maxLights \"0\"",
						"seta sm_sunShadowScaleLocked \"1\"",
						"seta snd_cinematicVolumeScale \"0.5\"",
						"seta snd_enableEq \"1\"",
						"seta snd_errorOnMissing \"0\"",
						"seta snd_khz \"44\"",
						"seta snd_outputConfiguration \"Windows default\"",
						"seta snd_touchStreamFilesOnLoad \"0\"",
						"seta snd_volume \"0.8\"",
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array5),
						"seta ui_bigFont \"0.4\"",
						"seta ui_extraBigFont \"0.55\"",
						"seta ui_mousePitch \"0\"",
						"seta ui_smallFont \"0.25\"",
						"seta vid_xpos \"3\"",
						"seta vid_ypos \"22\"",
						"con_hidechannel *; con_showchannel dontfilter error gamenotify boldgame subtitle obituary logfile_only console_only gfx sound files devgui profile ui client server system playerweap ai anim physics fx leaderboards parserscript script network",
						""
					});
					num = 7;
				}
				if (num == 5)
				{
					string[] array = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("seta sensitivity")
						select s).ToArray<string>();
					num = 6;
				}
				if (num == 4)
				{
					string[] array5 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_sysMB")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 3)
				{
					string[] array4 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_gpu")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 2)
				{
					string[] array3 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_configureGHz")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_configSum")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x0600049B RID: 1179 RVA: 0x000F0CD4 File Offset: 0x000EEED4
		private void CODMW2_b()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					File.SetAttributes(this.cod_mw2_settings, FileAttributes.Normal);
					num = 8;
				}
				if (num == 8)
				{
					string text;
					File.WriteAllText(this.cod_mw2_settings, text);
					num = 9;
				}
				if (num == 6)
				{
					string[] array;
					string[] array2;
					string[] array3;
					string[] array4;
					string[] array5;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"// generated by Infinity Ward, do not modify",
						"unbindall",
						"bind TAB \"+scores\"",
						"bind ESCAPE \"togglemenu\"",
						"bind SPACE \"+gostand\"",
						"bind 1 \"weapnext\"",
						"bind 2 \"weapnext\"",
						"bind 3 \"+actionslot 3\"",
						"bind 4 \"+actionslot 4\"",
						"bind 5 \"+actionslot 2\"",
						"bind ` \"toggleconsole\"",
						"bind A \"+moveleft\"",
						"bind C \"togglecrouch\"",
						"bind D \"+moveright\"",
						"bind E \"+melee\"",
						"bind F \"+activate\"",
						"bind G \"+frag\"",
						"bind N \"+actionslot 1\"",
						"bind Q \"+smoke\"",
						"bind R \"+reload\"",
						"bind S \"+back\"",
						"bind W \"+forward\"",
						"bind ~ \"toggleconsole\"",
						"bind PAUSE \"pause\"",
						"bind CTRL \"toggleprone\"",
						"bind SHIFT \"+breath_sprint\"",
						"bind MOUSE1 \"+attack\"",
						"bind MOUSE2 \"+toggleads_throw\"",
						"bind MOUSE3 \"+frag\"",
						"seta ai_badPathSpam \"0\"",
						"seta ai_corpseCount \"8\"",
						"seta ai_ShowCanshootChecks \"0\"",
						"seta cg_blood \"1\"",
						"seta cg_bloodLimit \"0\"",
						"seta cg_bloodLimitMsec \"330\"",
						"seta cg_brass \"1\"",
						"seta cg_cursorHints \"3\"",
						"seta cg_debugInfoCornerOffset \"0 0\"",
						"seta cg_drawBreathHint \"1\"",
						"seta cg_drawFPS \"Off\"",
						"seta cg_drawFPSLabels \"1\"",
						"seta cg_drawMantleHint \"1\"",
						"seta cg_drawTurretCrosshair \"1\"",
						"seta cg_drawViewpos \"0\"",
						"seta cg_gameBoldMessageWidth \"390\"",
						"seta cg_gameMessageWidth \"500\"",
						"seta cg_hintFadeTime \"100\"",
						"seta cg_hudDamageIconHeight \"64\"",
						"seta cg_hudDamageIconInScope \"0\"",
						"seta cg_hudDamageIconOffset \"128\"",
						"seta cg_hudDamageIconTime \"6000\"",
						"seta cg_hudDamageIconWidth \"128\"",
						"seta cg_hudGrenadeIconEnabledFlash \"0\"",
						"seta cg_hudGrenadeIconInScope \"1\"",
						"seta cg_hudGrenadeIconMaxHeight \"104\"",
						"seta cg_hudGrenadeIconMaxRangeFlash \"500\"",
						"seta cg_hudGrenadeIconMaxRangeFrag \"256\"",
						"seta cg_hudStanceHintPrints \"0\"",
						"seta cg_invalidCmdHintBlinkInterval \"600\"",
						"seta cg_invalidCmdHintDuration \"1800\"",
						"seta cg_laserlight \"1\"",
						"seta cg_mapLocationSelectionCursorSpeed \"0.6\"",
						"seta cg_marks_ents_player_only \"0\"",
						"seta cg_nopredict \"0\"",
						"seta cg_small_dev_string_fontscale \"1\"",
						"seta cg_splatterHitAlpha \"1\"",
						"seta cg_splatterHitFadeInTime \"0.05\"",
						"seta cg_splatterHitFadeOutTime \"0.1\"",
						"seta cg_splatterHitFullInTime \"0\"",
						"seta cg_splatterHitInnerAngle \"15\"",
						"seta cg_splatterHitInnerRadius \"0\"",
						"seta cg_splatterHitOuterAngle \"30\"",
						"seta cg_splatterHitOuterRadius \"0.2\"",
						"seta cg_splatterTrackAlpha \"1\"",
						"seta cg_splatterTrackFadeInTime \"0\"",
						"seta cg_splatterTrackFadeOutTime \"0.5\"",
						"seta cg_splatterTrackFullInTime \"0.3\"",
						"seta cg_splatterTrackInnerAngle \"5\"",
						"seta cg_splatterTrackInnerRadius \"0.4\"",
						"seta cg_splatterTrackOuterAngle \"20\"",
						"seta cg_splatterTrackOuterRadius \"0.6\"",
						"seta cg_sprintMeterDisabledColor \"0.8 0.1 0.1 0.2\"",
						"seta cg_sprintMeterEmptyColor \"0.7 0.5 0.2 0.8\"",
						"seta cg_sprintMeterFullColor \"0.8 0.8 0.8 0.8\"",
						"seta cg_subtitleMinTime \"3\"",
						"seta cg_subtitleWidthStandard \"320\"",
						"seta cg_subtitleWidthWidescreen \"320\"",
						"seta cg_viewZSmoothingMax \"16\"",
						"seta cg_viewZSmoothingMin \"1\"",
						"seta cg_viewZSmoothingTime \"0.1\"",
						"seta cg_waterSheeting_brightness \"0\"",
						"seta cg_waterSheeting_contrast \"1\"",
						"seta cg_waterSheeting_darkTint \"1 1 1\"",
						"seta cg_waterSheeting_desaturation \"0\"",
						"seta cg_waterSheeting_distortionScaleFactor \"0.021961 1 0 0\"",
						"seta cg_waterSheeting_enable \"0\"",
						"seta cg_waterSheeting_fadeDuration \"2\"",
						"seta cg_waterSheeting_lightTint \"0.780261 1 1\"",
						"seta cg_waterSheeting_magnitude \"0.0655388\"",
						"seta cg_waterSheeting_radius \"4.44051\"",
						"seta cg_weaponCycleDelay \"0\"",
						"seta cl_freelook \"1\"",
						"seta cl_maxpackets \"1000\"",
						"seta cl_mouseAccel \"0\"",
						"seta cl_packetdup \"0\"",
						"seta cl_pitchspeed \"140\"",
						"seta cl_yawspeed \"140\"",
						"seta com_recommendedSet \"1\"",
						"seta compassSize \"1\"",
						"seta con_errormessagetime \"8\"",
						"seta con_gameMsgWindow0FadeInTime \"0.25\"",
						"seta con_gameMsgWindow0FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow0Filter \"gamenotify obituary\"",
						"seta con_gameMsgWindow0LineCount \"6\"",
						"seta con_gameMsgWindow0MsgTime \"5\"",
						"seta con_gameMsgWindow0ScrollTime \"0.25\"",
						"seta con_gameMsgWindow0SplitscreenScale \"1\"",
						"seta con_gameMsgWindow1FadeInTime \"0.25\"",
						"seta con_gameMsgWindow1FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow1Filter \"boldgame\"",
						"seta con_gameMsgWindow1LineCount \"6\"",
						"seta con_gameMsgWindow1MsgTime \"8\"",
						"seta con_gameMsgWindow1ScrollTime \"0.25\"",
						"seta con_gameMsgWindow1SplitscreenScale \"1.5\"",
						"seta con_gameMsgWindow2FadeInTime \"0.75\"",
						"seta con_gameMsgWindow2FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow2Filter \"subtitle\"",
						"seta con_gameMsgWindow2LineCount \"7\"",
						"seta con_gameMsgWindow2MsgTime \"5\"",
						"seta con_gameMsgWindow2ScrollTime \"0.25\"",
						"seta con_gameMsgWindow2SplitscreenScale \"1.5\"",
						"seta con_gameMsgWindow3FadeInTime \"0.25\"",
						"seta con_gameMsgWindow3FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow3Filter \"\"",
						"seta con_gameMsgWindow3LineCount \"6\"",
						"seta con_gameMsgWindow3MsgTime \"5\"",
						"seta con_gameMsgWindow3ScrollTime \"0.25\"",
						"seta con_gameMsgWindow3SplitscreenScale \"1.5\"",
						"seta con_inputBoxColor \"0.25 0.25 0.2 1\"",
						"seta con_inputHintBoxColor \"0.4 0.4 0.35 1\"",
						"seta con_matchPrefixOnly \"1\"",
						"seta con_minicon \"0\"",
						"seta con_miniconlines \"5\"",
						"seta con_minicontime \"4\"",
						"seta con_outputBarColor \"1 1 0.95 0.6\"",
						"seta con_outputSliderColor \"0.15 0.15 0.1 0.6\"",
						"seta con_outputWindowColor \"0.35 0.35 0.3 0.75\"",
						"seta con_typewriterColorGlowCheckpoint \"0.6 0.5 0.6 1\"",
						"seta con_typewriterColorGlowCompleted \"0 0.3 0.8 1\"",
						"seta con_typewriterColorGlowFailed \"0.8 0 0 1\"",
						"seta con_typewriterColorGlowUpdated \"0 0.6 0.18 1\"",
						"seta con_typewriterDecayDuration \"700\"",
						"seta con_typewriterDecayStartTime \"6000\"",
						"seta con_typewriterPrintSpeed \"50\"",
						"seta disable_tank_shock_minspec \"0\"",
						"seta dynEnt_active \"1\"",
						"seta fx_marks \"1\"",
						"seta fx_marks_ents \"1\"",
						"seta fx_marks_smodels \"1\"",
						"seta g_deathDelay \"3000\"",
						"seta glass_angular_vel \"5 35\"",
						"seta glass_debug \"0\"",
						"seta glass_edge_angle \"5 10\"",
						"seta glass_fall_delay \"0.2 0.9\"",
						"seta glass_fall_gravity \"800\"",
						"seta glass_fall_ratio \"1.5 3\"",
						"seta glass_fringe_maxcoverage \"0.2\"",
						"seta glass_fringe_maxsize \"150\"",
						"seta glass_fx_chance \"0.25\"",
						"seta glass_hinge_friction \"50\"",
						"seta glass_linear_vel \"200 400\"",
						"seta glass_max_pieces_per_frame \"100\"",
						"seta glass_max_shatter_fx_per_frame \"6\"",
						"seta glass_physics_chance \"0.15\"",
						"seta glass_physics_maxdist \"512\"",
						"seta glass_shard_maxsize \"300\"",
						"seta glass_shattered_scale \"48\"",
						"seta glass_trace_interval \"100\"",
						"seta hud_deathQuoteFadeTime \"1000\"",
						"seta hud_fade_healthbar \"2\"",
						"seta hud_fade_sprint \"1.7\"",
						"seta hud_fadeout_speed \"0.1\"",
						"seta hud_flash_period_offhand \"0.5\"",
						"seta hud_flash_time_offhand \"2\"",
						"seta hud_health_pulserate_critical \"0.5\"",
						"seta hud_health_pulserate_injured \"1\"",
						"seta hud_health_startpulse_critical \"0.33\"",
						"seta hud_health_startpulse_injured \"1\"",
						"seta hud_letterBoxFadeTime \"1000\"",
						"seta in_gpuSync \"1\"",
						"seta in_mouse \"1\"",
						"seta intro \"1\"",
						"seta invasion_minspec \"0\"",
						"seta laserLight \"1\"",
						"seta laserLightWithoutNightvision \"0\"",
						"seta loc_forceEnglish \"0\"",
						"seta loc_language \"0\"",
						"seta m_filter \"0\"",
						"seta m_forward \"0.25\"",
						"seta m_pitch \"0.022\"",
						"seta m_side \"0.25\"",
						"seta m_yaw \"0.022\"",
						"seta min_spec_ai \"0\"",
						"seta monkeytoy \"1\"",
						"seta net_noipx \"0\"",
						"seta net_noudp \"0\"",
						"seta net_socksEnabled \"0\"",
						"seta net_socksPassword \"\"",
						"seta net_socksPort \"1080\"",
						"seta net_socksServer \"\"",
						"seta net_socksUsername \"\"",
						"seta r_aaAlpha \"dither (fast)\"",
						"seta r_aaMaxQuality \"0\"",
						"seta r_aaSamples \"0\"",
						"seta r_altModelLightingUpdate \"1\"",
						"seta r_arcadia_culldist \"0\"",
						"seta r_aspectRatio \"wide 16:9\"",
						"seta r_autopriority \"0\"",
						"seta r_blacklevel \"0\"",
						"seta r_customMode \"\"",
						"seta r_dcburning_culldist \"0\"",
						"seta r_debugLineWidth \"1\"",
						"seta r_depthPrepass \"None\"",
						"seta r_displayRefresh \"60 Hz\"",
						"seta r_distortion \"0\"",
						"seta r_dlightLimit \"1\"",
						"seta r_dof_enable \"0\"",
						"seta r_drawSun \"1\"",
						"seta r_drawWater \"1\"",
						"seta r_fastSkin \"0\"",
						"seta r_fullscreen \"1\"",
						"seta r_gamma \"0.8\"",
						"seta r_glow_allowed \"1\"",
						"seta r_gpuSync2 \"1\"",
						"seta r_gulag_lessdrones \"0\"",
						"seta r_ignorehwgamma \"0\"",
						"seta r_inGameVideo \"1\"",
						"seta r_lodBiasRigid \"0\"",
						"seta r_lodBiasSkinned \"0\"",
						"seta r_lodScaleRigid \"1\"",
						"seta r_lodScaleSkinned \"1\"",
						string.Concat(new string[] { "seta r_mode \"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"seta r_monitor \"0\"",
						"seta r_multiGpu \"0\"",
						"seta r_picmip \"1\"",
						"seta r_picmip_bump \"1\"",
						"seta r_picmip_manual \"1\"",
						"seta r_picmip_spec \"1\"",
						"seta r_picmip_water \"0\"",
						"seta r_polygonOffsetBias \"-1\"",
						"seta r_polygonOffsetScale \"-1\"",
						"seta r_portalBevels \"0.7\"",
						"seta r_preloadShaders \"0\"",
						"seta r_rendererPreference \"Default\"",
						"seta r_roadkill_less_sparks \"0\"",
						"seta r_specular \"0\"",
						"seta r_texFilterAnisoMax \"4\"",
						"seta r_texFilterAnisoMin \"1\"",
						"seta r_texFilterMipMode \"Unchanged\"",
						"seta r_vsync \"1\"",
						"seta r_zFeather \"0\"",
						"seta ragdoll_enable \"0\"",
						"seta ragdoll_max_simulating \"16\"",
						string.Join(Environment.NewLine, array),
						"seta sm_enable \"1\"",
						"seta sm_maxLights \"1\"",
						"seta sm_sunShadowScaleLocked \"1\"",
						"seta snd_cinematicVolumeScale \"0.5\"",
						"seta snd_enableEq \"1\"",
						"seta snd_errorOnMissing \"0\"",
						"seta snd_khz \"44\"",
						"seta snd_outputConfiguration \"Windows default\"",
						"seta snd_touchStreamFilesOnLoad \"0\"",
						"seta snd_volume \"0.8\"",
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array5),
						"seta ui_bigFont \"0.4\"",
						"seta ui_extraBigFont \"0.55\"",
						"seta ui_mousePitch \"0\"",
						"seta ui_smallFont \"0.25\"",
						"seta vid_xpos \"3\"",
						"seta vid_ypos \"22\"",
						"con_hidechannel *; con_showchannel dontfilter error gamenotify boldgame subtitle obituary logfile_only console_only gfx sound files devgui profile ui client server system playerweap ai anim physics fx leaderboards parserscript script network",
						""
					});
					num = 7;
				}
				if (num == 5)
				{
					string[] array = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("seta sensitivity")
						select s).ToArray<string>();
					num = 6;
				}
				if (num == 4)
				{
					string[] array5 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_sysMB")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 3)
				{
					string[] array4 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_gpu")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 2)
				{
					string[] array3 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_configureGHz")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_configSum")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x0600049C RID: 1180 RVA: 0x000F1CBC File Offset: 0x000EFEBC
		private void CODMW2_a()
		{
			int num = 0;
			do
			{
				if (num == 7)
				{
					File.SetAttributes(this.cod_mw2_settings, FileAttributes.Normal);
					num = 8;
				}
				if (num == 8)
				{
					string text;
					File.WriteAllText(this.cod_mw2_settings, text);
					num = 9;
				}
				if (num == 6)
				{
					string[] array;
					string[] array2;
					string[] array3;
					string[] array4;
					string[] array5;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"// generated by Infinity Ward, do not modify",
						"unbindall",
						"bind TAB \"+scores\"",
						"bind ESCAPE \"togglemenu\"",
						"bind SPACE \"+gostand\"",
						"bind 1 \"weapnext\"",
						"bind 2 \"weapnext\"",
						"bind 3 \"+actionslot 3\"",
						"bind 4 \"+actionslot 4\"",
						"bind 5 \"+actionslot 2\"",
						"bind ` \"toggleconsole\"",
						"bind A \"+moveleft\"",
						"bind C \"togglecrouch\"",
						"bind D \"+moveright\"",
						"bind E \"+melee\"",
						"bind F \"+activate\"",
						"bind G \"+frag\"",
						"bind N \"+actionslot 1\"",
						"bind Q \"+smoke\"",
						"bind R \"+reload\"",
						"bind S \"+back\"",
						"bind W \"+forward\"",
						"bind ~ \"toggleconsole\"",
						"bind PAUSE \"pause\"",
						"bind CTRL \"toggleprone\"",
						"bind SHIFT \"+breath_sprint\"",
						"bind MOUSE1 \"+attack\"",
						"bind MOUSE2 \"+toggleads_throw\"",
						"bind MOUSE3 \"+frag\"",
						"seta ai_badPathSpam \"0\"",
						"seta ai_corpseCount \"16\"",
						"seta ai_ShowCanshootChecks \"0\"",
						"seta cg_blood \"1\"",
						"seta cg_bloodLimit \"0\"",
						"seta cg_bloodLimitMsec \"330\"",
						"seta cg_brass \"1\"",
						"seta cg_cursorHints \"3\"",
						"seta cg_debugInfoCornerOffset \"0 0\"",
						"seta cg_drawBreathHint \"1\"",
						"seta cg_drawFPS \"Off\"",
						"seta cg_drawFPSLabels \"1\"",
						"seta cg_drawMantleHint \"1\"",
						"seta cg_drawTurretCrosshair \"1\"",
						"seta cg_drawViewpos \"0\"",
						"seta cg_gameBoldMessageWidth \"390\"",
						"seta cg_gameMessageWidth \"500\"",
						"seta cg_hintFadeTime \"100\"",
						"seta cg_hudDamageIconHeight \"64\"",
						"seta cg_hudDamageIconInScope \"0\"",
						"seta cg_hudDamageIconOffset \"128\"",
						"seta cg_hudDamageIconTime \"6000\"",
						"seta cg_hudDamageIconWidth \"128\"",
						"seta cg_hudGrenadeIconEnabledFlash \"0\"",
						"seta cg_hudGrenadeIconInScope \"1\"",
						"seta cg_hudGrenadeIconMaxHeight \"104\"",
						"seta cg_hudGrenadeIconMaxRangeFlash \"500\"",
						"seta cg_hudGrenadeIconMaxRangeFrag \"256\"",
						"seta cg_hudStanceHintPrints \"0\"",
						"seta cg_invalidCmdHintBlinkInterval \"600\"",
						"seta cg_invalidCmdHintDuration \"1800\"",
						"seta cg_laserlight \"1\"",
						"seta cg_mapLocationSelectionCursorSpeed \"0.6\"",
						"seta cg_marks_ents_player_only \"0\"",
						"seta cg_nopredict \"0\"",
						"seta cg_small_dev_string_fontscale \"1\"",
						"seta cg_splatterHitAlpha \"1\"",
						"seta cg_splatterHitFadeInTime \"0.05\"",
						"seta cg_splatterHitFadeOutTime \"0.1\"",
						"seta cg_splatterHitFullInTime \"0\"",
						"seta cg_splatterHitInnerAngle \"15\"",
						"seta cg_splatterHitInnerRadius \"0\"",
						"seta cg_splatterHitOuterAngle \"30\"",
						"seta cg_splatterHitOuterRadius \"0.2\"",
						"seta cg_splatterTrackAlpha \"1\"",
						"seta cg_splatterTrackFadeInTime \"0\"",
						"seta cg_splatterTrackFadeOutTime \"0.5\"",
						"seta cg_splatterTrackFullInTime \"0.3\"",
						"seta cg_splatterTrackInnerAngle \"5\"",
						"seta cg_splatterTrackInnerRadius \"0.4\"",
						"seta cg_splatterTrackOuterAngle \"20\"",
						"seta cg_splatterTrackOuterRadius \"0.6\"",
						"seta cg_sprintMeterDisabledColor \"0.8 0.1 0.1 0.2\"",
						"seta cg_sprintMeterEmptyColor \"0.7 0.5 0.2 0.8\"",
						"seta cg_sprintMeterFullColor \"0.8 0.8 0.8 0.8\"",
						"seta cg_subtitleMinTime \"3\"",
						"seta cg_subtitleWidthStandard \"320\"",
						"seta cg_subtitleWidthWidescreen \"320\"",
						"seta cg_viewZSmoothingMax \"16\"",
						"seta cg_viewZSmoothingMin \"1\"",
						"seta cg_viewZSmoothingTime \"0.1\"",
						"seta cg_waterSheeting_brightness \"0\"",
						"seta cg_waterSheeting_contrast \"1\"",
						"seta cg_waterSheeting_darkTint \"1 1 1\"",
						"seta cg_waterSheeting_desaturation \"0\"",
						"seta cg_waterSheeting_distortionScaleFactor \"0.021961 1 0 0\"",
						"seta cg_waterSheeting_enable \"0\"",
						"seta cg_waterSheeting_fadeDuration \"2\"",
						"seta cg_waterSheeting_lightTint \"0.780261 1 1\"",
						"seta cg_waterSheeting_magnitude \"0.0655388\"",
						"seta cg_waterSheeting_radius \"4.44051\"",
						"seta cg_weaponCycleDelay \"0\"",
						"seta cl_freelook \"1\"",
						"seta cl_maxpackets \"1000\"",
						"seta cl_mouseAccel \"0\"",
						"seta cl_packetdup \"0\"",
						"seta cl_pitchspeed \"140\"",
						"seta cl_yawspeed \"140\"",
						"seta com_recommendedSet \"1\"",
						"seta compassSize \"1\"",
						"seta con_errormessagetime \"8\"",
						"seta con_gameMsgWindow0FadeInTime \"0.25\"",
						"seta con_gameMsgWindow0FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow0Filter \"gamenotify obituary\"",
						"seta con_gameMsgWindow0LineCount \"6\"",
						"seta con_gameMsgWindow0MsgTime \"5\"",
						"seta con_gameMsgWindow0ScrollTime \"0.25\"",
						"seta con_gameMsgWindow0SplitscreenScale \"1\"",
						"seta con_gameMsgWindow1FadeInTime \"0.25\"",
						"seta con_gameMsgWindow1FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow1Filter \"boldgame\"",
						"seta con_gameMsgWindow1LineCount \"6\"",
						"seta con_gameMsgWindow1MsgTime \"8\"",
						"seta con_gameMsgWindow1ScrollTime \"0.25\"",
						"seta con_gameMsgWindow1SplitscreenScale \"1.5\"",
						"seta con_gameMsgWindow2FadeInTime \"0.75\"",
						"seta con_gameMsgWindow2FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow2Filter \"subtitle\"",
						"seta con_gameMsgWindow2LineCount \"7\"",
						"seta con_gameMsgWindow2MsgTime \"5\"",
						"seta con_gameMsgWindow2ScrollTime \"0.25\"",
						"seta con_gameMsgWindow2SplitscreenScale \"1.5\"",
						"seta con_gameMsgWindow3FadeInTime \"0.25\"",
						"seta con_gameMsgWindow3FadeOutTime \"0.5\"",
						"seta con_gameMsgWindow3Filter \"\"",
						"seta con_gameMsgWindow3LineCount \"6\"",
						"seta con_gameMsgWindow3MsgTime \"5\"",
						"seta con_gameMsgWindow3ScrollTime \"0.25\"",
						"seta con_gameMsgWindow3SplitscreenScale \"1.5\"",
						"seta con_inputBoxColor \"0.25 0.25 0.2 1\"",
						"seta con_inputHintBoxColor \"0.4 0.4 0.35 1\"",
						"seta con_matchPrefixOnly \"1\"",
						"seta con_minicon \"0\"",
						"seta con_miniconlines \"5\"",
						"seta con_minicontime \"4\"",
						"seta con_outputBarColor \"1 1 0.95 0.6\"",
						"seta con_outputSliderColor \"0.15 0.15 0.1 0.6\"",
						"seta con_outputWindowColor \"0.35 0.35 0.3 0.75\"",
						"seta con_typewriterColorGlowCheckpoint \"0.6 0.5 0.6 1\"",
						"seta con_typewriterColorGlowCompleted \"0 0.3 0.8 1\"",
						"seta con_typewriterColorGlowFailed \"0.8 0 0 1\"",
						"seta con_typewriterColorGlowUpdated \"0 0.6 0.18 1\"",
						"seta con_typewriterDecayDuration \"700\"",
						"seta con_typewriterDecayStartTime \"6000\"",
						"seta con_typewriterPrintSpeed \"50\"",
						"seta disable_tank_shock_minspec \"0\"",
						"seta dynEnt_active \"1\"",
						"seta fx_marks \"1\"",
						"seta fx_marks_ents \"1\"",
						"seta fx_marks_smodels \"1\"",
						"seta g_deathDelay \"3000\"",
						"seta glass_angular_vel \"5 35\"",
						"seta glass_debug \"0\"",
						"seta glass_edge_angle \"5 10\"",
						"seta glass_fall_delay \"0.2 0.9\"",
						"seta glass_fall_gravity \"800\"",
						"seta glass_fall_ratio \"1.5 3\"",
						"seta glass_fringe_maxcoverage \"0.2\"",
						"seta glass_fringe_maxsize \"150\"",
						"seta glass_fx_chance \"0.25\"",
						"seta glass_hinge_friction \"50\"",
						"seta glass_linear_vel \"200 400\"",
						"seta glass_max_pieces_per_frame \"100\"",
						"seta glass_max_shatter_fx_per_frame \"6\"",
						"seta glass_physics_chance \"0.15\"",
						"seta glass_physics_maxdist \"512\"",
						"seta glass_shard_maxsize \"300\"",
						"seta glass_shattered_scale \"48\"",
						"seta glass_trace_interval \"100\"",
						"seta hud_deathQuoteFadeTime \"1000\"",
						"seta hud_fade_healthbar \"2\"",
						"seta hud_fade_sprint \"1.7\"",
						"seta hud_fadeout_speed \"0.1\"",
						"seta hud_flash_period_offhand \"0.5\"",
						"seta hud_flash_time_offhand \"2\"",
						"seta hud_health_pulserate_critical \"0.5\"",
						"seta hud_health_pulserate_injured \"1\"",
						"seta hud_health_startpulse_critical \"0.33\"",
						"seta hud_health_startpulse_injured \"1\"",
						"seta hud_letterBoxFadeTime \"1000\"",
						"seta in_gpuSync \"1\"",
						"seta in_mouse \"1\"",
						"seta intro \"1\"",
						"seta invasion_minspec \"0\"",
						"seta laserLight \"1\"",
						"seta laserLightWithoutNightvision \"0\"",
						"seta loc_forceEnglish \"0\"",
						"seta loc_language \"0\"",
						"seta m_filter \"0\"",
						"seta m_forward \"0.25\"",
						"seta m_pitch \"0.022\"",
						"seta m_side \"0.25\"",
						"seta m_yaw \"0.022\"",
						"seta min_spec_ai \"0\"",
						"seta monkeytoy \"1\"",
						"seta net_noipx \"0\"",
						"seta net_noudp \"0\"",
						"seta net_socksEnabled \"0\"",
						"seta net_socksPassword \"\"",
						"seta net_socksPort \"1080\"",
						"seta net_socksServer \"\"",
						"seta net_socksUsername \"\"",
						"seta r_aaAlpha \"dither (fast)\"",
						"seta r_aaMaxQuality \"0\"",
						"seta r_aaSamples \"1\"",
						"seta r_altModelLightingUpdate \"1\"",
						"seta r_arcadia_culldist \"0\"",
						"seta r_aspectRatio \"wide 16:9\"",
						"seta r_autopriority \"0\"",
						"seta r_blacklevel \"0\"",
						"seta r_customMode \"\"",
						"seta r_dcburning_culldist \"0\"",
						"seta r_debugLineWidth \"1\"",
						"seta r_depthPrepass \"None\"",
						"seta r_displayRefresh \"60 Hz\"",
						"seta r_distortion \"1\"",
						"seta r_dlightLimit \"2\"",
						"seta r_dof_enable \"0\"",
						"seta r_drawSun \"1\"",
						"seta r_drawWater \"1\"",
						"seta r_fastSkin \"0\"",
						"seta r_fullscreen \"1\"",
						"seta r_gamma \"0.8\"",
						"seta r_glow_allowed \"1\"",
						"seta r_gpuSync2 \"1\"",
						"seta r_gulag_lessdrones \"0\"",
						"seta r_ignorehwgamma \"0\"",
						"seta r_inGameVideo \"1\"",
						"seta r_lodBiasRigid \"0\"",
						"seta r_lodBiasSkinned \"0\"",
						"seta r_lodScaleRigid \"1\"",
						"seta r_lodScaleSkinned \"1\"",
						string.Concat(new string[] { "seta r_mode \"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"seta r_monitor \"0\"",
						"seta r_multiGpu \"0\"",
						"seta r_picmip \"0\"",
						"seta r_picmip_bump \"0\"",
						"seta r_picmip_manual \"1\"",
						"seta r_picmip_spec \"0\"",
						"seta r_picmip_water \"0\"",
						"seta r_polygonOffsetBias \"-1\"",
						"seta r_polygonOffsetScale \"-1\"",
						"seta r_portalBevels \"0.7\"",
						"seta r_preloadShaders \"0\"",
						"seta r_rendererPreference \"Default\"",
						"seta r_roadkill_less_sparks \"0\"",
						"seta r_specular \"0\"",
						"seta r_texFilterAnisoMax \"4\"",
						"seta r_texFilterAnisoMin \"1\"",
						"seta r_texFilterMipMode \"Unchanged\"",
						"seta r_vsync \"1\"",
						"seta r_zFeather \"0\"",
						"seta ragdoll_enable \"0\"",
						"seta ragdoll_max_simulating \"16\"",
						string.Join(Environment.NewLine, array),
						"seta sm_enable \"1\"",
						"seta sm_maxLights \"2\"",
						"seta sm_sunShadowScaleLocked \"1\"",
						"seta snd_cinematicVolumeScale \"0.5\"",
						"seta snd_enableEq \"1\"",
						"seta snd_errorOnMissing \"0\"",
						"seta snd_khz \"44\"",
						"seta snd_outputConfiguration \"Windows default\"",
						"seta snd_touchStreamFilesOnLoad \"0\"",
						"seta snd_volume \"0.8\"",
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array5),
						"seta ui_bigFont \"0.4\"",
						"seta ui_extraBigFont \"0.55\"",
						"seta ui_mousePitch \"0\"",
						"seta ui_smallFont \"0.25\"",
						"seta vid_xpos \"3\"",
						"seta vid_ypos \"22\"",
						"con_hidechannel *; con_showchannel dontfilter error gamenotify boldgame subtitle obituary logfile_only console_only gfx sound files devgui profile ui client server system playerweap ai anim physics fx leaderboards parserscript script network",
						""
					});
					num = 7;
				}
				if (num == 5)
				{
					string[] array = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("seta sensitivity")
						select s).ToArray<string>();
					num = 6;
				}
				if (num == 4)
				{
					string[] array5 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_sysMB")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 3)
				{
					string[] array4 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_gpu")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 2)
				{
					string[] array3 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_configureGHz")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("sys_configSum")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x0600049D RID: 1181 RVA: 0x000F2CA4 File Offset: 0x000F0EA4
		private void CODWZ2_g()
		{
			int num = 0;
			do
			{
				if (num == 5)
				{
					string text;
					File.WriteAllText(this.cod_mw2_settings, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.cod_mw2_settings, FileAttributes.Normal);
					num = 5;
				}
				if (num == 3)
				{
					string[] array;
					string[] array2;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"0",
						"",
						"// system settings version.",
						"Version:0.0 = \"1\"",
						"",
						"//",
						"// Audio",
						"//",
						"",
						"// Audio mix",
						"AudioMix:0.0 = \"1\" // 0 to 9",
						"",
						"// Adjusts the volume of the sound effects",
						"EffectsVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts the volume of hit markers",
						"HitMarkersVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Licensed Music Volume",
						"LicensedMusicVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts the volume of the music",
						"MusicVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Sets whether audio should be muted when the game window is out of focus",
						"MuteAudioWhileOutOfFocus:0.0 = \"false\"",
						"",
						"// Adjusts the volume of audio in Telescope (MOTD)",
						"TelescopeVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Using push to talk to activate microphone.",
						"VoicePushToTalk:0.0 = \"true\"",
						"",
						"// Adjusts the volume for character dialogues and announcer voices",
						"VoiceVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts overall volume of the game",
						"Volume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// War Tracks Volume",
						"WarTracksVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"//",
						"// Display",
						"//",
						"",
						"// Force specific aspect ratio independent of window aspect ratio",
						"AspectRatio:0.0 = \"auto\" // one of [auto, standard, 5:4, wide 16:10, wide 16:9, wide 18:9, wide 19.5:9, wide 21:9, wide 32:9]",
						"",
						"// Enables the async compute for specific cases",
						"AsyncCompute:0.0 = \"true\"",
						"",
						"// Constrain mouse to game window",
						"ConstrainMouse:0.0 = \"false\"",
						"",
						"// Color spaces for monitor output",
						"DisplayGamma:0.0 = \"BT709_sRGB\" // one of [BT709_sRGB, BT709_BT1886]",
						"",
						"// Fullscreen mode",
						"DisplayMode:0.0 = \"Fullscreen\" // one of [Windowed, Fullscreen, Fullscreen borderless window, Fullscreen borderless extended window]",
						"",
						"// Enable focused mode",
						"FocusedMode:0.0 = \"false\"",
						"",
						"// Set overlay opacity for the focused mode",
						"FocusedModeOpacity:0.0 = \"0.900000\" // 0.000000 to 1.000000",
						"",
						"// Monitor name of the monitor used to display the game",
						string.Join(Environment.NewLine, array),
						"",
						"// Enable Nvidia low latency mode. Boost mode request maximum GPU clock frequency regardless of workload",
						"NvidiaReflex:0.0 = \"Disabled\" // one of [Disabled, Enabled, Enabled + boost]",
						"",
						"// Fullscreen mode preference",
						"PreferredDisplayMode:0.0 = \"Fullscreen\" // one of [Windowed, Fullscreen, Fullscreen borderless window, Fullscreen borderless extended window]",
						"",
						"// Refresh rate of used monitor",
						"RefreshRate:0.0 = \"Auto\"",
						"",
						"// Fullscreen Resolution",
						string.Concat(new string[] { "Resolution:0.0 = \"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"",
						"// Percentage of window resolution that the 3D scene renders at. value set by the user. can be smaller than the actual.",
						"ResolutionMultiplier:0.0 = \"60\" // 0 to 200",
						"",
						"// Synchronizes framerate with refresh rate to prevent screen tearing issues",
						"VSync:0.0 = \"0\" // 0 to 4",
						"",
						"// Vsync while in menus only",
						"VSyncInMenu:0.0 = \"false\"",
						"",
						"// Window height",
						"WindowHeight:0.0 = \"400\" // 0 to 32767",
						"",
						"// Window is maximized on boot",
						"WindowMaximized:0.0 = \"false\"",
						"",
						"// Window width",
						"WindowWidth:0.0 = \"640\" // 0 to 32767",
						"",
						"// Window X position",
						"WindowX:0.0 = \"-32768\" // -32768 to 32767",
						"",
						"// Window Y position",
						"WindowY:0.0 = \"-32768\" // -32768 to 32767",
						"",
						"//",
						"// Gameplay",
						"//",
						"",
						"// Apply custom framerate limit",
						"CapFps:0.0 = \"true\"",
						"",
						"// Adds blur on out of focus areas when aiming down sights",
						"DepthOfField:0.0 = \"false\"",
						"",
						"// Adjusts the strength of the visual noise applied in-game",
						"FilmGrain:0.0 = \"0.000000\" // 0.000000 to 1.000000",
						"",
						"// Custom maximum frames per second when in a match",
						"MaxFpsInGame:0.0 = \"300\" // 30 to 300",
						"",
						"// Custom maximum frames per second when in menus",
						"MaxFpsInMenu:1.0 = \"120\" // 30 to 300",
						"",
						"// Custom maximum frames per second when game is out of focus",
						"MaxFpsOutOfFocus:0.0 = \"30\" // 5 to 300",
						"",
						"//",
						"// Graphics",
						"//",
						"",
						"// User preferred anti-aliasing technique",
						"AATechniquePreferred:0.0 = \"SMAA T2x\" // one of [SMAA T2x, Filmic SMAA T2x, DLSS, XeSS]",
						"",
						"// Strength for Contrast Adaptive Sharpening (CAS)",
						"AMDContrastAdaptiveSharpeningStrength:0.0 = \"0.500000\" // 0.000000 to 1.000000",
						"",
						"// Enable AMD FidelityFX Super Resolution",
						"AMDSuperResolution:0.0 = \"CAS - Sharpening only\" // one of [Off, CAS - Sharpening only, AMD FSR 1.0]",
						"",
						"// AMD FidelityFX Super Resolution quality",
						"AMDSuperResolutionQuality:0.0 = \"Maximum Quality\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality]",
						"",
						"// Absolute target resolution",
						"AbsoluteTargetResolution:0.0 = \"none\" // one of [540P, 640P, 720P, 900P, 1080P, 1440P, native, none]",
						"",
						"// Show bullet impacts",
						"BulletImpacts:0.0 = \"false\"",
						"",
						"// Use spot shadow cache to improve framerate",
						"CacheSpotShadow:0.0 = \"Disabled\" // one of [Disabled, Enabled, Preserve Updates]",
						"",
						"// Use cache sun shadow",
						"CacheSunShadow:0.0 = \"false\"",
						"",
						"// The maximum distance at which clutter models are rendered.",
						"ClutterMaxDist:0.0 = \"500.000000\" // 100.000000 to 10000.000000",
						"",
						"// Corpses culling threshold",
						"CorpsesCullingThreshold:0.0 = \"0.500000\" // 0.500000 to 1.000000",
						"",
						"// DLSS performance mode",
						"DLSSPerfMode:0.0 = \"Balanced\" // one of [Ultra Performance, Maximum Performance, Balanced, Maximum Quality]",
						"",
						"// DLSS Sharpness.",
						"DLSSSharpness:0.0 = \"0.650000\" // -1.000000 to 1.000000",
						"",
						"// Enable deferred physics",
						"DeferredPhysics:0.0 = \"Low Quality\" // one of [Low Quality, Medium Quality, High Quality, Developer]",
						"",
						"// Activate dynamic scene resolution",
						"DynamicSceneResolution:0.0 = \"false\"",
						"",
						"// Target frame time in ms for dynamic scene resolution.",
						"DynamicSceneResolutionTarget:0.0 = \"16.670000\" // 0.000000 to 100.000000",
						"",
						"// Strength of the filmic visual noise filter",
						"FilmicStrength:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Preferred GPU if multiple GPU system",
						string.Join(Environment.NewLine, array2),
						"",
						"// GTAO Quality level",
						"GTAOQuality:0.0 = \"R_GTAO_QUALITY_LOW\" // one of [R_GTAO_QUALITY_LOW, R_GTAO_QUALITY_MEDIUM, R_GTAO_QUALITY_HIGH, R_GTAO_QUALITY_ULTRA]",
						"",
						"// Set HDR activation mode. Option only takes effect on HDR Display.",
						"HDR:0.0 = \"Automatic\" // one of [Off, On, Automatic]",
						"",
						"// LODs distance quality",
						"ModelLodDistanceQuality:0.0 = \"Base Quality\" // one of [High Quality, Base Quality]",
						"",
						"// Models quality",
						"ModelLodQuality:0.0 = \"Base quality\" // one of [High quality, Base quality]",
						"",
						"// Enable NVIDIA Image Scaling",
						"NVIDIAImageScaling:0.0 = \"false\"",
						"",
						"// NVIDIA Image Scaling quality",
						"NVIDIAImageScalingQuality:0.0 = \"Maximum Quality\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality, Custom]",
						"",
						"// NVIDIA Image Scaling sharpness",
						"NVIDIAImageScalingSharpness:0.0 = \"0.300000\" // 0.000000 to 1.000000",
						"",
						"// Particle Lighting Quality",
						"ParticleLighting:0.0 = \"0\" // 0 to 5",
						"",
						"// Particle Quality quality level",
						"ParticleQualityLevel:0.0 = \"low\" // one of [very low, low, medium, high]",
						"",
						"// Particle Resolution quality level",
						"ParticuleResolution:0.0 = \"true\"",
						"",
						"// Enable persistent damage layer",
						"PersistentDamageLayer:0.0 = \"true\"",
						"",
						"// Particle Lighting quality level",
						"PixelPerLightmapTexel:0.0 = \"16.000000\" // 1.000000 to 256.000000",
						"",
						"// Enable half resolution reflection probes",
						"ReflectionProbeHalfResolution:0.0 = \"false\"",
						"",
						"// Reflection probe relighting update stages",
						"ReflectionProbeRelighting:0.0 = \"1\" // 1 to 4",
						"",
						"// SMAA Quality level",
						"SMAAQuality:0.0 = \"SMAA_QUALITY_LOW\" // one of [SMAA_QUALITY_LOW, SMAA_QUALITY_MEDIUM, SMAA_QUALITY_HIGH, SMAA_QUALITY_ULTRA]",
						"",
						"// Screen-space ambient occlusion method",
						"SSAOTechnique:0.0 = \"Off\" // one of [Off, GTAO, MDAO, GTAO & MDAO]",
						"",
						"// Screen-space reflection mode",
						"SSRMode:0.0 = \"Off\" // one of [Off, Deferred LQ, Deferred HQ]",
						"",
						"// Screen Space Shadow quality level",
						"ScreenSpaceShadowQuality:0.0 = \"Off\" // one of [Off, Low, High]",
						"",
						"// Select the shader quality setting",
						"ShaderQuality:0.0 = \"Low\" // one of [Default, Medium, Low]",
						"",
						"// Shadow resolution quality level",
						"ShadowMapResolution:1.0 = \"Very Low\" // one of [Very Low, Low, Normal, High, Extra, Ultra]",
						"",
						"// Adjust size of Spot Shadow Cache",
						"SpotShadowCacheSize:0.0 = \"0\" // 0 to 3",
						"",
						"// Quality level of spot shadow",
						"SpotShadowQualityLevel:0.0 = \"Low\" // one of [Low, Medium, High]",
						"",
						"// Static sunshadow moment clipmap resolution",
						"StaticSunshadowClipmapResolution:0.0 = \"0\" // 0 to 2147483647",
						"",
						"// Catmull Clark subdivision level",
						"SubdivisionLevel:0.0 = \"3\" // 0 to 8",
						"",
						"// Quality level of shadows from the sun at a distance",
						"SunShadowCascade:0.0 = \"Normal (2-3 cascades)\" // one of [Low    (1 cascade), Normal (2-3 cascades)]",
						"",
						"// Tessellation quality level",
						"Tessellation:0.0 = \"0_Off\" // one of [0_Off, 1_Near, 2_All]",
						"",
						"// Texture filtering quality level",
						"TextureFilter:0.0 = \"TEXTURE_FILTER_NEAREST\" // one of [TEXTURE_FILTER_NEAREST, TEXTURE_FILTER_LINEAR, TEXTURE_FILTER_ANISO2X, TEXTURE_FILTER_ANISO4X, TEXTURE_FILTER_ANISO8X, TEXTURE_FILTER_ANISO16X, TEXTURE_FILTER_CMP]",
						"",
						"// Texture quality level, high to low ( higher number means lower resolution )",
						"TextureQuality:0.0 = \"3\" // 0 to 3",
						"",
						"// Ui Quality",
						"UiQuality:0.0 = \"Auto\" // one of [1080P, 4K, Auto]",
						"",
						"// Use large physical textures",
						"VirtualTexturingLargeMemory:0.0 = \"false\"",
						"",
						"// Volumetric quality",
						"VolumetricQuality:0.0 = \"QUALITY_LOW\" // one of [QUALITY_LOW, QUALITY_MEDIUM, QUALITY_HIGH]",
						"",
						"// Select water caustics mode",
						"WaterCausticsMode:0.0 = \"Off\" // one of [Off, Low Quality, High Quality]",
						"",
						"// Enable weather grid volumes",
						"WeatherGridVolumes:0.0 = \"false\"",
						"",
						"// Select weather grid volumes quality",
						"WeatherGridVolumesQuality:0.0 = \"Low\" // one of [Ultra, High, Medium, Low, Off]",
						"",
						"// World streaming quality option",
						"WorldStreamingQuality:0.0 = \"Low\" // one of [Low, High]",
						"",
						"// XeSS quality",
						"XeSSQuality:0.0 = \"Balanced\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality, Custom]",
						"",
						"//",
						"// Interface",
						"//",
						"",
						"// Skip introduction movie that plays when game is started",
						"SkipIntro:0.0 = \"false\"",
						"",
						"//",
						"// Mouse and Gamepad",
						"//",
						"",
						"// Set minimum delay in milliseconds between valid mouse wheel inputs",
						"WeaponCycleDelay:0.0 = \"0\" // 0 to 5000",
						"",
						"//",
						"// System",
						"//",
						"",
						"// Allow campaign savegame to be synced in with the cloud",
						"ConfigCloudSavegameEnabled:0.0 = \"true\"",
						"",
						"// Allows non-hardware settings to be synced in with the cloud",
						"ConfigCloudStorageEnabled:0.0 = \"false\"",
						"",
						"// Indicates whether recommended settings have been set, will reset settings to recommended if set to 0",
						"RecommendedSet:0.0 = \"true\"",
						"",
						"// Thread count for handling the job queue",
						"RendererWorkerCount:0.0 = \"-1\" // -1 to 16",
						"",
						"// Set a target fraction of your PC's video memory to be used by the game",
						"VideoMemoryScale:0.0 = \"0.800000\" // 0.000000 to 2.000000",
						""
					});
					num = 4;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("GPUName:0.0")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("Monitor:0.0")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x0600049E RID: 1182 RVA: 0x000F3D64 File Offset: 0x000F1F64
		private void CODWZ2_f()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("Monitor:0.0")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("GPUName:0.0")
						select s).ToArray<string>();
					num = 3;
				}
				string text;
				if (num == 3)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"0",
						"",
						"// system settings version.",
						"Version:0.0 = \"1\"",
						"",
						"//",
						"// Audio",
						"//",
						"",
						"// Audio mix",
						"AudioMix:0.0 = \"1\" // 0 to 9",
						"",
						"// Adjusts the volume of the sound effects",
						"EffectsVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts the volume of hit markers",
						"HitMarkersVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Licensed Music Volume",
						"LicensedMusicVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts the volume of the music",
						"MusicVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Sets whether audio should be muted when the game window is out of focus",
						"MuteAudioWhileOutOfFocus:0.0 = \"false\"",
						"",
						"// Adjusts the volume of audio in Telescope (MOTD)",
						"TelescopeVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Using push to talk to activate microphone.",
						"VoicePushToTalk:0.0 = \"true\"",
						"",
						"// Adjusts the volume for character dialogues and announcer voices",
						"VoiceVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts overall volume of the game",
						"Volume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// War Tracks Volume",
						"WarTracksVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"//",
						"// Display",
						"//",
						"",
						"// Force specific aspect ratio independent of window aspect ratio",
						"AspectRatio:0.0 = \"auto\" // one of [auto, standard, 5:4, wide 16:10, wide 16:9, wide 18:9, wide 19.5:9, wide 21:9, wide 32:9]",
						"",
						"// Enables the async compute for specific cases",
						"AsyncCompute:0.0 = \"true\"",
						"",
						"// Constrain mouse to game window",
						"ConstrainMouse:0.0 = \"false\"",
						"",
						"// Color spaces for monitor output",
						"DisplayGamma:0.0 = \"BT709_sRGB\" // one of [BT709_sRGB, BT709_BT1886]",
						"",
						"// Fullscreen mode",
						"DisplayMode:0.0 = \"Fullscreen\" // one of [Windowed, Fullscreen, Fullscreen borderless window, Fullscreen borderless extended window]",
						"",
						"// Enable focused mode",
						"FocusedMode:0.0 = \"false\"",
						"",
						"// Set overlay opacity for the focused mode",
						"FocusedModeOpacity:0.0 = \"0.900000\" // 0.000000 to 1.000000",
						"",
						"// Monitor name of the monitor used to display the game",
						string.Join(Environment.NewLine, array),
						"",
						"// Enable Nvidia low latency mode. Boost mode request maximum GPU clock frequency regardless of workload",
						"NvidiaReflex:0.0 = \"Disabled\" // one of [Disabled, Enabled, Enabled + boost]",
						"",
						"// Fullscreen mode preference",
						"PreferredDisplayMode:0.0 = \"Fullscreen\" // one of [Windowed, Fullscreen, Fullscreen borderless window, Fullscreen borderless extended window]",
						"",
						"// Refresh rate of used monitor",
						"RefreshRate:0.0 = \"Auto\"",
						"",
						"// Fullscreen Resolution",
						string.Concat(new string[] { "Resolution:0.0 = \"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"",
						"// Percentage of window resolution that the 3D scene renders at. value set by the user. can be smaller than the actual.",
						"ResolutionMultiplier:0.0 = \"70\" // 0 to 200",
						"",
						"// Synchronizes framerate with refresh rate to prevent screen tearing issues",
						"VSync:0.0 = \"0\" // 0 to 4",
						"",
						"// Vsync while in menus only",
						"VSyncInMenu:0.0 = \"false\"",
						"",
						"// Window height",
						"WindowHeight:0.0 = \"400\" // 0 to 32767",
						"",
						"// Window is maximized on boot",
						"WindowMaximized:0.0 = \"false\"",
						"",
						"// Window width",
						"WindowWidth:0.0 = \"640\" // 0 to 32767",
						"",
						"// Window X position",
						"WindowX:0.0 = \"-32768\" // -32768 to 32767",
						"",
						"// Window Y position",
						"WindowY:0.0 = \"-32768\" // -32768 to 32767",
						"",
						"//",
						"// Gameplay",
						"//",
						"",
						"// Apply custom framerate limit",
						"CapFps:0.0 = \"true\"",
						"",
						"// Adds blur on out of focus areas when aiming down sights",
						"DepthOfField:0.0 = \"false\"",
						"",
						"// Adjusts the strength of the visual noise applied in-game",
						"FilmGrain:0.0 = \"0.000000\" // 0.000000 to 1.000000",
						"",
						"// Custom maximum frames per second when in a match",
						"MaxFpsInGame:0.0 = \"300\" // 30 to 300",
						"",
						"// Custom maximum frames per second when in menus",
						"MaxFpsInMenu:1.0 = \"120\" // 30 to 300",
						"",
						"// Custom maximum frames per second when game is out of focus",
						"MaxFpsOutOfFocus:0.0 = \"30\" // 5 to 300",
						"",
						"//",
						"// Graphics",
						"//",
						"",
						"// User preferred anti-aliasing technique",
						"AATechniquePreferred:0.0 = \"SMAA T2x\" // one of [SMAA T2x, Filmic SMAA T2x, DLSS, XeSS]",
						"",
						"// Strength for Contrast Adaptive Sharpening (CAS)",
						"AMDContrastAdaptiveSharpeningStrength:0.0 = \"0.500000\" // 0.000000 to 1.000000",
						"",
						"// Enable AMD FidelityFX Super Resolution",
						"AMDSuperResolution:0.0 = \"CAS - Sharpening only\" // one of [Off, CAS - Sharpening only, AMD FSR 1.0]",
						"",
						"// AMD FidelityFX Super Resolution quality",
						"AMDSuperResolutionQuality:0.0 = \"Maximum Quality\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality]",
						"",
						"// Absolute target resolution",
						"AbsoluteTargetResolution:0.0 = \"none\" // one of [540P, 640P, 720P, 900P, 1080P, 1440P, native, none]",
						"",
						"// Show bullet impacts",
						"BulletImpacts:0.0 = \"false\"",
						"",
						"// Use spot shadow cache to improve framerate",
						"CacheSpotShadow:0.0 = \"Disabled\" // one of [Disabled, Enabled, Preserve Updates]",
						"",
						"// Use cache sun shadow",
						"CacheSunShadow:0.0 = \"false\"",
						"",
						"// The maximum distance at which clutter models are rendered.",
						"ClutterMaxDist:0.0 = \"500.000000\" // 100.000000 to 10000.000000",
						"",
						"// Corpses culling threshold",
						"CorpsesCullingThreshold:0.0 = \"0.500000\" // 0.500000 to 1.000000",
						"",
						"// DLSS performance mode",
						"DLSSPerfMode:0.0 = \"Balanced\" // one of [Ultra Performance, Maximum Performance, Balanced, Maximum Quality]",
						"",
						"// DLSS Sharpness.",
						"DLSSSharpness:0.0 = \"0.650000\" // -1.000000 to 1.000000",
						"",
						"// Enable deferred physics",
						"DeferredPhysics:0.0 = \"Low Quality\" // one of [Low Quality, Medium Quality, High Quality, Developer]",
						"",
						"// Activate dynamic scene resolution",
						"DynamicSceneResolution:0.0 = \"false\"",
						"",
						"// Target frame time in ms for dynamic scene resolution.",
						"DynamicSceneResolutionTarget:0.0 = \"16.670000\" // 0.000000 to 100.000000",
						"",
						"// Strength of the filmic visual noise filter",
						"FilmicStrength:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Preferred GPU if multiple GPU system",
						string.Join(Environment.NewLine, array2),
						"",
						"// GTAO Quality level",
						"GTAOQuality:0.0 = \"R_GTAO_QUALITY_LOW\" // one of [R_GTAO_QUALITY_LOW, R_GTAO_QUALITY_MEDIUM, R_GTAO_QUALITY_HIGH, R_GTAO_QUALITY_ULTRA]",
						"",
						"// Set HDR activation mode. Option only takes effect on HDR Display.",
						"HDR:0.0 = \"Automatic\" // one of [Off, On, Automatic]",
						"",
						"// LODs distance quality",
						"ModelLodDistanceQuality:0.0 = \"Base Quality\" // one of [High Quality, Base Quality]",
						"",
						"// Models quality",
						"ModelLodQuality:0.0 = \"Base quality\" // one of [High quality, Base quality]",
						"",
						"// Enable NVIDIA Image Scaling",
						"NVIDIAImageScaling:0.0 = \"false\"",
						"",
						"// NVIDIA Image Scaling quality",
						"NVIDIAImageScalingQuality:0.0 = \"Maximum Quality\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality, Custom]",
						"",
						"// NVIDIA Image Scaling sharpness",
						"NVIDIAImageScalingSharpness:0.0 = \"0.300000\" // 0.000000 to 1.000000",
						"",
						"// Particle Lighting Quality",
						"ParticleLighting:0.0 = \"0\" // 0 to 5",
						"",
						"// Particle Quality quality level",
						"ParticleQualityLevel:0.0 = \"low\" // one of [very low, low, medium, high]",
						"",
						"// Particle Resolution quality level",
						"ParticuleResolution:0.0 = \"true\"",
						"",
						"// Enable persistent damage layer",
						"PersistentDamageLayer:0.0 = \"true\"",
						"",
						"// Particle Lighting quality level",
						"PixelPerLightmapTexel:0.0 = \"16.000000\" // 1.000000 to 256.000000",
						"",
						"// Enable half resolution reflection probes",
						"ReflectionProbeHalfResolution:0.0 = \"false\"",
						"",
						"// Reflection probe relighting update stages",
						"ReflectionProbeRelighting:0.0 = \"1\" // 1 to 4",
						"",
						"// SMAA Quality level",
						"SMAAQuality:0.0 = \"SMAA_QUALITY_LOW\" // one of [SMAA_QUALITY_LOW, SMAA_QUALITY_MEDIUM, SMAA_QUALITY_HIGH, SMAA_QUALITY_ULTRA]",
						"",
						"// Screen-space ambient occlusion method",
						"SSAOTechnique:0.0 = \"Off\" // one of [Off, GTAO, MDAO, GTAO & MDAO]",
						"",
						"// Screen-space reflection mode",
						"SSRMode:0.0 = \"Off\" // one of [Off, Deferred LQ, Deferred HQ]",
						"",
						"// Screen Space Shadow quality level",
						"ScreenSpaceShadowQuality:0.0 = \"Off\" // one of [Off, Low, High]",
						"",
						"// Select the shader quality setting",
						"ShaderQuality:0.0 = \"Low\" // one of [Default, Medium, Low]",
						"",
						"// Shadow resolution quality level",
						"ShadowMapResolution:1.0 = \"Very Low\" // one of [Very Low, Low, Normal, High, Extra, Ultra]",
						"",
						"// Adjust size of Spot Shadow Cache",
						"SpotShadowCacheSize:0.0 = \"0\" // 0 to 3",
						"",
						"// Quality level of spot shadow",
						"SpotShadowQualityLevel:0.0 = \"Low\" // one of [Low, Medium, High]",
						"",
						"// Static sunshadow moment clipmap resolution",
						"StaticSunshadowClipmapResolution:0.0 = \"0\" // 0 to 2147483647",
						"",
						"// Catmull Clark subdivision level",
						"SubdivisionLevel:0.0 = \"3\" // 0 to 8",
						"",
						"// Quality level of shadows from the sun at a distance",
						"SunShadowCascade:0.0 = \"Normal (2-3 cascades)\" // one of [Low    (1 cascade), Normal (2-3 cascades)]",
						"",
						"// Tessellation quality level",
						"Tessellation:0.0 = \"0_Off\" // one of [0_Off, 1_Near, 2_All]",
						"",
						"// Texture filtering quality level",
						"TextureFilter:0.0 = \"TEXTURE_FILTER_NEAREST\" // one of [TEXTURE_FILTER_NEAREST, TEXTURE_FILTER_LINEAR, TEXTURE_FILTER_ANISO2X, TEXTURE_FILTER_ANISO4X, TEXTURE_FILTER_ANISO8X, TEXTURE_FILTER_ANISO16X, TEXTURE_FILTER_CMP]",
						"",
						"// Texture quality level, high to low ( higher number means lower resolution )",
						"TextureQuality:0.0 = \"3\" // 0 to 3",
						"",
						"// Ui Quality",
						"UiQuality:0.0 = \"Auto\" // one of [1080P, 4K, Auto]",
						"",
						"// Use large physical textures",
						"VirtualTexturingLargeMemory:0.0 = \"false\"",
						"",
						"// Volumetric quality",
						"VolumetricQuality:0.0 = \"QUALITY_LOW\" // one of [QUALITY_LOW, QUALITY_MEDIUM, QUALITY_HIGH]",
						"",
						"// Select water caustics mode",
						"WaterCausticsMode:0.0 = \"Off\" // one of [Off, Low Quality, High Quality]",
						"",
						"// Enable weather grid volumes",
						"WeatherGridVolumes:0.0 = \"false\"",
						"",
						"// Select weather grid volumes quality",
						"WeatherGridVolumesQuality:0.0 = \"Low\" // one of [Ultra, High, Medium, Low, Off]",
						"",
						"// World streaming quality option",
						"WorldStreamingQuality:0.0 = \"Low\" // one of [Low, High]",
						"",
						"// XeSS quality",
						"XeSSQuality:0.0 = \"Balanced\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality, Custom]",
						"",
						"//",
						"// Interface",
						"//",
						"",
						"// Skip introduction movie that plays when game is started",
						"SkipIntro:0.0 = \"false\"",
						"",
						"//",
						"// Mouse and Gamepad",
						"//",
						"",
						"// Set minimum delay in milliseconds between valid mouse wheel inputs",
						"WeaponCycleDelay:0.0 = \"0\" // 0 to 5000",
						"",
						"//",
						"// System",
						"//",
						"",
						"// Allow campaign savegame to be synced in with the cloud",
						"ConfigCloudSavegameEnabled:0.0 = \"true\"",
						"",
						"// Allows non-hardware settings to be synced in with the cloud",
						"ConfigCloudStorageEnabled:0.0 = \"false\"",
						"",
						"// Indicates whether recommended settings have been set, will reset settings to recommended if set to 0",
						"RecommendedSet:0.0 = \"true\"",
						"",
						"// Thread count for handling the job queue",
						"RendererWorkerCount:0.0 = \"-1\" // -1 to 16",
						"",
						"// Set a target fraction of your PC's video memory to be used by the game",
						"VideoMemoryScale:0.0 = \"0.800000\" // 0.000000 to 2.000000",
						""
					});
					num = 4;
				}
				if (num == 4)
				{
					File.SetAttributes(this.cod_mw2_settings, FileAttributes.Normal);
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.cod_mw2_settings, text);
					num = 6;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x0600049F RID: 1183 RVA: 0x000F4E28 File Offset: 0x000F3028
		private void CODWZ2_d()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("Monitor:0.0")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("GPUName:0.0")
						select s).ToArray<string>();
					num = 3;
				}
				string text;
				if (num == 3)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"0",
						"",
						"// system settings version.",
						"Version:0.0 = \"1\"",
						"",
						"//",
						"// Audio",
						"//",
						"",
						"// Audio mix",
						"AudioMix:0.0 = \"1\" // 0 to 9",
						"",
						"// Adjusts the volume of the sound effects",
						"EffectsVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts the volume of hit markers",
						"HitMarkersVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Licensed Music Volume",
						"LicensedMusicVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts the volume of the music",
						"MusicVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Sets whether audio should be muted when the game window is out of focus",
						"MuteAudioWhileOutOfFocus:0.0 = \"false\"",
						"",
						"// Adjusts the volume of audio in Telescope (MOTD)",
						"TelescopeVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Using push to talk to activate microphone.",
						"VoicePushToTalk:0.0 = \"true\"",
						"",
						"// Adjusts the volume for character dialogues and announcer voices",
						"VoiceVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts overall volume of the game",
						"Volume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// War Tracks Volume",
						"WarTracksVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"//",
						"// Display",
						"//",
						"",
						"// Force specific aspect ratio independent of window aspect ratio",
						"AspectRatio:0.0 = \"auto\" // one of [auto, standard, 5:4, wide 16:10, wide 16:9, wide 18:9, wide 19.5:9, wide 21:9, wide 32:9]",
						"",
						"// Enables the async compute for specific cases",
						"AsyncCompute:0.0 = \"true\"",
						"",
						"// Constrain mouse to game window",
						"ConstrainMouse:0.0 = \"false\"",
						"",
						"// Color spaces for monitor output",
						"DisplayGamma:0.0 = \"BT709_sRGB\" // one of [BT709_sRGB, BT709_BT1886]",
						"",
						"// Fullscreen mode",
						"DisplayMode:0.0 = \"Fullscreen\" // one of [Windowed, Fullscreen, Fullscreen borderless window, Fullscreen borderless extended window]",
						"",
						"// Enable focused mode",
						"FocusedMode:0.0 = \"false\"",
						"",
						"// Set overlay opacity for the focused mode",
						"FocusedModeOpacity:0.0 = \"0.900000\" // 0.000000 to 1.000000",
						"",
						"// Monitor name of the monitor used to display the game",
						string.Join(Environment.NewLine, array),
						"",
						"// Enable Nvidia low latency mode. Boost mode request maximum GPU clock frequency regardless of workload",
						"NvidiaReflex:0.0 = \"Disabled\" // one of [Disabled, Enabled, Enabled + boost]",
						"",
						"// Fullscreen mode preference",
						"PreferredDisplayMode:0.0 = \"Fullscreen\" // one of [Windowed, Fullscreen, Fullscreen borderless window, Fullscreen borderless extended window]",
						"",
						"// Refresh rate of used monitor",
						"RefreshRate:0.0 = \"Auto\"",
						"",
						"// Fullscreen Resolution",
						string.Concat(new string[] { "Resolution:0.0 = \"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"",
						"// Percentage of window resolution that the 3D scene renders at. value set by the user. can be smaller than the actual.",
						"ResolutionMultiplier:0.0 = \"80\" // 0 to 200",
						"",
						"// Synchronizes framerate with refresh rate to prevent screen tearing issues",
						"VSync:0.0 = \"0\" // 0 to 4",
						"",
						"// Vsync while in menus only",
						"VSyncInMenu:0.0 = \"false\"",
						"",
						"// Window height",
						"WindowHeight:0.0 = \"400\" // 0 to 32767",
						"",
						"// Window is maximized on boot",
						"WindowMaximized:0.0 = \"false\"",
						"",
						"// Window width",
						"WindowWidth:0.0 = \"640\" // 0 to 32767",
						"",
						"// Window X position",
						"WindowX:0.0 = \"-32768\" // -32768 to 32767",
						"",
						"// Window Y position",
						"WindowY:0.0 = \"-32768\" // -32768 to 32767",
						"",
						"//",
						"// Gameplay",
						"//",
						"",
						"// Apply custom framerate limit",
						"CapFps:0.0 = \"true\"",
						"",
						"// Adds blur on out of focus areas when aiming down sights",
						"DepthOfField:0.0 = \"false\"",
						"",
						"// Adjusts the strength of the visual noise applied in-game",
						"FilmGrain:0.0 = \"0.000000\" // 0.000000 to 1.000000",
						"",
						"// Custom maximum frames per second when in a match",
						"MaxFpsInGame:0.0 = \"300\" // 30 to 300",
						"",
						"// Custom maximum frames per second when in menus",
						"MaxFpsInMenu:1.0 = \"120\" // 30 to 300",
						"",
						"// Custom maximum frames per second when game is out of focus",
						"MaxFpsOutOfFocus:0.0 = \"30\" // 5 to 300",
						"",
						"//",
						"// Graphics",
						"//",
						"",
						"// User preferred anti-aliasing technique",
						"AATechniquePreferred:0.0 = \"SMAA T2x\" // one of [SMAA T2x, Filmic SMAA T2x, DLSS, XeSS]",
						"",
						"// Strength for Contrast Adaptive Sharpening (CAS)",
						"AMDContrastAdaptiveSharpeningStrength:0.0 = \"0.500000\" // 0.000000 to 1.000000",
						"",
						"// Enable AMD FidelityFX Super Resolution",
						"AMDSuperResolution:0.0 = \"CAS - Sharpening only\" // one of [Off, CAS - Sharpening only, AMD FSR 1.0]",
						"",
						"// AMD FidelityFX Super Resolution quality",
						"AMDSuperResolutionQuality:0.0 = \"Maximum Quality\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality]",
						"",
						"// Absolute target resolution",
						"AbsoluteTargetResolution:0.0 = \"none\" // one of [540P, 640P, 720P, 900P, 1080P, 1440P, native, none]",
						"",
						"// Show bullet impacts",
						"BulletImpacts:0.0 = \"false\"",
						"",
						"// Use spot shadow cache to improve framerate",
						"CacheSpotShadow:0.0 = \"Disabled\" // one of [Disabled, Enabled, Preserve Updates]",
						"",
						"// Use cache sun shadow",
						"CacheSunShadow:0.0 = \"false\"",
						"",
						"// The maximum distance at which clutter models are rendered.",
						"ClutterMaxDist:0.0 = \"500.000000\" // 100.000000 to 10000.000000",
						"",
						"// Corpses culling threshold",
						"CorpsesCullingThreshold:0.0 = \"0.500000\" // 0.500000 to 1.000000",
						"",
						"// DLSS performance mode",
						"DLSSPerfMode:0.0 = \"Balanced\" // one of [Ultra Performance, Maximum Performance, Balanced, Maximum Quality]",
						"",
						"// DLSS Sharpness.",
						"DLSSSharpness:0.0 = \"0.650000\" // -1.000000 to 1.000000",
						"",
						"// Enable deferred physics",
						"DeferredPhysics:0.0 = \"Low Quality\" // one of [Low Quality, Medium Quality, High Quality, Developer]",
						"",
						"// Activate dynamic scene resolution",
						"DynamicSceneResolution:0.0 = \"false\"",
						"",
						"// Target frame time in ms for dynamic scene resolution.",
						"DynamicSceneResolutionTarget:0.0 = \"16.670000\" // 0.000000 to 100.000000",
						"",
						"// Strength of the filmic visual noise filter",
						"FilmicStrength:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Preferred GPU if multiple GPU system",
						string.Join(Environment.NewLine, array2),
						"",
						"// GTAO Quality level",
						"GTAOQuality:0.0 = \"R_GTAO_QUALITY_LOW\" // one of [R_GTAO_QUALITY_LOW, R_GTAO_QUALITY_MEDIUM, R_GTAO_QUALITY_HIGH, R_GTAO_QUALITY_ULTRA]",
						"",
						"// Set HDR activation mode. Option only takes effect on HDR Display.",
						"HDR:0.0 = \"Automatic\" // one of [Off, On, Automatic]",
						"",
						"// LODs distance quality",
						"ModelLodDistanceQuality:0.0 = \"Base Quality\" // one of [High Quality, Base Quality]",
						"",
						"// Models quality",
						"ModelLodQuality:0.0 = \"Base quality\" // one of [High quality, Base quality]",
						"",
						"// Enable NVIDIA Image Scaling",
						"NVIDIAImageScaling:0.0 = \"false\"",
						"",
						"// NVIDIA Image Scaling quality",
						"NVIDIAImageScalingQuality:0.0 = \"Maximum Quality\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality, Custom]",
						"",
						"// NVIDIA Image Scaling sharpness",
						"NVIDIAImageScalingSharpness:0.0 = \"0.300000\" // 0.000000 to 1.000000",
						"",
						"// Particle Lighting Quality",
						"ParticleLighting:0.0 = \"0\" // 0 to 5",
						"",
						"// Particle Quality quality level",
						"ParticleQualityLevel:0.0 = \"low\" // one of [very low, low, medium, high]",
						"",
						"// Particle Resolution quality level",
						"ParticuleResolution:0.0 = \"true\"",
						"",
						"// Enable persistent damage layer",
						"PersistentDamageLayer:0.0 = \"true\"",
						"",
						"// Particle Lighting quality level",
						"PixelPerLightmapTexel:0.0 = \"16.000000\" // 1.000000 to 256.000000",
						"",
						"// Enable half resolution reflection probes",
						"ReflectionProbeHalfResolution:0.0 = \"false\"",
						"",
						"// Reflection probe relighting update stages",
						"ReflectionProbeRelighting:0.0 = \"1\" // 1 to 4",
						"",
						"// SMAA Quality level",
						"SMAAQuality:0.0 = \"SMAA_QUALITY_LOW\" // one of [SMAA_QUALITY_LOW, SMAA_QUALITY_MEDIUM, SMAA_QUALITY_HIGH, SMAA_QUALITY_ULTRA]",
						"",
						"// Screen-space ambient occlusion method",
						"SSAOTechnique:0.0 = \"Off\" // one of [Off, GTAO, MDAO, GTAO & MDAO]",
						"",
						"// Screen-space reflection mode",
						"SSRMode:0.0 = \"Off\" // one of [Off, Deferred LQ, Deferred HQ]",
						"",
						"// Screen Space Shadow quality level",
						"ScreenSpaceShadowQuality:0.0 = \"Off\" // one of [Off, Low, High]",
						"",
						"// Select the shader quality setting",
						"ShaderQuality:0.0 = \"Low\" // one of [Default, Medium, Low]",
						"",
						"// Shadow resolution quality level",
						"ShadowMapResolution:1.0 = \"Very Low\" // one of [Very Low, Low, Normal, High, Extra, Ultra]",
						"",
						"// Adjust size of Spot Shadow Cache",
						"SpotShadowCacheSize:0.0 = \"0\" // 0 to 3",
						"",
						"// Quality level of spot shadow",
						"SpotShadowQualityLevel:0.0 = \"Low\" // one of [Low, Medium, High]",
						"",
						"// Static sunshadow moment clipmap resolution",
						"StaticSunshadowClipmapResolution:0.0 = \"0\" // 0 to 2147483647",
						"",
						"// Catmull Clark subdivision level",
						"SubdivisionLevel:0.0 = \"3\" // 0 to 8",
						"",
						"// Quality level of shadows from the sun at a distance",
						"SunShadowCascade:0.0 = \"Normal (2-3 cascades)\" // one of [Low    (1 cascade), Normal (2-3 cascades)]",
						"",
						"// Tessellation quality level",
						"Tessellation:0.0 = \"0_Off\" // one of [0_Off, 1_Near, 2_All]",
						"",
						"// Texture filtering quality level",
						"TextureFilter:0.0 = \"TEXTURE_FILTER_NEAREST\" // one of [TEXTURE_FILTER_NEAREST, TEXTURE_FILTER_LINEAR, TEXTURE_FILTER_ANISO2X, TEXTURE_FILTER_ANISO4X, TEXTURE_FILTER_ANISO8X, TEXTURE_FILTER_ANISO16X, TEXTURE_FILTER_CMP]",
						"",
						"// Texture quality level, high to low ( higher number means lower resolution )",
						"TextureQuality:0.0 = \"3\" // 0 to 3",
						"",
						"// Ui Quality",
						"UiQuality:0.0 = \"Auto\" // one of [1080P, 4K, Auto]",
						"",
						"// Use large physical textures",
						"VirtualTexturingLargeMemory:0.0 = \"false\"",
						"",
						"// Volumetric quality",
						"VolumetricQuality:0.0 = \"QUALITY_LOW\" // one of [QUALITY_LOW, QUALITY_MEDIUM, QUALITY_HIGH]",
						"",
						"// Select water caustics mode",
						"WaterCausticsMode:0.0 = \"Off\" // one of [Off, Low Quality, High Quality]",
						"",
						"// Enable weather grid volumes",
						"WeatherGridVolumes:0.0 = \"false\"",
						"",
						"// Select weather grid volumes quality",
						"WeatherGridVolumesQuality:0.0 = \"Low\" // one of [Ultra, High, Medium, Low, Off]",
						"",
						"// World streaming quality option",
						"WorldStreamingQuality:0.0 = \"Low\" // one of [Low, High]",
						"",
						"// XeSS quality",
						"XeSSQuality:0.0 = \"Balanced\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality, Custom]",
						"",
						"//",
						"// Interface",
						"//",
						"",
						"// Skip introduction movie that plays when game is started",
						"SkipIntro:0.0 = \"false\"",
						"",
						"//",
						"// Mouse and Gamepad",
						"//",
						"",
						"// Set minimum delay in milliseconds between valid mouse wheel inputs",
						"WeaponCycleDelay:0.0 = \"0\" // 0 to 5000",
						"",
						"//",
						"// System",
						"//",
						"",
						"// Allow campaign savegame to be synced in with the cloud",
						"ConfigCloudSavegameEnabled:0.0 = \"true\"",
						"",
						"// Allows non-hardware settings to be synced in with the cloud",
						"ConfigCloudStorageEnabled:0.0 = \"false\"",
						"",
						"// Indicates whether recommended settings have been set, will reset settings to recommended if set to 0",
						"RecommendedSet:0.0 = \"true\"",
						"",
						"// Thread count for handling the job queue",
						"RendererWorkerCount:0.0 = \"-1\" // -1 to 16",
						"",
						"// Set a target fraction of your PC's video memory to be used by the game",
						"VideoMemoryScale:0.0 = \"0.800000\" // 0.000000 to 2.000000",
						""
					});
					num = 4;
				}
				if (num == 4)
				{
					File.SetAttributes(this.cod_mw2_settings, FileAttributes.Normal);
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.cod_mw2_settings, text);
					num = 6;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004A0 RID: 1184 RVA: 0x000F5EEC File Offset: 0x000F40EC
		private void CODWZ2_c()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("Monitor:0.0")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("GPUName:0.0")
						select s).ToArray<string>();
					num = 3;
				}
				string text;
				if (num == 3)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"0",
						"",
						"// system settings version.",
						"Version:0.0 = \"1\"",
						"",
						"//",
						"// Audio",
						"//",
						"",
						"// Audio mix",
						"AudioMix:0.0 = \"1\" // 0 to 9",
						"",
						"// Adjusts the volume of the sound effects",
						"EffectsVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts the volume of hit markers",
						"HitMarkersVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Licensed Music Volume",
						"LicensedMusicVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts the volume of the music",
						"MusicVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Sets whether audio should be muted when the game window is out of focus",
						"MuteAudioWhileOutOfFocus:0.0 = \"false\"",
						"",
						"// Adjusts the volume of audio in Telescope (MOTD)",
						"TelescopeVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Using push to talk to activate microphone.",
						"VoicePushToTalk:0.0 = \"true\"",
						"",
						"// Adjusts the volume for character dialogues and announcer voices",
						"VoiceVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts overall volume of the game",
						"Volume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// War Tracks Volume",
						"WarTracksVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"//",
						"// Display",
						"//",
						"",
						"// Force specific aspect ratio independent of window aspect ratio",
						"AspectRatio:0.0 = \"auto\" // one of [auto, standard, 5:4, wide 16:10, wide 16:9, wide 18:9, wide 19.5:9, wide 21:9, wide 32:9]",
						"",
						"// Enables the async compute for specific cases",
						"AsyncCompute:0.0 = \"true\"",
						"",
						"// Constrain mouse to game window",
						"ConstrainMouse:0.0 = \"false\"",
						"",
						"// Color spaces for monitor output",
						"DisplayGamma:0.0 = \"BT709_sRGB\" // one of [BT709_sRGB, BT709_BT1886]",
						"",
						"// Fullscreen mode",
						"DisplayMode:0.0 = \"Fullscreen\" // one of [Windowed, Fullscreen, Fullscreen borderless window, Fullscreen borderless extended window]",
						"",
						"// Enable focused mode",
						"FocusedMode:0.0 = \"false\"",
						"",
						"// Set overlay opacity for the focused mode",
						"FocusedModeOpacity:0.0 = \"0.900000\" // 0.000000 to 1.000000",
						"",
						"// Monitor name of the monitor used to display the game",
						string.Join(Environment.NewLine, array),
						"",
						"// Enable Nvidia low latency mode. Boost mode request maximum GPU clock frequency regardless of workload",
						"NvidiaReflex:0.0 = \"Disabled\" // one of [Disabled, Enabled, Enabled + boost]",
						"",
						"// Fullscreen mode preference",
						"PreferredDisplayMode:0.0 = \"Fullscreen\" // one of [Windowed, Fullscreen, Fullscreen borderless window, Fullscreen borderless extended window]",
						"",
						"// Refresh rate of used monitor",
						"RefreshRate:0.0 = \"Auto\"",
						"",
						"// Fullscreen Resolution",
						string.Concat(new string[] { "Resolution:0.0 = \"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"",
						"// Percentage of window resolution that the 3D scene renders at. value set by the user. can be smaller than the actual.",
						"ResolutionMultiplier:0.0 = \"90\" // 0 to 200",
						"",
						"// Synchronizes framerate with refresh rate to prevent screen tearing issues",
						"VSync:0.0 = \"0\" // 0 to 4",
						"",
						"// Vsync while in menus only",
						"VSyncInMenu:0.0 = \"false\"",
						"",
						"// Window height",
						"WindowHeight:0.0 = \"400\" // 0 to 32767",
						"",
						"// Window is maximized on boot",
						"WindowMaximized:0.0 = \"false\"",
						"",
						"// Window width",
						"WindowWidth:0.0 = \"640\" // 0 to 32767",
						"",
						"// Window X position",
						"WindowX:0.0 = \"-32768\" // -32768 to 32767",
						"",
						"// Window Y position",
						"WindowY:0.0 = \"-32768\" // -32768 to 32767",
						"",
						"//",
						"// Gameplay",
						"//",
						"",
						"// Apply custom framerate limit",
						"CapFps:0.0 = \"true\"",
						"",
						"// Adds blur on out of focus areas when aiming down sights",
						"DepthOfField:0.0 = \"false\"",
						"",
						"// Adjusts the strength of the visual noise applied in-game",
						"FilmGrain:0.0 = \"0.000000\" // 0.000000 to 1.000000",
						"",
						"// Custom maximum frames per second when in a match",
						"MaxFpsInGame:0.0 = \"300\" // 30 to 300",
						"",
						"// Custom maximum frames per second when in menus",
						"MaxFpsInMenu:1.0 = \"120\" // 30 to 300",
						"",
						"// Custom maximum frames per second when game is out of focus",
						"MaxFpsOutOfFocus:0.0 = \"30\" // 5 to 300",
						"",
						"//",
						"// Graphics",
						"//",
						"",
						"// User preferred anti-aliasing technique",
						"AATechniquePreferred:0.0 = \"SMAA T2x\" // one of [SMAA T2x, Filmic SMAA T2x, DLSS, XeSS]",
						"",
						"// Strength for Contrast Adaptive Sharpening (CAS)",
						"AMDContrastAdaptiveSharpeningStrength:0.0 = \"0.500000\" // 0.000000 to 1.000000",
						"",
						"// Enable AMD FidelityFX Super Resolution",
						"AMDSuperResolution:0.0 = \"CAS - Sharpening only\" // one of [Off, CAS - Sharpening only, AMD FSR 1.0]",
						"",
						"// AMD FidelityFX Super Resolution quality",
						"AMDSuperResolutionQuality:0.0 = \"Maximum Quality\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality]",
						"",
						"// Absolute target resolution",
						"AbsoluteTargetResolution:0.0 = \"none\" // one of [540P, 640P, 720P, 900P, 1080P, 1440P, native, none]",
						"",
						"// Show bullet impacts",
						"BulletImpacts:0.0 = \"false\"",
						"",
						"// Use spot shadow cache to improve framerate",
						"CacheSpotShadow:0.0 = \"Disabled\" // one of [Disabled, Enabled, Preserve Updates]",
						"",
						"// Use cache sun shadow",
						"CacheSunShadow:0.0 = \"false\"",
						"",
						"// The maximum distance at which clutter models are rendered.",
						"ClutterMaxDist:0.0 = \"500.000000\" // 100.000000 to 10000.000000",
						"",
						"// Corpses culling threshold",
						"CorpsesCullingThreshold:0.0 = \"0.500000\" // 0.500000 to 1.000000",
						"",
						"// DLSS performance mode",
						"DLSSPerfMode:0.0 = \"Balanced\" // one of [Ultra Performance, Maximum Performance, Balanced, Maximum Quality]",
						"",
						"// DLSS Sharpness.",
						"DLSSSharpness:0.0 = \"0.650000\" // -1.000000 to 1.000000",
						"",
						"// Enable deferred physics",
						"DeferredPhysics:0.0 = \"Low Quality\" // one of [Low Quality, Medium Quality, High Quality, Developer]",
						"",
						"// Activate dynamic scene resolution",
						"DynamicSceneResolution:0.0 = \"false\"",
						"",
						"// Target frame time in ms for dynamic scene resolution.",
						"DynamicSceneResolutionTarget:0.0 = \"16.670000\" // 0.000000 to 100.000000",
						"",
						"// Strength of the filmic visual noise filter",
						"FilmicStrength:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Preferred GPU if multiple GPU system",
						string.Join(Environment.NewLine, array2),
						"",
						"// GTAO Quality level",
						"GTAOQuality:0.0 = \"R_GTAO_QUALITY_LOW\" // one of [R_GTAO_QUALITY_LOW, R_GTAO_QUALITY_MEDIUM, R_GTAO_QUALITY_HIGH, R_GTAO_QUALITY_ULTRA]",
						"",
						"// Set HDR activation mode. Option only takes effect on HDR Display.",
						"HDR:0.0 = \"Automatic\" // one of [Off, On, Automatic]",
						"",
						"// LODs distance quality",
						"ModelLodDistanceQuality:0.0 = \"Base Quality\" // one of [High Quality, Base Quality]",
						"",
						"// Models quality",
						"ModelLodQuality:0.0 = \"Base quality\" // one of [High quality, Base quality]",
						"",
						"// Enable NVIDIA Image Scaling",
						"NVIDIAImageScaling:0.0 = \"false\"",
						"",
						"// NVIDIA Image Scaling quality",
						"NVIDIAImageScalingQuality:0.0 = \"Maximum Quality\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality, Custom]",
						"",
						"// NVIDIA Image Scaling sharpness",
						"NVIDIAImageScalingSharpness:0.0 = \"0.300000\" // 0.000000 to 1.000000",
						"",
						"// Particle Lighting Quality",
						"ParticleLighting:0.0 = \"0\" // 0 to 5",
						"",
						"// Particle Quality quality level",
						"ParticleQualityLevel:0.0 = \"low\" // one of [very low, low, medium, high]",
						"",
						"// Particle Resolution quality level",
						"ParticuleResolution:0.0 = \"true\"",
						"",
						"// Enable persistent damage layer",
						"PersistentDamageLayer:0.0 = \"true\"",
						"",
						"// Particle Lighting quality level",
						"PixelPerLightmapTexel:0.0 = \"16.000000\" // 1.000000 to 256.000000",
						"",
						"// Enable half resolution reflection probes",
						"ReflectionProbeHalfResolution:0.0 = \"false\"",
						"",
						"// Reflection probe relighting update stages",
						"ReflectionProbeRelighting:0.0 = \"1\" // 1 to 4",
						"",
						"// SMAA Quality level",
						"SMAAQuality:0.0 = \"SMAA_QUALITY_LOW\" // one of [SMAA_QUALITY_LOW, SMAA_QUALITY_MEDIUM, SMAA_QUALITY_HIGH, SMAA_QUALITY_ULTRA]",
						"",
						"// Screen-space ambient occlusion method",
						"SSAOTechnique:0.0 = \"Off\" // one of [Off, GTAO, MDAO, GTAO & MDAO]",
						"",
						"// Screen-space reflection mode",
						"SSRMode:0.0 = \"Off\" // one of [Off, Deferred LQ, Deferred HQ]",
						"",
						"// Screen Space Shadow quality level",
						"ScreenSpaceShadowQuality:0.0 = \"Off\" // one of [Off, Low, High]",
						"",
						"// Select the shader quality setting",
						"ShaderQuality:0.0 = \"Low\" // one of [Default, Medium, Low]",
						"",
						"// Shadow resolution quality level",
						"ShadowMapResolution:1.0 = \"Very Low\" // one of [Very Low, Low, Normal, High, Extra, Ultra]",
						"",
						"// Adjust size of Spot Shadow Cache",
						"SpotShadowCacheSize:0.0 = \"0\" // 0 to 3",
						"",
						"// Quality level of spot shadow",
						"SpotShadowQualityLevel:0.0 = \"Low\" // one of [Low, Medium, High]",
						"",
						"// Static sunshadow moment clipmap resolution",
						"StaticSunshadowClipmapResolution:0.0 = \"0\" // 0 to 2147483647",
						"",
						"// Catmull Clark subdivision level",
						"SubdivisionLevel:0.0 = \"3\" // 0 to 8",
						"",
						"// Quality level of shadows from the sun at a distance",
						"SunShadowCascade:0.0 = \"Normal (2-3 cascades)\" // one of [Low    (1 cascade), Normal (2-3 cascades)]",
						"",
						"// Tessellation quality level",
						"Tessellation:0.0 = \"0_Off\" // one of [0_Off, 1_Near, 2_All]",
						"",
						"// Texture filtering quality level",
						"TextureFilter:0.0 = \"TEXTURE_FILTER_NEAREST\" // one of [TEXTURE_FILTER_NEAREST, TEXTURE_FILTER_LINEAR, TEXTURE_FILTER_ANISO2X, TEXTURE_FILTER_ANISO4X, TEXTURE_FILTER_ANISO8X, TEXTURE_FILTER_ANISO16X, TEXTURE_FILTER_CMP]",
						"",
						"// Texture quality level, high to low ( higher number means lower resolution )",
						"TextureQuality:0.0 = \"3\" // 0 to 3",
						"",
						"// Ui Quality",
						"UiQuality:0.0 = \"Auto\" // one of [1080P, 4K, Auto]",
						"",
						"// Use large physical textures",
						"VirtualTexturingLargeMemory:0.0 = \"false\"",
						"",
						"// Volumetric quality",
						"VolumetricQuality:0.0 = \"QUALITY_LOW\" // one of [QUALITY_LOW, QUALITY_MEDIUM, QUALITY_HIGH]",
						"",
						"// Select water caustics mode",
						"WaterCausticsMode:0.0 = \"Off\" // one of [Off, Low Quality, High Quality]",
						"",
						"// Enable weather grid volumes",
						"WeatherGridVolumes:0.0 = \"false\"",
						"",
						"// Select weather grid volumes quality",
						"WeatherGridVolumesQuality:0.0 = \"Low\" // one of [Ultra, High, Medium, Low, Off]",
						"",
						"// World streaming quality option",
						"WorldStreamingQuality:0.0 = \"Low\" // one of [Low, High]",
						"",
						"// XeSS quality",
						"XeSSQuality:0.0 = \"Balanced\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality, Custom]",
						"",
						"//",
						"// Interface",
						"//",
						"",
						"// Skip introduction movie that plays when game is started",
						"SkipIntro:0.0 = \"false\"",
						"",
						"//",
						"// Mouse and Gamepad",
						"//",
						"",
						"// Set minimum delay in milliseconds between valid mouse wheel inputs",
						"WeaponCycleDelay:0.0 = \"0\" // 0 to 5000",
						"",
						"//",
						"// System",
						"//",
						"",
						"// Allow campaign savegame to be synced in with the cloud",
						"ConfigCloudSavegameEnabled:0.0 = \"true\"",
						"",
						"// Allows non-hardware settings to be synced in with the cloud",
						"ConfigCloudStorageEnabled:0.0 = \"false\"",
						"",
						"// Indicates whether recommended settings have been set, will reset settings to recommended if set to 0",
						"RecommendedSet:0.0 = \"true\"",
						"",
						"// Thread count for handling the job queue",
						"RendererWorkerCount:0.0 = \"-1\" // -1 to 16",
						"",
						"// Set a target fraction of your PC's video memory to be used by the game",
						"VideoMemoryScale:0.0 = \"0.800000\" // 0.000000 to 2.000000",
						""
					});
					num = 4;
				}
				if (num == 4)
				{
					File.SetAttributes(this.cod_mw2_settings, FileAttributes.Normal);
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.cod_mw2_settings, text);
					num = 6;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004A1 RID: 1185 RVA: 0x000F6FB0 File Offset: 0x000F51B0
		private void CODWZ2_b()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("Monitor:0.0")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("GPUName:0.0")
						select s).ToArray<string>();
					num = 3;
				}
				string text;
				if (num == 3)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"0",
						"",
						"// system settings version.",
						"Version:0.0 = \"1\"",
						"",
						"//",
						"// Audio",
						"//",
						"",
						"// Audio mix",
						"AudioMix:0.0 = \"1\" // 0 to 9",
						"",
						"// Adjusts the volume of the sound effects",
						"EffectsVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts the volume of hit markers",
						"HitMarkersVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Licensed Music Volume",
						"LicensedMusicVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts the volume of the music",
						"MusicVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Sets whether audio should be muted when the game window is out of focus",
						"MuteAudioWhileOutOfFocus:0.0 = \"false\"",
						"",
						"// Adjusts the volume of audio in Telescope (MOTD)",
						"TelescopeVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Using push to talk to activate microphone.",
						"VoicePushToTalk:0.0 = \"true\"",
						"",
						"// Adjusts the volume for character dialogues and announcer voices",
						"VoiceVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts overall volume of the game",
						"Volume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// War Tracks Volume",
						"WarTracksVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"//",
						"// Display",
						"//",
						"",
						"// Force specific aspect ratio independent of window aspect ratio",
						"AspectRatio:0.0 = \"auto\" // one of [auto, standard, 5:4, wide 16:10, wide 16:9, wide 18:9, wide 19.5:9, wide 21:9, wide 32:9]",
						"",
						"// Enables the async compute for specific cases",
						"AsyncCompute:0.0 = \"true\"",
						"",
						"// Constrain mouse to game window",
						"ConstrainMouse:0.0 = \"false\"",
						"",
						"// Color spaces for monitor output",
						"DisplayGamma:0.0 = \"BT709_sRGB\" // one of [BT709_sRGB, BT709_BT1886]",
						"",
						"// Fullscreen mode",
						"DisplayMode:0.0 = \"Fullscreen\" // one of [Windowed, Fullscreen, Fullscreen borderless window, Fullscreen borderless extended window]",
						"",
						"// Enable focused mode",
						"FocusedMode:0.0 = \"false\"",
						"",
						"// Set overlay opacity for the focused mode",
						"FocusedModeOpacity:0.0 = \"0.900000\" // 0.000000 to 1.000000",
						"",
						"// Monitor name of the monitor used to display the game",
						string.Join(Environment.NewLine, array),
						"",
						"// Enable Nvidia low latency mode. Boost mode request maximum GPU clock frequency regardless of workload",
						"NvidiaReflex:0.0 = \"Disabled\" // one of [Disabled, Enabled, Enabled + boost]",
						"",
						"// Fullscreen mode preference",
						"PreferredDisplayMode:0.0 = \"Fullscreen\" // one of [Windowed, Fullscreen, Fullscreen borderless window, Fullscreen borderless extended window]",
						"",
						"// Refresh rate of used monitor",
						"RefreshRate:0.0 = \"Auto\"",
						"",
						"// Fullscreen Resolution",
						string.Concat(new string[] { "Resolution:0.0 = \"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"",
						"// Percentage of window resolution that the 3D scene renders at. value set by the user. can be smaller than the actual.",
						"ResolutionMultiplier:0.0 = \"95\" // 0 to 200",
						"",
						"// Synchronizes framerate with refresh rate to prevent screen tearing issues",
						"VSync:0.0 = \"0\" // 0 to 4",
						"",
						"// Vsync while in menus only",
						"VSyncInMenu:0.0 = \"false\"",
						"",
						"// Window height",
						"WindowHeight:0.0 = \"400\" // 0 to 32767",
						"",
						"// Window is maximized on boot",
						"WindowMaximized:0.0 = \"false\"",
						"",
						"// Window width",
						"WindowWidth:0.0 = \"640\" // 0 to 32767",
						"",
						"// Window X position",
						"WindowX:0.0 = \"-32768\" // -32768 to 32767",
						"",
						"// Window Y position",
						"WindowY:0.0 = \"-32768\" // -32768 to 32767",
						"",
						"//",
						"// Gameplay",
						"//",
						"",
						"// Apply custom framerate limit",
						"CapFps:0.0 = \"true\"",
						"",
						"// Adds blur on out of focus areas when aiming down sights",
						"DepthOfField:0.0 = \"false\"",
						"",
						"// Adjusts the strength of the visual noise applied in-game",
						"FilmGrain:0.0 = \"0.000000\" // 0.000000 to 1.000000",
						"",
						"// Custom maximum frames per second when in a match",
						"MaxFpsInGame:0.0 = \"300\" // 30 to 300",
						"",
						"// Custom maximum frames per second when in menus",
						"MaxFpsInMenu:1.0 = \"120\" // 30 to 300",
						"",
						"// Custom maximum frames per second when game is out of focus",
						"MaxFpsOutOfFocus:0.0 = \"30\" // 5 to 300",
						"",
						"//",
						"// Graphics",
						"//",
						"",
						"// User preferred anti-aliasing technique",
						"AATechniquePreferred:0.0 = \"SMAA T2x\" // one of [SMAA T2x, Filmic SMAA T2x, DLSS, XeSS]",
						"",
						"// Strength for Contrast Adaptive Sharpening (CAS)",
						"AMDContrastAdaptiveSharpeningStrength:0.0 = \"0.500000\" // 0.000000 to 1.000000",
						"",
						"// Enable AMD FidelityFX Super Resolution",
						"AMDSuperResolution:0.0 = \"CAS - Sharpening only\" // one of [Off, CAS - Sharpening only, AMD FSR 1.0]",
						"",
						"// AMD FidelityFX Super Resolution quality",
						"AMDSuperResolutionQuality:0.0 = \"Maximum Quality\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality]",
						"",
						"// Absolute target resolution",
						"AbsoluteTargetResolution:0.0 = \"none\" // one of [540P, 640P, 720P, 900P, 1080P, 1440P, native, none]",
						"",
						"// Show bullet impacts",
						"BulletImpacts:0.0 = \"false\"",
						"",
						"// Use spot shadow cache to improve framerate",
						"CacheSpotShadow:0.0 = \"Disabled\" // one of [Disabled, Enabled, Preserve Updates]",
						"",
						"// Use cache sun shadow",
						"CacheSunShadow:0.0 = \"false\"",
						"",
						"// The maximum distance at which clutter models are rendered.",
						"ClutterMaxDist:0.0 = \"500.000000\" // 100.000000 to 10000.000000",
						"",
						"// Corpses culling threshold",
						"CorpsesCullingThreshold:0.0 = \"0.500000\" // 0.500000 to 1.000000",
						"",
						"// DLSS performance mode",
						"DLSSPerfMode:0.0 = \"Balanced\" // one of [Ultra Performance, Maximum Performance, Balanced, Maximum Quality]",
						"",
						"// DLSS Sharpness.",
						"DLSSSharpness:0.0 = \"0.650000\" // -1.000000 to 1.000000",
						"",
						"// Enable deferred physics",
						"DeferredPhysics:0.0 = \"Low Quality\" // one of [Low Quality, Medium Quality, High Quality, Developer]",
						"",
						"// Activate dynamic scene resolution",
						"DynamicSceneResolution:0.0 = \"false\"",
						"",
						"// Target frame time in ms for dynamic scene resolution.",
						"DynamicSceneResolutionTarget:0.0 = \"16.670000\" // 0.000000 to 100.000000",
						"",
						"// Strength of the filmic visual noise filter",
						"FilmicStrength:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Preferred GPU if multiple GPU system",
						string.Join(Environment.NewLine, array2),
						"",
						"// GTAO Quality level",
						"GTAOQuality:0.0 = \"R_GTAO_QUALITY_LOW\" // one of [R_GTAO_QUALITY_LOW, R_GTAO_QUALITY_MEDIUM, R_GTAO_QUALITY_HIGH, R_GTAO_QUALITY_ULTRA]",
						"",
						"// Set HDR activation mode. Option only takes effect on HDR Display.",
						"HDR:0.0 = \"Automatic\" // one of [Off, On, Automatic]",
						"",
						"// LODs distance quality",
						"ModelLodDistanceQuality:0.0 = \"Base Quality\" // one of [High Quality, Base Quality]",
						"",
						"// Models quality",
						"ModelLodQuality:0.0 = \"Base quality\" // one of [High quality, Base quality]",
						"",
						"// Enable NVIDIA Image Scaling",
						"NVIDIAImageScaling:0.0 = \"false\"",
						"",
						"// NVIDIA Image Scaling quality",
						"NVIDIAImageScalingQuality:0.0 = \"Maximum Quality\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality, Custom]",
						"",
						"// NVIDIA Image Scaling sharpness",
						"NVIDIAImageScalingSharpness:0.0 = \"0.300000\" // 0.000000 to 1.000000",
						"",
						"// Particle Lighting Quality",
						"ParticleLighting:0.0 = \"0\" // 0 to 5",
						"",
						"// Particle Quality quality level",
						"ParticleQualityLevel:0.0 = \"low\" // one of [very low, low, medium, high]",
						"",
						"// Particle Resolution quality level",
						"ParticuleResolution:0.0 = \"true\"",
						"",
						"// Enable persistent damage layer",
						"PersistentDamageLayer:0.0 = \"true\"",
						"",
						"// Particle Lighting quality level",
						"PixelPerLightmapTexel:0.0 = \"16.000000\" // 1.000000 to 256.000000",
						"",
						"// Enable half resolution reflection probes",
						"ReflectionProbeHalfResolution:0.0 = \"false\"",
						"",
						"// Reflection probe relighting update stages",
						"ReflectionProbeRelighting:0.0 = \"1\" // 1 to 4",
						"",
						"// SMAA Quality level",
						"SMAAQuality:0.0 = \"SMAA_QUALITY_LOW\" // one of [SMAA_QUALITY_LOW, SMAA_QUALITY_MEDIUM, SMAA_QUALITY_HIGH, SMAA_QUALITY_ULTRA]",
						"",
						"// Screen-space ambient occlusion method",
						"SSAOTechnique:0.0 = \"Off\" // one of [Off, GTAO, MDAO, GTAO & MDAO]",
						"",
						"// Screen-space reflection mode",
						"SSRMode:0.0 = \"Off\" // one of [Off, Deferred LQ, Deferred HQ]",
						"",
						"// Screen Space Shadow quality level",
						"ScreenSpaceShadowQuality:0.0 = \"Off\" // one of [Off, Low, High]",
						"",
						"// Select the shader quality setting",
						"ShaderQuality:0.0 = \"Low\" // one of [Default, Medium, Low]",
						"",
						"// Shadow resolution quality level",
						"ShadowMapResolution:1.0 = \"Very Low\" // one of [Very Low, Low, Normal, High, Extra, Ultra]",
						"",
						"// Adjust size of Spot Shadow Cache",
						"SpotShadowCacheSize:0.0 = \"0\" // 0 to 3",
						"",
						"// Quality level of spot shadow",
						"SpotShadowQualityLevel:0.0 = \"Low\" // one of [Low, Medium, High]",
						"",
						"// Static sunshadow moment clipmap resolution",
						"StaticSunshadowClipmapResolution:0.0 = \"0\" // 0 to 2147483647",
						"",
						"// Catmull Clark subdivision level",
						"SubdivisionLevel:0.0 = \"3\" // 0 to 8",
						"",
						"// Quality level of shadows from the sun at a distance",
						"SunShadowCascade:0.0 = \"Normal (2-3 cascades)\" // one of [Low    (1 cascade), Normal (2-3 cascades)]",
						"",
						"// Tessellation quality level",
						"Tessellation:0.0 = \"0_Off\" // one of [0_Off, 1_Near, 2_All]",
						"",
						"// Texture filtering quality level",
						"TextureFilter:0.0 = \"TEXTURE_FILTER_NEAREST\" // one of [TEXTURE_FILTER_NEAREST, TEXTURE_FILTER_LINEAR, TEXTURE_FILTER_ANISO2X, TEXTURE_FILTER_ANISO4X, TEXTURE_FILTER_ANISO8X, TEXTURE_FILTER_ANISO16X, TEXTURE_FILTER_CMP]",
						"",
						"// Texture quality level, high to low ( higher number means lower resolution )",
						"TextureQuality:0.0 = \"3\" // 0 to 3",
						"",
						"// Ui Quality",
						"UiQuality:0.0 = \"Auto\" // one of [1080P, 4K, Auto]",
						"",
						"// Use large physical textures",
						"VirtualTexturingLargeMemory:0.0 = \"false\"",
						"",
						"// Volumetric quality",
						"VolumetricQuality:0.0 = \"QUALITY_LOW\" // one of [QUALITY_LOW, QUALITY_MEDIUM, QUALITY_HIGH]",
						"",
						"// Select water caustics mode",
						"WaterCausticsMode:0.0 = \"Off\" // one of [Off, Low Quality, High Quality]",
						"",
						"// Enable weather grid volumes",
						"WeatherGridVolumes:0.0 = \"false\"",
						"",
						"// Select weather grid volumes quality",
						"WeatherGridVolumesQuality:0.0 = \"Low\" // one of [Ultra, High, Medium, Low, Off]",
						"",
						"// World streaming quality option",
						"WorldStreamingQuality:0.0 = \"Low\" // one of [Low, High]",
						"",
						"// XeSS quality",
						"XeSSQuality:0.0 = \"Balanced\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality, Custom]",
						"",
						"//",
						"// Interface",
						"//",
						"",
						"// Skip introduction movie that plays when game is started",
						"SkipIntro:0.0 = \"false\"",
						"",
						"//",
						"// Mouse and Gamepad",
						"//",
						"",
						"// Set minimum delay in milliseconds between valid mouse wheel inputs",
						"WeaponCycleDelay:0.0 = \"0\" // 0 to 5000",
						"",
						"//",
						"// System",
						"//",
						"",
						"// Allow campaign savegame to be synced in with the cloud",
						"ConfigCloudSavegameEnabled:0.0 = \"true\"",
						"",
						"// Allows non-hardware settings to be synced in with the cloud",
						"ConfigCloudStorageEnabled:0.0 = \"false\"",
						"",
						"// Indicates whether recommended settings have been set, will reset settings to recommended if set to 0",
						"RecommendedSet:0.0 = \"true\"",
						"",
						"// Thread count for handling the job queue",
						"RendererWorkerCount:0.0 = \"-1\" // -1 to 16",
						"",
						"// Set a target fraction of your PC's video memory to be used by the game",
						"VideoMemoryScale:0.0 = \"0.800000\" // 0.000000 to 2.000000",
						""
					});
					num = 4;
				}
				if (num == 4)
				{
					File.SetAttributes(this.cod_mw2_settings, FileAttributes.Normal);
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.cod_mw2_settings, text);
					num = 6;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004A2 RID: 1186 RVA: 0x000F8074 File Offset: 0x000F6274
		private void CODWZ2_a()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("Monitor:0.0")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.cod_mw2_settings)
						where s.Contains("GPUName:0.0")
						select s).ToArray<string>();
					num = 3;
				}
				string text;
				if (num == 3)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"0",
						"",
						"// system settings version.",
						"Version:0.0 = \"1\"",
						"",
						"//",
						"// Audio",
						"//",
						"",
						"// Audio mix",
						"AudioMix:0.0 = \"1\" // 0 to 9",
						"",
						"// Adjusts the volume of the sound effects",
						"EffectsVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts the volume of hit markers",
						"HitMarkersVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Licensed Music Volume",
						"LicensedMusicVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts the volume of the music",
						"MusicVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Sets whether audio should be muted when the game window is out of focus",
						"MuteAudioWhileOutOfFocus:0.0 = \"false\"",
						"",
						"// Adjusts the volume of audio in Telescope (MOTD)",
						"TelescopeVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Using push to talk to activate microphone.",
						"VoicePushToTalk:0.0 = \"true\"",
						"",
						"// Adjusts the volume for character dialogues and announcer voices",
						"VoiceVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Adjusts overall volume of the game",
						"Volume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// War Tracks Volume",
						"WarTracksVolume:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"//",
						"// Display",
						"//",
						"",
						"// Force specific aspect ratio independent of window aspect ratio",
						"AspectRatio:0.0 = \"auto\" // one of [auto, standard, 5:4, wide 16:10, wide 16:9, wide 18:9, wide 19.5:9, wide 21:9, wide 32:9]",
						"",
						"// Enables the async compute for specific cases",
						"AsyncCompute:0.0 = \"true\"",
						"",
						"// Constrain mouse to game window",
						"ConstrainMouse:0.0 = \"false\"",
						"",
						"// Color spaces for monitor output",
						"DisplayGamma:0.0 = \"BT709_sRGB\" // one of [BT709_sRGB, BT709_BT1886]",
						"",
						"// Fullscreen mode",
						"DisplayMode:0.0 = \"Fullscreen\" // one of [Windowed, Fullscreen, Fullscreen borderless window, Fullscreen borderless extended window]",
						"",
						"// Enable focused mode",
						"FocusedMode:0.0 = \"false\"",
						"",
						"// Set overlay opacity for the focused mode",
						"FocusedModeOpacity:0.0 = \"0.900000\" // 0.000000 to 1.000000",
						"",
						"// Monitor name of the monitor used to display the game",
						string.Join(Environment.NewLine, array),
						"",
						"// Enable Nvidia low latency mode. Boost mode request maximum GPU clock frequency regardless of workload",
						"NvidiaReflex:0.0 = \"Disabled\" // one of [Disabled, Enabled, Enabled + boost]",
						"",
						"// Fullscreen mode preference",
						"PreferredDisplayMode:0.0 = \"Fullscreen\" // one of [Windowed, Fullscreen, Fullscreen borderless window, Fullscreen borderless extended window]",
						"",
						"// Refresh rate of used monitor",
						"RefreshRate:0.0 = \"Auto\"",
						"",
						"// Fullscreen Resolution",
						string.Concat(new string[] { "Resolution:0.0 = \"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"",
						"// Percentage of window resolution that the 3D scene renders at. value set by the user. can be smaller than the actual.",
						"ResolutionMultiplier:0.0 = \"100\" // 0 to 200",
						"",
						"// Synchronizes framerate with refresh rate to prevent screen tearing issues",
						"VSync:0.0 = \"0\" // 0 to 4",
						"",
						"// Vsync while in menus only",
						"VSyncInMenu:0.0 = \"false\"",
						"",
						"// Window height",
						"WindowHeight:0.0 = \"400\" // 0 to 32767",
						"",
						"// Window is maximized on boot",
						"WindowMaximized:0.0 = \"false\"",
						"",
						"// Window width",
						"WindowWidth:0.0 = \"640\" // 0 to 32767",
						"",
						"// Window X position",
						"WindowX:0.0 = \"-32768\" // -32768 to 32767",
						"",
						"// Window Y position",
						"WindowY:0.0 = \"-32768\" // -32768 to 32767",
						"",
						"//",
						"// Gameplay",
						"//",
						"",
						"// Apply custom framerate limit",
						"CapFps:0.0 = \"true\"",
						"",
						"// Adds blur on out of focus areas when aiming down sights",
						"DepthOfField:0.0 = \"false\"",
						"",
						"// Adjusts the strength of the visual noise applied in-game",
						"FilmGrain:0.0 = \"0.000000\" // 0.000000 to 1.000000",
						"",
						"// Custom maximum frames per second when in a match",
						"MaxFpsInGame:0.0 = \"300\" // 30 to 300",
						"",
						"// Custom maximum frames per second when in menus",
						"MaxFpsInMenu:1.0 = \"120\" // 30 to 300",
						"",
						"// Custom maximum frames per second when game is out of focus",
						"MaxFpsOutOfFocus:0.0 = \"30\" // 5 to 300",
						"",
						"//",
						"// Graphics",
						"//",
						"",
						"// User preferred anti-aliasing technique",
						"AATechniquePreferred:0.0 = \"SMAA T2x\" // one of [SMAA T2x, Filmic SMAA T2x, DLSS, XeSS]",
						"",
						"// Strength for Contrast Adaptive Sharpening (CAS)",
						"AMDContrastAdaptiveSharpeningStrength:0.0 = \"0.500000\" // 0.000000 to 1.000000",
						"",
						"// Enable AMD FidelityFX Super Resolution",
						"AMDSuperResolution:0.0 = \"CAS - Sharpening only\" // one of [Off, CAS - Sharpening only, AMD FSR 1.0]",
						"",
						"// AMD FidelityFX Super Resolution quality",
						"AMDSuperResolutionQuality:0.0 = \"Maximum Quality\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality]",
						"",
						"// Absolute target resolution",
						"AbsoluteTargetResolution:0.0 = \"none\" // one of [540P, 640P, 720P, 900P, 1080P, 1440P, native, none]",
						"",
						"// Show bullet impacts",
						"BulletImpacts:0.0 = \"false\"",
						"",
						"// Use spot shadow cache to improve framerate",
						"CacheSpotShadow:0.0 = \"Disabled\" // one of [Disabled, Enabled, Preserve Updates]",
						"",
						"// Use cache sun shadow",
						"CacheSunShadow:0.0 = \"false\"",
						"",
						"// The maximum distance at which clutter models are rendered.",
						"ClutterMaxDist:0.0 = \"500.000000\" // 100.000000 to 10000.000000",
						"",
						"// Corpses culling threshold",
						"CorpsesCullingThreshold:0.0 = \"0.500000\" // 0.500000 to 1.000000",
						"",
						"// DLSS performance mode",
						"DLSSPerfMode:0.0 = \"Balanced\" // one of [Ultra Performance, Maximum Performance, Balanced, Maximum Quality]",
						"",
						"// DLSS Sharpness.",
						"DLSSSharpness:0.0 = \"0.650000\" // -1.000000 to 1.000000",
						"",
						"// Enable deferred physics",
						"DeferredPhysics:0.0 = \"Low Quality\" // one of [Low Quality, Medium Quality, High Quality, Developer]",
						"",
						"// Activate dynamic scene resolution",
						"DynamicSceneResolution:0.0 = \"false\"",
						"",
						"// Target frame time in ms for dynamic scene resolution.",
						"DynamicSceneResolutionTarget:0.0 = \"16.670000\" // 0.000000 to 100.000000",
						"",
						"// Strength of the filmic visual noise filter",
						"FilmicStrength:0.0 = \"1.000000\" // 0.000000 to 1.000000",
						"",
						"// Preferred GPU if multiple GPU system",
						string.Join(Environment.NewLine, array2),
						"",
						"// GTAO Quality level",
						"GTAOQuality:0.0 = \"R_GTAO_QUALITY_LOW\" // one of [R_GTAO_QUALITY_LOW, R_GTAO_QUALITY_MEDIUM, R_GTAO_QUALITY_HIGH, R_GTAO_QUALITY_ULTRA]",
						"",
						"// Set HDR activation mode. Option only takes effect on HDR Display.",
						"HDR:0.0 = \"Automatic\" // one of [Off, On, Automatic]",
						"",
						"// LODs distance quality",
						"ModelLodDistanceQuality:0.0 = \"Base Quality\" // one of [High Quality, Base Quality]",
						"",
						"// Models quality",
						"ModelLodQuality:0.0 = \"Base quality\" // one of [High quality, Base quality]",
						"",
						"// Enable NVIDIA Image Scaling",
						"NVIDIAImageScaling:0.0 = \"false\"",
						"",
						"// NVIDIA Image Scaling quality",
						"NVIDIAImageScalingQuality:0.0 = \"Maximum Quality\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality, Custom]",
						"",
						"// NVIDIA Image Scaling sharpness",
						"NVIDIAImageScalingSharpness:0.0 = \"0.300000\" // 0.000000 to 1.000000",
						"",
						"// Particle Lighting Quality",
						"ParticleLighting:0.0 = \"0\" // 0 to 5",
						"",
						"// Particle Quality quality level",
						"ParticleQualityLevel:0.0 = \"low\" // one of [very low, low, medium, high]",
						"",
						"// Particle Resolution quality level",
						"ParticuleResolution:0.0 = \"true\"",
						"",
						"// Enable persistent damage layer",
						"PersistentDamageLayer:0.0 = \"true\"",
						"",
						"// Particle Lighting quality level",
						"PixelPerLightmapTexel:0.0 = \"16.000000\" // 1.000000 to 256.000000",
						"",
						"// Enable half resolution reflection probes",
						"ReflectionProbeHalfResolution:0.0 = \"false\"",
						"",
						"// Reflection probe relighting update stages",
						"ReflectionProbeRelighting:0.0 = \"1\" // 1 to 4",
						"",
						"// SMAA Quality level",
						"SMAAQuality:0.0 = \"SMAA_QUALITY_LOW\" // one of [SMAA_QUALITY_LOW, SMAA_QUALITY_MEDIUM, SMAA_QUALITY_HIGH, SMAA_QUALITY_ULTRA]",
						"",
						"// Screen-space ambient occlusion method",
						"SSAOTechnique:0.0 = \"Off\" // one of [Off, GTAO, MDAO, GTAO & MDAO]",
						"",
						"// Screen-space reflection mode",
						"SSRMode:0.0 = \"Off\" // one of [Off, Deferred LQ, Deferred HQ]",
						"",
						"// Screen Space Shadow quality level",
						"ScreenSpaceShadowQuality:0.0 = \"Off\" // one of [Off, Low, High]",
						"",
						"// Select the shader quality setting",
						"ShaderQuality:0.0 = \"Low\" // one of [Default, Medium, Low]",
						"",
						"// Shadow resolution quality level",
						"ShadowMapResolution:1.0 = \"Very Low\" // one of [Very Low, Low, Normal, High, Extra, Ultra]",
						"",
						"// Adjust size of Spot Shadow Cache",
						"SpotShadowCacheSize:0.0 = \"0\" // 0 to 3",
						"",
						"// Quality level of spot shadow",
						"SpotShadowQualityLevel:0.0 = \"Low\" // one of [Low, Medium, High]",
						"",
						"// Static sunshadow moment clipmap resolution",
						"StaticSunshadowClipmapResolution:0.0 = \"0\" // 0 to 2147483647",
						"",
						"// Catmull Clark subdivision level",
						"SubdivisionLevel:0.0 = \"3\" // 0 to 8",
						"",
						"// Quality level of shadows from the sun at a distance",
						"SunShadowCascade:0.0 = \"Normal (2-3 cascades)\" // one of [Low    (1 cascade), Normal (2-3 cascades)]",
						"",
						"// Tessellation quality level",
						"Tessellation:0.0 = \"0_Off\" // one of [0_Off, 1_Near, 2_All]",
						"",
						"// Texture filtering quality level",
						"TextureFilter:0.0 = \"TEXTURE_FILTER_NEAREST\" // one of [TEXTURE_FILTER_NEAREST, TEXTURE_FILTER_LINEAR, TEXTURE_FILTER_ANISO2X, TEXTURE_FILTER_ANISO4X, TEXTURE_FILTER_ANISO8X, TEXTURE_FILTER_ANISO16X, TEXTURE_FILTER_CMP]",
						"",
						"// Texture quality level, high to low ( higher number means lower resolution )",
						"TextureQuality:0.0 = \"3\" // 0 to 3",
						"",
						"// Ui Quality",
						"UiQuality:0.0 = \"Auto\" // one of [1080P, 4K, Auto]",
						"",
						"// Use large physical textures",
						"VirtualTexturingLargeMemory:0.0 = \"false\"",
						"",
						"// Volumetric quality",
						"VolumetricQuality:0.0 = \"QUALITY_LOW\" // one of [QUALITY_LOW, QUALITY_MEDIUM, QUALITY_HIGH]",
						"",
						"// Select water caustics mode",
						"WaterCausticsMode:0.0 = \"Off\" // one of [Off, Low Quality, High Quality]",
						"",
						"// Enable weather grid volumes",
						"WeatherGridVolumes:0.0 = \"false\"",
						"",
						"// Select weather grid volumes quality",
						"WeatherGridVolumesQuality:0.0 = \"Low\" // one of [Ultra, High, Medium, Low, Off]",
						"",
						"// World streaming quality option",
						"WorldStreamingQuality:0.0 = \"Low\" // one of [Low, High]",
						"",
						"// XeSS quality",
						"XeSSQuality:0.0 = \"Balanced\" // one of [Maximum Performance, Balanced, Maximum Quality, Ultra Quality, Custom]",
						"",
						"//",
						"// Interface",
						"//",
						"",
						"// Skip introduction movie that plays when game is started",
						"SkipIntro:0.0 = \"false\"",
						"",
						"//",
						"// Mouse and Gamepad",
						"//",
						"",
						"// Set minimum delay in milliseconds between valid mouse wheel inputs",
						"WeaponCycleDelay:0.0 = \"0\" // 0 to 5000",
						"",
						"//",
						"// System",
						"//",
						"",
						"// Allow campaign savegame to be synced in with the cloud",
						"ConfigCloudSavegameEnabled:0.0 = \"true\"",
						"",
						"// Allows non-hardware settings to be synced in with the cloud",
						"ConfigCloudStorageEnabled:0.0 = \"false\"",
						"",
						"// Indicates whether recommended settings have been set, will reset settings to recommended if set to 0",
						"RecommendedSet:0.0 = \"true\"",
						"",
						"// Thread count for handling the job queue",
						"RendererWorkerCount:0.0 = \"-1\" // -1 to 16",
						"",
						"// Set a target fraction of your PC's video memory to be used by the game",
						"VideoMemoryScale:0.0 = \"0.800000\" // 0.000000 to 2.000000",
						""
					});
					num = 4;
				}
				if (num == 4)
				{
					File.SetAttributes(this.cod_mw2_settings, FileAttributes.Normal);
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.cod_mw2_settings, text);
					num = 6;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004A3 RID: 1187 RVA: 0x000F9138 File Offset: 0x000F7338
		private void DG_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality_BEND_STUDIO=100",
						"sg.ViewDistanceQuality_BEND_STUDIO=3",
						"sg.AntiAliasingQuality_BEND_STUDIO=3",
						"sg.ShadowQuality_BEND_STUDIO=3",
						"sg.PostProcessQuality_BEND_STUDIO=3",
						"sg.TextureQuality_BEND_STUDIO=3",
						"sg.EffectsQuality_BEND_STUDIO=3",
						"",
						"[/Script/Engine.GameUserSettings]",
						"IgnoreGamepad=False",
						"LockMouseInput=False",
						"InputDeviceMode=0",
						"GamepadDisplayMode=0",
						"PlayerCameraSensitivity=0.500000",
						"AimCameraSensitivity=0.500000",
						"MotionControlAimSensitivity=0.000000",
						"bPlayerCameraVerticalInverted=False",
						"bPlayerCameraHorizontalInverted=False",
						"bCrouchRollSwapped=False",
						"bSprintToggleEnabled=True",
						"bBikeCameraTrackingEnabled=True",
						"BikeCameraSensitivity=0.500000",
						"bBikeCameraVerticalInverted=False",
						"bBikeCameraHorizontalInverted=False",
						"bBikeBackupCameraEnabled=False",
						"bBikeFireTargetSwapped=False",
						"BikeSteeringSensitivityModifier=1.500000",
						"SwipeLength=1",
						"SwipeVerticalDeadzone=0.000000",
						"SwipeHorizontalDeadzone=0.000000",
						"SfxVolume=1.000000",
						"MusicVolume=1.000000",
						"SpeechVolume=1.000000",
						"ControllerVolume=0.000000",
						"AudioFormat=0",
						"AudioDynamicRange=1",
						"DialogLanguage=0",
						"InterfaceLanguage=0",
						"SubtitleLanguage=0",
						"bSubtitlesEnabled=True",
						"SubtitleSize=0",
						"SubtitleBackgroundOpacity=0",
						"bSubtitleNamesEnabled=True",
						"bAimSnapEnabled=False",
						"AimStickinessSensitivity=2",
						"AimFrictionSensitivity=2",
						"ControllerDeadzoneSensitivity=0",
						"bCameraFollowTrackingEnabled=True",
						"bRememberScopeZoomEnabled=True",
						"bRememberAimSideEnabled=True",
						"bVibrationEnabled=True",
						"bXPIndicatorsEnabled=False",
						"bRepeatedButtonHoldEnabled=False",
						"RepeatedButtonSize=0",
						"bSwipeControlsEnabled=True",
						"bAutoCompleteReactionEventsEnabled=False",
						"InterfaceColorMode=0",
						"bTrackAssistEnabled=False",
						"SurvivalWheelMouseMode=1",
						"SurvivalWheelSmartScrollDelay=1.000000",
						"SurvivalWheelMinimumExpansionWidth=45.000000",
						"SurvivalWheelMinimumItemWidth=24.000000",
						"bSurvivalWheelDebugRenderingEnabled=False",
						"WeaponSelectionPreviewMode=0",
						string.Concat(new string[] { "VideoSettings=", this.DefaultWidth, "x", this.DefaultHeight, "f -device=0 -hdr=0 -refresh0=60000 -refresh1=1000" }),
						string.Concat(new string[] { "LastUserConfirmedVideoSettings=", this.DefaultWidth, "x", this.DefaultHeight, "f -device=0 -hdr=0 -refresh0=60000 -refresh1=1000" }),
						"SyncInterval=1",
						"LastUserConfirmedSyncInterval=1",
						"Brightness=0.500000",
						"FOV=75.000000",
						"HDRGameBrightness=150.000000",
						"HDRGamePeakBrightness=1500.000000",
						"HDRUIBrightness=150.000000",
						"VisualPreset=4",
						"bChromaticAberrationEnabled=False",
						"bMotionBlurEnabled=False",
						"RenderScale=40.000000",
						"LightingQuality=0",
						"GeometryQuality=0",
						"FoliageDrawDistance=0",
						"ShadowQuality=0",
						"CloudAndFogQuality=0",
						"TextureFilterQuality=1",
						"TextureStreamingQuality=0",
						"bTelemetryEnabled=True",
						"bFullDataEnabled=False",
						"bDataPolicySeen=True",
						"bUseVSync=False",
						"LastUserConfirmedVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"LastUserConfirmedFrameRateLimit=0.000000",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=40", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "", "[/script/engine.renderersettings]",
						"r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				string text3;
				if (num == 3)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@2]", "r.SceneColorFringe.Max=0",
						"r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0",
						"r.DepthOfFieldQuality=0", ""
					});
					num = 4;
				}
				if (num == 4)
				{
					this.get_own_daysgone();
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.daysgone_main, text);
					num = 6;
				}
				if (num == 6)
				{
					File.WriteAllText(this.daysgone_first, text2);
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.daysgone_second, text3);
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004A4 RID: 1188 RVA: 0x000F99AC File Offset: 0x000F7BAC
		private void DG_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality_BEND_STUDIO=100",
						"sg.ViewDistanceQuality_BEND_STUDIO=3",
						"sg.AntiAliasingQuality_BEND_STUDIO=3",
						"sg.ShadowQuality_BEND_STUDIO=3",
						"sg.PostProcessQuality_BEND_STUDIO=3",
						"sg.TextureQuality_BEND_STUDIO=3",
						"sg.EffectsQuality_BEND_STUDIO=3",
						"",
						"[/Script/Engine.GameUserSettings]",
						"IgnoreGamepad=False",
						"LockMouseInput=False",
						"InputDeviceMode=0",
						"GamepadDisplayMode=0",
						"PlayerCameraSensitivity=0.500000",
						"AimCameraSensitivity=0.500000",
						"MotionControlAimSensitivity=0.000000",
						"bPlayerCameraVerticalInverted=False",
						"bPlayerCameraHorizontalInverted=False",
						"bCrouchRollSwapped=False",
						"bSprintToggleEnabled=True",
						"bBikeCameraTrackingEnabled=True",
						"BikeCameraSensitivity=0.500000",
						"bBikeCameraVerticalInverted=False",
						"bBikeCameraHorizontalInverted=False",
						"bBikeBackupCameraEnabled=False",
						"bBikeFireTargetSwapped=False",
						"BikeSteeringSensitivityModifier=1.500000",
						"SwipeLength=1",
						"SwipeVerticalDeadzone=0.000000",
						"SwipeHorizontalDeadzone=0.000000",
						"SfxVolume=1.000000",
						"MusicVolume=1.000000",
						"SpeechVolume=1.000000",
						"ControllerVolume=0.000000",
						"AudioFormat=0",
						"AudioDynamicRange=1",
						"DialogLanguage=0",
						"InterfaceLanguage=0",
						"SubtitleLanguage=0",
						"bSubtitlesEnabled=True",
						"SubtitleSize=0",
						"SubtitleBackgroundOpacity=0",
						"bSubtitleNamesEnabled=True",
						"bAimSnapEnabled=False",
						"AimStickinessSensitivity=2",
						"AimFrictionSensitivity=2",
						"ControllerDeadzoneSensitivity=0",
						"bCameraFollowTrackingEnabled=True",
						"bRememberScopeZoomEnabled=True",
						"bRememberAimSideEnabled=True",
						"bVibrationEnabled=True",
						"bXPIndicatorsEnabled=False",
						"bRepeatedButtonHoldEnabled=False",
						"RepeatedButtonSize=0",
						"bSwipeControlsEnabled=True",
						"bAutoCompleteReactionEventsEnabled=False",
						"InterfaceColorMode=0",
						"bTrackAssistEnabled=False",
						"SurvivalWheelMouseMode=1",
						"SurvivalWheelSmartScrollDelay=1.000000",
						"SurvivalWheelMinimumExpansionWidth=45.000000",
						"SurvivalWheelMinimumItemWidth=24.000000",
						"bSurvivalWheelDebugRenderingEnabled=False",
						"WeaponSelectionPreviewMode=0",
						string.Concat(new string[] { "VideoSettings=", this.DefaultWidth, "x", this.DefaultHeight, "f -device=0 -hdr=0 -refresh0=60000 -refresh1=1000" }),
						string.Concat(new string[] { "LastUserConfirmedVideoSettings=", this.DefaultWidth, "x", this.DefaultHeight, "f -device=0 -hdr=0 -refresh0=60000 -refresh1=1000" }),
						"SyncInterval=1",
						"LastUserConfirmedSyncInterval=1",
						"Brightness=0.500000",
						"FOV=75.000000",
						"HDRGameBrightness=150.000000",
						"HDRGamePeakBrightness=1500.000000",
						"HDRUIBrightness=150.000000",
						"VisualPreset=4",
						"bChromaticAberrationEnabled=False",
						"bMotionBlurEnabled=False",
						"RenderScale=50.000000",
						"LightingQuality=0",
						"GeometryQuality=0",
						"FoliageDrawDistance=0",
						"ShadowQuality=0",
						"CloudAndFogQuality=0",
						"TextureFilterQuality=1",
						"TextureStreamingQuality=0",
						"bTelemetryEnabled=True",
						"bFullDataEnabled=False",
						"bDataPolicySeen=True",
						"bUseVSync=False",
						"LastUserConfirmedVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"LastUserConfirmedFrameRateLimit=0.000000",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=50", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "", "[/script/engine.renderersettings]",
						"r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				string text3;
				if (num == 3)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@2]", "r.SceneColorFringe.Max=0",
						"r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0",
						"r.DepthOfFieldQuality=0", ""
					});
					num = 4;
				}
				if (num == 4)
				{
					this.get_own_daysgone();
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.daysgone_main, text);
					num = 6;
				}
				if (num == 6)
				{
					File.WriteAllText(this.daysgone_first, text2);
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.daysgone_second, text3);
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004A5 RID: 1189 RVA: 0x000FA220 File Offset: 0x000F8420
		private void DG_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality_BEND_STUDIO=100",
						"sg.ViewDistanceQuality_BEND_STUDIO=3",
						"sg.AntiAliasingQuality_BEND_STUDIO=3",
						"sg.ShadowQuality_BEND_STUDIO=3",
						"sg.PostProcessQuality_BEND_STUDIO=3",
						"sg.TextureQuality_BEND_STUDIO=3",
						"sg.EffectsQuality_BEND_STUDIO=3",
						"",
						"[/Script/Engine.GameUserSettings]",
						"IgnoreGamepad=False",
						"LockMouseInput=False",
						"InputDeviceMode=0",
						"GamepadDisplayMode=0",
						"PlayerCameraSensitivity=0.500000",
						"AimCameraSensitivity=0.500000",
						"MotionControlAimSensitivity=0.000000",
						"bPlayerCameraVerticalInverted=False",
						"bPlayerCameraHorizontalInverted=False",
						"bCrouchRollSwapped=False",
						"bSprintToggleEnabled=True",
						"bBikeCameraTrackingEnabled=True",
						"BikeCameraSensitivity=0.500000",
						"bBikeCameraVerticalInverted=False",
						"bBikeCameraHorizontalInverted=False",
						"bBikeBackupCameraEnabled=False",
						"bBikeFireTargetSwapped=False",
						"BikeSteeringSensitivityModifier=1.500000",
						"SwipeLength=1",
						"SwipeVerticalDeadzone=0.000000",
						"SwipeHorizontalDeadzone=0.000000",
						"SfxVolume=1.000000",
						"MusicVolume=1.000000",
						"SpeechVolume=1.000000",
						"ControllerVolume=0.000000",
						"AudioFormat=0",
						"AudioDynamicRange=1",
						"DialogLanguage=0",
						"InterfaceLanguage=0",
						"SubtitleLanguage=0",
						"bSubtitlesEnabled=True",
						"SubtitleSize=0",
						"SubtitleBackgroundOpacity=0",
						"bSubtitleNamesEnabled=True",
						"bAimSnapEnabled=False",
						"AimStickinessSensitivity=2",
						"AimFrictionSensitivity=2",
						"ControllerDeadzoneSensitivity=0",
						"bCameraFollowTrackingEnabled=True",
						"bRememberScopeZoomEnabled=True",
						"bRememberAimSideEnabled=True",
						"bVibrationEnabled=True",
						"bXPIndicatorsEnabled=False",
						"bRepeatedButtonHoldEnabled=False",
						"RepeatedButtonSize=0",
						"bSwipeControlsEnabled=True",
						"bAutoCompleteReactionEventsEnabled=False",
						"InterfaceColorMode=0",
						"bTrackAssistEnabled=False",
						"SurvivalWheelMouseMode=1",
						"SurvivalWheelSmartScrollDelay=1.000000",
						"SurvivalWheelMinimumExpansionWidth=45.000000",
						"SurvivalWheelMinimumItemWidth=24.000000",
						"bSurvivalWheelDebugRenderingEnabled=False",
						"WeaponSelectionPreviewMode=0",
						string.Concat(new string[] { "VideoSettings=", this.DefaultWidth, "x", this.DefaultHeight, "f -device=0 -hdr=0 -refresh0=60000 -refresh1=1000" }),
						string.Concat(new string[] { "LastUserConfirmedVideoSettings=", this.DefaultWidth, "x", this.DefaultHeight, "f -device=0 -hdr=0 -refresh0=60000 -refresh1=1000" }),
						"SyncInterval=1",
						"LastUserConfirmedSyncInterval=1",
						"Brightness=0.500000",
						"FOV=75.000000",
						"HDRGameBrightness=150.000000",
						"HDRGamePeakBrightness=1500.000000",
						"HDRUIBrightness=150.000000",
						"VisualPreset=4",
						"bChromaticAberrationEnabled=False",
						"bMotionBlurEnabled=False",
						"RenderScale=70.000000",
						"LightingQuality=0",
						"GeometryQuality=0",
						"FoliageDrawDistance=0",
						"ShadowQuality=0",
						"CloudAndFogQuality=0",
						"TextureFilterQuality=1",
						"TextureStreamingQuality=0",
						"bTelemetryEnabled=True",
						"bFullDataEnabled=False",
						"bDataPolicySeen=True",
						"bUseVSync=False",
						"LastUserConfirmedVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"LastUserConfirmedFrameRateLimit=0.000000",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=70", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "", "[/script/engine.renderersettings]",
						"r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				string text3;
				if (num == 3)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@2]", "r.SceneColorFringe.Max=0",
						"r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0",
						"r.DepthOfFieldQuality=0", ""
					});
					num = 4;
				}
				if (num == 4)
				{
					this.get_own_daysgone();
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.daysgone_main, text);
					num = 6;
				}
				if (num == 6)
				{
					File.WriteAllText(this.daysgone_first, text2);
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.daysgone_second, text3);
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004A6 RID: 1190 RVA: 0x000FAA94 File Offset: 0x000F8C94
		private void DG_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality_BEND_STUDIO=100",
						"sg.ViewDistanceQuality_BEND_STUDIO=3",
						"sg.AntiAliasingQuality_BEND_STUDIO=3",
						"sg.ShadowQuality_BEND_STUDIO=3",
						"sg.PostProcessQuality_BEND_STUDIO=3",
						"sg.TextureQuality_BEND_STUDIO=3",
						"sg.EffectsQuality_BEND_STUDIO=3",
						"",
						"[/Script/Engine.GameUserSettings]",
						"IgnoreGamepad=False",
						"LockMouseInput=False",
						"InputDeviceMode=0",
						"GamepadDisplayMode=0",
						"PlayerCameraSensitivity=0.500000",
						"AimCameraSensitivity=0.500000",
						"MotionControlAimSensitivity=0.000000",
						"bPlayerCameraVerticalInverted=False",
						"bPlayerCameraHorizontalInverted=False",
						"bCrouchRollSwapped=False",
						"bSprintToggleEnabled=True",
						"bBikeCameraTrackingEnabled=True",
						"BikeCameraSensitivity=0.500000",
						"bBikeCameraVerticalInverted=False",
						"bBikeCameraHorizontalInverted=False",
						"bBikeBackupCameraEnabled=False",
						"bBikeFireTargetSwapped=False",
						"BikeSteeringSensitivityModifier=1.500000",
						"SwipeLength=1",
						"SwipeVerticalDeadzone=0.000000",
						"SwipeHorizontalDeadzone=0.000000",
						"SfxVolume=1.000000",
						"MusicVolume=1.000000",
						"SpeechVolume=1.000000",
						"ControllerVolume=0.000000",
						"AudioFormat=0",
						"AudioDynamicRange=1",
						"DialogLanguage=0",
						"InterfaceLanguage=0",
						"SubtitleLanguage=0",
						"bSubtitlesEnabled=True",
						"SubtitleSize=0",
						"SubtitleBackgroundOpacity=0",
						"bSubtitleNamesEnabled=True",
						"bAimSnapEnabled=False",
						"AimStickinessSensitivity=2",
						"AimFrictionSensitivity=2",
						"ControllerDeadzoneSensitivity=0",
						"bCameraFollowTrackingEnabled=True",
						"bRememberScopeZoomEnabled=True",
						"bRememberAimSideEnabled=True",
						"bVibrationEnabled=True",
						"bXPIndicatorsEnabled=False",
						"bRepeatedButtonHoldEnabled=False",
						"RepeatedButtonSize=0",
						"bSwipeControlsEnabled=True",
						"bAutoCompleteReactionEventsEnabled=False",
						"InterfaceColorMode=0",
						"bTrackAssistEnabled=False",
						"SurvivalWheelMouseMode=1",
						"SurvivalWheelSmartScrollDelay=1.000000",
						"SurvivalWheelMinimumExpansionWidth=45.000000",
						"SurvivalWheelMinimumItemWidth=24.000000",
						"bSurvivalWheelDebugRenderingEnabled=False",
						"WeaponSelectionPreviewMode=0",
						string.Concat(new string[] { "VideoSettings=", this.DefaultWidth, "x", this.DefaultHeight, "f -device=0 -hdr=0 -refresh0=60000 -refresh1=1000" }),
						string.Concat(new string[] { "LastUserConfirmedVideoSettings=", this.DefaultWidth, "x", this.DefaultHeight, "f -device=0 -hdr=0 -refresh0=60000 -refresh1=1000" }),
						"SyncInterval=1",
						"LastUserConfirmedSyncInterval=1",
						"Brightness=0.500000",
						"FOV=75.000000",
						"HDRGameBrightness=150.000000",
						"HDRGamePeakBrightness=1500.000000",
						"HDRUIBrightness=150.000000",
						"VisualPreset=4",
						"bChromaticAberrationEnabled=False",
						"bMotionBlurEnabled=False",
						"RenderScale=80.000000",
						"LightingQuality=0",
						"GeometryQuality=0",
						"FoliageDrawDistance=0",
						"ShadowQuality=0",
						"CloudAndFogQuality=0",
						"TextureFilterQuality=1",
						"TextureStreamingQuality=0",
						"bTelemetryEnabled=True",
						"bFullDataEnabled=False",
						"bDataPolicySeen=True",
						"bUseVSync=False",
						"LastUserConfirmedVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"LastUserConfirmedFrameRateLimit=0.000000",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=80", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "", "[/script/engine.renderersettings]",
						"r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				string text3;
				if (num == 3)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@2]", "r.SceneColorFringe.Max=0",
						"r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0",
						"r.DepthOfFieldQuality=0", ""
					});
					num = 4;
				}
				if (num == 4)
				{
					this.get_own_daysgone();
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.daysgone_main, text);
					num = 6;
				}
				if (num == 6)
				{
					File.WriteAllText(this.daysgone_first, text2);
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.daysgone_second, text3);
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004A7 RID: 1191 RVA: 0x000FB308 File Offset: 0x000F9508
		private void DG_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality_BEND_STUDIO=100",
						"sg.ViewDistanceQuality_BEND_STUDIO=3",
						"sg.AntiAliasingQuality_BEND_STUDIO=3",
						"sg.ShadowQuality_BEND_STUDIO=3",
						"sg.PostProcessQuality_BEND_STUDIO=3",
						"sg.TextureQuality_BEND_STUDIO=3",
						"sg.EffectsQuality_BEND_STUDIO=3",
						"",
						"[/Script/Engine.GameUserSettings]",
						"IgnoreGamepad=False",
						"LockMouseInput=False",
						"InputDeviceMode=0",
						"GamepadDisplayMode=0",
						"PlayerCameraSensitivity=0.500000",
						"AimCameraSensitivity=0.500000",
						"MotionControlAimSensitivity=0.000000",
						"bPlayerCameraVerticalInverted=False",
						"bPlayerCameraHorizontalInverted=False",
						"bCrouchRollSwapped=False",
						"bSprintToggleEnabled=True",
						"bBikeCameraTrackingEnabled=True",
						"BikeCameraSensitivity=0.500000",
						"bBikeCameraVerticalInverted=False",
						"bBikeCameraHorizontalInverted=False",
						"bBikeBackupCameraEnabled=False",
						"bBikeFireTargetSwapped=False",
						"BikeSteeringSensitivityModifier=1.500000",
						"SwipeLength=1",
						"SwipeVerticalDeadzone=0.000000",
						"SwipeHorizontalDeadzone=0.000000",
						"SfxVolume=1.000000",
						"MusicVolume=1.000000",
						"SpeechVolume=1.000000",
						"ControllerVolume=0.000000",
						"AudioFormat=0",
						"AudioDynamicRange=1",
						"DialogLanguage=0",
						"InterfaceLanguage=0",
						"SubtitleLanguage=0",
						"bSubtitlesEnabled=True",
						"SubtitleSize=0",
						"SubtitleBackgroundOpacity=0",
						"bSubtitleNamesEnabled=True",
						"bAimSnapEnabled=False",
						"AimStickinessSensitivity=2",
						"AimFrictionSensitivity=2",
						"ControllerDeadzoneSensitivity=0",
						"bCameraFollowTrackingEnabled=True",
						"bRememberScopeZoomEnabled=True",
						"bRememberAimSideEnabled=True",
						"bVibrationEnabled=True",
						"bXPIndicatorsEnabled=False",
						"bRepeatedButtonHoldEnabled=False",
						"RepeatedButtonSize=0",
						"bSwipeControlsEnabled=True",
						"bAutoCompleteReactionEventsEnabled=False",
						"InterfaceColorMode=0",
						"bTrackAssistEnabled=False",
						"SurvivalWheelMouseMode=1",
						"SurvivalWheelSmartScrollDelay=1.000000",
						"SurvivalWheelMinimumExpansionWidth=45.000000",
						"SurvivalWheelMinimumItemWidth=24.000000",
						"bSurvivalWheelDebugRenderingEnabled=False",
						"WeaponSelectionPreviewMode=0",
						string.Concat(new string[] { "VideoSettings=", this.DefaultWidth, "x", this.DefaultHeight, "f -device=0 -hdr=0 -refresh0=60000 -refresh1=1000" }),
						string.Concat(new string[] { "LastUserConfirmedVideoSettings=", this.DefaultWidth, "x", this.DefaultHeight, "f -device=0 -hdr=0 -refresh0=60000 -refresh1=1000" }),
						"SyncInterval=1",
						"LastUserConfirmedSyncInterval=1",
						"Brightness=0.500000",
						"FOV=75.000000",
						"HDRGameBrightness=150.000000",
						"HDRGamePeakBrightness=1500.000000",
						"HDRUIBrightness=150.000000",
						"VisualPreset=4",
						"bChromaticAberrationEnabled=False",
						"bMotionBlurEnabled=False",
						"RenderScale=85.000000",
						"LightingQuality=0",
						"GeometryQuality=0",
						"FoliageDrawDistance=0",
						"ShadowQuality=0",
						"CloudAndFogQuality=0",
						"TextureFilterQuality=1",
						"TextureStreamingQuality=0",
						"bTelemetryEnabled=True",
						"bFullDataEnabled=False",
						"bDataPolicySeen=True",
						"bUseVSync=False",
						"LastUserConfirmedVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"LastUserConfirmedFrameRateLimit=0.000000",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=85", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "", "[/script/engine.renderersettings]",
						"r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				string text3;
				if (num == 3)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@2]", "r.SceneColorFringe.Max=0",
						"r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0",
						"r.DepthOfFieldQuality=0", ""
					});
					num = 4;
				}
				if (num == 4)
				{
					this.get_own_daysgone();
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.daysgone_main, text);
					num = 6;
				}
				if (num == 6)
				{
					File.WriteAllText(this.daysgone_first, text2);
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.daysgone_second, text3);
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004A8 RID: 1192 RVA: 0x000FBB7C File Offset: 0x000F9D7C
		private void DG_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality_BEND_STUDIO=100",
						"sg.ViewDistanceQuality_BEND_STUDIO=3",
						"sg.AntiAliasingQuality_BEND_STUDIO=3",
						"sg.ShadowQuality_BEND_STUDIO=3",
						"sg.PostProcessQuality_BEND_STUDIO=3",
						"sg.TextureQuality_BEND_STUDIO=3",
						"sg.EffectsQuality_BEND_STUDIO=3",
						"",
						"[/Script/Engine.GameUserSettings]",
						"IgnoreGamepad=False",
						"LockMouseInput=False",
						"InputDeviceMode=0",
						"GamepadDisplayMode=0",
						"PlayerCameraSensitivity=0.500000",
						"AimCameraSensitivity=0.500000",
						"MotionControlAimSensitivity=0.000000",
						"bPlayerCameraVerticalInverted=False",
						"bPlayerCameraHorizontalInverted=False",
						"bCrouchRollSwapped=False",
						"bSprintToggleEnabled=True",
						"bBikeCameraTrackingEnabled=True",
						"BikeCameraSensitivity=0.500000",
						"bBikeCameraVerticalInverted=False",
						"bBikeCameraHorizontalInverted=False",
						"bBikeBackupCameraEnabled=False",
						"bBikeFireTargetSwapped=False",
						"BikeSteeringSensitivityModifier=1.500000",
						"SwipeLength=1",
						"SwipeVerticalDeadzone=0.000000",
						"SwipeHorizontalDeadzone=0.000000",
						"SfxVolume=1.000000",
						"MusicVolume=1.000000",
						"SpeechVolume=1.000000",
						"ControllerVolume=0.000000",
						"AudioFormat=0",
						"AudioDynamicRange=1",
						"DialogLanguage=0",
						"InterfaceLanguage=0",
						"SubtitleLanguage=0",
						"bSubtitlesEnabled=True",
						"SubtitleSize=0",
						"SubtitleBackgroundOpacity=0",
						"bSubtitleNamesEnabled=True",
						"bAimSnapEnabled=False",
						"AimStickinessSensitivity=2",
						"AimFrictionSensitivity=2",
						"ControllerDeadzoneSensitivity=0",
						"bCameraFollowTrackingEnabled=True",
						"bRememberScopeZoomEnabled=True",
						"bRememberAimSideEnabled=True",
						"bVibrationEnabled=True",
						"bXPIndicatorsEnabled=False",
						"bRepeatedButtonHoldEnabled=False",
						"RepeatedButtonSize=0",
						"bSwipeControlsEnabled=True",
						"bAutoCompleteReactionEventsEnabled=False",
						"InterfaceColorMode=0",
						"bTrackAssistEnabled=False",
						"SurvivalWheelMouseMode=1",
						"SurvivalWheelSmartScrollDelay=1.000000",
						"SurvivalWheelMinimumExpansionWidth=45.000000",
						"SurvivalWheelMinimumItemWidth=24.000000",
						"bSurvivalWheelDebugRenderingEnabled=False",
						"WeaponSelectionPreviewMode=0",
						string.Concat(new string[] { "VideoSettings=", this.DefaultWidth, "x", this.DefaultHeight, "f -device=0 -hdr=0 -refresh0=60000 -refresh1=1000" }),
						string.Concat(new string[] { "LastUserConfirmedVideoSettings=", this.DefaultWidth, "x", this.DefaultHeight, "f -device=0 -hdr=0 -refresh0=60000 -refresh1=1000" }),
						"SyncInterval=1",
						"LastUserConfirmedSyncInterval=1",
						"Brightness=0.500000",
						"FOV=75.000000",
						"HDRGameBrightness=150.000000",
						"HDRGamePeakBrightness=1500.000000",
						"HDRUIBrightness=150.000000",
						"VisualPreset=4",
						"bChromaticAberrationEnabled=False",
						"bMotionBlurEnabled=False",
						"RenderScale=90.000000",
						"LightingQuality=0",
						"GeometryQuality=0",
						"FoliageDrawDistance=0",
						"ShadowQuality=0",
						"CloudAndFogQuality=0",
						"TextureFilterQuality=1",
						"TextureStreamingQuality=0",
						"bTelemetryEnabled=True",
						"bFullDataEnabled=False",
						"bDataPolicySeen=True",
						"bUseVSync=False",
						"LastUserConfirmedVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"LastUserConfirmedFrameRateLimit=0.000000",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=90", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "", "[/script/engine.renderersettings]",
						"r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				string text3;
				if (num == 3)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@2]", "r.SceneColorFringe.Max=0",
						"r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0",
						"r.DepthOfFieldQuality=0", ""
					});
					num = 4;
				}
				if (num == 4)
				{
					this.get_own_daysgone();
					num = 5;
				}
				if (num == 5)
				{
					File.WriteAllText(this.daysgone_main, text);
					num = 6;
				}
				if (num == 6)
				{
					File.WriteAllText(this.daysgone_first, text2);
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.daysgone_second, text3);
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004A9 RID: 1193 RVA: 0x000FC3F0 File Offset: 0x000FA5F0
		private void DS_g()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstRender.PreviousRefreshRate")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstRender.RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 4)
				{
					text = "2";
					num = 5;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AAMode " + text,
						"GstRender.AmbientOcclusion 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.DLSSQuality " + this.resolutionScaleDLSS,
						"GstRender.DOFQuality 0",
						"GstRender.DRS 0",
						"GstRender.DRSTarget 2",
						"GstRender.FSR2Quality " + this.resolutionScaleFSR,
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenDevice 0",
						"GstRender.FullscreenMode 1",
						"GstRender.HDR 1",
						"GstRender.LightQuality 0",
						"GstRender.LightingQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PerformanceMode 1",
						"GstRender.PostProcessColorBlindContrastFloat 0.050000",
						string.Join(Environment.NewLine, array2),
						"GstRender.PreviousResolutionHeight " + this.DefaultHeight,
						"GstRender.PreviousResolutionWidth " + this.DefaultWidth,
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ResolutionScale 0.600000",
						"GstRender.ReflectionQuality 0",
						string.Join(Environment.NewLine, array3),
						"GstRender.Resolution 21",
						"GstRender.ShadowQuality 0",
						"GstRender.EffectsQuality 0",
						"GstRender.MeshQuality 0",
						"GstRender.TerrainQuality 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.TAAQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.VolumetricQuality 0",
						"GstRender.Vsync 0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.dead_space_main, text2);
					num = 8;
				}
				if (num == 8)
				{
					File.WriteAllText(this.dead_space_first, text3);
					num = 9;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x060004AA RID: 1194 RVA: 0x000FCA54 File Offset: 0x000FAC54
		private void DS_f()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstRender.PreviousRefreshRate")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstRender.RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 4)
				{
					text = "2";
					num = 5;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AAMode " + text,
						"GstRender.AmbientOcclusion 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.DLSSQuality " + this.resolutionScaleDLSS,
						"GstRender.DOFQuality 0",
						"GstRender.DRS 0",
						"GstRender.DRSTarget 2",
						"GstRender.FSR2Quality " + this.resolutionScaleFSR,
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenDevice 0",
						"GstRender.FullscreenMode 1",
						"GstRender.HDR 1",
						"GstRender.LightQuality 0",
						"GstRender.LightingQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PerformanceMode 1",
						"GstRender.PostProcessColorBlindContrastFloat 0.050000",
						string.Join(Environment.NewLine, array2),
						"GstRender.PreviousResolutionHeight " + this.DefaultHeight,
						"GstRender.PreviousResolutionWidth " + this.DefaultWidth,
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ResolutionScale 0.700000",
						"GstRender.ReflectionQuality 0",
						string.Join(Environment.NewLine, array3),
						"GstRender.Resolution 21",
						"GstRender.ShadowQuality 0",
						"GstRender.EffectsQuality 0",
						"GstRender.MeshQuality 0",
						"GstRender.TerrainQuality 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.TAAQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.VolumetricQuality 0",
						"GstRender.Vsync 0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.dead_space_main, text2);
					num = 8;
				}
				if (num == 8)
				{
					File.WriteAllText(this.dead_space_first, text3);
					num = 9;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x060004AB RID: 1195 RVA: 0x000FD0B8 File Offset: 0x000FB2B8
		private void DS_d()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstRender.PreviousRefreshRate")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstRender.RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 4)
				{
					text = "2";
					num = 5;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AAMode " + text,
						"GstRender.AmbientOcclusion 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.DLSSQuality " + this.resolutionScaleDLSS,
						"GstRender.DOFQuality 0",
						"GstRender.DRS 0",
						"GstRender.DRSTarget 2",
						"GstRender.FSR2Quality " + this.resolutionScaleFSR,
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenDevice 0",
						"GstRender.FullscreenMode 1",
						"GstRender.HDR 1",
						"GstRender.LightQuality 0",
						"GstRender.LightingQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PerformanceMode 1",
						"GstRender.PostProcessColorBlindContrastFloat 0.050000",
						string.Join(Environment.NewLine, array2),
						"GstRender.PreviousResolutionHeight " + this.DefaultHeight,
						"GstRender.PreviousResolutionWidth " + this.DefaultWidth,
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ResolutionScale 0.800000",
						"GstRender.ReflectionQuality 0",
						string.Join(Environment.NewLine, array3),
						"GstRender.Resolution 21",
						"GstRender.ShadowQuality 0",
						"GstRender.EffectsQuality 0",
						"GstRender.MeshQuality 0",
						"GstRender.TerrainQuality 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.TAAQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.VolumetricQuality 0",
						"GstRender.Vsync 0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.dead_space_main, text2);
					num = 8;
				}
				if (num == 8)
				{
					File.WriteAllText(this.dead_space_first, text3);
					num = 9;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x060004AC RID: 1196 RVA: 0x000FD71C File Offset: 0x000FB91C
		private void DS_c()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstRender.PreviousRefreshRate")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstRender.RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 4)
				{
					text = "2";
					num = 5;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AAMode " + text,
						"GstRender.AmbientOcclusion 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.DLSSQuality " + this.resolutionScaleDLSS,
						"GstRender.DOFQuality 0",
						"GstRender.DRS 0",
						"GstRender.DRSTarget 2",
						"GstRender.FSR2Quality " + this.resolutionScaleFSR,
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenDevice 0",
						"GstRender.FullscreenMode 1",
						"GstRender.HDR 1",
						"GstRender.LightQuality 0",
						"GstRender.LightingQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PerformanceMode 1",
						"GstRender.PostProcessColorBlindContrastFloat 0.050000",
						string.Join(Environment.NewLine, array2),
						"GstRender.PreviousResolutionHeight " + this.DefaultHeight,
						"GstRender.PreviousResolutionWidth " + this.DefaultWidth,
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ResolutionScale 0.900000",
						"GstRender.ReflectionQuality 0",
						string.Join(Environment.NewLine, array3),
						"GstRender.Resolution 21",
						"GstRender.ShadowQuality 0",
						"GstRender.EffectsQuality 0",
						"GstRender.MeshQuality 0",
						"GstRender.TerrainQuality 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.TAAQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.VolumetricQuality 0",
						"GstRender.Vsync 0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.dead_space_main, text2);
					num = 8;
				}
				if (num == 8)
				{
					File.WriteAllText(this.dead_space_first, text3);
					num = 9;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x060004AD RID: 1197 RVA: 0x000FDD80 File Offset: 0x000FBF80
		private void DS_b()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstRender.PreviousRefreshRate")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstRender.RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 4)
				{
					text = "2";
					num = 5;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AAMode " + text,
						"GstRender.AmbientOcclusion 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.DLSSQuality " + this.resolutionScaleDLSS,
						"GstRender.DOFQuality 0",
						"GstRender.DRS 0",
						"GstRender.DRSTarget 2",
						"GstRender.FSR2Quality " + this.resolutionScaleFSR,
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenDevice 0",
						"GstRender.FullscreenMode 1",
						"GstRender.HDR 1",
						"GstRender.LightQuality 0",
						"GstRender.LightingQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PerformanceMode 1",
						"GstRender.PostProcessColorBlindContrastFloat 0.050000",
						string.Join(Environment.NewLine, array2),
						"GstRender.PreviousResolutionHeight " + this.DefaultHeight,
						"GstRender.PreviousResolutionWidth " + this.DefaultWidth,
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ResolutionScale 0.950000",
						"GstRender.ReflectionQuality 0",
						string.Join(Environment.NewLine, array3),
						"GstRender.Resolution 21",
						"GstRender.ShadowQuality 0",
						"GstRender.EffectsQuality 0",
						"GstRender.MeshQuality 0",
						"GstRender.TerrainQuality 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.TAAQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.VolumetricQuality 0",
						"GstRender.Vsync 0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.dead_space_main, text2);
					num = 8;
				}
				if (num == 8)
				{
					File.WriteAllText(this.dead_space_first, text3);
					num = 9;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x060004AE RID: 1198 RVA: 0x000FE3E4 File Offset: 0x000FC5E4
		private void DS_a()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstRender.PreviousRefreshRate")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 3)
				{
					array3 = (from s in File.ReadAllLines(this.dead_space_main)
						where s.Contains("GstRender.RefreshRate")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 4)
				{
					text = "2";
					num = 5;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AAMode " + text,
						"GstRender.AmbientOcclusion 0",
						"GstRender.AntiAliasingPost 0",
						"GstRender.Brightness 0.500000",
						"GstRender.DLSSQuality " + this.resolutionScaleDLSS,
						"GstRender.DOFQuality 0",
						"GstRender.DRS 0",
						"GstRender.DRSTarget 2",
						"GstRender.FSR2Quality " + this.resolutionScaleFSR,
						"GstRender.FilmGrain 0",
						"GstRender.FullscreenDevice 0",
						"GstRender.FullscreenMode 1",
						"GstRender.HDR 1",
						"GstRender.LightQuality 0",
						"GstRender.LightingQuality 0",
						"GstRender.MotionBlur 0.000000",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PerformanceMode 1",
						"GstRender.PostProcessColorBlindContrastFloat 0.050000",
						string.Join(Environment.NewLine, array2),
						"GstRender.PreviousResolutionHeight " + this.DefaultHeight,
						"GstRender.PreviousResolutionWidth " + this.DefaultWidth,
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ResolutionScale 1.000000",
						"GstRender.ReflectionQuality 0",
						string.Join(Environment.NewLine, array3),
						"GstRender.Resolution 21",
						"GstRender.ShadowQuality 0",
						"GstRender.EffectsQuality 0",
						"GstRender.MeshQuality 0",
						"GstRender.TerrainQuality 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.TAAQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.VolumetricQuality 0",
						"GstRender.Vsync 0",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 6)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 7;
				}
				if (num == 7)
				{
					File.WriteAllText(this.dead_space_main, text2);
					num = 8;
				}
				if (num == 8)
				{
					File.WriteAllText(this.dead_space_first, text3);
					num = 9;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x060004AF RID: 1199 RVA: 0x000FEA48 File Offset: 0x000FCC48
		private void Destiny2_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\"?>",
						"<body>",
						"\t<namespace name=\"graphics\">",
						"\t\t<cvar name=\"force_auto_detect\" value=\"0\" />",
						"\t\t<cvar name=\"force_enable_multi_threaded_render_submit\" value=\"0\" />",
						"\t\t<cvar name=\"window_position_x\" value=\"8\" />",
						"\t\t<cvar name=\"window_position_y\" value=\"31\" />",
						"\t\t<cvar name=\"window_mode\" value=\"3\" />",
						"\t\t<cvar name=\"anti_aliasing_mode\" value=\"0\" />",
						"\t\t<cvar name=\"dof_mode\" value=\"0\" />",
						"\t\t<cvar name=\"ssao_mode\" value=\"0\" />",
						"\t\t<cvar name=\"shadow_quality\" value=\"0\" />",
						"\t\t<cvar name=\"environment_detail\" value=\"0\" />",
						"\t\t<cvar name=\"character_detail\" value=\"0\" />",
						"\t\t<cvar name=\"texture_quality\" value=\"1\" />",
						"\t\t<cvar name=\"texture_anisotropy_level\" value=\"0\" />",
						"\t\t<cvar name=\"foliage_detail\" value=\"0\" />",
						"\t\t<cvar name=\"local_light_shadows\" value=\"0\" />",
						"\t\t<cvar name=\"wind_impulse\" value=\"0\" />",
						"\t\t<cvar name=\"gamma_control\" value=\"3\" />",
						"\t\t<cvar name=\"foliage_shadows_mode\" value=\"0\" />",
						"\t\t<cvar name=\"hdr_output\" value=\"1\" />",
						"\t\t<cvar name=\"atmosphere_lighting_detail\" value=\"0\" />",
						"\t\t<cvar name=\"master\" value=\"0\" />",
						"\t\t<cvar name=\"framerate_cap_enabled\" value=\"0\" />",
						"\t\t<cvar name=\"low_latency_mode\" value=\"1\" />",
						"\t\t<cvar name=\"fullscreen_resolution_width\" value=\"" + this.DefaultWidth + "\" />",
						"\t\t<cvar name=\"fullscreen_resolution_height\" value=\"" + this.DefaultHeight + "\" />",
						"\t\t<cvar name=\"fullscreen_refresh_rate_numerator\" value=\"60000\" />",
						"\t\t<cvar name=\"fullscreen_refresh_rate_denominator\" value=\"1000\" />",
						"\t\t<cvar name=\"windowed_resolution_width\" value=\"" + this.DefaultWidth + "\" />",
						"\t\t<cvar name=\"windowed_resolution_height\" value=\"" + this.DefaultHeight + "\" />",
						"\t\t<cvar name=\"render_resolution_percentage\" value=\"60\" />",
						"\t\t<cvar name=\"framerate_cap\" value=\"200\" />",
						"\t\t<cvar name=\"version\" value=\"3\" />",
						"\t</namespace>",
						"\t<namespace name=\"key bindings\">",
						"\t\t<cvar name=\"fire\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"toggle_zoom\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"hold_zoom\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"melee\" value=\"c!unused\" />",
						"\t\t<cvar name=\"melee_uncharged\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"melee_charged\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"grenade\" value=\"q!unused\" />",
						"\t\t<cvar name=\"super\" value=\"f!unused\" />",
						"\t\t<cvar name=\"reload\" value=\"r!unused\" />",
						"\t\t<cvar name=\"light_attack\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"heavy_attack\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"block\" value=\"c!unused\" />",
						"\t\t<cvar name=\"switch_weapons\" value=\"`!unused\" />",
						"\t\t<cvar name=\"next_weapon\" value=\"mouse wheel up!unused\" />",
						"\t\t<cvar name=\"previous_weapon\" value=\"mouse wheel down!unused\" />",
						"\t\t<cvar name=\"primary_weapon\" value=\"1!unused\" />",
						"\t\t<cvar name=\"special_weapon\" value=\"2!unused\" />",
						"\t\t<cvar name=\"heavy_weapon\" value=\"3!unused\" />",
						"\t\t<cvar name=\"move_forward\" value=\"w!unused\" />",
						"\t\t<cvar name=\"move_backward\" value=\"s!unused\" />",
						"\t\t<cvar name=\"move_left\" value=\"a!unused\" />",
						"\t\t<cvar name=\"move_right\" value=\"d!unused\" />",
						"\t\t<cvar name=\"jump\" value=\"space!unused\" />",
						"\t\t<cvar name=\"toggle_crouch\" value=\"control!unused\" />",
						"\t\t<cvar name=\"hold_crouch\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"toggle_sprint\" value=\"shift!unused\" />",
						"\t\t<cvar name=\"hold_sprint\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"vehicle_boost\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_brake\" value=\"shift!unused\" />",
						"\t\t<cvar name=\"vehicle_zoom\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_fire_primary\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_fire_secondary\" value=\"e!unused\" />",
						"\t\t<cvar name=\"vehicle_exit\" value=\"space!unused\" />",
						"\t\t<cvar name=\"interact\" value=\"e!unused\" />",
						"\t\t<cvar name=\"highlight_player\" value=\"g!unused\" />",
						"\t\t<cvar name=\"emote_1\" value=\"up!unused\" />",
						"\t\t<cvar name=\"emote_2\" value=\"down!unused\" />",
						"\t\t<cvar name=\"emote_3\" value=\"left!unused\" />",
						"\t\t<cvar name=\"emote_4\" value=\"right!unused\" />",
						"\t\t<cvar name=\"air_move\" value=\"x!unused\" />",
						"\t\t<cvar name=\"class_ability\" value=\"v!unused\" />",
						"\t\t<cvar name=\"stasis_breakout\" value=\"v!unused\" />",
						"\t\t<cvar name=\"death_cam_zoom_in\" value=\"mouse wheel up!unused\" />",
						"\t\t<cvar name=\"death_cam_zoom_out\" value=\"mouse wheel down!unused\" />",
						"\t\t<cvar name=\"push_to_talk\" value=\"t!unused\" />",
						"\t\t<cvar name=\"ui_gamepad_button_back\" value=\"tab!unused\" />",
						"\t\t<cvar name=\"ui_open_director\" value=\"m!unused\" />",
						"\t\t<cvar name=\"ui_open_director_mtx_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_pursuits_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_map_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_destinations_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_roster_tab\" value=\"u!unused\" />",
						"\t\t<cvar name=\"ui_open_director_seasons_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_alternative\" value=\"i!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_records_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_collections_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_clan_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_inventory_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_settings_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_exit_dialog_confirm\" value=\"shift+escape!unused\" />",
						"\t\t<cvar name=\"ui_abort_activity\" value=\"o!unused\" />",
						"\t\t<cvar name=\"ui_text_chat_toggle_state\" value=\"l!unused\" />",
						"\t\t<cvar name=\"screenshot\" value=\"print screen!unused\" />",
						"\t</namespace>",
						"\t<namespace name=\"audio\">",
						"\t\t<cvar name=\"cached_music_volume\" value=\"6\" />",
						"\t\t<cvar name=\"cached_sfx_volume\" value=\"10\" />",
						"\t</namespace>",
						"\t<namespace name=\"gameplay\">",
						"\t\t<cvar name=\"mouse_smoothing_mode\" value=\"2\" />",
						"\t</namespace>",
						"</body>",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.destiny2_settings, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.destiny2_settings, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x060004B0 RID: 1200 RVA: 0x000FF05C File Offset: 0x000FD25C
		private void Destiny2_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\"?>",
						"<body>",
						"\t<namespace name=\"graphics\">",
						"\t\t<cvar name=\"force_auto_detect\" value=\"0\" />",
						"\t\t<cvar name=\"force_enable_multi_threaded_render_submit\" value=\"0\" />",
						"\t\t<cvar name=\"window_position_x\" value=\"8\" />",
						"\t\t<cvar name=\"window_position_y\" value=\"31\" />",
						"\t\t<cvar name=\"window_mode\" value=\"3\" />",
						"\t\t<cvar name=\"anti_aliasing_mode\" value=\"0\" />",
						"\t\t<cvar name=\"dof_mode\" value=\"0\" />",
						"\t\t<cvar name=\"ssao_mode\" value=\"0\" />",
						"\t\t<cvar name=\"shadow_quality\" value=\"0\" />",
						"\t\t<cvar name=\"environment_detail\" value=\"0\" />",
						"\t\t<cvar name=\"character_detail\" value=\"0\" />",
						"\t\t<cvar name=\"texture_quality\" value=\"1\" />",
						"\t\t<cvar name=\"texture_anisotropy_level\" value=\"0\" />",
						"\t\t<cvar name=\"foliage_detail\" value=\"0\" />",
						"\t\t<cvar name=\"local_light_shadows\" value=\"0\" />",
						"\t\t<cvar name=\"wind_impulse\" value=\"0\" />",
						"\t\t<cvar name=\"gamma_control\" value=\"3\" />",
						"\t\t<cvar name=\"foliage_shadows_mode\" value=\"0\" />",
						"\t\t<cvar name=\"hdr_output\" value=\"1\" />",
						"\t\t<cvar name=\"atmosphere_lighting_detail\" value=\"0\" />",
						"\t\t<cvar name=\"master\" value=\"0\" />",
						"\t\t<cvar name=\"framerate_cap_enabled\" value=\"0\" />",
						"\t\t<cvar name=\"low_latency_mode\" value=\"1\" />",
						"\t\t<cvar name=\"fullscreen_resolution_width\" value=\"" + this.DefaultWidth + "\" />",
						"\t\t<cvar name=\"fullscreen_resolution_height\" value=\"" + this.DefaultHeight + "\" />",
						"\t\t<cvar name=\"fullscreen_refresh_rate_numerator\" value=\"60000\" />",
						"\t\t<cvar name=\"fullscreen_refresh_rate_denominator\" value=\"1000\" />",
						"\t\t<cvar name=\"windowed_resolution_width\" value=\"" + this.DefaultWidth + "\" />",
						"\t\t<cvar name=\"windowed_resolution_height\" value=\"" + this.DefaultHeight + "\" />",
						"\t\t<cvar name=\"render_resolution_percentage\" value=\"70\" />",
						"\t\t<cvar name=\"framerate_cap\" value=\"200\" />",
						"\t\t<cvar name=\"version\" value=\"3\" />",
						"\t</namespace>",
						"\t<namespace name=\"key bindings\">",
						"\t\t<cvar name=\"fire\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"toggle_zoom\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"hold_zoom\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"melee\" value=\"c!unused\" />",
						"\t\t<cvar name=\"melee_uncharged\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"melee_charged\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"grenade\" value=\"q!unused\" />",
						"\t\t<cvar name=\"super\" value=\"f!unused\" />",
						"\t\t<cvar name=\"reload\" value=\"r!unused\" />",
						"\t\t<cvar name=\"light_attack\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"heavy_attack\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"block\" value=\"c!unused\" />",
						"\t\t<cvar name=\"switch_weapons\" value=\"`!unused\" />",
						"\t\t<cvar name=\"next_weapon\" value=\"mouse wheel up!unused\" />",
						"\t\t<cvar name=\"previous_weapon\" value=\"mouse wheel down!unused\" />",
						"\t\t<cvar name=\"primary_weapon\" value=\"1!unused\" />",
						"\t\t<cvar name=\"special_weapon\" value=\"2!unused\" />",
						"\t\t<cvar name=\"heavy_weapon\" value=\"3!unused\" />",
						"\t\t<cvar name=\"move_forward\" value=\"w!unused\" />",
						"\t\t<cvar name=\"move_backward\" value=\"s!unused\" />",
						"\t\t<cvar name=\"move_left\" value=\"a!unused\" />",
						"\t\t<cvar name=\"move_right\" value=\"d!unused\" />",
						"\t\t<cvar name=\"jump\" value=\"space!unused\" />",
						"\t\t<cvar name=\"toggle_crouch\" value=\"control!unused\" />",
						"\t\t<cvar name=\"hold_crouch\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"toggle_sprint\" value=\"shift!unused\" />",
						"\t\t<cvar name=\"hold_sprint\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"vehicle_boost\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_brake\" value=\"shift!unused\" />",
						"\t\t<cvar name=\"vehicle_zoom\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_fire_primary\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_fire_secondary\" value=\"e!unused\" />",
						"\t\t<cvar name=\"vehicle_exit\" value=\"space!unused\" />",
						"\t\t<cvar name=\"interact\" value=\"e!unused\" />",
						"\t\t<cvar name=\"highlight_player\" value=\"g!unused\" />",
						"\t\t<cvar name=\"emote_1\" value=\"up!unused\" />",
						"\t\t<cvar name=\"emote_2\" value=\"down!unused\" />",
						"\t\t<cvar name=\"emote_3\" value=\"left!unused\" />",
						"\t\t<cvar name=\"emote_4\" value=\"right!unused\" />",
						"\t\t<cvar name=\"air_move\" value=\"x!unused\" />",
						"\t\t<cvar name=\"class_ability\" value=\"v!unused\" />",
						"\t\t<cvar name=\"stasis_breakout\" value=\"v!unused\" />",
						"\t\t<cvar name=\"death_cam_zoom_in\" value=\"mouse wheel up!unused\" />",
						"\t\t<cvar name=\"death_cam_zoom_out\" value=\"mouse wheel down!unused\" />",
						"\t\t<cvar name=\"push_to_talk\" value=\"t!unused\" />",
						"\t\t<cvar name=\"ui_gamepad_button_back\" value=\"tab!unused\" />",
						"\t\t<cvar name=\"ui_open_director\" value=\"m!unused\" />",
						"\t\t<cvar name=\"ui_open_director_mtx_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_pursuits_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_map_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_destinations_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_roster_tab\" value=\"u!unused\" />",
						"\t\t<cvar name=\"ui_open_director_seasons_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_alternative\" value=\"i!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_records_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_collections_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_clan_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_inventory_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_settings_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_exit_dialog_confirm\" value=\"shift+escape!unused\" />",
						"\t\t<cvar name=\"ui_abort_activity\" value=\"o!unused\" />",
						"\t\t<cvar name=\"ui_text_chat_toggle_state\" value=\"l!unused\" />",
						"\t\t<cvar name=\"screenshot\" value=\"print screen!unused\" />",
						"\t</namespace>",
						"\t<namespace name=\"audio\">",
						"\t\t<cvar name=\"cached_music_volume\" value=\"6\" />",
						"\t\t<cvar name=\"cached_sfx_volume\" value=\"10\" />",
						"\t</namespace>",
						"\t<namespace name=\"gameplay\">",
						"\t\t<cvar name=\"mouse_smoothing_mode\" value=\"2\" />",
						"\t</namespace>",
						"</body>",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.destiny2_settings, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.destiny2_settings, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x060004B1 RID: 1201 RVA: 0x000FF670 File Offset: 0x000FD870
		private void Destiny2_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\"?>",
						"<body>",
						"\t<namespace name=\"graphics\">",
						"\t\t<cvar name=\"force_auto_detect\" value=\"0\" />",
						"\t\t<cvar name=\"force_enable_multi_threaded_render_submit\" value=\"0\" />",
						"\t\t<cvar name=\"window_position_x\" value=\"8\" />",
						"\t\t<cvar name=\"window_position_y\" value=\"31\" />",
						"\t\t<cvar name=\"window_mode\" value=\"3\" />",
						"\t\t<cvar name=\"anti_aliasing_mode\" value=\"0\" />",
						"\t\t<cvar name=\"dof_mode\" value=\"0\" />",
						"\t\t<cvar name=\"ssao_mode\" value=\"0\" />",
						"\t\t<cvar name=\"shadow_quality\" value=\"0\" />",
						"\t\t<cvar name=\"environment_detail\" value=\"0\" />",
						"\t\t<cvar name=\"character_detail\" value=\"0\" />",
						"\t\t<cvar name=\"texture_quality\" value=\"1\" />",
						"\t\t<cvar name=\"texture_anisotropy_level\" value=\"0\" />",
						"\t\t<cvar name=\"foliage_detail\" value=\"0\" />",
						"\t\t<cvar name=\"local_light_shadows\" value=\"0\" />",
						"\t\t<cvar name=\"wind_impulse\" value=\"0\" />",
						"\t\t<cvar name=\"gamma_control\" value=\"3\" />",
						"\t\t<cvar name=\"foliage_shadows_mode\" value=\"0\" />",
						"\t\t<cvar name=\"hdr_output\" value=\"1\" />",
						"\t\t<cvar name=\"atmosphere_lighting_detail\" value=\"0\" />",
						"\t\t<cvar name=\"master\" value=\"0\" />",
						"\t\t<cvar name=\"framerate_cap_enabled\" value=\"0\" />",
						"\t\t<cvar name=\"low_latency_mode\" value=\"1\" />",
						"\t\t<cvar name=\"fullscreen_resolution_width\" value=\"" + this.DefaultWidth + "\" />",
						"\t\t<cvar name=\"fullscreen_resolution_height\" value=\"" + this.DefaultHeight + "\" />",
						"\t\t<cvar name=\"fullscreen_refresh_rate_numerator\" value=\"60000\" />",
						"\t\t<cvar name=\"fullscreen_refresh_rate_denominator\" value=\"1000\" />",
						"\t\t<cvar name=\"windowed_resolution_width\" value=\"" + this.DefaultWidth + "\" />",
						"\t\t<cvar name=\"windowed_resolution_height\" value=\"" + this.DefaultHeight + "\" />",
						"\t\t<cvar name=\"render_resolution_percentage\" value=\"80\" />",
						"\t\t<cvar name=\"framerate_cap\" value=\"200\" />",
						"\t\t<cvar name=\"version\" value=\"3\" />",
						"\t</namespace>",
						"\t<namespace name=\"key bindings\">",
						"\t\t<cvar name=\"fire\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"toggle_zoom\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"hold_zoom\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"melee\" value=\"c!unused\" />",
						"\t\t<cvar name=\"melee_uncharged\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"melee_charged\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"grenade\" value=\"q!unused\" />",
						"\t\t<cvar name=\"super\" value=\"f!unused\" />",
						"\t\t<cvar name=\"reload\" value=\"r!unused\" />",
						"\t\t<cvar name=\"light_attack\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"heavy_attack\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"block\" value=\"c!unused\" />",
						"\t\t<cvar name=\"switch_weapons\" value=\"`!unused\" />",
						"\t\t<cvar name=\"next_weapon\" value=\"mouse wheel up!unused\" />",
						"\t\t<cvar name=\"previous_weapon\" value=\"mouse wheel down!unused\" />",
						"\t\t<cvar name=\"primary_weapon\" value=\"1!unused\" />",
						"\t\t<cvar name=\"special_weapon\" value=\"2!unused\" />",
						"\t\t<cvar name=\"heavy_weapon\" value=\"3!unused\" />",
						"\t\t<cvar name=\"move_forward\" value=\"w!unused\" />",
						"\t\t<cvar name=\"move_backward\" value=\"s!unused\" />",
						"\t\t<cvar name=\"move_left\" value=\"a!unused\" />",
						"\t\t<cvar name=\"move_right\" value=\"d!unused\" />",
						"\t\t<cvar name=\"jump\" value=\"space!unused\" />",
						"\t\t<cvar name=\"toggle_crouch\" value=\"control!unused\" />",
						"\t\t<cvar name=\"hold_crouch\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"toggle_sprint\" value=\"shift!unused\" />",
						"\t\t<cvar name=\"hold_sprint\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"vehicle_boost\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_brake\" value=\"shift!unused\" />",
						"\t\t<cvar name=\"vehicle_zoom\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_fire_primary\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_fire_secondary\" value=\"e!unused\" />",
						"\t\t<cvar name=\"vehicle_exit\" value=\"space!unused\" />",
						"\t\t<cvar name=\"interact\" value=\"e!unused\" />",
						"\t\t<cvar name=\"highlight_player\" value=\"g!unused\" />",
						"\t\t<cvar name=\"emote_1\" value=\"up!unused\" />",
						"\t\t<cvar name=\"emote_2\" value=\"down!unused\" />",
						"\t\t<cvar name=\"emote_3\" value=\"left!unused\" />",
						"\t\t<cvar name=\"emote_4\" value=\"right!unused\" />",
						"\t\t<cvar name=\"air_move\" value=\"x!unused\" />",
						"\t\t<cvar name=\"class_ability\" value=\"v!unused\" />",
						"\t\t<cvar name=\"stasis_breakout\" value=\"v!unused\" />",
						"\t\t<cvar name=\"death_cam_zoom_in\" value=\"mouse wheel up!unused\" />",
						"\t\t<cvar name=\"death_cam_zoom_out\" value=\"mouse wheel down!unused\" />",
						"\t\t<cvar name=\"push_to_talk\" value=\"t!unused\" />",
						"\t\t<cvar name=\"ui_gamepad_button_back\" value=\"tab!unused\" />",
						"\t\t<cvar name=\"ui_open_director\" value=\"m!unused\" />",
						"\t\t<cvar name=\"ui_open_director_mtx_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_pursuits_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_map_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_destinations_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_roster_tab\" value=\"u!unused\" />",
						"\t\t<cvar name=\"ui_open_director_seasons_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_alternative\" value=\"i!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_records_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_collections_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_clan_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_inventory_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_settings_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_exit_dialog_confirm\" value=\"shift+escape!unused\" />",
						"\t\t<cvar name=\"ui_abort_activity\" value=\"o!unused\" />",
						"\t\t<cvar name=\"ui_text_chat_toggle_state\" value=\"l!unused\" />",
						"\t\t<cvar name=\"screenshot\" value=\"print screen!unused\" />",
						"\t</namespace>",
						"\t<namespace name=\"audio\">",
						"\t\t<cvar name=\"cached_music_volume\" value=\"6\" />",
						"\t\t<cvar name=\"cached_sfx_volume\" value=\"10\" />",
						"\t</namespace>",
						"\t<namespace name=\"gameplay\">",
						"\t\t<cvar name=\"mouse_smoothing_mode\" value=\"2\" />",
						"\t</namespace>",
						"</body>",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.destiny2_settings, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.destiny2_settings, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x060004B2 RID: 1202 RVA: 0x000FFC84 File Offset: 0x000FDE84
		private void Destiny2_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\"?>",
						"<body>",
						"\t<namespace name=\"graphics\">",
						"\t\t<cvar name=\"force_auto_detect\" value=\"0\" />",
						"\t\t<cvar name=\"force_enable_multi_threaded_render_submit\" value=\"0\" />",
						"\t\t<cvar name=\"window_position_x\" value=\"8\" />",
						"\t\t<cvar name=\"window_position_y\" value=\"31\" />",
						"\t\t<cvar name=\"window_mode\" value=\"3\" />",
						"\t\t<cvar name=\"anti_aliasing_mode\" value=\"0\" />",
						"\t\t<cvar name=\"dof_mode\" value=\"0\" />",
						"\t\t<cvar name=\"ssao_mode\" value=\"0\" />",
						"\t\t<cvar name=\"shadow_quality\" value=\"0\" />",
						"\t\t<cvar name=\"environment_detail\" value=\"0\" />",
						"\t\t<cvar name=\"character_detail\" value=\"0\" />",
						"\t\t<cvar name=\"texture_quality\" value=\"1\" />",
						"\t\t<cvar name=\"texture_anisotropy_level\" value=\"0\" />",
						"\t\t<cvar name=\"foliage_detail\" value=\"0\" />",
						"\t\t<cvar name=\"local_light_shadows\" value=\"0\" />",
						"\t\t<cvar name=\"wind_impulse\" value=\"0\" />",
						"\t\t<cvar name=\"gamma_control\" value=\"3\" />",
						"\t\t<cvar name=\"foliage_shadows_mode\" value=\"0\" />",
						"\t\t<cvar name=\"hdr_output\" value=\"1\" />",
						"\t\t<cvar name=\"atmosphere_lighting_detail\" value=\"0\" />",
						"\t\t<cvar name=\"master\" value=\"0\" />",
						"\t\t<cvar name=\"framerate_cap_enabled\" value=\"0\" />",
						"\t\t<cvar name=\"low_latency_mode\" value=\"1\" />",
						"\t\t<cvar name=\"fullscreen_resolution_width\" value=\"" + this.DefaultWidth + "\" />",
						"\t\t<cvar name=\"fullscreen_resolution_height\" value=\"" + this.DefaultHeight + "\" />",
						"\t\t<cvar name=\"fullscreen_refresh_rate_numerator\" value=\"60000\" />",
						"\t\t<cvar name=\"fullscreen_refresh_rate_denominator\" value=\"1000\" />",
						"\t\t<cvar name=\"windowed_resolution_width\" value=\"" + this.DefaultWidth + "\" />",
						"\t\t<cvar name=\"windowed_resolution_height\" value=\"" + this.DefaultHeight + "\" />",
						"\t\t<cvar name=\"render_resolution_percentage\" value=\"90\" />",
						"\t\t<cvar name=\"framerate_cap\" value=\"200\" />",
						"\t\t<cvar name=\"version\" value=\"3\" />",
						"\t</namespace>",
						"\t<namespace name=\"key bindings\">",
						"\t\t<cvar name=\"fire\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"toggle_zoom\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"hold_zoom\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"melee\" value=\"c!unused\" />",
						"\t\t<cvar name=\"melee_uncharged\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"melee_charged\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"grenade\" value=\"q!unused\" />",
						"\t\t<cvar name=\"super\" value=\"f!unused\" />",
						"\t\t<cvar name=\"reload\" value=\"r!unused\" />",
						"\t\t<cvar name=\"light_attack\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"heavy_attack\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"block\" value=\"c!unused\" />",
						"\t\t<cvar name=\"switch_weapons\" value=\"`!unused\" />",
						"\t\t<cvar name=\"next_weapon\" value=\"mouse wheel up!unused\" />",
						"\t\t<cvar name=\"previous_weapon\" value=\"mouse wheel down!unused\" />",
						"\t\t<cvar name=\"primary_weapon\" value=\"1!unused\" />",
						"\t\t<cvar name=\"special_weapon\" value=\"2!unused\" />",
						"\t\t<cvar name=\"heavy_weapon\" value=\"3!unused\" />",
						"\t\t<cvar name=\"move_forward\" value=\"w!unused\" />",
						"\t\t<cvar name=\"move_backward\" value=\"s!unused\" />",
						"\t\t<cvar name=\"move_left\" value=\"a!unused\" />",
						"\t\t<cvar name=\"move_right\" value=\"d!unused\" />",
						"\t\t<cvar name=\"jump\" value=\"space!unused\" />",
						"\t\t<cvar name=\"toggle_crouch\" value=\"control!unused\" />",
						"\t\t<cvar name=\"hold_crouch\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"toggle_sprint\" value=\"shift!unused\" />",
						"\t\t<cvar name=\"hold_sprint\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"vehicle_boost\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_brake\" value=\"shift!unused\" />",
						"\t\t<cvar name=\"vehicle_zoom\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_fire_primary\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_fire_secondary\" value=\"e!unused\" />",
						"\t\t<cvar name=\"vehicle_exit\" value=\"space!unused\" />",
						"\t\t<cvar name=\"interact\" value=\"e!unused\" />",
						"\t\t<cvar name=\"highlight_player\" value=\"g!unused\" />",
						"\t\t<cvar name=\"emote_1\" value=\"up!unused\" />",
						"\t\t<cvar name=\"emote_2\" value=\"down!unused\" />",
						"\t\t<cvar name=\"emote_3\" value=\"left!unused\" />",
						"\t\t<cvar name=\"emote_4\" value=\"right!unused\" />",
						"\t\t<cvar name=\"air_move\" value=\"x!unused\" />",
						"\t\t<cvar name=\"class_ability\" value=\"v!unused\" />",
						"\t\t<cvar name=\"stasis_breakout\" value=\"v!unused\" />",
						"\t\t<cvar name=\"death_cam_zoom_in\" value=\"mouse wheel up!unused\" />",
						"\t\t<cvar name=\"death_cam_zoom_out\" value=\"mouse wheel down!unused\" />",
						"\t\t<cvar name=\"push_to_talk\" value=\"t!unused\" />",
						"\t\t<cvar name=\"ui_gamepad_button_back\" value=\"tab!unused\" />",
						"\t\t<cvar name=\"ui_open_director\" value=\"m!unused\" />",
						"\t\t<cvar name=\"ui_open_director_mtx_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_pursuits_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_map_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_destinations_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_roster_tab\" value=\"u!unused\" />",
						"\t\t<cvar name=\"ui_open_director_seasons_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_alternative\" value=\"i!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_records_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_collections_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_clan_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_inventory_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_settings_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_exit_dialog_confirm\" value=\"shift+escape!unused\" />",
						"\t\t<cvar name=\"ui_abort_activity\" value=\"o!unused\" />",
						"\t\t<cvar name=\"ui_text_chat_toggle_state\" value=\"l!unused\" />",
						"\t\t<cvar name=\"screenshot\" value=\"print screen!unused\" />",
						"\t</namespace>",
						"\t<namespace name=\"audio\">",
						"\t\t<cvar name=\"cached_music_volume\" value=\"6\" />",
						"\t\t<cvar name=\"cached_sfx_volume\" value=\"10\" />",
						"\t</namespace>",
						"\t<namespace name=\"gameplay\">",
						"\t\t<cvar name=\"mouse_smoothing_mode\" value=\"2\" />",
						"\t</namespace>",
						"</body>",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.destiny2_settings, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.destiny2_settings, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x060004B3 RID: 1203 RVA: 0x00100298 File Offset: 0x000FE498
		private void Destiny2_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\"?>",
						"<body>",
						"\t<namespace name=\"graphics\">",
						"\t\t<cvar name=\"force_auto_detect\" value=\"0\" />",
						"\t\t<cvar name=\"force_enable_multi_threaded_render_submit\" value=\"0\" />",
						"\t\t<cvar name=\"window_position_x\" value=\"8\" />",
						"\t\t<cvar name=\"window_position_y\" value=\"31\" />",
						"\t\t<cvar name=\"window_mode\" value=\"3\" />",
						"\t\t<cvar name=\"anti_aliasing_mode\" value=\"0\" />",
						"\t\t<cvar name=\"dof_mode\" value=\"0\" />",
						"\t\t<cvar name=\"ssao_mode\" value=\"0\" />",
						"\t\t<cvar name=\"shadow_quality\" value=\"0\" />",
						"\t\t<cvar name=\"environment_detail\" value=\"0\" />",
						"\t\t<cvar name=\"character_detail\" value=\"0\" />",
						"\t\t<cvar name=\"texture_quality\" value=\"1\" />",
						"\t\t<cvar name=\"texture_anisotropy_level\" value=\"0\" />",
						"\t\t<cvar name=\"foliage_detail\" value=\"0\" />",
						"\t\t<cvar name=\"local_light_shadows\" value=\"0\" />",
						"\t\t<cvar name=\"wind_impulse\" value=\"0\" />",
						"\t\t<cvar name=\"gamma_control\" value=\"3\" />",
						"\t\t<cvar name=\"foliage_shadows_mode\" value=\"0\" />",
						"\t\t<cvar name=\"hdr_output\" value=\"1\" />",
						"\t\t<cvar name=\"atmosphere_lighting_detail\" value=\"0\" />",
						"\t\t<cvar name=\"master\" value=\"0\" />",
						"\t\t<cvar name=\"framerate_cap_enabled\" value=\"0\" />",
						"\t\t<cvar name=\"low_latency_mode\" value=\"1\" />",
						"\t\t<cvar name=\"fullscreen_resolution_width\" value=\"" + this.DefaultWidth + "\" />",
						"\t\t<cvar name=\"fullscreen_resolution_height\" value=\"" + this.DefaultHeight + "\" />",
						"\t\t<cvar name=\"fullscreen_refresh_rate_numerator\" value=\"60000\" />",
						"\t\t<cvar name=\"fullscreen_refresh_rate_denominator\" value=\"1000\" />",
						"\t\t<cvar name=\"windowed_resolution_width\" value=\"" + this.DefaultWidth + "\" />",
						"\t\t<cvar name=\"windowed_resolution_height\" value=\"" + this.DefaultHeight + "\" />",
						"\t\t<cvar name=\"render_resolution_percentage\" value=\"95\" />",
						"\t\t<cvar name=\"framerate_cap\" value=\"200\" />",
						"\t\t<cvar name=\"version\" value=\"3\" />",
						"\t</namespace>",
						"\t<namespace name=\"key bindings\">",
						"\t\t<cvar name=\"fire\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"toggle_zoom\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"hold_zoom\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"melee\" value=\"c!unused\" />",
						"\t\t<cvar name=\"melee_uncharged\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"melee_charged\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"grenade\" value=\"q!unused\" />",
						"\t\t<cvar name=\"super\" value=\"f!unused\" />",
						"\t\t<cvar name=\"reload\" value=\"r!unused\" />",
						"\t\t<cvar name=\"light_attack\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"heavy_attack\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"block\" value=\"c!unused\" />",
						"\t\t<cvar name=\"switch_weapons\" value=\"`!unused\" />",
						"\t\t<cvar name=\"next_weapon\" value=\"mouse wheel up!unused\" />",
						"\t\t<cvar name=\"previous_weapon\" value=\"mouse wheel down!unused\" />",
						"\t\t<cvar name=\"primary_weapon\" value=\"1!unused\" />",
						"\t\t<cvar name=\"special_weapon\" value=\"2!unused\" />",
						"\t\t<cvar name=\"heavy_weapon\" value=\"3!unused\" />",
						"\t\t<cvar name=\"move_forward\" value=\"w!unused\" />",
						"\t\t<cvar name=\"move_backward\" value=\"s!unused\" />",
						"\t\t<cvar name=\"move_left\" value=\"a!unused\" />",
						"\t\t<cvar name=\"move_right\" value=\"d!unused\" />",
						"\t\t<cvar name=\"jump\" value=\"space!unused\" />",
						"\t\t<cvar name=\"toggle_crouch\" value=\"control!unused\" />",
						"\t\t<cvar name=\"hold_crouch\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"toggle_sprint\" value=\"shift!unused\" />",
						"\t\t<cvar name=\"hold_sprint\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"vehicle_boost\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_brake\" value=\"shift!unused\" />",
						"\t\t<cvar name=\"vehicle_zoom\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_fire_primary\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_fire_secondary\" value=\"e!unused\" />",
						"\t\t<cvar name=\"vehicle_exit\" value=\"space!unused\" />",
						"\t\t<cvar name=\"interact\" value=\"e!unused\" />",
						"\t\t<cvar name=\"highlight_player\" value=\"g!unused\" />",
						"\t\t<cvar name=\"emote_1\" value=\"up!unused\" />",
						"\t\t<cvar name=\"emote_2\" value=\"down!unused\" />",
						"\t\t<cvar name=\"emote_3\" value=\"left!unused\" />",
						"\t\t<cvar name=\"emote_4\" value=\"right!unused\" />",
						"\t\t<cvar name=\"air_move\" value=\"x!unused\" />",
						"\t\t<cvar name=\"class_ability\" value=\"v!unused\" />",
						"\t\t<cvar name=\"stasis_breakout\" value=\"v!unused\" />",
						"\t\t<cvar name=\"death_cam_zoom_in\" value=\"mouse wheel up!unused\" />",
						"\t\t<cvar name=\"death_cam_zoom_out\" value=\"mouse wheel down!unused\" />",
						"\t\t<cvar name=\"push_to_talk\" value=\"t!unused\" />",
						"\t\t<cvar name=\"ui_gamepad_button_back\" value=\"tab!unused\" />",
						"\t\t<cvar name=\"ui_open_director\" value=\"m!unused\" />",
						"\t\t<cvar name=\"ui_open_director_mtx_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_pursuits_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_map_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_destinations_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_roster_tab\" value=\"u!unused\" />",
						"\t\t<cvar name=\"ui_open_director_seasons_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_alternative\" value=\"i!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_records_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_collections_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_clan_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_inventory_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_settings_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_exit_dialog_confirm\" value=\"shift+escape!unused\" />",
						"\t\t<cvar name=\"ui_abort_activity\" value=\"o!unused\" />",
						"\t\t<cvar name=\"ui_text_chat_toggle_state\" value=\"l!unused\" />",
						"\t\t<cvar name=\"screenshot\" value=\"print screen!unused\" />",
						"\t</namespace>",
						"\t<namespace name=\"audio\">",
						"\t\t<cvar name=\"cached_music_volume\" value=\"6\" />",
						"\t\t<cvar name=\"cached_sfx_volume\" value=\"10\" />",
						"\t</namespace>",
						"\t<namespace name=\"gameplay\">",
						"\t\t<cvar name=\"mouse_smoothing_mode\" value=\"2\" />",
						"\t</namespace>",
						"</body>",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.destiny2_settings, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.destiny2_settings, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x060004B4 RID: 1204 RVA: 0x001008AC File Offset: 0x000FEAAC
		private void Destiny2_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\"?>",
						"<body>",
						"\t<namespace name=\"graphics\">",
						"\t\t<cvar name=\"force_auto_detect\" value=\"0\" />",
						"\t\t<cvar name=\"force_enable_multi_threaded_render_submit\" value=\"0\" />",
						"\t\t<cvar name=\"window_position_x\" value=\"8\" />",
						"\t\t<cvar name=\"window_position_y\" value=\"31\" />",
						"\t\t<cvar name=\"window_mode\" value=\"3\" />",
						"\t\t<cvar name=\"anti_aliasing_mode\" value=\"0\" />",
						"\t\t<cvar name=\"dof_mode\" value=\"0\" />",
						"\t\t<cvar name=\"ssao_mode\" value=\"0\" />",
						"\t\t<cvar name=\"shadow_quality\" value=\"0\" />",
						"\t\t<cvar name=\"environment_detail\" value=\"0\" />",
						"\t\t<cvar name=\"character_detail\" value=\"0\" />",
						"\t\t<cvar name=\"texture_quality\" value=\"1\" />",
						"\t\t<cvar name=\"texture_anisotropy_level\" value=\"0\" />",
						"\t\t<cvar name=\"foliage_detail\" value=\"0\" />",
						"\t\t<cvar name=\"local_light_shadows\" value=\"0\" />",
						"\t\t<cvar name=\"wind_impulse\" value=\"0\" />",
						"\t\t<cvar name=\"gamma_control\" value=\"3\" />",
						"\t\t<cvar name=\"foliage_shadows_mode\" value=\"0\" />",
						"\t\t<cvar name=\"hdr_output\" value=\"1\" />",
						"\t\t<cvar name=\"atmosphere_lighting_detail\" value=\"0\" />",
						"\t\t<cvar name=\"master\" value=\"0\" />",
						"\t\t<cvar name=\"framerate_cap_enabled\" value=\"0\" />",
						"\t\t<cvar name=\"low_latency_mode\" value=\"1\" />",
						"\t\t<cvar name=\"fullscreen_resolution_width\" value=\"" + this.DefaultWidth + "\" />",
						"\t\t<cvar name=\"fullscreen_resolution_height\" value=\"" + this.DefaultHeight + "\" />",
						"\t\t<cvar name=\"fullscreen_refresh_rate_numerator\" value=\"60000\" />",
						"\t\t<cvar name=\"fullscreen_refresh_rate_denominator\" value=\"1000\" />",
						"\t\t<cvar name=\"windowed_resolution_width\" value=\"" + this.DefaultWidth + "\" />",
						"\t\t<cvar name=\"windowed_resolution_height\" value=\"" + this.DefaultHeight + "\" />",
						"\t\t<cvar name=\"render_resolution_percentage\" value=\"100\" />",
						"\t\t<cvar name=\"framerate_cap\" value=\"200\" />",
						"\t\t<cvar name=\"version\" value=\"3\" />",
						"\t</namespace>",
						"\t<namespace name=\"key bindings\">",
						"\t\t<cvar name=\"fire\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"toggle_zoom\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"hold_zoom\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"melee\" value=\"c!unused\" />",
						"\t\t<cvar name=\"melee_uncharged\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"melee_charged\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"grenade\" value=\"q!unused\" />",
						"\t\t<cvar name=\"super\" value=\"f!unused\" />",
						"\t\t<cvar name=\"reload\" value=\"r!unused\" />",
						"\t\t<cvar name=\"light_attack\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"heavy_attack\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"block\" value=\"c!unused\" />",
						"\t\t<cvar name=\"switch_weapons\" value=\"`!unused\" />",
						"\t\t<cvar name=\"next_weapon\" value=\"mouse wheel up!unused\" />",
						"\t\t<cvar name=\"previous_weapon\" value=\"mouse wheel down!unused\" />",
						"\t\t<cvar name=\"primary_weapon\" value=\"1!unused\" />",
						"\t\t<cvar name=\"special_weapon\" value=\"2!unused\" />",
						"\t\t<cvar name=\"heavy_weapon\" value=\"3!unused\" />",
						"\t\t<cvar name=\"move_forward\" value=\"w!unused\" />",
						"\t\t<cvar name=\"move_backward\" value=\"s!unused\" />",
						"\t\t<cvar name=\"move_left\" value=\"a!unused\" />",
						"\t\t<cvar name=\"move_right\" value=\"d!unused\" />",
						"\t\t<cvar name=\"jump\" value=\"space!unused\" />",
						"\t\t<cvar name=\"toggle_crouch\" value=\"control!unused\" />",
						"\t\t<cvar name=\"hold_crouch\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"toggle_sprint\" value=\"shift!unused\" />",
						"\t\t<cvar name=\"hold_sprint\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"vehicle_boost\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_brake\" value=\"shift!unused\" />",
						"\t\t<cvar name=\"vehicle_zoom\" value=\"right mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_fire_primary\" value=\"left mouse button!unused\" />",
						"\t\t<cvar name=\"vehicle_fire_secondary\" value=\"e!unused\" />",
						"\t\t<cvar name=\"vehicle_exit\" value=\"space!unused\" />",
						"\t\t<cvar name=\"interact\" value=\"e!unused\" />",
						"\t\t<cvar name=\"highlight_player\" value=\"g!unused\" />",
						"\t\t<cvar name=\"emote_1\" value=\"up!unused\" />",
						"\t\t<cvar name=\"emote_2\" value=\"down!unused\" />",
						"\t\t<cvar name=\"emote_3\" value=\"left!unused\" />",
						"\t\t<cvar name=\"emote_4\" value=\"right!unused\" />",
						"\t\t<cvar name=\"air_move\" value=\"x!unused\" />",
						"\t\t<cvar name=\"class_ability\" value=\"v!unused\" />",
						"\t\t<cvar name=\"stasis_breakout\" value=\"v!unused\" />",
						"\t\t<cvar name=\"death_cam_zoom_in\" value=\"mouse wheel up!unused\" />",
						"\t\t<cvar name=\"death_cam_zoom_out\" value=\"mouse wheel down!unused\" />",
						"\t\t<cvar name=\"push_to_talk\" value=\"t!unused\" />",
						"\t\t<cvar name=\"ui_gamepad_button_back\" value=\"tab!unused\" />",
						"\t\t<cvar name=\"ui_open_director\" value=\"m!unused\" />",
						"\t\t<cvar name=\"ui_open_director_mtx_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_pursuits_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_map_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_destinations_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_director_roster_tab\" value=\"u!unused\" />",
						"\t\t<cvar name=\"ui_open_director_seasons_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_alternative\" value=\"i!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_records_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_collections_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_clan_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_inventory_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_start_menu_settings_tab\" value=\"unused!unused\" />",
						"\t\t<cvar name=\"ui_open_exit_dialog_confirm\" value=\"shift+escape!unused\" />",
						"\t\t<cvar name=\"ui_abort_activity\" value=\"o!unused\" />",
						"\t\t<cvar name=\"ui_text_chat_toggle_state\" value=\"l!unused\" />",
						"\t\t<cvar name=\"screenshot\" value=\"print screen!unused\" />",
						"\t</namespace>",
						"\t<namespace name=\"audio\">",
						"\t\t<cvar name=\"cached_music_volume\" value=\"6\" />",
						"\t\t<cvar name=\"cached_sfx_volume\" value=\"10\" />",
						"\t</namespace>",
						"\t<namespace name=\"gameplay\">",
						"\t\t<cvar name=\"mouse_smoothing_mode\" value=\"2\" />",
						"\t</namespace>",
						"</body>",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.destiny2_settings, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.destiny2_settings, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x060004B5 RID: 1205 RVA: 0x00100EC0 File Offset: 0x000FF0C0
		private void DL2_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"!WindowMode(i)                 // 0=windowed, 1=borderless, 2=fullscreen",
						"!WindowOffset(i,i)             // window position in pixels ",
						"!Monitor(i)                    // index of primary monitor",
						"!MonitorSecondary(i)           // index of secondary monitor",
						"!RendererMode(s)               // d3d11, d3d12 or d3d12ultimate ",
						"!FSR(f)                        // FSR sharpness",
						"!ExtraGameFov(f)               // extra fov",
						"!DisableDWM(i)                 // disables DWM when fullscreen",
						"!RT_AO()                       // raytraced ambient occlusion",
						"!RT_SS()                       // raytraced soft shadows",
						"!RT_Lit()                      // raytraced flashlight",
						"!RT_GiDif()                    // raytraced global illumination (diffuse)",
						"!RT_GiSpc()                    // raytraced global illumination (specular)",
						"!AsyncCompute(i)               // 0=deny async computes, 1=allow async computes if supported, ",
						"!Resolution(i,i)               // UI/window resolution of primary monitor",
						"!ResolutionSecondary(i,i)      // UI/window resolution of secondary monitor",
						"!Scale3D(f)                    // UI resolution * Scale3D = 3D resolution",
						"!Upscaler(i)                   // 0=none, 1=linear; 2=DLSS; 3=FSR",
						"!Upscaling(i)                  // 0=best performance, 1=balanced, 2=bestquality",
						"!TextureQuality(s)             // Low, Medium, High",
						"!GammaFloat(f)",
						"!ShadowsPreset(i)",
						"!ShadowsQuality(i)             // 0=PCF, 1=PCSS low, 2=PCSS medium, 3=PCSS high, 4=raytraced",
						"!ShadowMapSize(i)",
						"!SpotShadowMapSize(i)",
						"!FrameRate(i)                  // 0=no VSync, 1=Max device refresh rate, 30 - 30Hz, 60 - 60Hz",
						"!Vrr()                         // Variable Refresh Rate",
						"!GrassQuality(i)               // lower is better",
						"!MotionBlur(i)                 // 0=disabled, 1=enabled",
						"!MotionBlurQuality(s)          // Low, Medium, High",
						"!MotionBlurIntensity(f)        // 0=min 1=max",
						"!Bokeh(i)                      // 0=off, 1=on",
						"!SSSSQuality(i)                // 0=low, 1=medium, 2=high",
						"!FilmGrain(i)                  // 0=disabled, 1=enabled",
						"!DistanceBlur(i)               // 0=disabled, 1=enabled",
						"!AntiAliasing(i)               // 0=disabled, 1=enabled",
						"!AntiAliasingQuality(i)        // 0=low, 0=high",
						"!FogQuality(i)                 // 0=low, 1=medium, 2=high",
						"!ReflectionsQuality(i)         // 0=low, 1=medium, 2=high",
						"!ContactShadowsQuality(i)      // 0=none, 1=low, 2=medium, 3=high, 4=very high",
						"!SpotShadowsQuality(i)         // 0=low, 1=medium, 2=high",
						"!AmbientOcclusion(i)           // 0=disabled, 1=enabled",
						"!AmbientOcclusionQuality(i)    // 0=low, 1=high",
						"!ColorBlindMode(i)             // 0=none, 1=protanopia, 2=deuteranopia, 3=tritanopia",
						"!GpuFxQuality(i)               // 0=low, 1=high",
						"!VoxelGiQuality(i)             // 0=off, 1=low, 2=medium, 3=high, 4=ultra",
						"!OptSpotsCastShadows(i)",
						"!LodQuality(i)                 // 0=low, 1=high",
						"!AnisoOptOut()                 // Disable optional anisotropic filtering in some materials",
						"",
						"",
						"RendererMode(\"" + this.graphicsAPIVersion + "\")",
						"AsyncCompute(0)",
						"WindowMode(2)",
						string.Concat(new string[] { "Resolution(", this.DefaultWidth, ",", this.DefaultHeight, ")" }),
						"Scale3D(0.400000)",
						"FSR(0.335000)",
						"Upscaler(1)",
						"Upscaling(0)",
						"Monitor(0)",
						"DisableDWM(0)",
						"TextureQuality(\"Medium\")",
						"ShadowsQuality(0)",
						"ShadowMapSize(1)",
						"SpotShadowMapSize(1)",
						"GammaFloat(1.00)",
						"GrassQuality(4)",
						"FrameRate(0)",
						"MotionBlur(0)",
						"MotionBlurIntensity(0.00)",
						"Bokeh(0)",
						"SSSSQuality(0)",
						"MotionBlurQuality(\"Low\")",
						"FilmGrain(0)",
						"DistanceBlur(0)",
						"AntiAliasing(1)",
						"AntiAliasingQuality(1)",
						"FogQuality(0)",
						"ReflectionsQuality(0)",
						"ContactShadowsQuality(0)",
						"SpotShadowsQuality(0)",
						"AmbientOcclusion(0)",
						"AmbientOcclusionQuality(0)",
						"ColorBlindMode(0)",
						"GpuFxQuality(0)",
						"VoxelGiQuality(0)",
						"LodQuality(0)",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"!WindowMode(i)                 // 0=windowed, 1=borderless, 2=fullscreen",
						"!WindowOffset(i,i)             // window position in pixels ",
						"!Monitor(i)                    // index of primary monitor",
						"!MonitorSecondary(i)           // index of secondary monitor",
						"!RendererMode(s)               // d3d11, d3d12 or d3d12ultimate ",
						"!FSR(f)                        // FSR sharpness",
						"!ExtraGameFov(f)               // extra fov",
						"!DisableDWM(i)                 // disables DWM when fullscreen",
						"!RT_AO()                       // raytraced ambient occlusion",
						"!RT_SS()                       // raytraced soft shadows",
						"!RT_Lit()                      // raytraced flashlight",
						"!RT_GiDif()                    // raytraced global illumination (diffuse)",
						"!RT_GiSpc()                    // raytraced global illumination (specular)",
						"!AsyncCompute(i)               // 0=deny async computes, 1=allow async computes if supported, ",
						"!Resolution(i,i)               // UI/window resolution of primary monitor",
						"!ResolutionSecondary(i,i)      // UI/window resolution of secondary monitor",
						"!Scale3D(f)                    // UI resolution * Scale3D = 3D resolution",
						"!Upscaler(i)                   // 0=none, 1=linear; 2=DLSS; 3=FSR",
						"!Upscaling(i)                  // 0=best performance, 1=balanced, 2=bestquality",
						"!TextureQuality(s)             // Low, Medium, High",
						"!GammaFloat(f)",
						"!ShadowsPreset(i)",
						"!ShadowsQuality(i)             // 0=PCF, 1=PCSS low, 2=PCSS medium, 3=PCSS high, 4=raytraced",
						"!ShadowMapSize(i)",
						"!SpotShadowMapSize(i)",
						"!FrameRate(i)                  // 0=no VSync, 1=Max device refresh rate, 30 - 30Hz, 60 - 60Hz",
						"!Vrr()                         // Variable Refresh Rate",
						"!GrassQuality(i)               // lower is better",
						"!MotionBlur(i)                 // 0=disabled, 1=enabled",
						"!MotionBlurQuality(s)          // Low, Medium, High",
						"!MotionBlurIntensity(f)        // 0=min 1=max",
						"!Bokeh(i)                      // 0=off, 1=on",
						"!SSSSQuality(i)                // 0=low, 1=medium, 2=high",
						"!FilmGrain(i)                  // 0=disabled, 1=enabled",
						"!DistanceBlur(i)               // 0=disabled, 1=enabled",
						"!AntiAliasing(i)               // 0=disabled, 1=enabled",
						"!AntiAliasingQuality(i)        // 0=low, 0=high",
						"!FogQuality(i)                 // 0=low, 1=medium, 2=high",
						"!ReflectionsQuality(i)         // 0=low, 1=medium, 2=high",
						"!ContactShadowsQuality(i)      // 0=none, 1=low, 2=medium, 3=high, 4=very high",
						"!SpotShadowsQuality(i)         // 0=low, 1=medium, 2=high",
						"!AmbientOcclusion(i)           // 0=disabled, 1=enabled",
						"!AmbientOcclusionQuality(i)    // 0=low, 1=high",
						"!ColorBlindMode(i)             // 0=none, 1=protanopia, 2=deuteranopia, 3=tritanopia",
						"!GpuFxQuality(i)               // 0=low, 1=high",
						"!VoxelGiQuality(i)             // 0=off, 1=low, 2=medium, 3=high, 4=ultra",
						"!OptSpotsCastShadows(i)",
						"!LodQuality(i)                 // 0=low, 1=high",
						"!AnisoOptOut()                 // Disable optional anisotropic filtering in some materials",
						"",
						"",
						"RendererMode(\"" + this.graphicsAPIVersion + "\")",
						"AsyncCompute(0)",
						"WindowMode(2)",
						string.Concat(new string[] { "Resolution(", this.DefaultWidth, ",", this.DefaultHeight, ")" }),
						"Scale3D(0.400000)",
						"FSR(0.335000)",
						"Upscaler(1)",
						"Upscaling(0)",
						"Monitor(0)",
						"DisableDWM(0)",
						"TextureQuality(\"Medium\")",
						"ShadowsQuality(0)",
						"ShadowMapSize(1)",
						"SpotShadowMapSize(1)",
						"GammaFloat(1.00)",
						"GrassQuality(4)",
						"FrameRate(0)",
						"MotionBlur(0)",
						"MotionBlurIntensity(0.00)",
						"Bokeh(0)",
						"SSSSQuality(0)",
						"MotionBlurQuality(\"Low\")",
						"FilmGrain(0)",
						"DistanceBlur(0)",
						"AntiAliasing(1)",
						"AntiAliasingQuality(1)",
						"FogQuality(0)",
						"ReflectionsQuality(0)",
						"ContactShadowsQuality(0)",
						"SpotShadowsQuality(0)",
						"AmbientOcclusion(0)",
						"AmbientOcclusionQuality(0)",
						"ColorBlindMode(0)",
						"GpuFxQuality(0)",
						"VoxelGiQuality(0)",
						"LodQuality(0)",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.dyinglight2_main, text);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.dyinglight2_first, text2);
					num = 5;
				}
				if (num == 5)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num2 = 0;
						Error error;
						do
						{
							bool flag;
							if (num2 == 1)
							{
								flag = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009664807013/FC16D.pak", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\Data3.pak");
								num2 = 2;
							}
							if (num2 == 2)
							{
								if (!flag)
								{
									goto IL_77;
								}
								num2 = 3;
							}
							if (num2 == 3)
							{
								error = new Error();
								num2 = 4;
							}
							if (num2 == 0)
							{
								num2 = 1;
							}
						}
						while (num2 != 4);
						try
						{
							error.ShowDialog();
						}
						finally
						{
							if (error != null)
							{
								((IDisposable)error).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_second);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\Data3.pak", this.dyinglight2_second);
					}));
					num = 6;
				}
				if (num == 6)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num3 = 0;
						Error error2;
						do
						{
							bool flag2;
							if (num3 == 1)
							{
								flag2 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009358626967/DC6A3.scr", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_performance.scr");
								num3 = 2;
							}
							if (num3 == 2)
							{
								if (!flag2)
								{
									goto IL_77;
								}
								num3 = 3;
							}
							if (num3 == 3)
							{
								error2 = new Error();
								num3 = 4;
							}
							if (num3 == 0)
							{
								num3 = 1;
							}
						}
						while (num3 != 4);
						try
						{
							error2.ShowDialog();
						}
						finally
						{
							if (error2 != null)
							{
								((IDisposable)error2).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_third);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_performance.scr", this.dyinglight2_third);
					}));
					num = 7;
				}
				if (num == 7)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num4 = 0;
						Error error3;
						do
						{
							bool flag3;
							if (num4 == 1)
							{
								flag3 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009664807013/FC16D.pak", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_noise.scr");
								num4 = 2;
							}
							if (num4 == 2)
							{
								if (!flag3)
								{
									goto IL_77;
								}
								num4 = 3;
							}
							if (num4 == 3)
							{
								error3 = new Error();
								num4 = 4;
							}
							if (num4 == 0)
							{
								num4 = 1;
							}
						}
						while (num4 != 4);
						try
						{
							error3.ShowDialog();
						}
						finally
						{
							if (error3 != null)
							{
								((IDisposable)error3).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_fourth);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_noise.scr", this.dyinglight2_fourth);
					}));
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004B6 RID: 1206 RVA: 0x00101908 File Offset: 0x000FFB08
		private void DL2_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"!WindowMode(i)                 // 0=windowed, 1=borderless, 2=fullscreen",
						"!WindowOffset(i,i)             // window position in pixels ",
						"!Monitor(i)                    // index of primary monitor",
						"!MonitorSecondary(i)           // index of secondary monitor",
						"!RendererMode(s)               // d3d11, d3d12 or d3d12ultimate ",
						"!FSR(f)                        // FSR sharpness",
						"!ExtraGameFov(f)               // extra fov",
						"!DisableDWM(i)                 // disables DWM when fullscreen",
						"!RT_AO()                       // raytraced ambient occlusion",
						"!RT_SS()                       // raytraced soft shadows",
						"!RT_Lit()                      // raytraced flashlight",
						"!RT_GiDif()                    // raytraced global illumination (diffuse)",
						"!RT_GiSpc()                    // raytraced global illumination (specular)",
						"!AsyncCompute(i)               // 0=deny async computes, 1=allow async computes if supported, ",
						"!Resolution(i,i)               // UI/window resolution of primary monitor",
						"!ResolutionSecondary(i,i)      // UI/window resolution of secondary monitor",
						"!Scale3D(f)                    // UI resolution * Scale3D = 3D resolution",
						"!Upscaler(i)                   // 0=none, 1=linear; 2=DLSS; 3=FSR",
						"!Upscaling(i)                  // 0=best performance, 1=balanced, 2=bestquality",
						"!TextureQuality(s)             // Low, Medium, High",
						"!GammaFloat(f)",
						"!ShadowsPreset(i)",
						"!ShadowsQuality(i)             // 0=PCF, 1=PCSS low, 2=PCSS medium, 3=PCSS high, 4=raytraced",
						"!ShadowMapSize(i)",
						"!SpotShadowMapSize(i)",
						"!FrameRate(i)                  // 0=no VSync, 1=Max device refresh rate, 30 - 30Hz, 60 - 60Hz",
						"!Vrr()                         // Variable Refresh Rate",
						"!GrassQuality(i)               // lower is better",
						"!MotionBlur(i)                 // 0=disabled, 1=enabled",
						"!MotionBlurQuality(s)          // Low, Medium, High",
						"!MotionBlurIntensity(f)        // 0=min 1=max",
						"!Bokeh(i)                      // 0=off, 1=on",
						"!SSSSQuality(i)                // 0=low, 1=medium, 2=high",
						"!FilmGrain(i)                  // 0=disabled, 1=enabled",
						"!DistanceBlur(i)               // 0=disabled, 1=enabled",
						"!AntiAliasing(i)               // 0=disabled, 1=enabled",
						"!AntiAliasingQuality(i)        // 0=low, 0=high",
						"!FogQuality(i)                 // 0=low, 1=medium, 2=high",
						"!ReflectionsQuality(i)         // 0=low, 1=medium, 2=high",
						"!ContactShadowsQuality(i)      // 0=none, 1=low, 2=medium, 3=high, 4=very high",
						"!SpotShadowsQuality(i)         // 0=low, 1=medium, 2=high",
						"!AmbientOcclusion(i)           // 0=disabled, 1=enabled",
						"!AmbientOcclusionQuality(i)    // 0=low, 1=high",
						"!ColorBlindMode(i)             // 0=none, 1=protanopia, 2=deuteranopia, 3=tritanopia",
						"!GpuFxQuality(i)               // 0=low, 1=high",
						"!VoxelGiQuality(i)             // 0=off, 1=low, 2=medium, 3=high, 4=ultra",
						"!OptSpotsCastShadows(i)",
						"!LodQuality(i)                 // 0=low, 1=high",
						"!AnisoOptOut()                 // Disable optional anisotropic filtering in some materials",
						"",
						"",
						"RendererMode(\"" + this.graphicsAPIVersion + "\")",
						"AsyncCompute(0)",
						"WindowMode(2)",
						string.Concat(new string[] { "Resolution(", this.DefaultWidth, ",", this.DefaultHeight, ")" }),
						"Scale3D(0.500000)",
						"FSR(0.335000)",
						"Upscaler(1)",
						"Upscaling(1)",
						"Monitor(0)",
						"DisableDWM(0)",
						"TextureQuality(\"Medium\")",
						"ShadowsQuality(0)",
						"ShadowMapSize(1)",
						"SpotShadowMapSize(1)",
						"GammaFloat(1.00)",
						"GrassQuality(4)",
						"FrameRate(0)",
						"MotionBlur(0)",
						"MotionBlurIntensity(0.00)",
						"Bokeh(0)",
						"SSSSQuality(0)",
						"MotionBlurQuality(\"Low\")",
						"FilmGrain(0)",
						"DistanceBlur(0)",
						"AntiAliasing(1)",
						"AntiAliasingQuality(1)",
						"FogQuality(0)",
						"ReflectionsQuality(0)",
						"ContactShadowsQuality(0)",
						"SpotShadowsQuality(0)",
						"AmbientOcclusion(0)",
						"AmbientOcclusionQuality(0)",
						"ColorBlindMode(0)",
						"GpuFxQuality(0)",
						"VoxelGiQuality(0)",
						"LodQuality(0)",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"!WindowMode(i)                 // 0=windowed, 1=borderless, 2=fullscreen",
						"!WindowOffset(i,i)             // window position in pixels ",
						"!Monitor(i)                    // index of primary monitor",
						"!MonitorSecondary(i)           // index of secondary monitor",
						"!RendererMode(s)               // d3d11, d3d12 or d3d12ultimate ",
						"!FSR(f)                        // FSR sharpness",
						"!ExtraGameFov(f)               // extra fov",
						"!DisableDWM(i)                 // disables DWM when fullscreen",
						"!RT_AO()                       // raytraced ambient occlusion",
						"!RT_SS()                       // raytraced soft shadows",
						"!RT_Lit()                      // raytraced flashlight",
						"!RT_GiDif()                    // raytraced global illumination (diffuse)",
						"!RT_GiSpc()                    // raytraced global illumination (specular)",
						"!AsyncCompute(i)               // 0=deny async computes, 1=allow async computes if supported, ",
						"!Resolution(i,i)               // UI/window resolution of primary monitor",
						"!ResolutionSecondary(i,i)      // UI/window resolution of secondary monitor",
						"!Scale3D(f)                    // UI resolution * Scale3D = 3D resolution",
						"!Upscaler(i)                   // 0=none, 1=linear; 2=DLSS; 3=FSR",
						"!Upscaling(i)                  // 0=best performance, 1=balanced, 2=bestquality",
						"!TextureQuality(s)             // Low, Medium, High",
						"!GammaFloat(f)",
						"!ShadowsPreset(i)",
						"!ShadowsQuality(i)             // 0=PCF, 1=PCSS low, 2=PCSS medium, 3=PCSS high, 4=raytraced",
						"!ShadowMapSize(i)",
						"!SpotShadowMapSize(i)",
						"!FrameRate(i)                  // 0=no VSync, 1=Max device refresh rate, 30 - 30Hz, 60 - 60Hz",
						"!Vrr()                         // Variable Refresh Rate",
						"!GrassQuality(i)               // lower is better",
						"!MotionBlur(i)                 // 0=disabled, 1=enabled",
						"!MotionBlurQuality(s)          // Low, Medium, High",
						"!MotionBlurIntensity(f)        // 0=min 1=max",
						"!Bokeh(i)                      // 0=off, 1=on",
						"!SSSSQuality(i)                // 0=low, 1=medium, 2=high",
						"!FilmGrain(i)                  // 0=disabled, 1=enabled",
						"!DistanceBlur(i)               // 0=disabled, 1=enabled",
						"!AntiAliasing(i)               // 0=disabled, 1=enabled",
						"!AntiAliasingQuality(i)        // 0=low, 0=high",
						"!FogQuality(i)                 // 0=low, 1=medium, 2=high",
						"!ReflectionsQuality(i)         // 0=low, 1=medium, 2=high",
						"!ContactShadowsQuality(i)      // 0=none, 1=low, 2=medium, 3=high, 4=very high",
						"!SpotShadowsQuality(i)         // 0=low, 1=medium, 2=high",
						"!AmbientOcclusion(i)           // 0=disabled, 1=enabled",
						"!AmbientOcclusionQuality(i)    // 0=low, 1=high",
						"!ColorBlindMode(i)             // 0=none, 1=protanopia, 2=deuteranopia, 3=tritanopia",
						"!GpuFxQuality(i)               // 0=low, 1=high",
						"!VoxelGiQuality(i)             // 0=off, 1=low, 2=medium, 3=high, 4=ultra",
						"!OptSpotsCastShadows(i)",
						"!LodQuality(i)                 // 0=low, 1=high",
						"!AnisoOptOut()                 // Disable optional anisotropic filtering in some materials",
						"",
						"",
						"RendererMode(\"" + this.graphicsAPIVersion + "\")",
						"AsyncCompute(0)",
						"WindowMode(2)",
						string.Concat(new string[] { "Resolution(", this.DefaultWidth, ",", this.DefaultHeight, ")" }),
						"Scale3D(0.500000)",
						"FSR(0.335000)",
						"Upscaler(1)",
						"Upscaling(1)",
						"Monitor(0)",
						"DisableDWM(0)",
						"TextureQuality(\"Medium\")",
						"ShadowsQuality(0)",
						"ShadowMapSize(1)",
						"SpotShadowMapSize(1)",
						"GammaFloat(1.00)",
						"GrassQuality(4)",
						"FrameRate(0)",
						"MotionBlur(0)",
						"MotionBlurIntensity(0.00)",
						"Bokeh(0)",
						"SSSSQuality(0)",
						"MotionBlurQuality(\"Low\")",
						"FilmGrain(0)",
						"DistanceBlur(0)",
						"AntiAliasing(1)",
						"AntiAliasingQuality(1)",
						"FogQuality(0)",
						"ReflectionsQuality(0)",
						"ContactShadowsQuality(0)",
						"SpotShadowsQuality(0)",
						"AmbientOcclusion(0)",
						"AmbientOcclusionQuality(0)",
						"ColorBlindMode(0)",
						"GpuFxQuality(0)",
						"VoxelGiQuality(0)",
						"LodQuality(0)",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.dyinglight2_main, text);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.dyinglight2_first, text2);
					num = 5;
				}
				if (num == 5)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num2 = 0;
						Error error;
						do
						{
							bool flag;
							if (num2 == 1)
							{
								flag = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009664807013/FC16D.pak", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\Data3.pak");
								num2 = 2;
							}
							if (num2 == 2)
							{
								if (!flag)
								{
									goto IL_77;
								}
								num2 = 3;
							}
							if (num2 == 3)
							{
								error = new Error();
								num2 = 4;
							}
							if (num2 == 0)
							{
								num2 = 1;
							}
						}
						while (num2 != 4);
						try
						{
							error.ShowDialog();
						}
						finally
						{
							if (error != null)
							{
								((IDisposable)error).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_second);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\Data3.pak", this.dyinglight2_second);
					}));
					num = 6;
				}
				if (num == 6)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num3 = 0;
						Error error2;
						do
						{
							bool flag2;
							if (num3 == 1)
							{
								flag2 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009358626967/DC6A3.scr", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_performance.scr");
								num3 = 2;
							}
							if (num3 == 2)
							{
								if (!flag2)
								{
									goto IL_77;
								}
								num3 = 3;
							}
							if (num3 == 3)
							{
								error2 = new Error();
								num3 = 4;
							}
							if (num3 == 0)
							{
								num3 = 1;
							}
						}
						while (num3 != 4);
						try
						{
							error2.ShowDialog();
						}
						finally
						{
							if (error2 != null)
							{
								((IDisposable)error2).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_third);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_performance.scr", this.dyinglight2_third);
					}));
					num = 7;
				}
				if (num == 7)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num4 = 0;
						Error error3;
						do
						{
							bool flag3;
							if (num4 == 1)
							{
								flag3 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009664807013/FC16D.pak", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_noise.scr");
								num4 = 2;
							}
							if (num4 == 2)
							{
								if (!flag3)
								{
									goto IL_77;
								}
								num4 = 3;
							}
							if (num4 == 3)
							{
								error3 = new Error();
								num4 = 4;
							}
							if (num4 == 0)
							{
								num4 = 1;
							}
						}
						while (num4 != 4);
						try
						{
							error3.ShowDialog();
						}
						finally
						{
							if (error3 != null)
							{
								((IDisposable)error3).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_fourth);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_noise.scr", this.dyinglight2_fourth);
					}));
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004B7 RID: 1207 RVA: 0x00102350 File Offset: 0x00100550
		private void DL2_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"!WindowMode(i)                 // 0=windowed, 1=borderless, 2=fullscreen",
						"!WindowOffset(i,i)             // window position in pixels ",
						"!Monitor(i)                    // index of primary monitor",
						"!MonitorSecondary(i)           // index of secondary monitor",
						"!RendererMode(s)               // d3d11, d3d12 or d3d12ultimate ",
						"!FSR(f)                        // FSR sharpness",
						"!ExtraGameFov(f)               // extra fov",
						"!DisableDWM(i)                 // disables DWM when fullscreen",
						"!RT_AO()                       // raytraced ambient occlusion",
						"!RT_SS()                       // raytraced soft shadows",
						"!RT_Lit()                      // raytraced flashlight",
						"!RT_GiDif()                    // raytraced global illumination (diffuse)",
						"!RT_GiSpc()                    // raytraced global illumination (specular)",
						"!AsyncCompute(i)               // 0=deny async computes, 1=allow async computes if supported, ",
						"!Resolution(i,i)               // UI/window resolution of primary monitor",
						"!ResolutionSecondary(i,i)      // UI/window resolution of secondary monitor",
						"!Scale3D(f)                    // UI resolution * Scale3D = 3D resolution",
						"!Upscaler(i)                   // 0=none, 1=linear; 2=DLSS; 3=FSR",
						"!Upscaling(i)                  // 0=best performance, 1=balanced, 2=bestquality",
						"!TextureQuality(s)             // Low, Medium, High",
						"!GammaFloat(f)",
						"!ShadowsPreset(i)",
						"!ShadowsQuality(i)             // 0=PCF, 1=PCSS low, 2=PCSS medium, 3=PCSS high, 4=raytraced",
						"!ShadowMapSize(i)",
						"!SpotShadowMapSize(i)",
						"!FrameRate(i)                  // 0=no VSync, 1=Max device refresh rate, 30 - 30Hz, 60 - 60Hz",
						"!Vrr()                         // Variable Refresh Rate",
						"!GrassQuality(i)               // lower is better",
						"!MotionBlur(i)                 // 0=disabled, 1=enabled",
						"!MotionBlurQuality(s)          // Low, Medium, High",
						"!MotionBlurIntensity(f)        // 0=min 1=max",
						"!Bokeh(i)                      // 0=off, 1=on",
						"!SSSSQuality(i)                // 0=low, 1=medium, 2=high",
						"!FilmGrain(i)                  // 0=disabled, 1=enabled",
						"!DistanceBlur(i)               // 0=disabled, 1=enabled",
						"!AntiAliasing(i)               // 0=disabled, 1=enabled",
						"!AntiAliasingQuality(i)        // 0=low, 0=high",
						"!FogQuality(i)                 // 0=low, 1=medium, 2=high",
						"!ReflectionsQuality(i)         // 0=low, 1=medium, 2=high",
						"!ContactShadowsQuality(i)      // 0=none, 1=low, 2=medium, 3=high, 4=very high",
						"!SpotShadowsQuality(i)         // 0=low, 1=medium, 2=high",
						"!AmbientOcclusion(i)           // 0=disabled, 1=enabled",
						"!AmbientOcclusionQuality(i)    // 0=low, 1=high",
						"!ColorBlindMode(i)             // 0=none, 1=protanopia, 2=deuteranopia, 3=tritanopia",
						"!GpuFxQuality(i)               // 0=low, 1=high",
						"!VoxelGiQuality(i)             // 0=off, 1=low, 2=medium, 3=high, 4=ultra",
						"!OptSpotsCastShadows(i)",
						"!LodQuality(i)                 // 0=low, 1=high",
						"!AnisoOptOut()                 // Disable optional anisotropic filtering in some materials",
						"",
						"",
						"RendererMode(\"" + this.graphicsAPIVersion + "\")",
						"AsyncCompute(0)",
						"WindowMode(2)",
						string.Concat(new string[] { "Resolution(", this.DefaultWidth, ",", this.DefaultHeight, ")" }),
						"Scale3D(0.700000)",
						"FSR(0.335000)",
						"Upscaler(1)",
						"Upscaling(2)",
						"Monitor(0)",
						"DisableDWM(0)",
						"TextureQuality(\"Medium\")",
						"ShadowsQuality(0)",
						"ShadowMapSize(1)",
						"SpotShadowMapSize(1)",
						"GammaFloat(1.00)",
						"GrassQuality(4)",
						"FrameRate(0)",
						"MotionBlur(0)",
						"MotionBlurIntensity(0.00)",
						"Bokeh(0)",
						"SSSSQuality(0)",
						"MotionBlurQuality(\"Low\")",
						"FilmGrain(0)",
						"DistanceBlur(0)",
						"AntiAliasing(1)",
						"AntiAliasingQuality(1)",
						"FogQuality(0)",
						"ReflectionsQuality(0)",
						"ContactShadowsQuality(0)",
						"SpotShadowsQuality(0)",
						"AmbientOcclusion(0)",
						"AmbientOcclusionQuality(0)",
						"ColorBlindMode(0)",
						"GpuFxQuality(0)",
						"VoxelGiQuality(0)",
						"LodQuality(0)",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"!WindowMode(i)                 // 0=windowed, 1=borderless, 2=fullscreen",
						"!WindowOffset(i,i)             // window position in pixels ",
						"!Monitor(i)                    // index of primary monitor",
						"!MonitorSecondary(i)           // index of secondary monitor",
						"!RendererMode(s)               // d3d11, d3d12 or d3d12ultimate ",
						"!FSR(f)                        // FSR sharpness",
						"!ExtraGameFov(f)               // extra fov",
						"!DisableDWM(i)                 // disables DWM when fullscreen",
						"!RT_AO()                       // raytraced ambient occlusion",
						"!RT_SS()                       // raytraced soft shadows",
						"!RT_Lit()                      // raytraced flashlight",
						"!RT_GiDif()                    // raytraced global illumination (diffuse)",
						"!RT_GiSpc()                    // raytraced global illumination (specular)",
						"!AsyncCompute(i)               // 0=deny async computes, 1=allow async computes if supported, ",
						"!Resolution(i,i)               // UI/window resolution of primary monitor",
						"!ResolutionSecondary(i,i)      // UI/window resolution of secondary monitor",
						"!Scale3D(f)                    // UI resolution * Scale3D = 3D resolution",
						"!Upscaler(i)                   // 0=none, 1=linear; 2=DLSS; 3=FSR",
						"!Upscaling(i)                  // 0=best performance, 1=balanced, 2=bestquality",
						"!TextureQuality(s)             // Low, Medium, High",
						"!GammaFloat(f)",
						"!ShadowsPreset(i)",
						"!ShadowsQuality(i)             // 0=PCF, 1=PCSS low, 2=PCSS medium, 3=PCSS high, 4=raytraced",
						"!ShadowMapSize(i)",
						"!SpotShadowMapSize(i)",
						"!FrameRate(i)                  // 0=no VSync, 1=Max device refresh rate, 30 - 30Hz, 60 - 60Hz",
						"!Vrr()                         // Variable Refresh Rate",
						"!GrassQuality(i)               // lower is better",
						"!MotionBlur(i)                 // 0=disabled, 1=enabled",
						"!MotionBlurQuality(s)          // Low, Medium, High",
						"!MotionBlurIntensity(f)        // 0=min 1=max",
						"!Bokeh(i)                      // 0=off, 1=on",
						"!SSSSQuality(i)                // 0=low, 1=medium, 2=high",
						"!FilmGrain(i)                  // 0=disabled, 1=enabled",
						"!DistanceBlur(i)               // 0=disabled, 1=enabled",
						"!AntiAliasing(i)               // 0=disabled, 1=enabled",
						"!AntiAliasingQuality(i)        // 0=low, 0=high",
						"!FogQuality(i)                 // 0=low, 1=medium, 2=high",
						"!ReflectionsQuality(i)         // 0=low, 1=medium, 2=high",
						"!ContactShadowsQuality(i)      // 0=none, 1=low, 2=medium, 3=high, 4=very high",
						"!SpotShadowsQuality(i)         // 0=low, 1=medium, 2=high",
						"!AmbientOcclusion(i)           // 0=disabled, 1=enabled",
						"!AmbientOcclusionQuality(i)    // 0=low, 1=high",
						"!ColorBlindMode(i)             // 0=none, 1=protanopia, 2=deuteranopia, 3=tritanopia",
						"!GpuFxQuality(i)               // 0=low, 1=high",
						"!VoxelGiQuality(i)             // 0=off, 1=low, 2=medium, 3=high, 4=ultra",
						"!OptSpotsCastShadows(i)",
						"!LodQuality(i)                 // 0=low, 1=high",
						"!AnisoOptOut()                 // Disable optional anisotropic filtering in some materials",
						"",
						"",
						"RendererMode(\"" + this.graphicsAPIVersion + "\")",
						"AsyncCompute(0)",
						"WindowMode(2)",
						string.Concat(new string[] { "Resolution(", this.DefaultWidth, ",", this.DefaultHeight, ")" }),
						"Scale3D(0.700000)",
						"FSR(0.335000)",
						"Upscaler(1)",
						"Upscaling(2)",
						"Monitor(0)",
						"DisableDWM(0)",
						"TextureQuality(\"Medium\")",
						"ShadowsQuality(0)",
						"ShadowMapSize(1)",
						"SpotShadowMapSize(1)",
						"GammaFloat(1.00)",
						"GrassQuality(4)",
						"FrameRate(0)",
						"MotionBlur(0)",
						"MotionBlurIntensity(0.00)",
						"Bokeh(0)",
						"SSSSQuality(0)",
						"MotionBlurQuality(\"Low\")",
						"FilmGrain(0)",
						"DistanceBlur(0)",
						"AntiAliasing(1)",
						"AntiAliasingQuality(1)",
						"FogQuality(0)",
						"ReflectionsQuality(0)",
						"ContactShadowsQuality(0)",
						"SpotShadowsQuality(0)",
						"AmbientOcclusion(0)",
						"AmbientOcclusionQuality(0)",
						"ColorBlindMode(0)",
						"GpuFxQuality(0)",
						"VoxelGiQuality(0)",
						"LodQuality(0)",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.dyinglight2_main, text);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.dyinglight2_first, text2);
					num = 5;
				}
				if (num == 5)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num2 = 0;
						Error error;
						do
						{
							bool flag;
							if (num2 == 1)
							{
								flag = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009664807013/FC16D.pak", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\Data3.pak");
								num2 = 2;
							}
							if (num2 == 2)
							{
								if (!flag)
								{
									goto IL_77;
								}
								num2 = 3;
							}
							if (num2 == 3)
							{
								error = new Error();
								num2 = 4;
							}
							if (num2 == 0)
							{
								num2 = 1;
							}
						}
						while (num2 != 4);
						try
						{
							error.ShowDialog();
						}
						finally
						{
							if (error != null)
							{
								((IDisposable)error).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_second);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\Data3.pak", this.dyinglight2_second);
					}));
					num = 6;
				}
				if (num == 6)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num3 = 0;
						Error error2;
						do
						{
							bool flag2;
							if (num3 == 1)
							{
								flag2 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009358626967/DC6A3.scr", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_performance.scr");
								num3 = 2;
							}
							if (num3 == 2)
							{
								if (!flag2)
								{
									goto IL_77;
								}
								num3 = 3;
							}
							if (num3 == 3)
							{
								error2 = new Error();
								num3 = 4;
							}
							if (num3 == 0)
							{
								num3 = 1;
							}
						}
						while (num3 != 4);
						try
						{
							error2.ShowDialog();
						}
						finally
						{
							if (error2 != null)
							{
								((IDisposable)error2).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_third);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_performance.scr", this.dyinglight2_third);
					}));
					num = 7;
				}
				if (num == 7)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num4 = 0;
						Error error3;
						do
						{
							bool flag3;
							if (num4 == 1)
							{
								flag3 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009664807013/FC16D.pak", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_noise.scr");
								num4 = 2;
							}
							if (num4 == 2)
							{
								if (!flag3)
								{
									goto IL_77;
								}
								num4 = 3;
							}
							if (num4 == 3)
							{
								error3 = new Error();
								num4 = 4;
							}
							if (num4 == 0)
							{
								num4 = 1;
							}
						}
						while (num4 != 4);
						try
						{
							error3.ShowDialog();
						}
						finally
						{
							if (error3 != null)
							{
								((IDisposable)error3).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_fourth);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_noise.scr", this.dyinglight2_fourth);
					}));
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004B8 RID: 1208 RVA: 0x00102D98 File Offset: 0x00100F98
		private void DL2_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"!WindowMode(i)                 // 0=windowed, 1=borderless, 2=fullscreen",
						"!WindowOffset(i,i)             // window position in pixels ",
						"!Monitor(i)                    // index of primary monitor",
						"!MonitorSecondary(i)           // index of secondary monitor",
						"!RendererMode(s)               // d3d11, d3d12 or d3d12ultimate ",
						"!FSR(f)                        // FSR sharpness",
						"!ExtraGameFov(f)               // extra fov",
						"!DisableDWM(i)                 // disables DWM when fullscreen",
						"!RT_AO()                       // raytraced ambient occlusion",
						"!RT_SS()                       // raytraced soft shadows",
						"!RT_Lit()                      // raytraced flashlight",
						"!RT_GiDif()                    // raytraced global illumination (diffuse)",
						"!RT_GiSpc()                    // raytraced global illumination (specular)",
						"!AsyncCompute(i)               // 0=deny async computes, 1=allow async computes if supported, ",
						"!Resolution(i,i)               // UI/window resolution of primary monitor",
						"!ResolutionSecondary(i,i)      // UI/window resolution of secondary monitor",
						"!Scale3D(f)                    // UI resolution * Scale3D = 3D resolution",
						"!Upscaler(i)                   // 0=none, 1=linear; 2=DLSS; 3=FSR",
						"!Upscaling(i)                  // 0=best performance, 1=balanced, 2=bestquality",
						"!TextureQuality(s)             // Low, Medium, High",
						"!GammaFloat(f)",
						"!ShadowsPreset(i)",
						"!ShadowsQuality(i)             // 0=PCF, 1=PCSS low, 2=PCSS medium, 3=PCSS high, 4=raytraced",
						"!ShadowMapSize(i)",
						"!SpotShadowMapSize(i)",
						"!FrameRate(i)                  // 0=no VSync, 1=Max device refresh rate, 30 - 30Hz, 60 - 60Hz",
						"!Vrr()                         // Variable Refresh Rate",
						"!GrassQuality(i)               // lower is better",
						"!MotionBlur(i)                 // 0=disabled, 1=enabled",
						"!MotionBlurQuality(s)          // Low, Medium, High",
						"!MotionBlurIntensity(f)        // 0=min 1=max",
						"!Bokeh(i)                      // 0=off, 1=on",
						"!SSSSQuality(i)                // 0=low, 1=medium, 2=high",
						"!FilmGrain(i)                  // 0=disabled, 1=enabled",
						"!DistanceBlur(i)               // 0=disabled, 1=enabled",
						"!AntiAliasing(i)               // 0=disabled, 1=enabled",
						"!AntiAliasingQuality(i)        // 0=low, 0=high",
						"!FogQuality(i)                 // 0=low, 1=medium, 2=high",
						"!ReflectionsQuality(i)         // 0=low, 1=medium, 2=high",
						"!ContactShadowsQuality(i)      // 0=none, 1=low, 2=medium, 3=high, 4=very high",
						"!SpotShadowsQuality(i)         // 0=low, 1=medium, 2=high",
						"!AmbientOcclusion(i)           // 0=disabled, 1=enabled",
						"!AmbientOcclusionQuality(i)    // 0=low, 1=high",
						"!ColorBlindMode(i)             // 0=none, 1=protanopia, 2=deuteranopia, 3=tritanopia",
						"!GpuFxQuality(i)               // 0=low, 1=high",
						"!VoxelGiQuality(i)             // 0=off, 1=low, 2=medium, 3=high, 4=ultra",
						"!OptSpotsCastShadows(i)",
						"!LodQuality(i)                 // 0=low, 1=high",
						"!AnisoOptOut()                 // Disable optional anisotropic filtering in some materials",
						"",
						"",
						"RendererMode(\"" + this.graphicsAPIVersion + "\")",
						"AsyncCompute(0)",
						"WindowMode(2)",
						string.Concat(new string[] { "Resolution(", this.DefaultWidth, ",", this.DefaultHeight, ")" }),
						"Scale3D(0.800000)",
						"FSR(0.335000)",
						"Upscaler(1)",
						"Upscaling(2)",
						"Monitor(0)",
						"DisableDWM(0)",
						"TextureQuality(\"Medium\")",
						"ShadowsQuality(0)",
						"ShadowMapSize(1)",
						"SpotShadowMapSize(1)",
						"GammaFloat(1.00)",
						"GrassQuality(4)",
						"FrameRate(0)",
						"MotionBlur(0)",
						"MotionBlurIntensity(0.00)",
						"Bokeh(0)",
						"SSSSQuality(0)",
						"MotionBlurQuality(\"Low\")",
						"FilmGrain(0)",
						"DistanceBlur(0)",
						"AntiAliasing(1)",
						"AntiAliasingQuality(1)",
						"FogQuality(0)",
						"ReflectionsQuality(0)",
						"ContactShadowsQuality(0)",
						"SpotShadowsQuality(0)",
						"AmbientOcclusion(0)",
						"AmbientOcclusionQuality(0)",
						"ColorBlindMode(0)",
						"GpuFxQuality(0)",
						"VoxelGiQuality(0)",
						"LodQuality(0)",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"!WindowMode(i)                 // 0=windowed, 1=borderless, 2=fullscreen",
						"!WindowOffset(i,i)             // window position in pixels ",
						"!Monitor(i)                    // index of primary monitor",
						"!MonitorSecondary(i)           // index of secondary monitor",
						"!RendererMode(s)               // d3d11, d3d12 or d3d12ultimate ",
						"!FSR(f)                        // FSR sharpness",
						"!ExtraGameFov(f)               // extra fov",
						"!DisableDWM(i)                 // disables DWM when fullscreen",
						"!RT_AO()                       // raytraced ambient occlusion",
						"!RT_SS()                       // raytraced soft shadows",
						"!RT_Lit()                      // raytraced flashlight",
						"!RT_GiDif()                    // raytraced global illumination (diffuse)",
						"!RT_GiSpc()                    // raytraced global illumination (specular)",
						"!AsyncCompute(i)               // 0=deny async computes, 1=allow async computes if supported, ",
						"!Resolution(i,i)               // UI/window resolution of primary monitor",
						"!ResolutionSecondary(i,i)      // UI/window resolution of secondary monitor",
						"!Scale3D(f)                    // UI resolution * Scale3D = 3D resolution",
						"!Upscaler(i)                   // 0=none, 1=linear; 2=DLSS; 3=FSR",
						"!Upscaling(i)                  // 0=best performance, 1=balanced, 2=bestquality",
						"!TextureQuality(s)             // Low, Medium, High",
						"!GammaFloat(f)",
						"!ShadowsPreset(i)",
						"!ShadowsQuality(i)             // 0=PCF, 1=PCSS low, 2=PCSS medium, 3=PCSS high, 4=raytraced",
						"!ShadowMapSize(i)",
						"!SpotShadowMapSize(i)",
						"!FrameRate(i)                  // 0=no VSync, 1=Max device refresh rate, 30 - 30Hz, 60 - 60Hz",
						"!Vrr()                         // Variable Refresh Rate",
						"!GrassQuality(i)               // lower is better",
						"!MotionBlur(i)                 // 0=disabled, 1=enabled",
						"!MotionBlurQuality(s)          // Low, Medium, High",
						"!MotionBlurIntensity(f)        // 0=min 1=max",
						"!Bokeh(i)                      // 0=off, 1=on",
						"!SSSSQuality(i)                // 0=low, 1=medium, 2=high",
						"!FilmGrain(i)                  // 0=disabled, 1=enabled",
						"!DistanceBlur(i)               // 0=disabled, 1=enabled",
						"!AntiAliasing(i)               // 0=disabled, 1=enabled",
						"!AntiAliasingQuality(i)        // 0=low, 0=high",
						"!FogQuality(i)                 // 0=low, 1=medium, 2=high",
						"!ReflectionsQuality(i)         // 0=low, 1=medium, 2=high",
						"!ContactShadowsQuality(i)      // 0=none, 1=low, 2=medium, 3=high, 4=very high",
						"!SpotShadowsQuality(i)         // 0=low, 1=medium, 2=high",
						"!AmbientOcclusion(i)           // 0=disabled, 1=enabled",
						"!AmbientOcclusionQuality(i)    // 0=low, 1=high",
						"!ColorBlindMode(i)             // 0=none, 1=protanopia, 2=deuteranopia, 3=tritanopia",
						"!GpuFxQuality(i)               // 0=low, 1=high",
						"!VoxelGiQuality(i)             // 0=off, 1=low, 2=medium, 3=high, 4=ultra",
						"!OptSpotsCastShadows(i)",
						"!LodQuality(i)                 // 0=low, 1=high",
						"!AnisoOptOut()                 // Disable optional anisotropic filtering in some materials",
						"",
						"",
						"RendererMode(\"" + this.graphicsAPIVersion + "\")",
						"AsyncCompute(0)",
						"WindowMode(2)",
						string.Concat(new string[] { "Resolution(", this.DefaultWidth, ",", this.DefaultHeight, ")" }),
						"Scale3D(0.800000)",
						"FSR(0.335000)",
						"Upscaler(1)",
						"Upscaling(2)",
						"Monitor(0)",
						"DisableDWM(0)",
						"TextureQuality(\"Medium\")",
						"ShadowsQuality(0)",
						"ShadowMapSize(1)",
						"SpotShadowMapSize(1)",
						"GammaFloat(1.00)",
						"GrassQuality(4)",
						"FrameRate(0)",
						"MotionBlur(0)",
						"MotionBlurIntensity(0.00)",
						"Bokeh(0)",
						"SSSSQuality(0)",
						"MotionBlurQuality(\"Low\")",
						"FilmGrain(0)",
						"DistanceBlur(0)",
						"AntiAliasing(1)",
						"AntiAliasingQuality(1)",
						"FogQuality(0)",
						"ReflectionsQuality(0)",
						"ContactShadowsQuality(0)",
						"SpotShadowsQuality(0)",
						"AmbientOcclusion(0)",
						"AmbientOcclusionQuality(0)",
						"ColorBlindMode(0)",
						"GpuFxQuality(0)",
						"VoxelGiQuality(0)",
						"LodQuality(0)",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.dyinglight2_main, text);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.dyinglight2_first, text2);
					num = 5;
				}
				if (num == 5)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num2 = 0;
						Error error;
						do
						{
							bool flag;
							if (num2 == 1)
							{
								flag = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009664807013/FC16D.pak", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\Data3.pak");
								num2 = 2;
							}
							if (num2 == 2)
							{
								if (!flag)
								{
									goto IL_77;
								}
								num2 = 3;
							}
							if (num2 == 3)
							{
								error = new Error();
								num2 = 4;
							}
							if (num2 == 0)
							{
								num2 = 1;
							}
						}
						while (num2 != 4);
						try
						{
							error.ShowDialog();
						}
						finally
						{
							if (error != null)
							{
								((IDisposable)error).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_second);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\Data3.pak", this.dyinglight2_second);
					}));
					num = 6;
				}
				if (num == 6)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num3 = 0;
						Error error2;
						do
						{
							bool flag2;
							if (num3 == 1)
							{
								flag2 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009358626967/DC6A3.scr", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_performance.scr");
								num3 = 2;
							}
							if (num3 == 2)
							{
								if (!flag2)
								{
									goto IL_77;
								}
								num3 = 3;
							}
							if (num3 == 3)
							{
								error2 = new Error();
								num3 = 4;
							}
							if (num3 == 0)
							{
								num3 = 1;
							}
						}
						while (num3 != 4);
						try
						{
							error2.ShowDialog();
						}
						finally
						{
							if (error2 != null)
							{
								((IDisposable)error2).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_third);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_performance.scr", this.dyinglight2_third);
					}));
					num = 7;
				}
				if (num == 7)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num4 = 0;
						Error error3;
						do
						{
							bool flag3;
							if (num4 == 1)
							{
								flag3 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009664807013/FC16D.pak", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_noise.scr");
								num4 = 2;
							}
							if (num4 == 2)
							{
								if (!flag3)
								{
									goto IL_77;
								}
								num4 = 3;
							}
							if (num4 == 3)
							{
								error3 = new Error();
								num4 = 4;
							}
							if (num4 == 0)
							{
								num4 = 1;
							}
						}
						while (num4 != 4);
						try
						{
							error3.ShowDialog();
						}
						finally
						{
							if (error3 != null)
							{
								((IDisposable)error3).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_fourth);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_noise.scr", this.dyinglight2_fourth);
					}));
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004B9 RID: 1209 RVA: 0x001037E0 File Offset: 0x001019E0
		private void DL2_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"!WindowMode(i)                 // 0=windowed, 1=borderless, 2=fullscreen",
						"!WindowOffset(i,i)             // window position in pixels ",
						"!Monitor(i)                    // index of primary monitor",
						"!MonitorSecondary(i)           // index of secondary monitor",
						"!RendererMode(s)               // d3d11, d3d12 or d3d12ultimate ",
						"!FSR(f)                        // FSR sharpness",
						"!ExtraGameFov(f)               // extra fov",
						"!DisableDWM(i)                 // disables DWM when fullscreen",
						"!RT_AO()                       // raytraced ambient occlusion",
						"!RT_SS()                       // raytraced soft shadows",
						"!RT_Lit()                      // raytraced flashlight",
						"!RT_GiDif()                    // raytraced global illumination (diffuse)",
						"!RT_GiSpc()                    // raytraced global illumination (specular)",
						"!AsyncCompute(i)               // 0=deny async computes, 1=allow async computes if supported, ",
						"!Resolution(i,i)               // UI/window resolution of primary monitor",
						"!ResolutionSecondary(i,i)      // UI/window resolution of secondary monitor",
						"!Scale3D(f)                    // UI resolution * Scale3D = 3D resolution",
						"!Upscaler(i)                   // 0=none, 1=linear; 2=DLSS; 3=FSR",
						"!Upscaling(i)                  // 0=best performance, 1=balanced, 2=bestquality",
						"!TextureQuality(s)             // Low, Medium, High",
						"!GammaFloat(f)",
						"!ShadowsPreset(i)",
						"!ShadowsQuality(i)             // 0=PCF, 1=PCSS low, 2=PCSS medium, 3=PCSS high, 4=raytraced",
						"!ShadowMapSize(i)",
						"!SpotShadowMapSize(i)",
						"!FrameRate(i)                  // 0=no VSync, 1=Max device refresh rate, 30 - 30Hz, 60 - 60Hz",
						"!Vrr()                         // Variable Refresh Rate",
						"!GrassQuality(i)               // lower is better",
						"!MotionBlur(i)                 // 0=disabled, 1=enabled",
						"!MotionBlurQuality(s)          // Low, Medium, High",
						"!MotionBlurIntensity(f)        // 0=min 1=max",
						"!Bokeh(i)                      // 0=off, 1=on",
						"!SSSSQuality(i)                // 0=low, 1=medium, 2=high",
						"!FilmGrain(i)                  // 0=disabled, 1=enabled",
						"!DistanceBlur(i)               // 0=disabled, 1=enabled",
						"!AntiAliasing(i)               // 0=disabled, 1=enabled",
						"!AntiAliasingQuality(i)        // 0=low, 0=high",
						"!FogQuality(i)                 // 0=low, 1=medium, 2=high",
						"!ReflectionsQuality(i)         // 0=low, 1=medium, 2=high",
						"!ContactShadowsQuality(i)      // 0=none, 1=low, 2=medium, 3=high, 4=very high",
						"!SpotShadowsQuality(i)         // 0=low, 1=medium, 2=high",
						"!AmbientOcclusion(i)           // 0=disabled, 1=enabled",
						"!AmbientOcclusionQuality(i)    // 0=low, 1=high",
						"!ColorBlindMode(i)             // 0=none, 1=protanopia, 2=deuteranopia, 3=tritanopia",
						"!GpuFxQuality(i)               // 0=low, 1=high",
						"!VoxelGiQuality(i)             // 0=off, 1=low, 2=medium, 3=high, 4=ultra",
						"!OptSpotsCastShadows(i)",
						"!LodQuality(i)                 // 0=low, 1=high",
						"!AnisoOptOut()                 // Disable optional anisotropic filtering in some materials",
						"",
						"",
						"RendererMode(\"" + this.graphicsAPIVersion + "\")",
						"AsyncCompute(0)",
						"WindowMode(2)",
						string.Concat(new string[] { "Resolution(", this.DefaultWidth, ",", this.DefaultHeight, ")" }),
						"Scale3D(0.850000)",
						"FSR(0.335000)",
						"Upscaler(1)",
						"Upscaling(2)",
						"Monitor(0)",
						"DisableDWM(0)",
						"TextureQuality(\"Medium\")",
						"ShadowsQuality(0)",
						"ShadowMapSize(1)",
						"SpotShadowMapSize(1)",
						"GammaFloat(1.00)",
						"GrassQuality(4)",
						"FrameRate(0)",
						"MotionBlur(0)",
						"MotionBlurIntensity(0.00)",
						"Bokeh(0)",
						"SSSSQuality(0)",
						"MotionBlurQuality(\"Low\")",
						"FilmGrain(0)",
						"DistanceBlur(0)",
						"AntiAliasing(1)",
						"AntiAliasingQuality(1)",
						"FogQuality(0)",
						"ReflectionsQuality(0)",
						"ContactShadowsQuality(0)",
						"SpotShadowsQuality(0)",
						"AmbientOcclusion(0)",
						"AmbientOcclusionQuality(0)",
						"ColorBlindMode(0)",
						"GpuFxQuality(0)",
						"VoxelGiQuality(0)",
						"LodQuality(0)",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"!WindowOffset(i,i)             // window position in pixels ",
						"!Monitor(i)                    // index of primary monitor",
						"!MonitorSecondary(i)           // index of secondary monitor",
						"!RendererMode(s)               // d3d11, d3d12 or d3d12ultimate ",
						"!FSR(f)                        // FSR sharpness",
						"!ExtraGameFov(f)               // extra fov",
						"!DisableDWM(i)                 // disables DWM when fullscreen",
						"!RT_AO()                       // raytraced ambient occlusion",
						"!RT_SS()                       // raytraced soft shadows",
						"!RT_Lit()                      // raytraced flashlight",
						"!RT_GiDif()                    // raytraced global illumination (diffuse)",
						"!RT_GiSpc()                    // raytraced global illumination (specular)",
						"!AsyncCompute(i)               // 0=deny async computes, 1=allow async computes if supported, ",
						"!Resolution(i,i)               // UI/window resolution of primary monitor",
						"!ResolutionSecondary(i,i)      // UI/window resolution of secondary monitor",
						"!Scale3D(f)                    // UI resolution * Scale3D = 3D resolution",
						"!Upscaler(i)                   // 0=none, 1=linear; 2=DLSS; 3=FSR",
						"!Upscaling(i)                  // 0=best performance, 1=balanced, 2=bestquality",
						"!TextureQuality(s)             // Low, Medium, High",
						"!GammaFloat(f)",
						"!ShadowsPreset(i)",
						"!ShadowsQuality(i)             // 0=PCF, 1=PCSS low, 2=PCSS medium, 3=PCSS high, 4=raytraced",
						"!ShadowMapSize(i)",
						"!SpotShadowMapSize(i)",
						"!FrameRate(i)                  // 0=no VSync, 1=Max device refresh rate, 30 - 30Hz, 60 - 60Hz",
						"!Vrr()                         // Variable Refresh Rate",
						"!GrassQuality(i)               // lower is better",
						"!MotionBlur(i)                 // 0=disabled, 1=enabled",
						"!MotionBlurQuality(s)          // Low, Medium, High",
						"!MotionBlurIntensity(f)        // 0=min 1=max",
						"!Bokeh(i)                      // 0=off, 1=on",
						"!SSSSQuality(i)                // 0=low, 1=medium, 2=high",
						"!FilmGrain(i)                  // 0=disabled, 1=enabled",
						"!DistanceBlur(i)               // 0=disabled, 1=enabled",
						"!AntiAliasing(i)               // 0=disabled, 1=enabled",
						"!AntiAliasingQuality(i)        // 0=low, 0=high",
						"!FogQuality(i)                 // 0=low, 1=medium, 2=high",
						"!ReflectionsQuality(i)         // 0=low, 1=medium, 2=high",
						"!ContactShadowsQuality(i)      // 0=none, 1=low, 2=medium, 3=high, 4=very high",
						"!SpotShadowsQuality(i)         // 0=low, 1=medium, 2=high",
						"!AmbientOcclusion(i)           // 0=disabled, 1=enabled",
						"!AmbientOcclusionQuality(i)    // 0=low, 1=high",
						"!ColorBlindMode(i)             // 0=none, 1=protanopia, 2=deuteranopia, 3=tritanopia",
						"!GpuFxQuality(i)               // 0=low, 1=high",
						"!VoxelGiQuality(i)             // 0=off, 1=low, 2=medium, 3=high, 4=ultra",
						"!OptSpotsCastShadows(i)",
						"!LodQuality(i)                 // 0=low, 1=high",
						"!AnisoOptOut()                 // Disable optional anisotropic filtering in some materials",
						"",
						"",
						"RendererMode(\"" + this.graphicsAPIVersion + "\")",
						"AsyncCompute(0)",
						"WindowMode(2)",
						string.Concat(new string[] { "Resolution(", this.DefaultWidth, ",", this.DefaultHeight, ")" }),
						"Scale3D(0.850000)",
						"FSR(0.335000)",
						"Upscaler(1)",
						"Upscaling(2)",
						"Monitor(0)",
						"DisableDWM(0)",
						"TextureQuality(\"Medium\")",
						"ShadowsQuality(0)",
						"ShadowMapSize(1)",
						"SpotShadowMapSize(1)",
						"GammaFloat(1.00)",
						"GrassQuality(4)",
						"FrameRate(0)",
						"MotionBlur(0)",
						"MotionBlurIntensity(0.00)",
						"Bokeh(0)",
						"SSSSQuality(0)",
						"MotionBlurQuality(\"Low\")",
						"FilmGrain(0)",
						"DistanceBlur(0)",
						"AntiAliasing(1)",
						"AntiAliasingQuality(1)",
						"FogQuality(0)",
						"ReflectionsQuality(0)",
						"ContactShadowsQuality(0)",
						"SpotShadowsQuality(0)",
						"AmbientOcclusion(0)",
						"AmbientOcclusionQuality(0)",
						"ColorBlindMode(0)",
						"GpuFxQuality(0)",
						"VoxelGiQuality(0)",
						"LodQuality(0)",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.dyinglight2_main, text);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.dyinglight2_first, text2);
					num = 5;
				}
				if (num == 5)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num2 = 0;
						Error error;
						do
						{
							bool flag;
							if (num2 == 1)
							{
								flag = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009664807013/FC16D.pak", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\Data3.pak");
								num2 = 2;
							}
							if (num2 == 2)
							{
								if (!flag)
								{
									goto IL_77;
								}
								num2 = 3;
							}
							if (num2 == 3)
							{
								error = new Error();
								num2 = 4;
							}
							if (num2 == 0)
							{
								num2 = 1;
							}
						}
						while (num2 != 4);
						try
						{
							error.ShowDialog();
						}
						finally
						{
							if (error != null)
							{
								((IDisposable)error).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_second);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\Data3.pak", this.dyinglight2_second);
					}));
					num = 6;
				}
				if (num == 6)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num3 = 0;
						Error error2;
						do
						{
							bool flag2;
							if (num3 == 1)
							{
								flag2 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009358626967/DC6A3.scr", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_performance.scr");
								num3 = 2;
							}
							if (num3 == 2)
							{
								if (!flag2)
								{
									goto IL_77;
								}
								num3 = 3;
							}
							if (num3 == 3)
							{
								error2 = new Error();
								num3 = 4;
							}
							if (num3 == 0)
							{
								num3 = 1;
							}
						}
						while (num3 != 4);
						try
						{
							error2.ShowDialog();
						}
						finally
						{
							if (error2 != null)
							{
								((IDisposable)error2).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_third);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_performance.scr", this.dyinglight2_third);
					}));
					num = 7;
				}
				if (num == 7)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num4 = 0;
						Error error3;
						do
						{
							bool flag3;
							if (num4 == 1)
							{
								flag3 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009664807013/FC16D.pak", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_noise.scr");
								num4 = 2;
							}
							if (num4 == 2)
							{
								if (!flag3)
								{
									goto IL_77;
								}
								num4 = 3;
							}
							if (num4 == 3)
							{
								error3 = new Error();
								num4 = 4;
							}
							if (num4 == 0)
							{
								num4 = 1;
							}
						}
						while (num4 != 4);
						try
						{
							error3.ShowDialog();
						}
						finally
						{
							if (error3 != null)
							{
								((IDisposable)error3).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_fourth);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_noise.scr", this.dyinglight2_fourth);
					}));
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004BA RID: 1210 RVA: 0x0010421C File Offset: 0x0010241C
		private void DL2_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"!WindowMode(i)                 // 0=windowed, 1=borderless, 2=fullscreen",
						"!WindowOffset(i,i)             // window position in pixels ",
						"!Monitor(i)                    // index of primary monitor",
						"!MonitorSecondary(i)           // index of secondary monitor",
						"!RendererMode(s)               // d3d11, d3d12 or d3d12ultimate ",
						"!FSR(f)                        // FSR sharpness",
						"!ExtraGameFov(f)               // extra fov",
						"!DisableDWM(i)                 // disables DWM when fullscreen",
						"!RT_AO()                       // raytraced ambient occlusion",
						"!RT_SS()                       // raytraced soft shadows",
						"!RT_Lit()                      // raytraced flashlight",
						"!RT_GiDif()                    // raytraced global illumination (diffuse)",
						"!RT_GiSpc()                    // raytraced global illumination (specular)",
						"!AsyncCompute(i)               // 0=deny async computes, 1=allow async computes if supported, ",
						"!Resolution(i,i)               // UI/window resolution of primary monitor",
						"!ResolutionSecondary(i,i)      // UI/window resolution of secondary monitor",
						"!Scale3D(f)                    // UI resolution * Scale3D = 3D resolution",
						"!Upscaler(i)                   // 0=none, 1=linear; 2=DLSS; 3=FSR",
						"!Upscaling(i)                  // 0=best performance, 1=balanced, 2=bestquality",
						"!TextureQuality(s)             // Low, Medium, High",
						"!GammaFloat(f)",
						"!ShadowsPreset(i)",
						"!ShadowsQuality(i)             // 0=PCF, 1=PCSS low, 2=PCSS medium, 3=PCSS high, 4=raytraced",
						"!ShadowMapSize(i)",
						"!SpotShadowMapSize(i)",
						"!FrameRate(i)                  // 0=no VSync, 1=Max device refresh rate, 30 - 30Hz, 60 - 60Hz",
						"!Vrr()                         // Variable Refresh Rate",
						"!GrassQuality(i)               // lower is better",
						"!MotionBlur(i)                 // 0=disabled, 1=enabled",
						"!MotionBlurQuality(s)          // Low, Medium, High",
						"!MotionBlurIntensity(f)        // 0=min 1=max",
						"!Bokeh(i)                      // 0=off, 1=on",
						"!SSSSQuality(i)                // 0=low, 1=medium, 2=high",
						"!FilmGrain(i)                  // 0=disabled, 1=enabled",
						"!DistanceBlur(i)               // 0=disabled, 1=enabled",
						"!AntiAliasing(i)               // 0=disabled, 1=enabled",
						"!AntiAliasingQuality(i)        // 0=low, 0=high",
						"!FogQuality(i)                 // 0=low, 1=medium, 2=high",
						"!ReflectionsQuality(i)         // 0=low, 1=medium, 2=high",
						"!ContactShadowsQuality(i)      // 0=none, 1=low, 2=medium, 3=high, 4=very high",
						"!SpotShadowsQuality(i)         // 0=low, 1=medium, 2=high",
						"!AmbientOcclusion(i)           // 0=disabled, 1=enabled",
						"!AmbientOcclusionQuality(i)    // 0=low, 1=high",
						"!ColorBlindMode(i)             // 0=none, 1=protanopia, 2=deuteranopia, 3=tritanopia",
						"!GpuFxQuality(i)               // 0=low, 1=high",
						"!VoxelGiQuality(i)             // 0=off, 1=low, 2=medium, 3=high, 4=ultra",
						"!OptSpotsCastShadows(i)",
						"!LodQuality(i)                 // 0=low, 1=high",
						"!AnisoOptOut()                 // Disable optional anisotropic filtering in some materials",
						"",
						"",
						"RendererMode(\"" + this.graphicsAPIVersion + "\")",
						"AsyncCompute(0)",
						"WindowMode(2)",
						string.Concat(new string[] { "Resolution(", this.DefaultWidth, ",", this.DefaultHeight, ")" }),
						"Scale3D(0.900000)",
						"FSR(0.335000)",
						"Upscaler(0)",
						"Upscaling(0)",
						"Monitor(0)",
						"DisableDWM(0)",
						"TextureQuality(\"Medium\")",
						"ShadowsQuality(0)",
						"ShadowMapSize(1)",
						"SpotShadowMapSize(1)",
						"GammaFloat(1.00)",
						"GrassQuality(4)",
						"FrameRate(0)",
						"MotionBlur(0)",
						"MotionBlurIntensity(0.00)",
						"Bokeh(0)",
						"SSSSQuality(0)",
						"MotionBlurQuality(\"Low\")",
						"FilmGrain(0)",
						"DistanceBlur(0)",
						"AntiAliasing(1)",
						"AntiAliasingQuality(1)",
						"FogQuality(0)",
						"ReflectionsQuality(0)",
						"ContactShadowsQuality(0)",
						"SpotShadowsQuality(0)",
						"AmbientOcclusion(0)",
						"AmbientOcclusionQuality(0)",
						"ColorBlindMode(0)",
						"GpuFxQuality(0)",
						"VoxelGiQuality(0)",
						"LodQuality(0)",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 2)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"!WindowMode(i)                 // 0=windowed, 1=borderless, 2=fullscreen",
						"!WindowOffset(i,i)             // window position in pixels ",
						"!Monitor(i)                    // index of primary monitor",
						"!MonitorSecondary(i)           // index of secondary monitor",
						"!RendererMode(s)               // d3d11, d3d12 or d3d12ultimate ",
						"!FSR(f)                        // FSR sharpness",
						"!ExtraGameFov(f)               // extra fov",
						"!DisableDWM(i)                 // disables DWM when fullscreen",
						"!RT_AO()                       // raytraced ambient occlusion",
						"!RT_SS()                       // raytraced soft shadows",
						"!RT_Lit()                      // raytraced flashlight",
						"!RT_GiDif()                    // raytraced global illumination (diffuse)",
						"!RT_GiSpc()                    // raytraced global illumination (specular)",
						"!AsyncCompute(i)               // 0=deny async computes, 1=allow async computes if supported, ",
						"!Resolution(i,i)               // UI/window resolution of primary monitor",
						"!ResolutionSecondary(i,i)      // UI/window resolution of secondary monitor",
						"!Scale3D(f)                    // UI resolution * Scale3D = 3D resolution",
						"!Upscaler(i)                   // 0=none, 1=linear; 2=DLSS; 3=FSR",
						"!Upscaling(i)                  // 0=best performance, 1=balanced, 2=bestquality",
						"!TextureQuality(s)             // Low, Medium, High",
						"!GammaFloat(f)",
						"!ShadowsPreset(i)",
						"!ShadowsQuality(i)             // 0=PCF, 1=PCSS low, 2=PCSS medium, 3=PCSS high, 4=raytraced",
						"!ShadowMapSize(i)",
						"!SpotShadowMapSize(i)",
						"!FrameRate(i)                  // 0=no VSync, 1=Max device refresh rate, 30 - 30Hz, 60 - 60Hz",
						"!Vrr()                         // Variable Refresh Rate",
						"!GrassQuality(i)               // lower is better",
						"!MotionBlur(i)                 // 0=disabled, 1=enabled",
						"!MotionBlurQuality(s)          // Low, Medium, High",
						"!MotionBlurIntensity(f)        // 0=min 1=max",
						"!Bokeh(i)                      // 0=off, 1=on",
						"!SSSSQuality(i)                // 0=low, 1=medium, 2=high",
						"!FilmGrain(i)                  // 0=disabled, 1=enabled",
						"!DistanceBlur(i)               // 0=disabled, 1=enabled",
						"!AntiAliasing(i)               // 0=disabled, 1=enabled",
						"!AntiAliasingQuality(i)        // 0=low, 0=high",
						"!FogQuality(i)                 // 0=low, 1=medium, 2=high",
						"!ReflectionsQuality(i)         // 0=low, 1=medium, 2=high",
						"!ContactShadowsQuality(i)      // 0=none, 1=low, 2=medium, 3=high, 4=very high",
						"!SpotShadowsQuality(i)         // 0=low, 1=medium, 2=high",
						"!AmbientOcclusion(i)           // 0=disabled, 1=enabled",
						"!AmbientOcclusionQuality(i)    // 0=low, 1=high",
						"!ColorBlindMode(i)             // 0=none, 1=protanopia, 2=deuteranopia, 3=tritanopia",
						"!GpuFxQuality(i)               // 0=low, 1=high",
						"!VoxelGiQuality(i)             // 0=off, 1=low, 2=medium, 3=high, 4=ultra",
						"!OptSpotsCastShadows(i)",
						"!LodQuality(i)                 // 0=low, 1=high",
						"!AnisoOptOut()                 // Disable optional anisotropic filtering in some materials",
						"",
						"",
						"RendererMode(\"" + this.graphicsAPIVersion + "\")",
						"AsyncCompute(0)",
						"WindowMode(2)",
						string.Concat(new string[] { "Resolution(", this.DefaultWidth, ",", this.DefaultHeight, ")" }),
						"Scale3D(0.850000)",
						"FSR(0.335000)",
						"Upscaler(0)",
						"Upscaling(0)",
						"Monitor(0)",
						"DisableDWM(0)",
						"TextureQuality(\"Medium\")",
						"ShadowsQuality(0)",
						"ShadowMapSize(1)",
						"SpotShadowMapSize(1)",
						"GammaFloat(1.00)",
						"GrassQuality(4)",
						"FrameRate(0)",
						"MotionBlur(0)",
						"MotionBlurIntensity(0.00)",
						"Bokeh(0)",
						"SSSSQuality(0)",
						"MotionBlurQuality(\"Low\")",
						"FilmGrain(0)",
						"DistanceBlur(0)",
						"AntiAliasing(1)",
						"AntiAliasingQuality(1)",
						"FogQuality(0)",
						"ReflectionsQuality(0)",
						"ContactShadowsQuality(0)",
						"SpotShadowsQuality(0)",
						"AmbientOcclusion(0)",
						"AmbientOcclusionQuality(0)",
						"ColorBlindMode(0)",
						"GpuFxQuality(0)",
						"VoxelGiQuality(0)",
						"LodQuality(0)",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.dyinglight2_main, text);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.dyinglight2_first, text2);
					num = 5;
				}
				if (num == 5)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num2 = 0;
						Error error;
						do
						{
							bool flag;
							if (num2 == 1)
							{
								flag = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009664807013/FC16D.pak", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\Data3.pak");
								num2 = 2;
							}
							if (num2 == 2)
							{
								if (!flag)
								{
									goto IL_77;
								}
								num2 = 3;
							}
							if (num2 == 3)
							{
								error = new Error();
								num2 = 4;
							}
							if (num2 == 0)
							{
								num2 = 1;
							}
						}
						while (num2 != 4);
						try
						{
							error.ShowDialog();
						}
						finally
						{
							if (error != null)
							{
								((IDisposable)error).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_second);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\Data3.pak", this.dyinglight2_second);
					}));
					num = 6;
				}
				if (num == 6)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num3 = 0;
						Error error2;
						do
						{
							bool flag2;
							if (num3 == 1)
							{
								flag2 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009358626967/DC6A3.scr", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_performance.scr");
								num3 = 2;
							}
							if (num3 == 2)
							{
								if (!flag2)
								{
									goto IL_77;
								}
								num3 = 3;
							}
							if (num3 == 3)
							{
								error2 = new Error();
								num3 = 4;
							}
							if (num3 == 0)
							{
								num3 = 1;
							}
						}
						while (num3 != 4);
						try
						{
							error2.ShowDialog();
						}
						finally
						{
							if (error2 != null)
							{
								((IDisposable)error2).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_third);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_performance.scr", this.dyinglight2_third);
					}));
					num = 7;
				}
				if (num == 7)
				{
					base.BeginInvoke(new Action(delegate
					{
						int num4 = 0;
						Error error3;
						do
						{
							bool flag3;
							if (num4 == 1)
							{
								flag3 = !Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1059869009664807013/FC16D.pak", "C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_noise.scr");
								num4 = 2;
							}
							if (num4 == 2)
							{
								if (!flag3)
								{
									goto IL_77;
								}
								num4 = 3;
							}
							if (num4 == 3)
							{
								error3 = new Error();
								num4 = 4;
							}
							if (num4 == 0)
							{
								num4 = 1;
							}
						}
						while (num4 != 4);
						try
						{
							error3.ShowDialog();
						}
						finally
						{
							if (error3 != null)
							{
								((IDisposable)error3).Dispose();
							}
						}
						return;
						IL_77:
						File.Delete(this.dyinglight2_fourth);
						File.Move("C:\\Nexus_LiteOS_Toolkit\\Downloads\\varlist_noise.scr", this.dyinglight2_fourth);
					}));
					num = 8;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004BB RID: 1211 RVA: 0x00104C64 File Offset: 0x00102E64
		private void Fallout4_g()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.fallout4_settings)
						where s.Contains("sD3DDevice")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Display]",
						"flocalShadowMapHalveEveryXUnit=1.0000",
						"focusShadowMapDoubleEveryXUnit=1.0000",
						"fShadowBiasScale=0.0000",
						"fDirShadowDistance=99999999",
						"fShadowDistance=99999999.0000",
						"uiOrthoShadowFilter=3",
						"uiShadowFilter=3",
						"iShadowMapResolution=1024",
						"uPipboyTargetHeight=700",
						"uPipboyTargetWidth=876",
						"iVolumetricLightingQuality=0",
						"bVolumetricLightingEnable=0",
						"bSAOEnable=0",
						"iDirShadowSplits=1",
						"bVolumetricLightingForceCasters=0",
						"iTiledLightingMinLights=21",
						"bComputeShaderDeferredTiledLighting=1",
						"iMaxFocusShadowsDialogue=0",
						"iMaxFocusShadows=0",
						"bForceIgnoreSmoothness=1",
						"fBlendSplitDirShadow=99999999.0000",
						"bSinglePassDirShadow=1",
						"bEnableWetnessMaterials=0",
						"fTessFactorMaxDistanceScale=0.0000",
						"sAntiAliasing=",
						"fLeafAnimDampenDistEnd=1400.0000",
						"fLeafAnimDampenDistStart=400.0000",
						"fMeshLODFadePercentDefault=1.2000",
						"fMeshLODFadeBoundDefault=256.0000",
						"fMeshLODFadeScalar=1.0000",
						"fMeshLODLevel2FadeTreeDistance=1300.0000",
						"fMeshLODLevel1FadeTreeDistance=1600.0000",
						"fInteriorMeshLODLevel2FadeDist=1350.0000",
						"fInteriorMeshLODLevel1FadeDist=1600.0000",
						"fMeshLODLevel2FadeDist=1000",
						"fMeshLODLevel1FadeDist=2400",
						"iMaxAnisotropy=4",
						"iPresentInterval=1",
						"bTopMostWindow=0",
						"bMaximizeWindow=0",
						"bBorderless=1",
						"bFull Screen=1",
						"iSize H=" + this.DefaultHeight,
						"iSize W=" + this.DefaultWidth,
						"bAllowShadowcasterNPCLights=0",
						"iScreenShotIndex=0",
						"fMaxFocusShadowMapDistance=0.0000",
						"bPrecipitationOcclusion=1",
						"iMaxSkinDecalsPerFrame=0",
						"iMaxDecalsPerFrame=0",
						string.Join(Environment.NewLine, array),
						"iTexMipMapSkip=2",
						"bEnableRainOcclusion=0",
						"iAdapter=0",
						"[Imagespace]",
						"bDoDepthOfField=1",
						"bScreenSpaceBokeh=0",
						"bMBEnable=0",
						"bLensFlare=0",
						"[Pipboy]",
						"fPipboyEffectColorB=0.0900",
						"fPipboyEffectColorG=1.0000",
						"fPipboyEffectColorR=0.0800",
						"[VATS]",
						"fModMenuEffectHighlightPAColorB=0.4100",
						"fModMenuEffectHighlightPAColorG=0.8200",
						"fModMenuEffectHighlightPAColorR=1.0000",
						"fModMenuEffectPAColorB=0.4100",
						"fModMenuEffectPAColorG=0.8200",
						"fModMenuEffectPAColorR=1.0000",
						"fModMenuEffectHighlightColorB=0.0824",
						"fModMenuEffectHighlightColorG=1.0000",
						"fModMenuEffectHighlightColorR=0.0706",
						"fModMenuEffectColorB=0.4200",
						"fModMenuEffectColorG=0.9900",
						"fModMenuEffectColorR=0.4900",
						"[MAIN]",
						"fSkyCellRefFadeDistance=150000.0000",
						"bCrosshairEnabled=1",
						"fHUDOpacity=1.0000",
						"bSaveOnPause=1",
						"bSaveOnTravel=1",
						"bSaveOnWait=1",
						"bSaveOnRest=1",
						"[LightingShader]",
						"bScreenSpaceSubsurfaceScattering=0",
						"bScreenSpaceReflections=0",
						"[General]",
						"bGamepadEnable=1",
						"bPipboyCompanionEnabled=0",
						"iStoryManagerLoggingEvent=-1",
						"bEnableStoryManagerLogging=0",
						"uGridsToLoad=5",
						"[Interface]",
						"bDialogueSubtitles=0",
						"bGeneralSubtitles=0",
						"iHUDColorB=21",
						"iHUDColorG=255",
						"iHUDColorR=18",
						"bDialogueCameraEnable=1",
						"bShowCompass=1",
						"uHUDActiveEffectWidget=2",
						"[Controls]",
						"fMouseHeadingSensitivity=0.0300",
						"fGamepadHeadingSensitivity=0.6667",
						"bAlwaysRunByDefault=1",
						"bInvertYValues=0",
						"bGamePadRumble=1",
						"[GamePlay]",
						"iDifficulty=2",
						"bShowFloatingQuestMarkers=1",
						"bShowQuestMarkers=1",
						"[Particles]",
						"iMaxDesired=750",
						"[SaveGame]",
						"fAutosaveEveryXMins=10.0000",
						"[AudioMenu]",
						"fAudioMasterVolume=1.0000",
						"fVal7=1.0000",
						"uID7=0",
						"fVal6=1.0000",
						"uID6=0",
						"fVal5=1.0000",
						"uID5=0",
						"fVal4=0.6500",
						"uID4=138006",
						"fVal3=0.6500",
						"uID3=1007612",
						"fVal2=1.0000",
						"uID2=94881",
						"fVal1=0.6500",
						"uID1=466532",
						"fVal0=0.6500",
						"uID0=554685",
						"[Water]",
						"bUseWaterDisplacements=0",
						"bUseWaterRefractions=0",
						"bUseWaterReflections=0",
						"bUseWaterDepth=0",
						"[TerrainManager]",
						"fTreeLoadDistance=10000",
						"fBlockMaximumDistance=40000",
						"fBlockLevel2Distance=50000",
						"fBlockLevel1Distance=18000",
						"fBlockLevel0Distance=8000",
						"fSplitDistanceMult=0.4",
						"bShowLODInEditor=0",
						"[Grass]",
						"fGrassStartFadeDistance=0",
						"fGrassMaxStartFadeDistance=0.0000",
						"fGrassMinStartFadeDistance=0.0000",
						"[Decals]",
						"uMaxDecals=0",
						"bDecals=0",
						"bSkinnedDecals=0",
						"uMaxSkinDecals=0",
						"uMaxSkinDecalsPerActor=0",
						"[LOD]",
						"fLODFadeOutMultSkyCell=1.0000",
						"fLODFadeOutMultObjects=5",
						"fLODFadeOutMultItems=1.5",
						"fLODFadeOutMultActors=5",
						"[NVHBAO]",
						"bEnable=0",
						"fBackgroundAOViewDepth=750.0000",
						"bBackgroundAOEnable=1",
						"fDepthThresholdSharpness=100.0000",
						"fDepthThresholdMaxViewDepth=500.0000",
						"bDepthThresholdEnable=0",
						"iDepthClampModeEnum=0",
						"fCoarseAO=1.0000",
						"fDetailAO=0.6500",
						"fBlurSharpnessProfileBackgroundViewDepth=1.0000",
						"fBlurSharpnessProfileForegroundViewDepth=0.0000",
						"fBlurSharpnessProfileForegroundSharpnessScale=4.0000",
						"bBlurSharpnessProfileEnable=0",
						"fBlurSharpness=16.0000",
						"iBlurRadiusEnum=1",
						"bBlurEnable=1",
						"fPowerExponent=2.5000",
						"fBias=0.1000",
						"fRadius=0.6500",
						"[NVFlex]",
						"bNVFlexEnable=0",
						"iQuality=0",
						"iMaxNeighbors2=64",
						"iMaxNeighbors1=48",
						"iMaxNeighbors0=32",
						"iMaxParticles2=32768",
						"iMaxParticles1=16000",
						"iMaxParticles0=6000",
						"fKillRadius2=4000.0000",
						"fKillRadius1=3000.0000",
						"fKillRadius0=2000.0000",
						"bNVFlexInstanceDebris=1",
						"bNVFlexDrawDebris=1",
						"[BlurShaderHDR]",
						"bDoHighDynamicRange=0",
						"[BlurShader]",
						"bUseBlurShader=0",
						"[Launcher]",
						"uLastAspectRatio=1",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.SetAttributes(this.fallout4_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.fallout4_settings, text);
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x060004BC RID: 1212 RVA: 0x00105708 File Offset: 0x00103908
		private void Fallout4_f()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.fallout4_settings)
						where s.Contains("sD3DDevice")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Display]",
						"flocalShadowMapHalveEveryXUnit=1.0000",
						"focusShadowMapDoubleEveryXUnit=1.0000",
						"fShadowBiasScale=0.0000",
						"fDirShadowDistance=99999999",
						"fShadowDistance=99999999.0000",
						"uiOrthoShadowFilter=3",
						"uiShadowFilter=3",
						"iShadowMapResolution=1024",
						"uPipboyTargetHeight=700",
						"uPipboyTargetWidth=876",
						"iVolumetricLightingQuality=0",
						"bVolumetricLightingEnable=0",
						"bSAOEnable=0",
						"iDirShadowSplits=1",
						"bVolumetricLightingForceCasters=0",
						"iTiledLightingMinLights=22",
						"bComputeShaderDeferredTiledLighting=1",
						"iMaxFocusShadowsDialogue=0",
						"iMaxFocusShadows=0",
						"bForceIgnoreSmoothness=1",
						"fBlendSplitDirShadow=99999999.0000",
						"bSinglePassDirShadow=1",
						"bEnableWetnessMaterials=0",
						"fTessFactorMaxDistanceScale=0.0000",
						"sAntiAliasing=",
						"fLeafAnimDampenDistEnd=1500.0000",
						"fLeafAnimDampenDistStart=500.0000",
						"fMeshLODFadePercentDefault=1.2000",
						"fMeshLODFadeBoundDefault=256.0000",
						"fMeshLODFadeScalar=1.0000",
						"fMeshLODLevel2FadeTreeDistance=1350.0000",
						"fMeshLODLevel1FadeTreeDistance=1800.0000",
						"fInteriorMeshLODLevel2FadeDist=1400.0000",
						"fInteriorMeshLODLevel1FadeDist=1700.0000",
						"fMeshLODLevel2FadeDist=1100",
						"fMeshLODLevel1FadeDist=2600",
						"iMaxAnisotropy=4",
						"iPresentInterval=1",
						"bTopMostWindow=0",
						"bMaximizeWindow=0",
						"bBorderless=1",
						"bFull Screen=1",
						"iSize H=" + this.DefaultHeight,
						"iSize W=" + this.DefaultWidth,
						"bAllowShadowcasterNPCLights=0",
						"iScreenShotIndex=0",
						"fMaxFocusShadowMapDistance=0.0000",
						"bPrecipitationOcclusion=1",
						"iMaxSkinDecalsPerFrame=0",
						"iMaxDecalsPerFrame=0",
						string.Join(Environment.NewLine, array),
						"iTexMipMapSkip=2",
						"bEnableRainOcclusion=0",
						"iAdapter=0",
						"[Imagespace]",
						"bDoDepthOfField=1",
						"bScreenSpaceBokeh=0",
						"bMBEnable=0",
						"bLensFlare=0",
						"[Pipboy]",
						"fPipboyEffectColorB=0.0900",
						"fPipboyEffectColorG=1.0000",
						"fPipboyEffectColorR=0.0800",
						"[VATS]",
						"fModMenuEffectHighlightPAColorB=0.4100",
						"fModMenuEffectHighlightPAColorG=0.8200",
						"fModMenuEffectHighlightPAColorR=1.0000",
						"fModMenuEffectPAColorB=0.4100",
						"fModMenuEffectPAColorG=0.8200",
						"fModMenuEffectPAColorR=1.0000",
						"fModMenuEffectHighlightColorB=0.0824",
						"fModMenuEffectHighlightColorG=1.0000",
						"fModMenuEffectHighlightColorR=0.0706",
						"fModMenuEffectColorB=0.4200",
						"fModMenuEffectColorG=0.9900",
						"fModMenuEffectColorR=0.4900",
						"[MAIN]",
						"fSkyCellRefFadeDistance=150000.0000",
						"bCrosshairEnabled=1",
						"fHUDOpacity=1.0000",
						"bSaveOnPause=1",
						"bSaveOnTravel=1",
						"bSaveOnWait=1",
						"bSaveOnRest=1",
						"[LightingShader]",
						"bScreenSpaceSubsurfaceScattering=0",
						"bScreenSpaceReflections=0",
						"[General]",
						"bGamepadEnable=1",
						"bPipboyCompanionEnabled=0",
						"iStoryManagerLoggingEvent=-1",
						"bEnableStoryManagerLogging=0",
						"uGridsToLoad=5",
						"[Interface]",
						"bDialogueSubtitles=0",
						"bGeneralSubtitles=0",
						"iHUDColorB=21",
						"iHUDColorG=255",
						"iHUDColorR=18",
						"bDialogueCameraEnable=1",
						"bShowCompass=1",
						"uHUDActiveEffectWidget=2",
						"[Controls]",
						"fMouseHeadingSensitivity=0.0300",
						"fGamepadHeadingSensitivity=0.6667",
						"bAlwaysRunByDefault=1",
						"bInvertYValues=0",
						"bGamePadRumble=1",
						"[GamePlay]",
						"iDifficulty=2",
						"bShowFloatingQuestMarkers=1",
						"bShowQuestMarkers=1",
						"[Particles]",
						"iMaxDesired=750",
						"[SaveGame]",
						"fAutosaveEveryXMins=10.0000",
						"[AudioMenu]",
						"fAudioMasterVolume=1.0000",
						"fVal7=1.0000",
						"uID7=0",
						"fVal6=1.0000",
						"uID6=0",
						"fVal5=1.0000",
						"uID5=0",
						"fVal4=0.6500",
						"uID4=138006",
						"fVal3=0.6500",
						"uID3=1007612",
						"fVal2=1.0000",
						"uID2=94881",
						"fVal1=0.6500",
						"uID1=466532",
						"fVal0=0.6500",
						"uID0=554685",
						"[Water]",
						"bUseWaterDisplacements=0",
						"bUseWaterRefractions=0",
						"bUseWaterReflections=0",
						"bUseWaterDepth=0",
						"[TerrainManager]",
						"fTreeLoadDistance=10500",
						"fBlockMaximumDistance=50000",
						"fBlockLevel2Distance=50000",
						"fBlockLevel1Distance=18000",
						"fBlockLevel0Distance=10000",
						"fSplitDistanceMult=0.5",
						"bShowLODInEditor=0",
						"[Grass]",
						"fGrassStartFadeDistance=0",
						"fGrassMaxStartFadeDistance=0.0000",
						"fGrassMinStartFadeDistance=0.0000",
						"[Decals]",
						"uMaxDecals=0",
						"bDecals=0",
						"bSkinnedDecals=0",
						"uMaxSkinDecals=0",
						"uMaxSkinDecalsPerActor=0",
						"[LOD]",
						"fLODFadeOutMultSkyCell=1.0000",
						"fLODFadeOutMultObjects=5",
						"fLODFadeOutMultItems=1.5",
						"fLODFadeOutMultActors=5",
						"[NVHBAO]",
						"bEnable=0",
						"fBackgroundAOViewDepth=750.0000",
						"bBackgroundAOEnable=1",
						"fDepthThresholdSharpness=100.0000",
						"fDepthThresholdMaxViewDepth=500.0000",
						"bDepthThresholdEnable=0",
						"iDepthClampModeEnum=0",
						"fCoarseAO=1.0000",
						"fDetailAO=0.6500",
						"fBlurSharpnessProfileBackgroundViewDepth=1.0000",
						"fBlurSharpnessProfileForegroundViewDepth=0.0000",
						"fBlurSharpnessProfileForegroundSharpnessScale=4.0000",
						"bBlurSharpnessProfileEnable=0",
						"fBlurSharpness=16.0000",
						"iBlurRadiusEnum=1",
						"bBlurEnable=1",
						"fPowerExponent=2.5000",
						"fBias=0.1000",
						"fRadius=0.6500",
						"[NVFlex]",
						"bNVFlexEnable=0",
						"iQuality=0",
						"iMaxNeighbors2=64",
						"iMaxNeighbors1=48",
						"iMaxNeighbors0=32",
						"iMaxParticles2=32768",
						"iMaxParticles1=16000",
						"iMaxParticles0=6000",
						"fKillRadius2=4000.0000",
						"fKillRadius1=3000.0000",
						"fKillRadius0=2000.0000",
						"bNVFlexInstanceDebris=1",
						"bNVFlexDrawDebris=1",
						"[BlurShaderHDR]",
						"bDoHighDynamicRange=0",
						"[BlurShader]",
						"bUseBlurShader=0",
						"[Launcher]",
						"uLastAspectRatio=1",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.SetAttributes(this.fallout4_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.fallout4_settings, text);
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x060004BD RID: 1213 RVA: 0x001061AC File Offset: 0x001043AC
		private void Fallout4_d()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.fallout4_settings)
						where s.Contains("sD3DDevice")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Display]",
						"flocalShadowMapHalveEveryXUnit=1.0000",
						"focusShadowMapDoubleEveryXUnit=1.0000",
						"fShadowBiasScale=0.0000",
						"fDirShadowDistance=99999999",
						"fShadowDistance=99999999.0000",
						"uiOrthoShadowFilter=3",
						"uiShadowFilter=3",
						"iShadowMapResolution=1024",
						"uPipboyTargetHeight=700",
						"uPipboyTargetWidth=876",
						"iVolumetricLightingQuality=0",
						"bVolumetricLightingEnable=0",
						"bSAOEnable=0",
						"iDirShadowSplits=1",
						"bVolumetricLightingForceCasters=0",
						"iTiledLightingMinLights=24",
						"bComputeShaderDeferredTiledLighting=1",
						"iMaxFocusShadowsDialogue=0",
						"iMaxFocusShadows=0",
						"bForceIgnoreSmoothness=1",
						"fBlendSplitDirShadow=99999999.0000",
						"bSinglePassDirShadow=1",
						"bEnableWetnessMaterials=0",
						"fTessFactorMaxDistanceScale=0.0000",
						"sAntiAliasing=",
						"fLeafAnimDampenDistEnd=2700.0000",
						"fLeafAnimDampenDistStart=700.0000",
						"fMeshLODFadePercentDefault=1.2000",
						"fMeshLODFadeBoundDefault=256.0000",
						"fMeshLODFadeScalar=1.0000",
						"fMeshLODLevel2FadeTreeDistance=1450.0000",
						"fMeshLODLevel1FadeTreeDistance=2050.0000",
						"fInteriorMeshLODLevel2FadeDist=1500.0000",
						"fInteriorMeshLODLevel1FadeDist=1900.0000",
						"fMeshLODLevel2FadeDist=1300",
						"fMeshLODLevel1FadeDist=3000",
						"iMaxAnisotropy=4",
						"iPresentInterval=1",
						"bTopMostWindow=0",
						"bMaximizeWindow=0",
						"bBorderless=1",
						"bFull Screen=1",
						"iSize H=" + this.DefaultHeight,
						"iSize W=" + this.DefaultWidth,
						"bAllowShadowcasterNPCLights=0",
						"iScreenShotIndex=0",
						"fMaxFocusShadowMapDistance=0.0000",
						"bPrecipitationOcclusion=1",
						"iMaxSkinDecalsPerFrame=0",
						"iMaxDecalsPerFrame=0",
						string.Join(Environment.NewLine, array),
						"iTexMipMapSkip=2",
						"bEnableRainOcclusion=0",
						"iAdapter=0",
						"[Imagespace]",
						"bDoDepthOfField=1",
						"bScreenSpaceBokeh=0",
						"bMBEnable=0",
						"bLensFlare=0",
						"[Pipboy]",
						"fPipboyEffectColorB=0.0900",
						"fPipboyEffectColorG=1.0000",
						"fPipboyEffectColorR=0.0800",
						"[VATS]",
						"fModMenuEffectHighlightPAColorB=0.4100",
						"fModMenuEffectHighlightPAColorG=0.8200",
						"fModMenuEffectHighlightPAColorR=1.0000",
						"fModMenuEffectPAColorB=0.4100",
						"fModMenuEffectPAColorG=0.8200",
						"fModMenuEffectPAColorR=1.0000",
						"fModMenuEffectHighlightColorB=0.0824",
						"fModMenuEffectHighlightColorG=1.0000",
						"fModMenuEffectHighlightColorR=0.0706",
						"fModMenuEffectColorB=0.4200",
						"fModMenuEffectColorG=0.9900",
						"fModMenuEffectColorR=0.4900",
						"[MAIN]",
						"fSkyCellRefFadeDistance=150000.0000",
						"bCrosshairEnabled=1",
						"fHUDOpacity=1.0000",
						"bSaveOnPause=1",
						"bSaveOnTravel=1",
						"bSaveOnWait=1",
						"bSaveOnRest=1",
						"[LightingShader]",
						"bScreenSpaceSubsurfaceScattering=0",
						"bScreenSpaceReflections=0",
						"[General]",
						"bGamepadEnable=1",
						"bPipboyCompanionEnabled=0",
						"iStoryManagerLoggingEvent=-1",
						"bEnableStoryManagerLogging=0",
						"uGridsToLoad=5",
						"[Interface]",
						"bDialogueSubtitles=0",
						"bGeneralSubtitles=0",
						"iHUDColorB=21",
						"iHUDColorG=255",
						"iHUDColorR=18",
						"bDialogueCameraEnable=1",
						"bShowCompass=1",
						"uHUDActiveEffectWidget=2",
						"[Controls]",
						"fMouseHeadingSensitivity=0.0300",
						"fGamepadHeadingSensitivity=0.6667",
						"bAlwaysRunByDefault=1",
						"bInvertYValues=0",
						"bGamePadRumble=1",
						"[GamePlay]",
						"iDifficulty=2",
						"bShowFloatingQuestMarkers=1",
						"bShowQuestMarkers=1",
						"[Particles]",
						"iMaxDesired=750",
						"[SaveGame]",
						"fAutosaveEveryXMins=10.0000",
						"[AudioMenu]",
						"fAudioMasterVolume=1.0000",
						"fVal7=1.0000",
						"uID7=0",
						"fVal6=1.0000",
						"uID6=0",
						"fVal5=1.0000",
						"uID5=0",
						"fVal4=0.6500",
						"uID4=138006",
						"fVal3=0.6500",
						"uID3=1007612",
						"fVal2=1.0000",
						"uID2=94881",
						"fVal1=0.6500",
						"uID1=466532",
						"fVal0=0.6500",
						"uID0=554685",
						"[Water]",
						"bUseWaterDisplacements=0",
						"bUseWaterRefractions=0",
						"bUseWaterReflections=0",
						"bUseWaterDepth=0",
						"[TerrainManager]",
						"fTreeLoadDistance=11500",
						"fBlockMaximumDistance=60000",
						"fBlockLevel2Distance=60000",
						"fBlockLevel1Distance=20000",
						"fBlockLevel0Distance=12000",
						"fSplitDistanceMult=0.5",
						"bShowLODInEditor=0",
						"[Grass]",
						"fGrassStartFadeDistance=0",
						"fGrassMaxStartFadeDistance=0.0000",
						"fGrassMinStartFadeDistance=0.0000",
						"[Decals]",
						"uMaxDecals=0",
						"bDecals=0",
						"bSkinnedDecals=0",
						"uMaxSkinDecals=0",
						"uMaxSkinDecalsPerActor=0",
						"[LOD]",
						"fLODFadeOutMultSkyCell=1.0000",
						"fLODFadeOutMultObjects=5",
						"fLODFadeOutMultItems=1.5",
						"fLODFadeOutMultActors=5",
						"[NVHBAO]",
						"bEnable=0",
						"fBackgroundAOViewDepth=750.0000",
						"bBackgroundAOEnable=1",
						"fDepthThresholdSharpness=100.0000",
						"fDepthThresholdMaxViewDepth=500.0000",
						"bDepthThresholdEnable=0",
						"iDepthClampModeEnum=0",
						"fCoarseAO=1.0000",
						"fDetailAO=0.6500",
						"fBlurSharpnessProfileBackgroundViewDepth=1.0000",
						"fBlurSharpnessProfileForegroundViewDepth=0.0000",
						"fBlurSharpnessProfileForegroundSharpnessScale=4.0000",
						"bBlurSharpnessProfileEnable=0",
						"fBlurSharpness=16.0000",
						"iBlurRadiusEnum=1",
						"bBlurEnable=1",
						"fPowerExponent=2.5000",
						"fBias=0.1000",
						"fRadius=0.6500",
						"[NVFlex]",
						"bNVFlexEnable=0",
						"iQuality=0",
						"iMaxNeighbors2=64",
						"iMaxNeighbors1=48",
						"iMaxNeighbors0=32",
						"iMaxParticles2=32768",
						"iMaxParticles1=16000",
						"iMaxParticles0=6000",
						"fKillRadius2=4000.0000",
						"fKillRadius1=3000.0000",
						"fKillRadius0=2000.0000",
						"bNVFlexInstanceDebris=1",
						"bNVFlexDrawDebris=1",
						"[BlurShaderHDR]",
						"bDoHighDynamicRange=0",
						"[BlurShader]",
						"bUseBlurShader=0",
						"[Launcher]",
						"uLastAspectRatio=1",
						""
					});
					num = 3;
				}
				if (num == 3)
				{
					File.SetAttributes(this.fallout4_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					File.WriteAllText(this.fallout4_settings, text);
					num = 5;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x060004BE RID: 1214 RVA: 0x00106C50 File Offset: 0x00104E50
		private void Fallout4_c()
		{
			int num = 0;
			do
			{
				if (num == 3)
				{
					File.SetAttributes(this.fallout4_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.fallout4_settings, text);
					num = 5;
				}
				if (num == 2)
				{
					string[] array;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Display]",
						"flocalShadowMapHalveEveryXUnit=1.0000",
						"focusShadowMapDoubleEveryXUnit=1.0000",
						"fShadowBiasScale=0.0000",
						"fDirShadowDistance=99999999",
						"fShadowDistance=99999999.0000",
						"uiOrthoShadowFilter=3",
						"uiShadowFilter=3",
						"iShadowMapResolution=1024",
						"uPipboyTargetHeight=700",
						"uPipboyTargetWidth=876",
						"iVolumetricLightingQuality=0",
						"bVolumetricLightingEnable=0",
						"bSAOEnable=0",
						"iDirShadowSplits=1",
						"bVolumetricLightingForceCasters=0",
						"iTiledLightingMinLights=25",
						"bComputeShaderDeferredTiledLighting=1",
						"iMaxFocusShadowsDialogue=0",
						"iMaxFocusShadows=0",
						"bForceIgnoreSmoothness=1",
						"fBlendSplitDirShadow=99999999.0000",
						"bSinglePassDirShadow=1",
						"bEnableWetnessMaterials=0",
						"fTessFactorMaxDistanceScale=0.0000",
						"sAntiAliasing=",
						"fLeafAnimDampenDistEnd=1800.0000",
						"fLeafAnimDampenDistStart=800.0000",
						"fMeshLODFadePercentDefault=1.2000",
						"fMeshLODFadeBoundDefault=256.0000",
						"fMeshLODFadeScalar=1.0000",
						"fMeshLODLevel2FadeTreeDistance=1500.0000",
						"fMeshLODLevel1FadeTreeDistance=2100.0000",
						"fInteriorMeshLODLevel2FadeDist=1500.0000",
						"fInteriorMeshLODLevel1FadeDist=2000.0000",
						"fMeshLODLevel2FadeDist=1400",
						"fMeshLODLevel1FadeDist=3200",
						"iMaxAnisotropy=4",
						"iPresentInterval=1",
						"bTopMostWindow=0",
						"bMaximizeWindow=0",
						"bBorderless=1",
						"bFull Screen=1",
						"iSize H=" + this.DefaultHeight,
						"iSize W=" + this.DefaultWidth,
						"bAllowShadowcasterNPCLights=0",
						"iScreenShotIndex=0",
						"fMaxFocusShadowMapDistance=0.0000",
						"bPrecipitationOcclusion=1",
						"iMaxSkinDecalsPerFrame=0",
						"iMaxDecalsPerFrame=0",
						string.Join(Environment.NewLine, array),
						"iTexMipMapSkip=2",
						"bEnableRainOcclusion=0",
						"iAdapter=0",
						"[Imagespace]",
						"bDoDepthOfField=1",
						"bScreenSpaceBokeh=0",
						"bMBEnable=0",
						"bLensFlare=0",
						"[Pipboy]",
						"fPipboyEffectColorB=0.0900",
						"fPipboyEffectColorG=1.0000",
						"fPipboyEffectColorR=0.0800",
						"[VATS]",
						"fModMenuEffectHighlightPAColorB=0.4100",
						"fModMenuEffectHighlightPAColorG=0.8200",
						"fModMenuEffectHighlightPAColorR=1.0000",
						"fModMenuEffectPAColorB=0.4100",
						"fModMenuEffectPAColorG=0.8200",
						"fModMenuEffectPAColorR=1.0000",
						"fModMenuEffectHighlightColorB=0.0824",
						"fModMenuEffectHighlightColorG=1.0000",
						"fModMenuEffectHighlightColorR=0.0706",
						"fModMenuEffectColorB=0.4200",
						"fModMenuEffectColorG=0.9900",
						"fModMenuEffectColorR=0.4900",
						"[MAIN]",
						"fSkyCellRefFadeDistance=150000.0000",
						"bCrosshairEnabled=1",
						"fHUDOpacity=1.0000",
						"bSaveOnPause=1",
						"bSaveOnTravel=1",
						"bSaveOnWait=1",
						"bSaveOnRest=1",
						"[LightingShader]",
						"bScreenSpaceSubsurfaceScattering=0",
						"bScreenSpaceReflections=0",
						"[General]",
						"bGamepadEnable=1",
						"bPipboyCompanionEnabled=0",
						"iStoryManagerLoggingEvent=-1",
						"bEnableStoryManagerLogging=0",
						"uGridsToLoad=5",
						"[Interface]",
						"bDialogueSubtitles=0",
						"bGeneralSubtitles=0",
						"iHUDColorB=21",
						"iHUDColorG=255",
						"iHUDColorR=18",
						"bDialogueCameraEnable=1",
						"bShowCompass=1",
						"uHUDActiveEffectWidget=2",
						"[Controls]",
						"fMouseHeadingSensitivity=0.0300",
						"fGamepadHeadingSensitivity=0.6667",
						"bAlwaysRunByDefault=1",
						"bInvertYValues=0",
						"bGamePadRumble=1",
						"[GamePlay]",
						"iDifficulty=2",
						"bShowFloatingQuestMarkers=1",
						"bShowQuestMarkers=1",
						"[Particles]",
						"iMaxDesired=750",
						"[SaveGame]",
						"fAutosaveEveryXMins=10.0000",
						"[AudioMenu]",
						"fAudioMasterVolume=1.0000",
						"fVal7=1.0000",
						"uID7=0",
						"fVal6=1.0000",
						"uID6=0",
						"fVal5=1.0000",
						"uID5=0",
						"fVal4=0.6500",
						"uID4=138006",
						"fVal3=0.6500",
						"uID3=1007612",
						"fVal2=1.0000",
						"uID2=94881",
						"fVal1=0.6500",
						"uID1=466532",
						"fVal0=0.6500",
						"uID0=554685",
						"[Water]",
						"bUseWaterDisplacements=0",
						"bUseWaterRefractions=0",
						"bUseWaterReflections=0",
						"bUseWaterDepth=0",
						"[TerrainManager]",
						"fTreeLoadDistance=12000",
						"fBlockMaximumDistance=60000",
						"fBlockLevel2Distance=60000",
						"fBlockLevel1Distance=20000",
						"fBlockLevel0Distance=12000",
						"fSplitDistanceMult=0.5",
						"bShowLODInEditor=0",
						"[Grass]",
						"fGrassStartFadeDistance=0",
						"fGrassMaxStartFadeDistance=0.0000",
						"fGrassMinStartFadeDistance=0.0000",
						"[Decals]",
						"uMaxDecals=0",
						"bDecals=0",
						"bSkinnedDecals=0",
						"uMaxSkinDecals=0",
						"uMaxSkinDecalsPerActor=0",
						"[LOD]",
						"fLODFadeOutMultSkyCell=1.0000",
						"fLODFadeOutMultObjects=5",
						"fLODFadeOutMultItems=1.5",
						"fLODFadeOutMultActors=5",
						"[NVHBAO]",
						"bEnable=0",
						"fBackgroundAOViewDepth=750.0000",
						"bBackgroundAOEnable=1",
						"fDepthThresholdSharpness=100.0000",
						"fDepthThresholdMaxViewDepth=500.0000",
						"bDepthThresholdEnable=0",
						"iDepthClampModeEnum=0",
						"fCoarseAO=1.0000",
						"fDetailAO=0.6500",
						"fBlurSharpnessProfileBackgroundViewDepth=1.0000",
						"fBlurSharpnessProfileForegroundViewDepth=0.0000",
						"fBlurSharpnessProfileForegroundSharpnessScale=4.0000",
						"bBlurSharpnessProfileEnable=0",
						"fBlurSharpness=16.0000",
						"iBlurRadiusEnum=1",
						"bBlurEnable=1",
						"fPowerExponent=2.5000",
						"fBias=0.1000",
						"fRadius=0.6500",
						"[NVFlex]",
						"bNVFlexEnable=0",
						"iQuality=0",
						"iMaxNeighbors2=64",
						"iMaxNeighbors1=48",
						"iMaxNeighbors0=32",
						"iMaxParticles2=32768",
						"iMaxParticles1=16000",
						"iMaxParticles0=6000",
						"fKillRadius2=4000.0000",
						"fKillRadius1=3000.0000",
						"fKillRadius0=2000.0000",
						"bNVFlexInstanceDebris=1",
						"bNVFlexDrawDebris=1",
						"[BlurShaderHDR]",
						"bDoHighDynamicRange=0",
						"[BlurShader]",
						"bUseBlurShader=0",
						"[Launcher]",
						"uLastAspectRatio=1",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.fallout4_settings)
						where s.Contains("sD3DDevice")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x060004BF RID: 1215 RVA: 0x001076F0 File Offset: 0x001058F0
		private void Fallout4_b()
		{
			int num = 0;
			do
			{
				if (num == 3)
				{
					File.SetAttributes(this.fallout4_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.fallout4_settings, text);
					num = 5;
				}
				if (num == 2)
				{
					string[] array;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Display]",
						"flocalShadowMapHalveEveryXUnit=1.0000",
						"focusShadowMapDoubleEveryXUnit=1.0000",
						"fShadowBiasScale=0.0000",
						"fDirShadowDistance=99999999",
						"fShadowDistance=99999999.0000",
						"uiOrthoShadowFilter=3",
						"uiShadowFilter=3",
						"iShadowMapResolution=1024",
						"uPipboyTargetHeight=700",
						"uPipboyTargetWidth=876",
						"iVolumetricLightingQuality=0",
						"bVolumetricLightingEnable=0",
						"bSAOEnable=0",
						"iDirShadowSplits=1",
						"bVolumetricLightingForceCasters=0",
						"iTiledLightingMinLights=26",
						"bComputeShaderDeferredTiledLighting=1",
						"iMaxFocusShadowsDialogue=0",
						"iMaxFocusShadows=0",
						"bForceIgnoreSmoothness=1",
						"fBlendSplitDirShadow=99999999.0000",
						"bSinglePassDirShadow=1",
						"bEnableWetnessMaterials=0",
						"fTessFactorMaxDistanceScale=0.0000",
						"sAntiAliasing=",
						"fLeafAnimDampenDistEnd=1900.0000",
						"fLeafAnimDampenDistStart=900.0000",
						"fMeshLODFadePercentDefault=1.2000",
						"fMeshLODFadeBoundDefault=256.0000",
						"fMeshLODFadeScalar=1.0000",
						"fMeshLODLevel2FadeTreeDistance=1550.0000",
						"fMeshLODLevel1FadeTreeDistance=2150.0000",
						"fInteriorMeshLODLevel2FadeDist=1550.0000",
						"fInteriorMeshLODLevel1FadeDist=2000.0000",
						"fMeshLODLevel2FadeDist=1500",
						"fMeshLODLevel1FadeDist=3400",
						"iMaxAnisotropy=4",
						"iPresentInterval=1",
						"bTopMostWindow=0",
						"bMaximizeWindow=0",
						"bBorderless=1",
						"bFull Screen=1",
						"iSize H=" + this.DefaultHeight,
						"iSize W=" + this.DefaultWidth,
						"bAllowShadowcasterNPCLights=0",
						"iScreenShotIndex=0",
						"fMaxFocusShadowMapDistance=0.0000",
						"bPrecipitationOcclusion=1",
						"iMaxSkinDecalsPerFrame=0",
						"iMaxDecalsPerFrame=0",
						string.Join(Environment.NewLine, array),
						"iTexMipMapSkip=2",
						"bEnableRainOcclusion=0",
						"iAdapter=0",
						"[Imagespace]",
						"bDoDepthOfField=1",
						"bScreenSpaceBokeh=0",
						"bMBEnable=0",
						"bLensFlare=0",
						"[Pipboy]",
						"fPipboyEffectColorB=0.0900",
						"fPipboyEffectColorG=1.0000",
						"fPipboyEffectColorR=0.0800",
						"[VATS]",
						"fModMenuEffectHighlightPAColorB=0.4100",
						"fModMenuEffectHighlightPAColorG=0.8200",
						"fModMenuEffectHighlightPAColorR=1.0000",
						"fModMenuEffectPAColorB=0.4100",
						"fModMenuEffectPAColorG=0.8200",
						"fModMenuEffectPAColorR=1.0000",
						"fModMenuEffectHighlightColorB=0.0824",
						"fModMenuEffectHighlightColorG=1.0000",
						"fModMenuEffectHighlightColorR=0.0706",
						"fModMenuEffectColorB=0.4200",
						"fModMenuEffectColorG=0.9900",
						"fModMenuEffectColorR=0.4900",
						"[MAIN]",
						"fSkyCellRefFadeDistance=150000.0000",
						"bCrosshairEnabled=1",
						"fHUDOpacity=1.0000",
						"bSaveOnPause=1",
						"bSaveOnTravel=1",
						"bSaveOnWait=1",
						"bSaveOnRest=1",
						"[LightingShader]",
						"bScreenSpaceSubsurfaceScattering=0",
						"bScreenSpaceReflections=0",
						"[General]",
						"bGamepadEnable=1",
						"bPipboyCompanionEnabled=0",
						"iStoryManagerLoggingEvent=-1",
						"bEnableStoryManagerLogging=0",
						"uGridsToLoad=5",
						"[Interface]",
						"bDialogueSubtitles=0",
						"bGeneralSubtitles=0",
						"iHUDColorB=21",
						"iHUDColorG=255",
						"iHUDColorR=18",
						"bDialogueCameraEnable=1",
						"bShowCompass=1",
						"uHUDActiveEffectWidget=2",
						"[Controls]",
						"fMouseHeadingSensitivity=0.0300",
						"fGamepadHeadingSensitivity=0.6667",
						"bAlwaysRunByDefault=1",
						"bInvertYValues=0",
						"bGamePadRumble=1",
						"[GamePlay]",
						"iDifficulty=2",
						"bShowFloatingQuestMarkers=1",
						"bShowQuestMarkers=1",
						"[Particles]",
						"iMaxDesired=750",
						"[SaveGame]",
						"fAutosaveEveryXMins=10.0000",
						"[AudioMenu]",
						"fAudioMasterVolume=1.0000",
						"fVal7=1.0000",
						"uID7=0",
						"fVal6=1.0000",
						"uID6=0",
						"fVal5=1.0000",
						"uID5=0",
						"fVal4=0.6500",
						"uID4=138006",
						"fVal3=0.6500",
						"uID3=1007612",
						"fVal2=1.0000",
						"uID2=94881",
						"fVal1=0.6500",
						"uID1=466532",
						"fVal0=0.6500",
						"uID0=554685",
						"[Water]",
						"bUseWaterDisplacements=0",
						"bUseWaterRefractions=0",
						"bUseWaterReflections=0",
						"bUseWaterDepth=0",
						"[TerrainManager]",
						"fTreeLoadDistance=12500",
						"fBlockMaximumDistance=60000",
						"fBlockLevel2Distance=60000",
						"fBlockLevel1Distance=21000",
						"fBlockLevel0Distance=12000",
						"fSplitDistanceMult=0.5",
						"bShowLODInEditor=0",
						"[Grass]",
						"fGrassStartFadeDistance=0",
						"fGrassMaxStartFadeDistance=0.0000",
						"fGrassMinStartFadeDistance=0.0000",
						"[Decals]",
						"uMaxDecals=0",
						"bDecals=0",
						"bSkinnedDecals=0",
						"uMaxSkinDecals=0",
						"uMaxSkinDecalsPerActor=0",
						"[LOD]",
						"fLODFadeOutMultSkyCell=1.0000",
						"fLODFadeOutMultObjects=5",
						"fLODFadeOutMultItems=1.5",
						"fLODFadeOutMultActors=5",
						"[NVHBAO]",
						"bEnable=0",
						"fBackgroundAOViewDepth=750.0000",
						"bBackgroundAOEnable=1",
						"fDepthThresholdSharpness=100.0000",
						"fDepthThresholdMaxViewDepth=500.0000",
						"bDepthThresholdEnable=0",
						"iDepthClampModeEnum=0",
						"fCoarseAO=1.0000",
						"fDetailAO=0.6500",
						"fBlurSharpnessProfileBackgroundViewDepth=1.0000",
						"fBlurSharpnessProfileForegroundViewDepth=0.0000",
						"fBlurSharpnessProfileForegroundSharpnessScale=4.0000",
						"bBlurSharpnessProfileEnable=0",
						"fBlurSharpness=16.0000",
						"iBlurRadiusEnum=1",
						"bBlurEnable=1",
						"fPowerExponent=2.5000",
						"fBias=0.1000",
						"fRadius=0.6500",
						"[NVFlex]",
						"bNVFlexEnable=0",
						"iQuality=0",
						"iMaxNeighbors2=64",
						"iMaxNeighbors1=48",
						"iMaxNeighbors0=32",
						"iMaxParticles2=32768",
						"iMaxParticles1=16000",
						"iMaxParticles0=6000",
						"fKillRadius2=4000.0000",
						"fKillRadius1=3000.0000",
						"fKillRadius0=2000.0000",
						"bNVFlexInstanceDebris=1",
						"bNVFlexDrawDebris=1",
						"[BlurShaderHDR]",
						"bDoHighDynamicRange=0",
						"[BlurShader]",
						"bUseBlurShader=0",
						"[Launcher]",
						"uLastAspectRatio=1",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.fallout4_settings)
						where s.Contains("sD3DDevice")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x060004C0 RID: 1216 RVA: 0x00108190 File Offset: 0x00106390
		private void Fallout4_a()
		{
			int num = 0;
			do
			{
				if (num == 3)
				{
					File.SetAttributes(this.fallout4_settings, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.fallout4_settings, text);
					num = 5;
				}
				if (num == 2)
				{
					string[] array;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Display]",
						"flocalShadowMapHalveEveryXUnit=1.0000",
						"focusShadowMapDoubleEveryXUnit=1.0000",
						"fShadowBiasScale=0.0000",
						"fDirShadowDistance=99999999",
						"fShadowDistance=99999999.0000",
						"uiOrthoShadowFilter=3",
						"uiShadowFilter=3",
						"iShadowMapResolution=1024",
						"uPipboyTargetHeight=700",
						"uPipboyTargetWidth=876",
						"iVolumetricLightingQuality=0",
						"bVolumetricLightingEnable=0",
						"bSAOEnable=0",
						"iDirShadowSplits=1",
						"bVolumetricLightingForceCasters=0",
						"iTiledLightingMinLights=26",
						"bComputeShaderDeferredTiledLighting=1",
						"iMaxFocusShadowsDialogue=0",
						"iMaxFocusShadows=0",
						"bForceIgnoreSmoothness=1",
						"fBlendSplitDirShadow=99999999.0000",
						"bSinglePassDirShadow=1",
						"bEnableWetnessMaterials=0",
						"fTessFactorMaxDistanceScale=0.0000",
						"sAntiAliasing=",
						"fLeafAnimDampenDistEnd=1900.0000",
						"fLeafAnimDampenDistStart=900.0000",
						"fMeshLODFadePercentDefault=1.2000",
						"fMeshLODFadeBoundDefault=256.0000",
						"fMeshLODFadeScalar=1.0000",
						"fMeshLODLevel2FadeTreeDistance=1550.0000",
						"fMeshLODLevel1FadeTreeDistance=2150.0000",
						"fInteriorMeshLODLevel2FadeDist=1550.0000",
						"fInteriorMeshLODLevel1FadeDist=2000.0000",
						"fMeshLODLevel2FadeDist=1500",
						"fMeshLODLevel1FadeDist=3400",
						"iMaxAnisotropy=4",
						"iPresentInterval=1",
						"bTopMostWindow=0",
						"bMaximizeWindow=0",
						"bBorderless=1",
						"bFull Screen=1",
						"iSize H=" + this.DefaultHeight,
						"iSize W=" + this.DefaultWidth,
						"bAllowShadowcasterNPCLights=0",
						"iScreenShotIndex=0",
						"fMaxFocusShadowMapDistance=0.0000",
						"bPrecipitationOcclusion=1",
						"iMaxSkinDecalsPerFrame=0",
						"iMaxDecalsPerFrame=0",
						string.Join(Environment.NewLine, array),
						"iTexMipMapSkip=2",
						"bEnableRainOcclusion=0",
						"iAdapter=0",
						"[Imagespace]",
						"bDoDepthOfField=1",
						"bScreenSpaceBokeh=0",
						"bMBEnable=0",
						"bLensFlare=0",
						"[Pipboy]",
						"fPipboyEffectColorB=0.0900",
						"fPipboyEffectColorG=1.0000",
						"fPipboyEffectColorR=0.0800",
						"[VATS]",
						"fModMenuEffectHighlightPAColorB=0.4100",
						"fModMenuEffectHighlightPAColorG=0.8200",
						"fModMenuEffectHighlightPAColorR=1.0000",
						"fModMenuEffectPAColorB=0.4100",
						"fModMenuEffectPAColorG=0.8200",
						"fModMenuEffectPAColorR=1.0000",
						"fModMenuEffectHighlightColorB=0.0824",
						"fModMenuEffectHighlightColorG=1.0000",
						"fModMenuEffectHighlightColorR=0.0706",
						"fModMenuEffectColorB=0.4200",
						"fModMenuEffectColorG=0.9900",
						"fModMenuEffectColorR=0.4900",
						"[MAIN]",
						"fSkyCellRefFadeDistance=150000.0000",
						"bCrosshairEnabled=1",
						"fHUDOpacity=1.0000",
						"bSaveOnPause=1",
						"bSaveOnTravel=1",
						"bSaveOnWait=1",
						"bSaveOnRest=1",
						"[LightingShader]",
						"bScreenSpaceSubsurfaceScattering=0",
						"bScreenSpaceReflections=0",
						"[General]",
						"bGamepadEnable=1",
						"bPipboyCompanionEnabled=0",
						"iStoryManagerLoggingEvent=-1",
						"bEnableStoryManagerLogging=0",
						"uGridsToLoad=5",
						"[Interface]",
						"bDialogueSubtitles=0",
						"bGeneralSubtitles=0",
						"iHUDColorB=21",
						"iHUDColorG=255",
						"iHUDColorR=18",
						"bDialogueCameraEnable=1",
						"bShowCompass=1",
						"uHUDActiveEffectWidget=2",
						"[Controls]",
						"fMouseHeadingSensitivity=0.0300",
						"fGamepadHeadingSensitivity=0.6667",
						"bAlwaysRunByDefault=1",
						"bInvertYValues=0",
						"bGamePadRumble=1",
						"[GamePlay]",
						"iDifficulty=2",
						"bShowFloatingQuestMarkers=1",
						"bShowQuestMarkers=1",
						"[Particles]",
						"iMaxDesired=750",
						"[SaveGame]",
						"fAutosaveEveryXMins=10.0000",
						"[AudioMenu]",
						"fAudioMasterVolume=1.0000",
						"fVal7=1.0000",
						"uID7=0",
						"fVal6=1.0000",
						"uID6=0",
						"fVal5=1.0000",
						"uID5=0",
						"fVal4=0.6500",
						"uID4=138006",
						"fVal3=0.6500",
						"uID3=1007612",
						"fVal2=1.0000",
						"uID2=94881",
						"fVal1=0.6500",
						"uID1=466532",
						"fVal0=0.6500",
						"uID0=554685",
						"[Water]",
						"bUseWaterDisplacements=0",
						"bUseWaterRefractions=0",
						"bUseWaterReflections=0",
						"bUseWaterDepth=0",
						"[TerrainManager]",
						"fTreeLoadDistance=12500",
						"fBlockMaximumDistance=60000",
						"fBlockLevel2Distance=60000",
						"fBlockLevel1Distance=21000",
						"fBlockLevel0Distance=12000",
						"fSplitDistanceMult=0.5",
						"bShowLODInEditor=0",
						"[Grass]",
						"fGrassStartFadeDistance=0",
						"fGrassMaxStartFadeDistance=0.0000",
						"fGrassMinStartFadeDistance=0.0000",
						"[Decals]",
						"uMaxDecals=0",
						"bDecals=0",
						"bSkinnedDecals=0",
						"uMaxSkinDecals=0",
						"uMaxSkinDecalsPerActor=0",
						"[LOD]",
						"fLODFadeOutMultSkyCell=1.0000",
						"fLODFadeOutMultObjects=5",
						"fLODFadeOutMultItems=1.5",
						"fLODFadeOutMultActors=5",
						"[NVHBAO]",
						"bEnable=0",
						"fBackgroundAOViewDepth=750.0000",
						"bBackgroundAOEnable=1",
						"fDepthThresholdSharpness=100.0000",
						"fDepthThresholdMaxViewDepth=500.0000",
						"bDepthThresholdEnable=0",
						"iDepthClampModeEnum=0",
						"fCoarseAO=1.0000",
						"fDetailAO=0.6500",
						"fBlurSharpnessProfileBackgroundViewDepth=1.0000",
						"fBlurSharpnessProfileForegroundViewDepth=0.0000",
						"fBlurSharpnessProfileForegroundSharpnessScale=4.0000",
						"bBlurSharpnessProfileEnable=0",
						"fBlurSharpness=16.0000",
						"iBlurRadiusEnum=1",
						"bBlurEnable=1",
						"fPowerExponent=2.5000",
						"fBias=0.1000",
						"fRadius=0.6500",
						"[NVFlex]",
						"bNVFlexEnable=0",
						"iQuality=0",
						"iMaxNeighbors2=64",
						"iMaxNeighbors1=48",
						"iMaxNeighbors0=32",
						"iMaxParticles2=32768",
						"iMaxParticles1=16000",
						"iMaxParticles0=6000",
						"fKillRadius2=4000.0000",
						"fKillRadius1=3000.0000",
						"fKillRadius0=2000.0000",
						"bNVFlexInstanceDebris=1",
						"bNVFlexDrawDebris=1",
						"[BlurShaderHDR]",
						"bDoHighDynamicRange=0",
						"[BlurShader]",
						"bUseBlurShader=0",
						"[Launcher]",
						"uLastAspectRatio=1",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.fallout4_settings)
						where s.Contains("sD3DDevice")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x060004C1 RID: 1217 RVA: 0x00108C30 File Offset: 0x00106E30
		private void Fallout76_g()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 3)
				{
					array = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("bTeamFill")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.fallout76_settings, text);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.fallout76_settings, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string[] array2;
					string[] array3;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Display]",
						"iMaxAnisotropy=0",
						"fShadowDistance=0.0000",
						"fDirShadowDistance=0.0000",
						"iShadowMapResolution=0",
						"uiShadowFilter=0",
						"uiOrthoShadowFilter=0",
						"fBlendSplitDirShadow=0.0000",
						"iMaxFocusShadows=0",
						"iMaxDecalsPerFrame=0",
						"iMaxSkinDecalsPerFrame=0",
						"bVolumetricLightingEnable=0",
						"bSAOEnable=0",
						"uWaterShadowFilter=1",
						"iVolumetricLightingTextureQuality=0",
						"iSize H=" + this.DefaultHeight,
						"iSize W=" + this.DefaultWidth,
						"iLocation X=0",
						"iLocation Y=0",
						"bFull Screen=1",
						"bBorderless=0",
						"iGraphicPreset=0",
						"fShadowBiasScale=1.0000",
						"iDirShadowSplits=4",
						"uShadowExpirationMS=5000",
						"uPointLightShadowMapMaxResLog2=10",
						"fTessFactorMaxDistanceScale=0.0000",
						"fTessFactorMinDistanceScale=0.0000",
						"flocalShadowMapHalveEveryXUnit=750.0000",
						"fLeafAnimDampenDistEnd=0.0000",
						"fLeafAnimDampenDistStart=0.0000",
						"fDepthOfFieldWST=0.0000",
						"iMaxFocusShadowsDialogue=4",
						"bComputeShaderDeferredTiledLighting=1",
						"uFaceGenTextureResolution=512",
						"uPipboyTargetHeight=700",
						"uPipboyTargetWidth=876",
						"iTiledLightingMinLights=4",
						"fRainOccProjRadiusRejectionSize=0.0100",
						"fRainOccObjRejectionSize=100.0000",
						"fSMProjRadiusRejectionSize=0.0200",
						"fSMObjRejectionSize=250.0000",
						"uSMObjRejectionSplit=2",
						"bFadeInCulledGeometries=1",
						"bEffectShaderAllowPBRShadows=0",
						"sAntiAliasing=TAA",
						"fDefaultWorldFOV=80.0000",
						"iPresentInterval=0",
						"bTopMostWindow=0",
						"bMaximizeWindow=0",
						"iAdapterOutputIndex=0",
						"iAdapterIndex=0",
						string.Join(Environment.NewLine, array2),
						"bAllowShadowcasterNPCLights=0",
						"iScreenShotIndex=0",
						"fMaxFocusShadowMapDistance=450.0000",
						"bShowOtherPlayersNames=1",
						"fConversationHistorySize=4.0000",
						"[Decals]",
						"bDecals=0",
						"bSkinnedDecals=0",
						"uMaxDecals=0",
						"uMaxSkinDecals=0",
						"[TerrainManager]",
						"fBlockMaximumDistance=60000.0000",
						"fBlockLevel2Distance=35000.0000",
						"fBlockLevel1Distance=10000.0000",
						"fBlockLevel0Distance=10000.0000",
						"fTreeLoadDistance=5000.0000",
						"fSplitDistanceMult=0.7500",
						"bShowLODInEditor=0",
						"[ImageSpace]",
						"bDoDepthOfField=0",
						"bMBEnable=0",
						"bLensFlare=0",
						"bScreenSpaceBokeh=0",
						"[LightingShader]",
						"bScreenSpaceReflections=1",
						"[LOD]",
						"fLODFadeOutMultActors=3.0000",
						"fLODFadeOutMultItems=1.0000",
						"fLODFadeOutMultObjects=3.5000",
						"fLODFadeOutMultSkyCell=1.0000",
						"[Grass]",
						"fGrassStartFadeDistance=0.0000",
						"fGrassMaxStartFadeDistance=0.0000",
						"fGrassMinStartFadeDistance=0.0000",
						"[Water]",
						"bUseWaterHiRes=0",
						"bUseWaterDisplacements=0",
						"bUseWaterRefractions=0",
						"bUseWaterReflections=0",
						"bUseWaterDepth=0",
						"[Texture]",
						"iLargeTextureArrayMipSkip=1",
						"iTextureMipSkipBC1UNormSrgb=1",
						"iTextureMipSkipBC3UNormSrgb=1",
						"iTextureMipSkipBC1UNorm=1",
						"iTextureMipSkipBC5SNorm=1",
						"iTextureMipSkipBC4UNorm=1",
						"iTextureMipSkipMinDimension=256",
						"iLargeTextureArrayDim=512",
						"iTextureQualityLevel=0",
						"iLargeTextureArrayCount=32",
						"[Weather]",
						"iRainOcclusionMapResolution=32",
						"[General]",
						"fBrightLightColorB=1.0000",
						"fBrightLightColorG=1.0000",
						"fBrightLightColorR=1.0000",
						"bGamepadEnable=0",
						"iStoryManagerLoggingEvent=-1",
						"bEnableStoryManagerLogging=0",
						"uGridsToLoad=5",
						"[VATS]",
						"fModMenuEffectHighlightPAColorB=0.4100",
						"fModMenuEffectHighlightPAColorG=0.8200",
						"fModMenuEffectHighlightPAColorR=1.0000",
						"fModMenuEffectPAColorB=0.4100",
						"fModMenuEffectPAColorG=0.8200",
						"fModMenuEffectPAColorR=1.0000",
						"fModMenuEffectHighlightColorB=0.0824",
						"fModMenuEffectHighlightColorG=1.0000",
						"fModMenuEffectHighlightColorR=0.0706",
						"fModMenuEffectColorB=0.4200",
						"fModMenuEffectColorG=0.9900",
						"fModMenuEffectColorR=0.4900",
						"uVATSTargetEffectColorB=49",
						"uVATSTargetEffectColorG=100",
						"uVATSTargetEffectColorR=10",
						"[Pipboy]",
						"fPipboyEffectColorB=0.5000",
						"fPipboyEffectColorG=1.0000",
						"fPipboyEffectColorR=0.1000",
						"bBabylonQuickboyMode=1",
						"bQuickboyMode=0",
						"[Enlighten]",
						"fBounceQuality=0.0000",
						"bEnableDirectionalIrradiance=1",
						"[Culling]",
						"bMultiThreadedLODCulling=1",
						"[MAIN]",
						"fImageContrastHDR=1.7500",
						"fImageContrastSDR=1.0000",
						"bEnablePowerArmorHUD=1",
						"fHUDOpacity=1.0000",
						"bSaveOnTravel=1",
						"bSaveOnWait=1",
						"bSaveOnRest=1",
						"bCrosshairEnabled=1",
						"bEnableQuestAutoTrackOther=0",
						"bEnableQuestAutoTrackEvent=1",
						"bEnableQuestAutoTrackMisc=1",
						"bEnableQuestAutoTrackSide=1",
						"bEnableQuestAutoTrackMain=1",
						"bShowDialogueHistory=0",
						"iTutorialCPSeasonViewed=-1",
						"bTutorialHasSeenScore=0",
						"bUserAimAssistModelEnabled=1",
						"bNavMeshAlwaysRunCleanupOnSave=0",
						"fSkyCellRefFadeDistance=150000.0000",
						"[Interface]",
						"bDialogueSubtitles=0",
						"bGeneralSubtitles=0",
						"bDialogueCameraEnable=1",
						"bShowCompass=1",
						"uHUDActiveEffectWidget=2",
						"iHUDColorC=0",
						"iHUDColorV=0",
						"iHUDColorS=0",
						"iHUDColorH=0",
						"iHUDColorB=21",
						"iHUDColorG=255",
						"iHUDColorR=18",
						"[Controls]",
						"fMouseHeadingSensitivityY=0.0300",
						"fMouseHeadingSensitivity=0.0300",
						"bGamepadHeadingSensitivityMigrated=0",
						"fGamepadHeadingSensitivityY=0.6000",
						"fGamepadHeadingSensitivity=0.6667",
						"bAlwaysRunByDefault=1",
						"bInvertXValues=0",
						"bInvertYValues=0",
						"bGamePadRumble=1",
						"[GamePlay]",
						string.Join(Environment.NewLine, array3),
						"bShowPublicTeamNotifications=1",
						"bShowFloatingQuestText=1",
						"fFloatingQuestMarkersDistance=100.0000",
						"bShowFloatingQuestMarkers=1",
						"[Particles]",
						"iMaxDesired=0",
						"[NuclearWinter]",
						string.Join(Environment.NewLine, array),
						"bEnableItemRarityColors=1",
						"bShowDamageNumbers=1",
						"[AudioMenu]",
						"fAudioMasterVolume=1.0000",
						"fVal7=1.0000",
						"uID7=0",
						"fVal6=0.3500",
						"uID6=138006",
						"fVal5=0.7500",
						"uID5=1007612",
						"fVal4=1.0000",
						"uID4=94881",
						"fVal3=0.3500",
						"uID3=466532",
						"fVal2=0.6500",
						"uID2=554685",
						"fVal1=1.0000",
						"uID1=2300724",
						"fVal0=1.0000",
						"uID0=5736035",
						"[Survival]",
						"bShowDamageNumbers=0",
						"[Adventure]",
						"bShowDamageNumbers=0",
						"[Voice]",
						"bVoicePushToTalkEnabled=1",
						"uTransmitPreference=0",
						"uVivoxVoiceVolume=100",
						"[Landscape]",
						"fScrSpaceErrorThreshold=3.0000",
						"fWorldBorderHeight=2048.0000",
						""
					});
					num = 5;
				}
				if (num == 2)
				{
					string[] array3 = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("iDifficulty")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("sD3DDevice")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x060004C2 RID: 1218 RVA: 0x00109878 File Offset: 0x00107A78
		private void Fallout76_f()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 3)
				{
					array = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("bTeamFill")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.fallout76_settings, text);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.fallout76_settings, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string[] array2;
					string[] array3;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Display]",
						"iMaxAnisotropy=0",
						"fShadowDistance=0.0000",
						"fDirShadowDistance=0.0000",
						"iShadowMapResolution=0",
						"uiShadowFilter=0",
						"uiOrthoShadowFilter=0",
						"fBlendSplitDirShadow=0.0000",
						"iMaxFocusShadows=0",
						"iMaxDecalsPerFrame=0",
						"iMaxSkinDecalsPerFrame=0",
						"bVolumetricLightingEnable=0",
						"bSAOEnable=0",
						"uWaterShadowFilter=1",
						"iVolumetricLightingTextureQuality=0",
						"iSize H=" + this.DefaultHeight,
						"iSize W=" + this.DefaultWidth,
						"iLocation X=0",
						"iLocation Y=0",
						"bFull Screen=1",
						"bBorderless=0",
						"iGraphicPreset=0",
						"fShadowBiasScale=1.0000",
						"iDirShadowSplits=4",
						"uShadowExpirationMS=5000",
						"uPointLightShadowMapMaxResLog2=10",
						"fTessFactorMaxDistanceScale=0.0000",
						"fTessFactorMinDistanceScale=0.0000",
						"flocalShadowMapHalveEveryXUnit=750.0000",
						"fLeafAnimDampenDistEnd=0.0000",
						"fLeafAnimDampenDistStart=0.0000",
						"fDepthOfFieldWST=0.0000",
						"iMaxFocusShadowsDialogue=4",
						"bComputeShaderDeferredTiledLighting=1",
						"uFaceGenTextureResolution=512",
						"uPipboyTargetHeight=700",
						"uPipboyTargetWidth=876",
						"iTiledLightingMinLights=4",
						"fRainOccProjRadiusRejectionSize=0.0100",
						"fRainOccObjRejectionSize=100.0000",
						"fSMProjRadiusRejectionSize=0.0200",
						"fSMObjRejectionSize=250.0000",
						"uSMObjRejectionSplit=2",
						"bFadeInCulledGeometries=1",
						"bEffectShaderAllowPBRShadows=0",
						"sAntiAliasing=TAA",
						"fDefaultWorldFOV=80.0000",
						"iPresentInterval=0",
						"bTopMostWindow=0",
						"bMaximizeWindow=0",
						"iAdapterOutputIndex=0",
						"iAdapterIndex=0",
						string.Join(Environment.NewLine, array2),
						"bAllowShadowcasterNPCLights=0",
						"iScreenShotIndex=0",
						"fMaxFocusShadowMapDistance=450.0000",
						"bShowOtherPlayersNames=1",
						"fConversationHistorySize=4.0000",
						"[Decals]",
						"bDecals=0",
						"bSkinnedDecals=0",
						"uMaxDecals=0",
						"uMaxSkinDecals=0",
						"[TerrainManager]",
						"fBlockMaximumDistance=60000.0000",
						"fBlockLevel2Distance=35000.0000",
						"fBlockLevel1Distance=10000.0000",
						"fBlockLevel0Distance=10000.0000",
						"fTreeLoadDistance=5000.0000",
						"fSplitDistanceMult=0.7500",
						"bShowLODInEditor=0",
						"[ImageSpace]",
						"bDoDepthOfField=0",
						"bMBEnable=0",
						"bLensFlare=0",
						"bScreenSpaceBokeh=0",
						"[LightingShader]",
						"bScreenSpaceReflections=1",
						"[LOD]",
						"fLODFadeOutMultActors=3.5000",
						"fLODFadeOutMultItems=1.1000",
						"fLODFadeOutMultObjects=3.5000",
						"fLODFadeOutMultSkyCell=1.0000",
						"[Grass]",
						"fGrassStartFadeDistance=0.0000",
						"fGrassMaxStartFadeDistance=0.0000",
						"fGrassMinStartFadeDistance=0.0000",
						"[Water]",
						"bUseWaterHiRes=0",
						"bUseWaterDisplacements=0",
						"bUseWaterRefractions=0",
						"bUseWaterReflections=0",
						"bUseWaterDepth=0",
						"[Texture]",
						"iLargeTextureArrayMipSkip=1",
						"iTextureMipSkipBC1UNormSrgb=1",
						"iTextureMipSkipBC3UNormSrgb=1",
						"iTextureMipSkipBC1UNorm=1",
						"iTextureMipSkipBC5SNorm=1",
						"iTextureMipSkipBC4UNorm=1",
						"iTextureMipSkipMinDimension=256",
						"iLargeTextureArrayDim=512",
						"iTextureQualityLevel=0",
						"iLargeTextureArrayCount=32",
						"[Weather]",
						"iRainOcclusionMapResolution=32",
						"[General]",
						"fBrightLightColorB=1.0000",
						"fBrightLightColorG=1.0000",
						"fBrightLightColorR=1.0000",
						"bGamepadEnable=0",
						"iStoryManagerLoggingEvent=-1",
						"bEnableStoryManagerLogging=0",
						"uGridsToLoad=5",
						"[VATS]",
						"fModMenuEffectHighlightPAColorB=0.4100",
						"fModMenuEffectHighlightPAColorG=0.8200",
						"fModMenuEffectHighlightPAColorR=1.0000",
						"fModMenuEffectPAColorB=0.4100",
						"fModMenuEffectPAColorG=0.8200",
						"fModMenuEffectPAColorR=1.0000",
						"fModMenuEffectHighlightColorB=0.0824",
						"fModMenuEffectHighlightColorG=1.0000",
						"fModMenuEffectHighlightColorR=0.0706",
						"fModMenuEffectColorB=0.4200",
						"fModMenuEffectColorG=0.9900",
						"fModMenuEffectColorR=0.4900",
						"uVATSTargetEffectColorB=49",
						"uVATSTargetEffectColorG=100",
						"uVATSTargetEffectColorR=10",
						"[Pipboy]",
						"fPipboyEffectColorB=0.5000",
						"fPipboyEffectColorG=1.0000",
						"fPipboyEffectColorR=0.1000",
						"bBabylonQuickboyMode=1",
						"bQuickboyMode=0",
						"[Enlighten]",
						"fBounceQuality=0.0000",
						"bEnableDirectionalIrradiance=1",
						"[Culling]",
						"bMultiThreadedLODCulling=1",
						"[MAIN]",
						"fImageContrastHDR=1.7500",
						"fImageContrastSDR=1.0000",
						"bEnablePowerArmorHUD=1",
						"fHUDOpacity=1.0000",
						"bSaveOnTravel=1",
						"bSaveOnWait=1",
						"bSaveOnRest=1",
						"bCrosshairEnabled=1",
						"bEnableQuestAutoTrackOther=0",
						"bEnableQuestAutoTrackEvent=1",
						"bEnableQuestAutoTrackMisc=1",
						"bEnableQuestAutoTrackSide=1",
						"bEnableQuestAutoTrackMain=1",
						"bShowDialogueHistory=0",
						"iTutorialCPSeasonViewed=-1",
						"bTutorialHasSeenScore=0",
						"bUserAimAssistModelEnabled=1",
						"bNavMeshAlwaysRunCleanupOnSave=0",
						"fSkyCellRefFadeDistance=150000.0000",
						"[Interface]",
						"bDialogueSubtitles=0",
						"bGeneralSubtitles=0",
						"bDialogueCameraEnable=1",
						"bShowCompass=1",
						"uHUDActiveEffectWidget=2",
						"iHUDColorC=0",
						"iHUDColorV=0",
						"iHUDColorS=0",
						"iHUDColorH=0",
						"iHUDColorB=21",
						"iHUDColorG=255",
						"iHUDColorR=18",
						"[Controls]",
						"fMouseHeadingSensitivityY=0.0300",
						"fMouseHeadingSensitivity=0.0300",
						"bGamepadHeadingSensitivityMigrated=0",
						"fGamepadHeadingSensitivityY=0.6000",
						"fGamepadHeadingSensitivity=0.6667",
						"bAlwaysRunByDefault=1",
						"bInvertXValues=0",
						"bInvertYValues=0",
						"bGamePadRumble=1",
						"[GamePlay]",
						string.Join(Environment.NewLine, array3),
						"bShowPublicTeamNotifications=1",
						"bShowFloatingQuestText=1",
						"fFloatingQuestMarkersDistance=100.0000",
						"bShowFloatingQuestMarkers=1",
						"[Particles]",
						"iMaxDesired=0",
						"[NuclearWinter]",
						string.Join(Environment.NewLine, array),
						"bEnableItemRarityColors=1",
						"bShowDamageNumbers=1",
						"[AudioMenu]",
						"fAudioMasterVolume=1.0000",
						"fVal7=1.0000",
						"uID7=0",
						"fVal6=0.3500",
						"uID6=138006",
						"fVal5=0.7500",
						"uID5=1007612",
						"fVal4=1.0000",
						"uID4=94881",
						"fVal3=0.3500",
						"uID3=466532",
						"fVal2=0.6500",
						"uID2=554685",
						"fVal1=1.0000",
						"uID1=2300724",
						"fVal0=1.0000",
						"uID0=5736035",
						"[Survival]",
						"bShowDamageNumbers=0",
						"[Adventure]",
						"bShowDamageNumbers=0",
						"[Voice]",
						"bVoicePushToTalkEnabled=1",
						"uTransmitPreference=0",
						"uVivoxVoiceVolume=100",
						"[Landscape]",
						"fScrSpaceErrorThreshold=3.0000",
						"fWorldBorderHeight=2048.0000",
						""
					});
					num = 5;
				}
				if (num == 2)
				{
					string[] array3 = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("iDifficulty")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("sD3DDevice")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x060004C3 RID: 1219 RVA: 0x0010A4C0 File Offset: 0x001086C0
		private void Fallout76_d()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 3)
				{
					array = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("bTeamFill")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.fallout76_settings, text);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.fallout76_settings, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string[] array2;
					string[] array3;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Display]",
						"iMaxAnisotropy=0",
						"fShadowDistance=0.0000",
						"fDirShadowDistance=0.0000",
						"iShadowMapResolution=512",
						"uiShadowFilter=0",
						"uiOrthoShadowFilter=0",
						"fBlendSplitDirShadow=0.0000",
						"iMaxFocusShadows=0",
						"iMaxDecalsPerFrame=0",
						"iMaxSkinDecalsPerFrame=0",
						"bVolumetricLightingEnable=0",
						"bSAOEnable=0",
						"uWaterShadowFilter=1",
						"iVolumetricLightingTextureQuality=0",
						"iSize H=" + this.DefaultHeight,
						"iSize W=" + this.DefaultWidth,
						"iLocation X=0",
						"iLocation Y=0",
						"bFull Screen=1",
						"bBorderless=0",
						"iGraphicPreset=0",
						"fShadowBiasScale=1.0000",
						"iDirShadowSplits=4",
						"uShadowExpirationMS=5000",
						"uPointLightShadowMapMaxResLog2=10",
						"fTessFactorMaxDistanceScale=0.0000",
						"fTessFactorMinDistanceScale=0.0000",
						"flocalShadowMapHalveEveryXUnit=750.0000",
						"fLeafAnimDampenDistEnd=600.0000",
						"fLeafAnimDampenDistStart=300.0000",
						"fDepthOfFieldWST=0.0000",
						"iMaxFocusShadowsDialogue=4",
						"bComputeShaderDeferredTiledLighting=1",
						"uFaceGenTextureResolution=512",
						"uPipboyTargetHeight=700",
						"uPipboyTargetWidth=876",
						"iTiledLightingMinLights=4",
						"fRainOccProjRadiusRejectionSize=0.0100",
						"fRainOccObjRejectionSize=100.0000",
						"fSMProjRadiusRejectionSize=0.0200",
						"fSMObjRejectionSize=250.0000",
						"uSMObjRejectionSplit=2",
						"bFadeInCulledGeometries=1",
						"bEffectShaderAllowPBRShadows=0",
						"sAntiAliasing=TAA",
						"fDefaultWorldFOV=80.0000",
						"iPresentInterval=0",
						"bTopMostWindow=0",
						"bMaximizeWindow=0",
						"iAdapterOutputIndex=0",
						"iAdapterIndex=0",
						string.Join(Environment.NewLine, array2),
						"bAllowShadowcasterNPCLights=0",
						"iScreenShotIndex=0",
						"fMaxFocusShadowMapDistance=450.0000",
						"bShowOtherPlayersNames=1",
						"fConversationHistorySize=4.0000",
						"[Decals]",
						"bDecals=0",
						"bSkinnedDecals=0",
						"uMaxDecals=0",
						"uMaxSkinDecals=0",
						"[TerrainManager]",
						"fBlockMaximumDistance=50000.0000",
						"fBlockLevel2Distance=45000.0000",
						"fBlockLevel1Distance=10000.0000",
						"fBlockLevel0Distance=10000.0000",
						"fTreeLoadDistance=10000.0000",
						"fSplitDistanceMult=0.7500",
						"bShowLODInEditor=0",
						"[ImageSpace]",
						"bDoDepthOfField=0",
						"bMBEnable=0",
						"bLensFlare=0",
						"bScreenSpaceBokeh=0",
						"[LightingShader]",
						"bScreenSpaceReflections=1",
						"[LOD]",
						"fLODFadeOutMultActors=4.2000",
						"fLODFadeOutMultItems=1.3000",
						"fLODFadeOutMultObjects=4.0000",
						"fLODFadeOutMultSkyCell=1.0000",
						"[Grass]",
						"fGrassStartFadeDistance=300.0000",
						"fGrassMaxStartFadeDistance=600.0000",
						"fGrassMinStartFadeDistance=300.0000",
						"[Water]",
						"bUseWaterHiRes=0",
						"bUseWaterDisplacements=0",
						"bUseWaterRefractions=0",
						"bUseWaterReflections=0",
						"bUseWaterDepth=0",
						"[Texture]",
						"iLargeTextureArrayMipSkip=1",
						"iTextureMipSkipBC1UNormSrgb=1",
						"iTextureMipSkipBC3UNormSrgb=1",
						"iTextureMipSkipBC1UNorm=1",
						"iTextureMipSkipBC5SNorm=1",
						"iTextureMipSkipBC4UNorm=1",
						"iTextureMipSkipMinDimension=256",
						"iLargeTextureArrayDim=512",
						"iTextureQualityLevel=0",
						"iLargeTextureArrayCount=32",
						"[Weather]",
						"iRainOcclusionMapResolution=96",
						"[General]",
						"fBrightLightColorB=1.0000",
						"fBrightLightColorG=1.0000",
						"fBrightLightColorR=1.0000",
						"bGamepadEnable=0",
						"iStoryManagerLoggingEvent=-1",
						"bEnableStoryManagerLogging=0",
						"uGridsToLoad=5",
						"[VATS]",
						"fModMenuEffectHighlightPAColorB=0.4100",
						"fModMenuEffectHighlightPAColorG=0.8200",
						"fModMenuEffectHighlightPAColorR=1.0000",
						"fModMenuEffectPAColorB=0.4100",
						"fModMenuEffectPAColorG=0.8200",
						"fModMenuEffectPAColorR=1.0000",
						"fModMenuEffectHighlightColorB=0.0824",
						"fModMenuEffectHighlightColorG=1.0000",
						"fModMenuEffectHighlightColorR=0.0706",
						"fModMenuEffectColorB=0.4200",
						"fModMenuEffectColorG=0.9900",
						"fModMenuEffectColorR=0.4900",
						"uVATSTargetEffectColorB=49",
						"uVATSTargetEffectColorG=100",
						"uVATSTargetEffectColorR=10",
						"[Pipboy]",
						"fPipboyEffectColorB=0.5000",
						"fPipboyEffectColorG=1.0000",
						"fPipboyEffectColorR=0.1000",
						"bBabylonQuickboyMode=1",
						"bQuickboyMode=0",
						"[Enlighten]",
						"fBounceQuality=0.0000",
						"bEnableDirectionalIrradiance=1",
						"[Culling]",
						"bMultiThreadedLODCulling=1",
						"[MAIN]",
						"fImageContrastHDR=1.7500",
						"fImageContrastSDR=1.0000",
						"bEnablePowerArmorHUD=1",
						"fHUDOpacity=1.0000",
						"bSaveOnTravel=1",
						"bSaveOnWait=1",
						"bSaveOnRest=1",
						"bCrosshairEnabled=1",
						"bEnableQuestAutoTrackOther=0",
						"bEnableQuestAutoTrackEvent=1",
						"bEnableQuestAutoTrackMisc=1",
						"bEnableQuestAutoTrackSide=1",
						"bEnableQuestAutoTrackMain=1",
						"bShowDialogueHistory=0",
						"iTutorialCPSeasonViewed=-1",
						"bTutorialHasSeenScore=0",
						"bUserAimAssistModelEnabled=1",
						"bNavMeshAlwaysRunCleanupOnSave=0",
						"fSkyCellRefFadeDistance=150000.0000",
						"[Interface]",
						"bDialogueSubtitles=0",
						"bGeneralSubtitles=0",
						"bDialogueCameraEnable=1",
						"bShowCompass=1",
						"uHUDActiveEffectWidget=2",
						"iHUDColorC=0",
						"iHUDColorV=0",
						"iHUDColorS=0",
						"iHUDColorH=0",
						"iHUDColorB=21",
						"iHUDColorG=255",
						"iHUDColorR=18",
						"[Controls]",
						"fMouseHeadingSensitivityY=0.0300",
						"fMouseHeadingSensitivity=0.0300",
						"bGamepadHeadingSensitivityMigrated=0",
						"fGamepadHeadingSensitivityY=0.6000",
						"fGamepadHeadingSensitivity=0.6667",
						"bAlwaysRunByDefault=1",
						"bInvertXValues=0",
						"bInvertYValues=0",
						"bGamePadRumble=1",
						"[GamePlay]",
						string.Join(Environment.NewLine, array3),
						"bShowPublicTeamNotifications=1",
						"bShowFloatingQuestText=1",
						"fFloatingQuestMarkersDistance=100.0000",
						"bShowFloatingQuestMarkers=1",
						"[Particles]",
						"iMaxDesired=0",
						"[NuclearWinter]",
						string.Join(Environment.NewLine, array),
						"bEnableItemRarityColors=1",
						"bShowDamageNumbers=1",
						"[AudioMenu]",
						"fAudioMasterVolume=1.0000",
						"fVal7=1.0000",
						"uID7=0",
						"fVal6=0.3500",
						"uID6=138006",
						"fVal5=0.7500",
						"uID5=1007612",
						"fVal4=1.0000",
						"uID4=94881",
						"fVal3=0.3500",
						"uID3=466532",
						"fVal2=0.6500",
						"uID2=554685",
						"fVal1=1.0000",
						"uID1=2300724",
						"fVal0=1.0000",
						"uID0=5736035",
						"[Survival]",
						"bShowDamageNumbers=0",
						"[Adventure]",
						"bShowDamageNumbers=0",
						"[Voice]",
						"bVoicePushToTalkEnabled=1",
						"uTransmitPreference=0",
						"uVivoxVoiceVolume=100",
						"[Landscape]",
						"fScrSpaceErrorThreshold=3.0000",
						"fWorldBorderHeight=2048.0000",
						""
					});
					num = 5;
				}
				if (num == 2)
				{
					string[] array3 = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("iDifficulty")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("sD3DDevice")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x060004C4 RID: 1220 RVA: 0x0010B108 File Offset: 0x00109308
		private void Fallout76_c()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 3)
				{
					array = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("bTeamFill")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.fallout76_settings, text);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.fallout76_settings, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string[] array2;
					string[] array3;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Display]",
						"iMaxAnisotropy=0",
						"fShadowDistance=20000.0000",
						"fDirShadowDistance=20000.0000",
						"iShadowMapResolution=512",
						"uiShadowFilter=0",
						"uiOrthoShadowFilter=0",
						"fBlendSplitDirShadow=0.0000",
						"iMaxFocusShadows=0",
						"iMaxDecalsPerFrame=0",
						"iMaxSkinDecalsPerFrame=0",
						"bVolumetricLightingEnable=0",
						"bSAOEnable=0",
						"uWaterShadowFilter=1",
						"iVolumetricLightingTextureQuality=0",
						"iSize H=" + this.DefaultHeight,
						"iSize W=" + this.DefaultWidth,
						"iLocation X=0",
						"iLocation Y=0",
						"bFull Screen=1",
						"bBorderless=0",
						"iGraphicPreset=0",
						"fShadowBiasScale=1.0000",
						"iDirShadowSplits=4",
						"uShadowExpirationMS=5000",
						"uPointLightShadowMapMaxResLog2=10",
						"fTessFactorMaxDistanceScale=0.0000",
						"fTessFactorMinDistanceScale=0.0000",
						"flocalShadowMapHalveEveryXUnit=750.0000",
						"fLeafAnimDampenDistEnd=1300.0000",
						"fLeafAnimDampenDistStart=1000.0000",
						"fDepthOfFieldWST=0.0000",
						"iMaxFocusShadowsDialogue=4",
						"bComputeShaderDeferredTiledLighting=1",
						"uFaceGenTextureResolution=512",
						"uPipboyTargetHeight=700",
						"uPipboyTargetWidth=876",
						"iTiledLightingMinLights=4",
						"fRainOccProjRadiusRejectionSize=0.0100",
						"fRainOccObjRejectionSize=100.0000",
						"fSMProjRadiusRejectionSize=0.0200",
						"fSMObjRejectionSize=250.0000",
						"uSMObjRejectionSplit=2",
						"bFadeInCulledGeometries=1",
						"bEffectShaderAllowPBRShadows=0",
						"sAntiAliasing=TAA",
						"fDefaultWorldFOV=80.0000",
						"iPresentInterval=0",
						"bTopMostWindow=0",
						"bMaximizeWindow=0",
						"iAdapterOutputIndex=0",
						"iAdapterIndex=0",
						string.Join(Environment.NewLine, array2),
						"bAllowShadowcasterNPCLights=0",
						"iScreenShotIndex=0",
						"fMaxFocusShadowMapDistance=450.0000",
						"bShowOtherPlayersNames=1",
						"fConversationHistorySize=4.0000",
						"[Decals]",
						"bDecals=0",
						"bSkinnedDecals=0",
						"uMaxDecals=0",
						"uMaxSkinDecals=0",
						"[TerrainManager]",
						"fBlockMaximumDistance=60000.0000",
						"fBlockLevel2Distance=55000.0000",
						"fBlockLevel1Distance=20000.0000",
						"fBlockLevel0Distance=12000.0000",
						"fTreeLoadDistance=10000.0000",
						"fSplitDistanceMult=0.7500",
						"bShowLODInEditor=0",
						"[ImageSpace]",
						"bDoDepthOfField=0",
						"bMBEnable=0",
						"bLensFlare=0",
						"bScreenSpaceBokeh=0",
						"[LightingShader]",
						"bScreenSpaceReflections=1",
						"[LOD]",
						"fLODFadeOutMultActors=4.4000",
						"fLODFadeOutMultItems=1.3000",
						"fLODFadeOutMultObjects=4.5000",
						"fLODFadeOutMultSkyCell=1.0000",
						"[Grass]",
						"fGrassStartFadeDistance=800.0000",
						"fGrassMaxStartFadeDistance=1100.0000",
						"fGrassMinStartFadeDistance=800.0000",
						"[Water]",
						"bUseWaterHiRes=0",
						"bUseWaterDisplacements=0",
						"bUseWaterRefractions=0",
						"bUseWaterReflections=0",
						"bUseWaterDepth=0",
						"[Texture]",
						"iLargeTextureArrayMipSkip=1",
						"iTextureMipSkipBC1UNormSrgb=1",
						"iTextureMipSkipBC3UNormSrgb=1",
						"iTextureMipSkipBC1UNorm=1",
						"iTextureMipSkipBC5SNorm=1",
						"iTextureMipSkipBC4UNorm=1",
						"iTextureMipSkipMinDimension=256",
						"iLargeTextureArrayDim=512",
						"iTextureQualityLevel=0",
						"iLargeTextureArrayCount=32",
						"[Weather]",
						"iRainOcclusionMapResolution=128",
						"[General]",
						"fBrightLightColorB=1.0000",
						"fBrightLightColorG=1.0000",
						"fBrightLightColorR=1.0000",
						"bGamepadEnable=0",
						"iStoryManagerLoggingEvent=-1",
						"bEnableStoryManagerLogging=0",
						"uGridsToLoad=5",
						"[VATS]",
						"fModMenuEffectHighlightPAColorB=0.4100",
						"fModMenuEffectHighlightPAColorG=0.8200",
						"fModMenuEffectHighlightPAColorR=1.0000",
						"fModMenuEffectPAColorB=0.4100",
						"fModMenuEffectPAColorG=0.8200",
						"fModMenuEffectPAColorR=1.0000",
						"fModMenuEffectHighlightColorB=0.0824",
						"fModMenuEffectHighlightColorG=1.0000",
						"fModMenuEffectHighlightColorR=0.0706",
						"fModMenuEffectColorB=0.4200",
						"fModMenuEffectColorG=0.9900",
						"fModMenuEffectColorR=0.4900",
						"uVATSTargetEffectColorB=49",
						"uVATSTargetEffectColorG=100",
						"uVATSTargetEffectColorR=10",
						"[Pipboy]",
						"fPipboyEffectColorB=0.5000",
						"fPipboyEffectColorG=1.0000",
						"fPipboyEffectColorR=0.1000",
						"bBabylonQuickboyMode=1",
						"bQuickboyMode=0",
						"[Enlighten]",
						"fBounceQuality=0.0000",
						"bEnableDirectionalIrradiance=1",
						"[Culling]",
						"bMultiThreadedLODCulling=1",
						"[MAIN]",
						"fImageContrastHDR=1.7500",
						"fImageContrastSDR=1.0000",
						"bEnablePowerArmorHUD=1",
						"fHUDOpacity=1.0000",
						"bSaveOnTravel=1",
						"bSaveOnWait=1",
						"bSaveOnRest=1",
						"bCrosshairEnabled=1",
						"bEnableQuestAutoTrackOther=0",
						"bEnableQuestAutoTrackEvent=1",
						"bEnableQuestAutoTrackMisc=1",
						"bEnableQuestAutoTrackSide=1",
						"bEnableQuestAutoTrackMain=1",
						"bShowDialogueHistory=0",
						"iTutorialCPSeasonViewed=-1",
						"bTutorialHasSeenScore=0",
						"bUserAimAssistModelEnabled=1",
						"bNavMeshAlwaysRunCleanupOnSave=0",
						"fSkyCellRefFadeDistance=150000.0000",
						"[Interface]",
						"bDialogueSubtitles=0",
						"bGeneralSubtitles=0",
						"bDialogueCameraEnable=1",
						"bShowCompass=1",
						"uHUDActiveEffectWidget=2",
						"iHUDColorC=0",
						"iHUDColorV=0",
						"iHUDColorS=0",
						"iHUDColorH=0",
						"iHUDColorB=21",
						"iHUDColorG=255",
						"iHUDColorR=18",
						"[Controls]",
						"fMouseHeadingSensitivityY=0.0300",
						"fMouseHeadingSensitivity=0.0300",
						"bGamepadHeadingSensitivityMigrated=0",
						"fGamepadHeadingSensitivityY=0.6000",
						"fGamepadHeadingSensitivity=0.6667",
						"bAlwaysRunByDefault=1",
						"bInvertXValues=0",
						"bInvertYValues=0",
						"bGamePadRumble=1",
						"[GamePlay]",
						string.Join(Environment.NewLine, array3),
						"bShowPublicTeamNotifications=1",
						"bShowFloatingQuestText=1",
						"fFloatingQuestMarkersDistance=100.0000",
						"bShowFloatingQuestMarkers=1",
						"[Particles]",
						"iMaxDesired=200",
						"[NuclearWinter]",
						string.Join(Environment.NewLine, array),
						"bEnableItemRarityColors=1",
						"bShowDamageNumbers=1",
						"[AudioMenu]",
						"fAudioMasterVolume=1.0000",
						"fVal7=1.0000",
						"uID7=0",
						"fVal6=0.3500",
						"uID6=138006",
						"fVal5=0.7500",
						"uID5=1007612",
						"fVal4=1.0000",
						"uID4=94881",
						"fVal3=0.3500",
						"uID3=466532",
						"fVal2=0.6500",
						"uID2=554685",
						"fVal1=1.0000",
						"uID1=2300724",
						"fVal0=1.0000",
						"uID0=5736035",
						"[Survival]",
						"bShowDamageNumbers=0",
						"[Adventure]",
						"bShowDamageNumbers=0",
						"[Voice]",
						"bVoicePushToTalkEnabled=1",
						"uTransmitPreference=0",
						"uVivoxVoiceVolume=100",
						"[Landscape]",
						"fScrSpaceErrorThreshold=3.0000",
						"fWorldBorderHeight=2048.0000",
						""
					});
					num = 5;
				}
				if (num == 2)
				{
					string[] array3 = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("iDifficulty")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("sD3DDevice")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x060004C5 RID: 1221 RVA: 0x0010BD50 File Offset: 0x00109F50
		private void Fallout76_b()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 3)
				{
					array = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("bTeamFill")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.fallout76_settings, text);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.fallout76_settings, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string[] array2;
					string[] array3;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Display]",
						"iMaxAnisotropy=0",
						"fShadowDistance=30000.0000",
						"fDirShadowDistance=30000.0000",
						"iShadowMapResolution=1024",
						"uiShadowFilter=0",
						"uiOrthoShadowFilter=0",
						"fBlendSplitDirShadow=0.0000",
						"iMaxFocusShadows=0",
						"iMaxDecalsPerFrame=0",
						"iMaxSkinDecalsPerFrame=0",
						"bVolumetricLightingEnable=0",
						"bSAOEnable=0",
						"uWaterShadowFilter=1",
						"iVolumetricLightingTextureQuality=0",
						"iSize H=" + this.DefaultHeight,
						"iSize W=" + this.DefaultWidth,
						"iLocation X=0",
						"iLocation Y=0",
						"bFull Screen=1",
						"bBorderless=0",
						"iGraphicPreset=0",
						"fShadowBiasScale=1.0000",
						"iDirShadowSplits=4",
						"uShadowExpirationMS=5000",
						"uPointLightShadowMapMaxResLog2=10",
						"fTessFactorMaxDistanceScale=0.0000",
						"fTessFactorMinDistanceScale=0.0000",
						"flocalShadowMapHalveEveryXUnit=750.0000",
						"fLeafAnimDampenDistEnd=2000.0000",
						"fLeafAnimDampenDistStart=1800.0000",
						"fDepthOfFieldWST=0.0000",
						"iMaxFocusShadowsDialogue=4",
						"bComputeShaderDeferredTiledLighting=1",
						"uFaceGenTextureResolution=512",
						"uPipboyTargetHeight=700",
						"uPipboyTargetWidth=876",
						"iTiledLightingMinLights=4",
						"fRainOccProjRadiusRejectionSize=0.0100",
						"fRainOccObjRejectionSize=100.0000",
						"fSMProjRadiusRejectionSize=0.0200",
						"fSMObjRejectionSize=250.0000",
						"uSMObjRejectionSplit=2",
						"bFadeInCulledGeometries=1",
						"bEffectShaderAllowPBRShadows=0",
						"sAntiAliasing=TAA",
						"fDefaultWorldFOV=80.0000",
						"iPresentInterval=0",
						"bTopMostWindow=0",
						"bMaximizeWindow=0",
						"iAdapterOutputIndex=0",
						"iAdapterIndex=0",
						string.Join(Environment.NewLine, array2),
						"bAllowShadowcasterNPCLights=0",
						"iScreenShotIndex=0",
						"fMaxFocusShadowMapDistance=450.0000",
						"bShowOtherPlayersNames=1",
						"fConversationHistorySize=4.0000",
						"[Decals]",
						"bDecals=0",
						"bSkinnedDecals=0",
						"uMaxDecals=0",
						"uMaxSkinDecals=0",
						"[TerrainManager]",
						"fBlockMaximumDistance=65000.0000",
						"fBlockLevel2Distance=55000.0000",
						"fBlockLevel1Distance=23000.0000",
						"fBlockLevel0Distance=13000.0000",
						"fTreeLoadDistance=10000.0000",
						"fSplitDistanceMult=0.7500",
						"bShowLODInEditor=0",
						"[ImageSpace]",
						"bDoDepthOfField=0",
						"bMBEnable=0",
						"bLensFlare=0",
						"bScreenSpaceBokeh=0",
						"[LightingShader]",
						"bScreenSpaceReflections=1",
						"[LOD]",
						"fLODFadeOutMultActors=4.6000",
						"fLODFadeOutMultItems=1.4000",
						"fLODFadeOutMultObjects=4.5000",
						"fLODFadeOutMultSkyCell=1.0000",
						"[Grass]",
						"fGrassStartFadeDistance=1100.0000",
						"fGrassMaxStartFadeDistance=2000.0000",
						"fGrassMinStartFadeDistance=1100.0000",
						"[Water]",
						"bUseWaterHiRes=0",
						"bUseWaterDisplacements=0",
						"bUseWaterRefractions=0",
						"bUseWaterReflections=0",
						"bUseWaterDepth=0",
						"[Texture]",
						"iLargeTextureArrayMipSkip=1",
						"iTextureMipSkipBC1UNormSrgb=1",
						"iTextureMipSkipBC3UNormSrgb=1",
						"iTextureMipSkipBC1UNorm=1",
						"iTextureMipSkipBC5SNorm=1",
						"iTextureMipSkipBC4UNorm=1",
						"iTextureMipSkipMinDimension=256",
						"iLargeTextureArrayDim=512",
						"iTextureQualityLevel=0",
						"iLargeTextureArrayCount=32",
						"[Weather]",
						"iRainOcclusionMapResolution=192",
						"[General]",
						"fBrightLightColorB=1.0000",
						"fBrightLightColorG=1.0000",
						"fBrightLightColorR=1.0000",
						"bGamepadEnable=0",
						"iStoryManagerLoggingEvent=-1",
						"bEnableStoryManagerLogging=0",
						"uGridsToLoad=5",
						"[VATS]",
						"fModMenuEffectHighlightPAColorB=0.4100",
						"fModMenuEffectHighlightPAColorG=0.8200",
						"fModMenuEffectHighlightPAColorR=1.0000",
						"fModMenuEffectPAColorB=0.4100",
						"fModMenuEffectPAColorG=0.8200",
						"fModMenuEffectPAColorR=1.0000",
						"fModMenuEffectHighlightColorB=0.0824",
						"fModMenuEffectHighlightColorG=1.0000",
						"fModMenuEffectHighlightColorR=0.0706",
						"fModMenuEffectColorB=0.4200",
						"fModMenuEffectColorG=0.9900",
						"fModMenuEffectColorR=0.4900",
						"uVATSTargetEffectColorB=49",
						"uVATSTargetEffectColorG=100",
						"uVATSTargetEffectColorR=10",
						"[Pipboy]",
						"fPipboyEffectColorB=0.5000",
						"fPipboyEffectColorG=1.0000",
						"fPipboyEffectColorR=0.1000",
						"bBabylonQuickboyMode=1",
						"bQuickboyMode=0",
						"[Enlighten]",
						"fBounceQuality=0.0000",
						"bEnableDirectionalIrradiance=1",
						"[Culling]",
						"bMultiThreadedLODCulling=1",
						"[MAIN]",
						"fImageContrastHDR=1.7500",
						"fImageContrastSDR=1.0000",
						"bEnablePowerArmorHUD=1",
						"fHUDOpacity=1.0000",
						"bSaveOnTravel=1",
						"bSaveOnWait=1",
						"bSaveOnRest=1",
						"bCrosshairEnabled=1",
						"bEnableQuestAutoTrackOther=0",
						"bEnableQuestAutoTrackEvent=1",
						"bEnableQuestAutoTrackMisc=1",
						"bEnableQuestAutoTrackSide=1",
						"bEnableQuestAutoTrackMain=1",
						"bShowDialogueHistory=0",
						"iTutorialCPSeasonViewed=-1",
						"bTutorialHasSeenScore=0",
						"bUserAimAssistModelEnabled=1",
						"bNavMeshAlwaysRunCleanupOnSave=0",
						"fSkyCellRefFadeDistance=150000.0000",
						"[Interface]",
						"bDialogueSubtitles=0",
						"bGeneralSubtitles=0",
						"bDialogueCameraEnable=1",
						"bShowCompass=1",
						"uHUDActiveEffectWidget=2",
						"iHUDColorC=0",
						"iHUDColorV=0",
						"iHUDColorS=0",
						"iHUDColorH=0",
						"iHUDColorB=21",
						"iHUDColorG=255",
						"iHUDColorR=18",
						"[Controls]",
						"fMouseHeadingSensitivityY=0.0300",
						"fMouseHeadingSensitivity=0.0300",
						"bGamepadHeadingSensitivityMigrated=0",
						"fGamepadHeadingSensitivityY=0.6000",
						"fGamepadHeadingSensitivity=0.6667",
						"bAlwaysRunByDefault=1",
						"bInvertXValues=0",
						"bInvertYValues=0",
						"bGamePadRumble=1",
						"[GamePlay]",
						string.Join(Environment.NewLine, array3),
						"bShowPublicTeamNotifications=1",
						"bShowFloatingQuestText=1",
						"fFloatingQuestMarkersDistance=100.0000",
						"bShowFloatingQuestMarkers=1",
						"[Particles]",
						"iMaxDesired=250",
						"[NuclearWinter]",
						string.Join(Environment.NewLine, array),
						"bEnableItemRarityColors=1",
						"bShowDamageNumbers=1",
						"[AudioMenu]",
						"fAudioMasterVolume=1.0000",
						"fVal7=1.0000",
						"uID7=0",
						"fVal6=0.3500",
						"uID6=138006",
						"fVal5=0.7500",
						"uID5=1007612",
						"fVal4=1.0000",
						"uID4=94881",
						"fVal3=0.3500",
						"uID3=466532",
						"fVal2=0.6500",
						"uID2=554685",
						"fVal1=1.0000",
						"uID1=2300724",
						"fVal0=1.0000",
						"uID0=5736035",
						"[Survival]",
						"bShowDamageNumbers=0",
						"[Adventure]",
						"bShowDamageNumbers=0",
						"[Voice]",
						"bVoicePushToTalkEnabled=1",
						"uTransmitPreference=0",
						"uVivoxVoiceVolume=100",
						"[Landscape]",
						"fScrSpaceErrorThreshold=3.0000",
						"fWorldBorderHeight=2048.0000",
						""
					});
					num = 5;
				}
				if (num == 2)
				{
					string[] array3 = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("iDifficulty")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("sD3DDevice")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x060004C6 RID: 1222 RVA: 0x0010C998 File Offset: 0x0010AB98
		private void Fallout76_a()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 3)
				{
					array = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("bTeamFill")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 6)
				{
					string text;
					File.WriteAllText(this.fallout76_settings, text);
					num = 7;
				}
				if (num == 5)
				{
					File.SetAttributes(this.fallout76_settings, FileAttributes.Normal);
					num = 6;
				}
				if (num == 4)
				{
					string[] array2;
					string[] array3;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Display]",
						"iMaxAnisotropy=0",
						"fShadowDistance=40000.0000",
						"fDirShadowDistance=40000.0000",
						"iShadowMapResolution=1024",
						"uiShadowFilter=0",
						"uiOrthoShadowFilter=0",
						"fBlendSplitDirShadow=0.0000",
						"iMaxFocusShadows=0",
						"iMaxDecalsPerFrame=0",
						"iMaxSkinDecalsPerFrame=0",
						"bVolumetricLightingEnable=0",
						"bSAOEnable=0",
						"uWaterShadowFilter=0",
						"iVolumetricLightingTextureQuality=0",
						"iSize H=" + this.DefaultHeight,
						"iSize W=" + this.DefaultWidth,
						"iLocation X=0",
						"iLocation Y=0",
						"bFull Screen=1",
						"bBorderless=0",
						"iGraphicPreset=0",
						"fShadowBiasScale=1.0000",
						"iDirShadowSplits=4",
						"uShadowExpirationMS=5000",
						"uPointLightShadowMapMaxResLog2=10",
						"fTessFactorMaxDistanceScale=0.0000",
						"fTessFactorMinDistanceScale=0.0000",
						"flocalShadowMapHalveEveryXUnit=750.0000",
						"fLeafAnimDampenDistEnd=2000.0000",
						"fLeafAnimDampenDistStart=1400.0000",
						"fDepthOfFieldWST=0.0000",
						"iMaxFocusShadowsDialogue=4",
						"bComputeShaderDeferredTiledLighting=1",
						"uFaceGenTextureResolution=512",
						"uPipboyTargetHeight=700",
						"uPipboyTargetWidth=876",
						"iTiledLightingMinLights=4",
						"fRainOccProjRadiusRejectionSize=0.0100",
						"fRainOccObjRejectionSize=100.0000",
						"fSMProjRadiusRejectionSize=0.0200",
						"fSMObjRejectionSize=250.0000",
						"uSMObjRejectionSplit=2",
						"bFadeInCulledGeometries=1",
						"bEffectShaderAllowPBRShadows=0",
						"sAntiAliasing=TAA",
						"fDefaultWorldFOV=80.0000",
						"iPresentInterval=0",
						"bTopMostWindow=0",
						"bMaximizeWindow=0",
						"iAdapterOutputIndex=0",
						"iAdapterIndex=0",
						string.Join(Environment.NewLine, array2),
						"bAllowShadowcasterNPCLights=0",
						"iScreenShotIndex=0",
						"fMaxFocusShadowMapDistance=450.0000",
						"bShowOtherPlayersNames=1",
						"fConversationHistorySize=4.0000",
						"[Decals]",
						"bDecals=0",
						"bSkinnedDecals=0",
						"uMaxDecals=0",
						"uMaxSkinDecals=0",
						"[TerrainManager]",
						"fBlockMaximumDistance=80000.0000",
						"fBlockLevel2Distance=70000.0000",
						"fBlockLevel1Distance=25000.0000",
						"fBlockLevel0Distance=15000.0000",
						"fTreeLoadDistance=20000.0000",
						"fSplitDistanceMult=0.7500",
						"bShowLODInEditor=0",
						"[ImageSpace]",
						"bDoDepthOfField=0",
						"bMBEnable=0",
						"bLensFlare=0",
						"bScreenSpaceBokeh=0",
						"[LightingShader]",
						"bScreenSpaceReflections=1",
						"[LOD]",
						"fLODFadeOutMultActors=3.8000",
						"fLODFadeOutMultItems=1.5000",
						"fLODFadeOutMultObjects=3.7000",
						"fLODFadeOutMultSkyCell=1.0000",
						"[Grass]",
						"fGrassStartFadeDistance=1900.0000",
						"fGrassMaxStartFadeDistance=3800.0000",
						"fGrassMinStartFadeDistance=1900.0000",
						"[Water]",
						"bUseWaterHiRes=0",
						"bUseWaterDisplacements=0",
						"bUseWaterRefractions=0",
						"bUseWaterReflections=0",
						"bUseWaterDepth=0",
						"[Texture]",
						"iLargeTextureArrayMipSkip=1",
						"iTextureMipSkipBC1UNormSrgb=1",
						"iTextureMipSkipBC3UNormSrgb=1",
						"iTextureMipSkipBC1UNorm=1",
						"iTextureMipSkipBC5SNorm=1",
						"iTextureMipSkipBC4UNorm=1",
						"iTextureMipSkipMinDimension=256",
						"iLargeTextureArrayDim=512",
						"iTextureQualityLevel=0",
						"iLargeTextureArrayCount=32",
						"[Weather]",
						"iRainOcclusionMapResolution=96",
						"[General]",
						"fBrightLightColorB=1.0000",
						"fBrightLightColorG=1.0000",
						"fBrightLightColorR=1.0000",
						"bGamepadEnable=0",
						"iStoryManagerLoggingEvent=-1",
						"bEnableStoryManagerLogging=0",
						"uGridsToLoad=5",
						"[VATS]",
						"fModMenuEffectHighlightPAColorB=0.4100",
						"fModMenuEffectHighlightPAColorG=0.8200",
						"fModMenuEffectHighlightPAColorR=1.0000",
						"fModMenuEffectPAColorB=0.4100",
						"fModMenuEffectPAColorG=0.8200",
						"fModMenuEffectPAColorR=1.0000",
						"fModMenuEffectHighlightColorB=0.0824",
						"fModMenuEffectHighlightColorG=1.0000",
						"fModMenuEffectHighlightColorR=0.0706",
						"fModMenuEffectColorB=0.4200",
						"fModMenuEffectColorG=0.9900",
						"fModMenuEffectColorR=0.4900",
						"uVATSTargetEffectColorB=49",
						"uVATSTargetEffectColorG=100",
						"uVATSTargetEffectColorR=10",
						"[Pipboy]",
						"fPipboyEffectColorB=0.5000",
						"fPipboyEffectColorG=1.0000",
						"fPipboyEffectColorR=0.1000",
						"bBabylonQuickboyMode=1",
						"bQuickboyMode=0",
						"[Enlighten]",
						"fBounceQuality=0.0000",
						"bEnableDirectionalIrradiance=1",
						"[Culling]",
						"bMultiThreadedLODCulling=1",
						"[MAIN]",
						"fImageContrastHDR=1.7500",
						"fImageContrastSDR=1.0000",
						"bEnablePowerArmorHUD=1",
						"fHUDOpacity=1.0000",
						"bSaveOnTravel=1",
						"bSaveOnWait=1",
						"bSaveOnRest=1",
						"bCrosshairEnabled=1",
						"bEnableQuestAutoTrackOther=0",
						"bEnableQuestAutoTrackEvent=1",
						"bEnableQuestAutoTrackMisc=1",
						"bEnableQuestAutoTrackSide=1",
						"bEnableQuestAutoTrackMain=1",
						"bShowDialogueHistory=0",
						"iTutorialCPSeasonViewed=-1",
						"bTutorialHasSeenScore=0",
						"bUserAimAssistModelEnabled=1",
						"bNavMeshAlwaysRunCleanupOnSave=0",
						"fSkyCellRefFadeDistance=150000.0000",
						"[Interface]",
						"bDialogueSubtitles=0",
						"bGeneralSubtitles=0",
						"bDialogueCameraEnable=1",
						"bShowCompass=1",
						"uHUDActiveEffectWidget=2",
						"iHUDColorC=0",
						"iHUDColorV=0",
						"iHUDColorS=0",
						"iHUDColorH=0",
						"iHUDColorB=21",
						"iHUDColorG=255",
						"iHUDColorR=18",
						"[Controls]",
						"fMouseHeadingSensitivityY=0.0300",
						"fMouseHeadingSensitivity=0.0300",
						"bGamepadHeadingSensitivityMigrated=0",
						"fGamepadHeadingSensitivityY=0.6000",
						"fGamepadHeadingSensitivity=0.6667",
						"bAlwaysRunByDefault=1",
						"bInvertXValues=0",
						"bInvertYValues=0",
						"bGamePadRumble=1",
						"[GamePlay]",
						string.Join(Environment.NewLine, array3),
						"bShowPublicTeamNotifications=1",
						"bShowFloatingQuestText=1",
						"fFloatingQuestMarkersDistance=100.0000",
						"bShowFloatingQuestMarkers=1",
						"[Particles]",
						"iMaxDesired=300",
						"[NuclearWinter]",
						string.Join(Environment.NewLine, array),
						"bEnableItemRarityColors=1",
						"bShowDamageNumbers=1",
						"[AudioMenu]",
						"fAudioMasterVolume=1.0000",
						"fVal7=1.0000",
						"uID7=0",
						"fVal6=0.3500",
						"uID6=138006",
						"fVal5=0.7500",
						"uID5=1007612",
						"fVal4=1.0000",
						"uID4=94881",
						"fVal3=0.3500",
						"uID3=466532",
						"fVal2=0.6500",
						"uID2=554685",
						"fVal1=1.0000",
						"uID1=2300724",
						"fVal0=1.0000",
						"uID0=5736035",
						"[Survival]",
						"bShowDamageNumbers=0",
						"[Adventure]",
						"bShowDamageNumbers=0",
						"[Voice]",
						"bVoicePushToTalkEnabled=1",
						"uTransmitPreference=0",
						"uVivoxVoiceVolume=100",
						"[Landscape]",
						"fScrSpaceErrorThreshold=3.0000",
						"fWorldBorderHeight=2048.0000",
						""
					});
					num = 5;
				}
				if (num == 2)
				{
					string[] array3 = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("iDifficulty")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.fallout76_settings)
						where s.Contains("sD3DDevice")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
		}

		// Token: 0x060004C7 RID: 1223 RVA: 0x0010D5E0 File Offset: 0x0010B7E0
		private void FC5_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<GamerProfile>",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"\t\t<FireConfig QualitySetting=\"Low\" />",
						"\t\t<Statistics>",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t</Statistics>",
						"\t\t<IgeSettings ShowCollections=\"1\" ShowFog=\"1\" ShowShadow=\"1\" ShowWater=\"1\" ShowMapLimits=\"0\" ShowIcons=\"1\" ShowHelpers=\"1\" SoundEnabled=\"1\" ShowGrid=\"0\" GridResolution=\"64\" ShowBudgetGrid=\"0\" ShowClimbLedges=\"0\" ShowGrappleZones=\"0\" ShowNavmesh=\"0\" ShowNavmeshLayer=\"0\" ShowCovers=\"0\" ShowBoundingBoxes=\"1\" Invincible=\"0\" Invisible=\"0\" SnapObjectsToTerrain=\"1\" AutoSnapObjects=\"1\" AutoSnapObjectsRotation=\"1\" AutoSnapObjectsTerrain=\"1\" ConfirmDeleteObject=\"1\" CameraAutoScroll=\"1\" KillDistanceOverride=\"0\" ShowContextualStrategies=\"1\" ShowTriggers=\"1\" />",
						"\t</ProfileSpecificGameProfile>",
						"\t<RenderProfile GPU=\"0\" VideoModeProfile=\"1\" MainMonitor=\"0\" WindowPosition=\"0,0\" MultimonitorMode=\"2\" AntiAliasingMode=\"2\" MotionBlur=\"0\" Quality=\"custom\" QualityEditor=\"editor\" VSyncPreset=\"off\" FOV=\"72\" FrameRateLockEnabled=\"0\" FrameRateLock=\"60\" ResolutionScale=\"0.60\" CameraViewCenterOffsetX=\"0\" CameraViewCenterOffsetY=\"0\" HDTexturesEnabled=\"0\" DisableLoadingMip0=\"0\" GPUMaxBufferedFrames=\"0\" ShowFPS=\"0\" Brightness=\"1\" Contrast=\"1\" CalibrationScreensShown=\"0\" HDRCalibrationScreensShown=\"0\" GammaRamp=\"1\" HDRReferenceWhiteNits=\"300\" AllowAsynchShaderLoading=\"1\">",
						string.Concat(new string[] { "\t\t<VideoModeProfileFullscreen adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"0\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" ", this.deviceID }),
						string.Concat(new string[] { "\t\t<VideoModeProfileWindow adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"3\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" refreshRateNumerator=\"59951\" refreshRateDenominator=\"1000\" />" }),
						"\t\t<CustomQuality>",
						"\t\t\t<quality EnvironmentQuality=\"low\" PostFxQuality=\"low\" TextureQuality=\"low\" VolumetricFogQuality=\"low\" WaterQuality=\"low\" VegetationQuality=\"low\" TerrainQuality=\"low\" GeometryQuality=\"low\" AmbientQuality=\"low\" ShadowQuality=\"low\" ShadowCinematicQuality=\"cinematic_pc\" ResolutionQuality=\"\" VSyncQuality=\"\" id=\"custom\" />",
						"\t\t</CustomQuality>",
						"",
						"\t\t<Water>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tDisableSplinesInReflection=\"0\"",
						"\t\t\t\tReflectionMaxDistanceScaleModifier=\"1.0\"",
						"\t\t\t\tWaterReflectionCoverRatioThreshold=\"0.005\"",
						"\t\t\t\tWaterReflectionQuality=\"0\"",
						"\t\t\t\tWaterRefraction=\"0\"",
						"\t\t\t\tReflectionTextureSizeX=\"64\"",
						"\t\t\t\tReflectionTextureSizeY=\"64\"",
						"\t\t\t\tOceanRealReflection=\"0\"",
						"\t\t\t\tDisableWater=\"0\"",
						"\t\t\t\tNumWaterReflectionPlanes=\"0\" />",
						"\t\t</Water>",
						"",
						"\t\t<Shadow>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tSunShadowFadeRange=\"3\"",
						"\t\t\t\tSunShadowRange0=\"2\"",
						"\t\t\t\tSunShadowRange1=\"7\"",
						"\t\t\t\tSunShadowRange2=\"20\"",
						"\t\t\t\tDisableShadowNightRange=\"0\"",
						"\t\t\t\tSunShadowNightRange=\"10\"",
						"\t\t\t\tShadowMapSize=\"8\"",
						"\t\t\t\tCascadedShadowMapSize=\"128\"",
						"\t\t\t\tRainShadowMapSize=\"16\"",
						"\t\t\t\tSoftShadows=\"0\"",
						"\t\t\t\tUse16BitFormat=\"0\"",
						"\t\t\t\tDisableShadow=\"1\"",
						"\t\t\t\tSunShadowSnap=\"1\"",
						"\t\t\t\tDisableShadowGeneration=\"0\"",
						"\t\t\t\tDisableShadowGenTerrain=\"1\"",
						"\t\t\t\tForceLeafSingleSlice=\"0\"",
						"\t\t\t\tDepthBiasCSM0=\"0.00075\"",
						"\t\t\t\tDepthBiasCSM1=\"0.00075\"",
						"\t\t\t\tDepthBiasCSM2=\"0.00075\"",
						"\t\t\t\tSlopeScaleDepthBiasCSM0=\"2\"",
						"\t\t\t\tSlopeScaleDepthBiasCSM1=\"2\"",
						"\t\t\t\tSlopeScaleDepthBiasCSM2=\"2\"",
						"\t\t\t\tSpotDepthBias=\"0.005\"",
						"\t\t\t\tSpotSlopeScaleDepthBias=\"20\"",
						"\t\t\t\tRainDepthBias=\"-0.002\"",
						"\t\t\t\tSpotsCastShadows=\"0\"",
						"\t\t\t\tReflectionShadowZBias=\"1.0f\" />",
						"\t\t</Shadow>",
						"",
						"\t\t<Texture>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tTextureFilteringQuality=\"10\"/>",
						"\t\t</Texture>",
						"",
						"\t\t<Environment>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tDisableSky=\"0\"",
						"\t\t\t\tRainNumSplashesPerSecond=\"25\"",
						"\t\t\t\tParticleUniformFogRangeThreshold=\"0.2\"",
						"\t\t\t\tDisableGodRayCloudMasking=\"1\"",
						"\t\t\t\tHighResCinematicParticles=\"0\" />",
						"\t\t</Environment>",
						"\t\t",
						"",
						"\t\t<Vegetation>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tRealTreeCsmExcludeMask=\"0\"",
						"\t\t\t\tClusterCsmExcludeMask=\"0\"",
						"\t\t\t\tUsePixelLeafNormals=\"0\"",
						"\t\t\t\tUseRealTreeHD=\"0\"",
						"\t\t\t\tUseNextGenLighting=\"0\"/>",
						"\t\t</Vegetation>",
						"",
						"\t\t<Terrain>",
						"\t\t\t<quality",
						"\t\t\t  id=\"low\"",
						"\t\t\t  TerrainLodScale=\"1.5\"",
						"\t\t\t  TerrainDetailViewDistance=\"200\"",
						"\t\t\t  TerrainDetailBlendViewDistance=\"64\"",
						"\t\t\t  TerrainComputeMaxErrorLODs=\"1\"",
						"\t\t\t  TerrainAffectedByMuzzleFlash=\"1\"",
						"\t\t\t  TerrainMaxErrorTolerance=\"0.025f\"",
						"\t\t\t  TerrainToTextureNormalStart=\"200.0f\"",
						"\t\t\t  TerrainToTextureNormalTransitionRange=\"75.0f\"",
						"\t\t\t  VistaTransitionStart=\"200.0f\"",
						"\t\t\t  VistaTransitionSpan=\"31.0f\"",
						"\t\t\t  />",
						"\t\t</Terrain>",
						"",
						"\t\t<TextureResolution>",
						"\t\t  <quality",
						"\t\t  id=\"low\"",
						"\t\t  SkipMips=\"1\"",
						"\t\t  AlwaysMip0Loading=\"0\"",
						"\t\t  />",
						"\t\t</TextureResolution>",
						"",
						"\t\t<Ambient>",
						"\t\t\t<quality",
						"\t\t\t  id=\"low\"",
						"\t\t\t  MaxHemiMapDistance=\"160\"",
						"\t\t\t  DisableSectorAmbient=\"0\"",
						"\t\t\t  ShadowMapSize=\"256\"",
						"\t\t\t  SectorCountX=\"12\"",
						"\t\t\t  SectorCountY=\"12\"",
						"\t\t\t  SectorTextureSize=\"48\"",
						"\t\t\t  BlurQuality=\"0\"",
						"\t\t\t  ShadowQuality=\"0\"",
						"\t\t\t  SSAOLevel=\"1\"",
						"\t\t\t  SSAOMaxDistance=\"30\"",
						"\t\t\t  />",
						"\t\t\t</Ambient>",
						"\t\t<DeferredAmbient>",
						"\t\t\t<quality",
						"\t\t\t  id=\"low\"",
						"\t\t\t  Enable=\"1\"",
						"\t\t\t  NumTexelsPerEdgeXY=\"32\"",
						"\t\t\t  NumTexelsPerEdgeZ=\"1\"",
						"\t\t\t  TessellationXY=\"8\"",
						"\t\t\t  TessellationZ=\"8\"",
						"\t\t\t  EnableDeferredReflectedAmbient=\"0\"",
						"\t\t\t  />",
						"\t\t</DeferredAmbient>",
						"",
						"\t\t<Lighting>",
						"\t\t\t<quality",
						"\t\t\t  id=\"low\"",
						"\t\t\t  HighQuality=\"0\"",
						"\t\t\t/>",
						"\t\t</Lighting>",
						"",
						"\t\t<DepthPass>",
						"\t\t\t<quality",
						"\t\t\t  id=\"low\"",
						"\t\t\t  DepthPassMode=\"full\"",
						"\t\t\t  DepthPassPartial=\"100\"",
						"\t\t\t  DepthPassNoPixel=\"1\"",
						"\t\t\t  DepthPassXenonAuto=\"0\"",
						"\t\t\t/>",
						"\t\t</DepthPass>",
						"\t\t",
						"\t\t<DeferredShadows>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tEnableDeferredShadows=\"1\"",
						"\t\t\t\tBlurKernelSize=\"0.0\"",
						"\t\t\t/>",
						"\t\t</DeferredShadows>",
						"\t</RenderProfile>",
						"\t<NetworkProfile VoiceChatEnabled=\"1\" CustomMapMaxUploadRateInBitsOnline=\"10240000\" SessionProvider=\"\" MaxUploadInbpsOnline=\"10240000\">",
						"\t\t<Accounts />",
						"\t</NetworkProfile>",
						"\t<GameProfile />",
						"\t<EngineProfile>",
						"\t\t<PhysicConfig QualitySetting=\"Low\" />",
						"\t\t<QcConfig GatherFPS=\"1\" GatherAICnt=\"1\" GatherDialogs=\"0\" IsQcTester=\"0\" />",
						"\t\t<InputConfig />",
						"\t\t<ZoneConfig />",
						"\t</EngineProfile>",
						"</GamerProfile>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<ProfileSpecificGameProfile")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<SoundProfile")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004C8 RID: 1224 RVA: 0x0010E098 File Offset: 0x0010C298
		private void FC5_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<GamerProfile>",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"\t\t<FireConfig QualitySetting=\"Low\" />",
						"\t\t<Statistics>",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t</Statistics>",
						"\t\t<IgeSettings ShowCollections=\"1\" ShowFog=\"1\" ShowShadow=\"1\" ShowWater=\"1\" ShowMapLimits=\"0\" ShowIcons=\"1\" ShowHelpers=\"1\" SoundEnabled=\"1\" ShowGrid=\"0\" GridResolution=\"64\" ShowBudgetGrid=\"0\" ShowClimbLedges=\"0\" ShowGrappleZones=\"0\" ShowNavmesh=\"0\" ShowNavmeshLayer=\"0\" ShowCovers=\"0\" ShowBoundingBoxes=\"1\" Invincible=\"0\" Invisible=\"0\" SnapObjectsToTerrain=\"1\" AutoSnapObjects=\"1\" AutoSnapObjectsRotation=\"1\" AutoSnapObjectsTerrain=\"1\" ConfirmDeleteObject=\"1\" CameraAutoScroll=\"1\" KillDistanceOverride=\"0\" ShowContextualStrategies=\"1\" ShowTriggers=\"1\" />",
						"\t</ProfileSpecificGameProfile>",
						"\t<RenderProfile GPU=\"0\" VideoModeProfile=\"1\" MainMonitor=\"0\" WindowPosition=\"0,0\" MultimonitorMode=\"2\" AntiAliasingMode=\"2\" MotionBlur=\"0\" Quality=\"custom\" QualityEditor=\"editor\" VSyncPreset=\"off\" FOV=\"72\" FrameRateLockEnabled=\"0\" FrameRateLock=\"60\" ResolutionScale=\"0.70\" CameraViewCenterOffsetX=\"0\" CameraViewCenterOffsetY=\"0\" HDTexturesEnabled=\"0\" DisableLoadingMip0=\"0\" GPUMaxBufferedFrames=\"0\" ShowFPS=\"0\" Brightness=\"1\" Contrast=\"1\" CalibrationScreensShown=\"0\" HDRCalibrationScreensShown=\"0\" GammaRamp=\"1\" HDRReferenceWhiteNits=\"300\" AllowAsynchShaderLoading=\"1\">",
						string.Concat(new string[] { "\t\t<VideoModeProfileFullscreen adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"0\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" ", this.deviceID }),
						string.Concat(new string[] { "\t\t<VideoModeProfileWindow adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"3\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" refreshRateNumerator=\"59951\" refreshRateDenominator=\"1000\" />" }),
						"\t\t<CustomQuality>",
						"\t\t\t<quality EnvironmentQuality=\"low\" PostFxQuality=\"low\" TextureQuality=\"low\" VolumetricFogQuality=\"low\" WaterQuality=\"low\" VegetationQuality=\"low\" TerrainQuality=\"low\" GeometryQuality=\"low\" AmbientQuality=\"low\" ShadowQuality=\"low\" ShadowCinematicQuality=\"cinematic_pc\" ResolutionQuality=\"\" VSyncQuality=\"\" id=\"custom\" />",
						"\t\t</CustomQuality>",
						"",
						"\t\t<Water>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tDisableSplinesInReflection=\"0\"",
						"\t\t\t\tReflectionMaxDistanceScaleModifier=\"1.0\"",
						"\t\t\t\tWaterReflectionCoverRatioThreshold=\"0.005\"",
						"\t\t\t\tWaterReflectionQuality=\"0\"",
						"\t\t\t\tWaterRefraction=\"0\"",
						"\t\t\t\tReflectionTextureSizeX=\"64\"",
						"\t\t\t\tReflectionTextureSizeY=\"64\"",
						"\t\t\t\tOceanRealReflection=\"0\"",
						"\t\t\t\tDisableWater=\"0\"",
						"\t\t\t\tNumWaterReflectionPlanes=\"0\" />",
						"\t\t</Water>",
						"",
						"\t\t<Shadow>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tSunShadowFadeRange=\"3\"",
						"\t\t\t\tSunShadowRange0=\"2\"",
						"\t\t\t\tSunShadowRange1=\"7\"",
						"\t\t\t\tSunShadowRange2=\"20\"",
						"\t\t\t\tDisableShadowNightRange=\"0\"",
						"\t\t\t\tSunShadowNightRange=\"10\"",
						"\t\t\t\tShadowMapSize=\"8\"",
						"\t\t\t\tCascadedShadowMapSize=\"128\"",
						"\t\t\t\tRainShadowMapSize=\"16\"",
						"\t\t\t\tSoftShadows=\"0\"",
						"\t\t\t\tUse16BitFormat=\"0\"",
						"\t\t\t\tDisableShadow=\"1\"",
						"\t\t\t\tSunShadowSnap=\"1\"",
						"\t\t\t\tDisableShadowGeneration=\"0\"",
						"\t\t\t\tDisableShadowGenTerrain=\"1\"",
						"\t\t\t\tForceLeafSingleSlice=\"0\"",
						"\t\t\t\tDepthBiasCSM0=\"0.00075\"",
						"\t\t\t\tDepthBiasCSM1=\"0.00075\"",
						"\t\t\t\tDepthBiasCSM2=\"0.00075\"",
						"\t\t\t\tSlopeScaleDepthBiasCSM0=\"2\"",
						"\t\t\t\tSlopeScaleDepthBiasCSM1=\"2\"",
						"\t\t\t\tSlopeScaleDepthBiasCSM2=\"2\"",
						"\t\t\t\tSpotDepthBias=\"0.005\"",
						"\t\t\t\tSpotSlopeScaleDepthBias=\"20\"",
						"\t\t\t\tRainDepthBias=\"-0.002\"",
						"\t\t\t\tSpotsCastShadows=\"0\"",
						"\t\t\t\tReflectionShadowZBias=\"1.0f\" />",
						"\t\t</Shadow>",
						"",
						"\t\t<Texture>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tTextureFilteringQuality=\"10\"/>",
						"\t\t</Texture>",
						"",
						"\t\t<Environment>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tDisableSky=\"0\"",
						"\t\t\t\tRainNumSplashesPerSecond=\"25\"",
						"\t\t\t\tParticleUniformFogRangeThreshold=\"0.2\"",
						"\t\t\t\tDisableGodRayCloudMasking=\"1\"",
						"\t\t\t\tHighResCinematicParticles=\"0\" />",
						"\t\t</Environment>",
						"\t\t",
						"",
						"\t\t<Vegetation>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tRealTreeCsmExcludeMask=\"0\"",
						"\t\t\t\tClusterCsmExcludeMask=\"0\"",
						"\t\t\t\tUsePixelLeafNormals=\"0\"",
						"\t\t\t\tUseRealTreeHD=\"0\"",
						"\t\t\t\tUseNextGenLighting=\"0\"/>",
						"\t\t</Vegetation>",
						"",
						"\t\t<Terrain>",
						"\t\t\t<quality",
						"\t\t\t  id=\"low\"",
						"\t\t\t  TerrainLodScale=\"1.5\"",
						"\t\t\t  TerrainDetailViewDistance=\"200\"",
						"\t\t\t  TerrainDetailBlendViewDistance=\"64\"",
						"\t\t\t  TerrainComputeMaxErrorLODs=\"1\"",
						"\t\t\t  TerrainAffectedByMuzzleFlash=\"1\"",
						"\t\t\t  TerrainMaxErrorTolerance=\"0.025f\"",
						"\t\t\t  TerrainToTextureNormalStart=\"200.0f\"",
						"\t\t\t  TerrainToTextureNormalTransitionRange=\"75.0f\"",
						"\t\t\t  VistaTransitionStart=\"200.0f\"",
						"\t\t\t  VistaTransitionSpan=\"31.0f\"",
						"\t\t\t  />",
						"\t\t</Terrain>",
						"",
						"\t\t<TextureResolution>",
						"\t\t  <quality",
						"\t\t  id=\"low\"",
						"\t\t  SkipMips=\"1\"",
						"\t\t  AlwaysMip0Loading=\"0\"",
						"\t\t  />",
						"\t\t</TextureResolution>",
						"",
						"\t\t<Ambient>",
						"\t\t\t<quality",
						"\t\t\t  id=\"low\"",
						"\t\t\t  MaxHemiMapDistance=\"160\"",
						"\t\t\t  DisableSectorAmbient=\"0\"",
						"\t\t\t  ShadowMapSize=\"256\"",
						"\t\t\t  SectorCountX=\"12\"",
						"\t\t\t  SectorCountY=\"12\"",
						"\t\t\t  SectorTextureSize=\"48\"",
						"\t\t\t  BlurQuality=\"0\"",
						"\t\t\t  ShadowQuality=\"0\"",
						"\t\t\t  SSAOLevel=\"1\"",
						"\t\t\t  SSAOMaxDistance=\"30\"",
						"\t\t\t  />",
						"\t\t\t</Ambient>",
						"\t\t<DeferredAmbient>",
						"\t\t\t<quality",
						"\t\t\t  id=\"low\"",
						"\t\t\t  Enable=\"1\"",
						"\t\t\t  NumTexelsPerEdgeXY=\"32\"",
						"\t\t\t  NumTexelsPerEdgeZ=\"1\"",
						"\t\t\t  TessellationXY=\"8\"",
						"\t\t\t  TessellationZ=\"8\"",
						"\t\t\t  EnableDeferredReflectedAmbient=\"0\"",
						"\t\t\t  />",
						"\t\t</DeferredAmbient>",
						"",
						"\t\t<Lighting>",
						"\t\t\t<quality",
						"\t\t\t  id=\"low\"",
						"\t\t\t  HighQuality=\"0\"",
						"\t\t\t/>",
						"\t\t</Lighting>",
						"",
						"\t\t<DepthPass>",
						"\t\t\t<quality",
						"\t\t\t  id=\"low\"",
						"\t\t\t  DepthPassMode=\"full\"",
						"\t\t\t  DepthPassPartial=\"100\"",
						"\t\t\t  DepthPassNoPixel=\"1\"",
						"\t\t\t  DepthPassXenonAuto=\"0\"",
						"\t\t\t/>",
						"\t\t</DepthPass>",
						"\t\t",
						"\t\t<DeferredShadows>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tEnableDeferredShadows=\"1\"",
						"\t\t\t\tBlurKernelSize=\"0.0\"",
						"\t\t\t/>",
						"\t\t</DeferredShadows>",
						"\t</RenderProfile>",
						"\t<NetworkProfile VoiceChatEnabled=\"1\" CustomMapMaxUploadRateInBitsOnline=\"10240000\" SessionProvider=\"\" MaxUploadInbpsOnline=\"10240000\">",
						"\t\t<Accounts />",
						"\t</NetworkProfile>",
						"\t<GameProfile />",
						"\t<EngineProfile>",
						"\t\t<PhysicConfig QualitySetting=\"Low\" />",
						"\t\t<QcConfig GatherFPS=\"1\" GatherAICnt=\"1\" GatherDialogs=\"0\" IsQcTester=\"0\" />",
						"\t\t<InputConfig />",
						"\t\t<ZoneConfig />",
						"\t</EngineProfile>",
						"</GamerProfile>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<ProfileSpecificGameProfile")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<SoundProfile")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004C9 RID: 1225 RVA: 0x0010EB50 File Offset: 0x0010CD50
		private void FC5_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<GamerProfile>",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"\t\t<FireConfig QualitySetting=\"Low\" />",
						"\t\t<Statistics>",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t</Statistics>",
						"\t\t<IgeSettings ShowCollections=\"1\" ShowFog=\"1\" ShowShadow=\"1\" ShowWater=\"1\" ShowMapLimits=\"0\" ShowIcons=\"1\" ShowHelpers=\"1\" SoundEnabled=\"1\" ShowGrid=\"0\" GridResolution=\"64\" ShowBudgetGrid=\"0\" ShowClimbLedges=\"0\" ShowGrappleZones=\"0\" ShowNavmesh=\"0\" ShowNavmeshLayer=\"0\" ShowCovers=\"0\" ShowBoundingBoxes=\"1\" Invincible=\"0\" Invisible=\"0\" SnapObjectsToTerrain=\"1\" AutoSnapObjects=\"1\" AutoSnapObjectsRotation=\"1\" AutoSnapObjectsTerrain=\"1\" ConfirmDeleteObject=\"1\" CameraAutoScroll=\"1\" KillDistanceOverride=\"0\" ShowContextualStrategies=\"1\" ShowTriggers=\"1\" />",
						"\t</ProfileSpecificGameProfile>",
						"\t<RenderProfile GPU=\"0\" VideoModeProfile=\"1\" MainMonitor=\"0\" WindowPosition=\"0,0\" MultimonitorMode=\"2\" AntiAliasingMode=\"2\" MotionBlur=\"0\" Quality=\"custom\" QualityEditor=\"editor\" VSyncPreset=\"off\" FOV=\"72\" FrameRateLockEnabled=\"0\" FrameRateLock=\"60\" ResolutionScale=\"0.80\" CameraViewCenterOffsetX=\"0\" CameraViewCenterOffsetY=\"0\" HDTexturesEnabled=\"0\" DisableLoadingMip0=\"0\" GPUMaxBufferedFrames=\"0\" ShowFPS=\"0\" Brightness=\"1\" Contrast=\"1\" CalibrationScreensShown=\"0\" HDRCalibrationScreensShown=\"0\" GammaRamp=\"1\" HDRReferenceWhiteNits=\"300\" AllowAsynchShaderLoading=\"1\">",
						string.Concat(new string[] { "\t\t<VideoModeProfileFullscreen adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"0\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" ", this.deviceID }),
						string.Concat(new string[] { "\t\t<VideoModeProfileWindow adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"3\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" refreshRateNumerator=\"59951\" refreshRateDenominator=\"1000\" />" }),
						"\t\t<CustomQuality>",
						"\t\t\t<quality EnvironmentQuality=\"low\" PostFxQuality=\"low\" TextureQuality=\"low\" VolumetricFogQuality=\"low\" WaterQuality=\"low\" VegetationQuality=\"low\" TerrainQuality=\"low\" GeometryQuality=\"low\" AmbientQuality=\"low\" ShadowQuality=\"low\" ShadowCinematicQuality=\"cinematic_pc\" ResolutionQuality=\"\" VSyncQuality=\"\" id=\"custom\" />",
						"\t\t</CustomQuality>",
						"",
						"\t\t<Water>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tDisableSplinesInReflection=\"0\"",
						"\t\t\t\tReflectionMaxDistanceScaleModifier=\"1.0\"",
						"\t\t\t\tWaterReflectionCoverRatioThreshold=\"0.005\"",
						"\t\t\t\tWaterReflectionQuality=\"0\"",
						"\t\t\t\tWaterRefraction=\"0\"",
						"\t\t\t\tReflectionTextureSizeX=\"64\"",
						"\t\t\t\tReflectionTextureSizeY=\"64\"",
						"\t\t\t\tOceanRealReflection=\"0\"",
						"\t\t\t\tDisableWater=\"0\"",
						"\t\t\t\tNumWaterReflectionPlanes=\"0\" />",
						"\t\t</Water>",
						"",
						"\t\t<Shadow>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tSunShadowFadeRange=\"3\"",
						"\t\t\t\tSunShadowRange0=\"2\"",
						"\t\t\t\tSunShadowRange1=\"7\"",
						"\t\t\t\tSunShadowRange2=\"20\"",
						"\t\t\t\tDisableShadowNightRange=\"0\"",
						"\t\t\t\tSunShadowNightRange=\"10\"",
						"\t\t\t\tShadowMapSize=\"8\"",
						"\t\t\t\tCascadedShadowMapSize=\"128\"",
						"\t\t\t\tRainShadowMapSize=\"16\"",
						"\t\t\t\tSoftShadows=\"0\"",
						"\t\t\t\tUse16BitFormat=\"0\"",
						"\t\t\t\tDisableShadow=\"1\"",
						"\t\t\t\tSunShadowSnap=\"1\"",
						"\t\t\t\tDisableShadowGeneration=\"0\"",
						"\t\t\t\tDisableShadowGenTerrain=\"1\"",
						"\t\t\t\tForceLeafSingleSlice=\"0\"",
						"\t\t\t\tDepthBiasCSM0=\"0.00075\"",
						"\t\t\t\tDepthBiasCSM1=\"0.00075\"",
						"\t\t\t\tDepthBiasCSM2=\"0.00075\"",
						"\t\t\t\tSlopeScaleDepthBiasCSM0=\"2\"",
						"\t\t\t\tSlopeScaleDepthBiasCSM1=\"2\"",
						"\t\t\t\tSlopeScaleDepthBiasCSM2=\"2\"",
						"\t\t\t\tSpotDepthBias=\"0.005\"",
						"\t\t\t\tSpotSlopeScaleDepthBias=\"20\"",
						"\t\t\t\tRainDepthBias=\"-0.002\"",
						"\t\t\t\tSpotsCastShadows=\"0\"",
						"\t\t\t\tReflectionShadowZBias=\"1.0f\" />",
						"\t\t</Shadow>",
						"",
						"\t\t<Texture>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tTextureFilteringQuality=\"10\"/>",
						"\t\t</Texture>",
						"",
						"\t\t<Environment>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tDisableSky=\"0\"",
						"\t\t\t\tRainNumSplashesPerSecond=\"25\"",
						"\t\t\t\tParticleUniformFogRangeThreshold=\"0.2\"",
						"\t\t\t\tDisableGodRayCloudMasking=\"1\"",
						"\t\t\t\tHighResCinematicParticles=\"0\" />",
						"\t\t</Environment>",
						"\t\t",
						"",
						"\t\t<Vegetation>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tRealTreeCsmExcludeMask=\"0\"",
						"\t\t\t\tClusterCsmExcludeMask=\"0\"",
						"\t\t\t\tUsePixelLeafNormals=\"0\"",
						"\t\t\t\tUseRealTreeHD=\"0\"",
						"\t\t\t\tUseNextGenLighting=\"0\"/>",
						"\t\t</Vegetation>",
						"",
						"\t\t<Terrain>",
						"\t\t\t<quality",
						"\t\t\t  id=\"low\"",
						"\t\t\t  TerrainLodScale=\"1.5\"",
						"\t\t\t  TerrainDetailViewDistance=\"200\"",
						"\t\t\t  TerrainDetailBlendViewDistance=\"64\"",
						"\t\t\t  TerrainComputeMaxErrorLODs=\"1\"",
						"\t\t\t  TerrainAffectedByMuzzleFlash=\"1\"",
						"\t\t\t  TerrainMaxErrorTolerance=\"0.025f\"",
						"\t\t\t  TerrainToTextureNormalStart=\"200.0f\"",
						"\t\t\t  TerrainToTextureNormalTransitionRange=\"75.0f\"",
						"\t\t\t  VistaTransitionStart=\"200.0f\"",
						"\t\t\t  VistaTransitionSpan=\"31.0f\"",
						"\t\t\t  />",
						"\t\t</Terrain>",
						"",
						"\t\t<TextureResolution>",
						"\t\t  <quality",
						"\t\t  id=\"low\"",
						"\t\t  SkipMips=\"1\"",
						"\t\t  AlwaysMip0Loading=\"0\"",
						"\t\t  />",
						"\t\t</TextureResolution>",
						"",
						"\t\t<Ambient>",
						"\t\t\t<quality",
						"\t\t\t  id=\"low\"",
						"\t\t\t  MaxHemiMapDistance=\"160\"",
						"\t\t\t  DisableSectorAmbient=\"0\"",
						"\t\t\t  ShadowMapSize=\"256\"",
						"\t\t\t  SectorCountX=\"12\"",
						"\t\t\t  SectorCountY=\"12\"",
						"\t\t\t  SectorTextureSize=\"48\"",
						"\t\t\t  BlurQuality=\"0\"",
						"\t\t\t  ShadowQuality=\"0\"",
						"\t\t\t  SSAOLevel=\"1\"",
						"\t\t\t  SSAOMaxDistance=\"30\"",
						"\t\t\t  />",
						"\t\t\t</Ambient>",
						"\t\t<DeferredAmbient>",
						"\t\t\t<quality",
						"\t\t\t  id=\"low\"",
						"\t\t\t  Enable=\"1\"",
						"\t\t\t  NumTexelsPerEdgeXY=\"32\"",
						"\t\t\t  NumTexelsPerEdgeZ=\"1\"",
						"\t\t\t  TessellationXY=\"8\"",
						"\t\t\t  TessellationZ=\"8\"",
						"\t\t\t  EnableDeferredReflectedAmbient=\"0\"",
						"\t\t\t  />",
						"\t\t</DeferredAmbient>",
						"",
						"\t\t<Lighting>",
						"\t\t\t<quality",
						"\t\t\t  id=\"low\"",
						"\t\t\t  HighQuality=\"0\"",
						"\t\t\t/>",
						"\t\t</Lighting>",
						"",
						"\t\t<DepthPass>",
						"\t\t\t<quality",
						"\t\t\t  id=\"low\"",
						"\t\t\t  DepthPassMode=\"full\"",
						"\t\t\t  DepthPassPartial=\"100\"",
						"\t\t\t  DepthPassNoPixel=\"1\"",
						"\t\t\t  DepthPassXenonAuto=\"0\"",
						"\t\t\t/>",
						"\t\t</DepthPass>",
						"\t\t",
						"\t\t<DeferredShadows>",
						"\t\t\t<quality",
						"\t\t\t\tid=\"low\"",
						"\t\t\t\tEnableDeferredShadows=\"1\"",
						"\t\t\t\tBlurKernelSize=\"0.0\"",
						"\t\t\t/>",
						"\t\t</DeferredShadows>",
						"\t</RenderProfile>",
						"\t<NetworkProfile VoiceChatEnabled=\"1\" CustomMapMaxUploadRateInBitsOnline=\"10240000\" SessionProvider=\"\" MaxUploadInbpsOnline=\"10240000\">",
						"\t\t<Accounts />",
						"\t</NetworkProfile>",
						"\t<GameProfile />",
						"\t<EngineProfile>",
						"\t\t<PhysicConfig QualitySetting=\"Low\" />",
						"\t\t<QcConfig GatherFPS=\"1\" GatherAICnt=\"1\" GatherDialogs=\"0\" IsQcTester=\"0\" />",
						"\t\t<InputConfig />",
						"\t\t<ZoneConfig />",
						"\t</EngineProfile>",
						"</GamerProfile>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<ProfileSpecificGameProfile")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<SoundProfile")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004CA RID: 1226 RVA: 0x0010F608 File Offset: 0x0010D808
		private void FC5_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<GamerProfile>",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"\t\t<FireConfig QualitySetting=\"Low\" />",
						"\t\t<Statistics>",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t</Statistics>",
						"\t\t<IgeSettings ShowCollections=\"1\" ShowFog=\"1\" ShowShadow=\"1\" ShowWater=\"1\" ShowMapLimits=\"0\" ShowIcons=\"1\" ShowHelpers=\"1\" SoundEnabled=\"1\" ShowGrid=\"0\" GridResolution=\"64\" ShowBudgetGrid=\"0\" ShowClimbLedges=\"0\" ShowGrappleZones=\"0\" ShowNavmesh=\"0\" ShowNavmeshLayer=\"0\" ShowCovers=\"0\" ShowBoundingBoxes=\"1\" Invincible=\"0\" Invisible=\"0\" SnapObjectsToTerrain=\"1\" AutoSnapObjects=\"1\" AutoSnapObjectsRotation=\"1\" AutoSnapObjectsTerrain=\"1\" ConfirmDeleteObject=\"1\" CameraAutoScroll=\"1\" KillDistanceOverride=\"0\" ShowContextualStrategies=\"1\" ShowTriggers=\"1\" />",
						"\t</ProfileSpecificGameProfile>",
						"\t<RenderProfile GPU=\"0\" VideoModeProfile=\"1\" MainMonitor=\"0\" WindowPosition=\"0,0\" MultimonitorMode=\"2\" AntiAliasingMode=\"2\" MotionBlur=\"0\" Quality=\"custom\" QualityEditor=\"editor\" VSyncPreset=\"off\" FOV=\"72\" FrameRateLockEnabled=\"0\" FrameRateLock=\"60\" ResolutionScale=\"0.90\" CameraViewCenterOffsetX=\"0\" CameraViewCenterOffsetY=\"0\" HDTexturesEnabled=\"0\" DisableLoadingMip0=\"0\" GPUMaxBufferedFrames=\"0\" ShowFPS=\"0\" Brightness=\"1\" Contrast=\"1\" CalibrationScreensShown=\"0\" HDRCalibrationScreensShown=\"0\" GammaRamp=\"1\" HDRReferenceWhiteNits=\"300\" AllowAsynchShaderLoading=\"1\">",
						string.Concat(new string[] { "\t\t<VideoModeProfileFullscreen adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"0\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" ", this.deviceID }),
						string.Concat(new string[] { "\t\t<VideoModeProfileWindow adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"3\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" refreshRateNumerator=\"59951\" refreshRateDenominator=\"1000\" />" }),
						"\t\t<CustomQuality>",
						"\t\t\t<quality EnvironmentQuality=\"low\" PostFxQuality=\"low\" TextureQuality=\"low\" VolumetricFogQuality=\"low\" WaterQuality=\"low\" VegetationQuality=\"low\" TerrainQuality=\"low\" GeometryQuality=\"low\" AmbientQuality=\"low\" ShadowQuality=\"low\" ShadowCinematicQuality=\"cinematic_pc\" ResolutionQuality=\"\" VSyncQuality=\"\" id=\"custom\" />",
						"\t\t</CustomQuality>",
						"\t</RenderProfile>",
						"\t<NetworkProfile VoiceChatEnabled=\"1\" CustomMapMaxUploadRateInBitsOnline=\"10240000\" SessionProvider=\"\" MaxUploadInbpsOnline=\"10240000\">",
						"\t\t<Accounts />",
						"\t</NetworkProfile>",
						"\t<GameProfile />",
						"\t<EngineProfile>",
						"\t\t<PhysicConfig QualitySetting=\"Low\" />",
						"\t\t<QcConfig GatherFPS=\"1\" GatherAICnt=\"1\" GatherDialogs=\"0\" IsQcTester=\"0\" />",
						"\t\t<InputConfig />",
						"\t\t<ZoneConfig />",
						"\t</EngineProfile>",
						"</GamerProfile>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<ProfileSpecificGameProfile")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<SoundProfile")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004CB RID: 1227 RVA: 0x0010F9B8 File Offset: 0x0010DBB8
		private void FC5_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<GamerProfile>",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"\t\t<FireConfig QualitySetting=\"Low\" />",
						"\t\t<Statistics>",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t</Statistics>",
						"\t\t<IgeSettings ShowCollections=\"1\" ShowFog=\"1\" ShowShadow=\"1\" ShowWater=\"1\" ShowMapLimits=\"0\" ShowIcons=\"1\" ShowHelpers=\"1\" SoundEnabled=\"1\" ShowGrid=\"0\" GridResolution=\"64\" ShowBudgetGrid=\"0\" ShowClimbLedges=\"0\" ShowGrappleZones=\"0\" ShowNavmesh=\"0\" ShowNavmeshLayer=\"0\" ShowCovers=\"0\" ShowBoundingBoxes=\"1\" Invincible=\"0\" Invisible=\"0\" SnapObjectsToTerrain=\"1\" AutoSnapObjects=\"1\" AutoSnapObjectsRotation=\"1\" AutoSnapObjectsTerrain=\"1\" ConfirmDeleteObject=\"1\" CameraAutoScroll=\"1\" KillDistanceOverride=\"0\" ShowContextualStrategies=\"1\" ShowTriggers=\"1\" />",
						"\t</ProfileSpecificGameProfile>",
						"\t<RenderProfile GPU=\"0\" VideoModeProfile=\"1\" MainMonitor=\"0\" WindowPosition=\"0,0\" MultimonitorMode=\"2\" AntiAliasingMode=\"2\" MotionBlur=\"0\" Quality=\"custom\" QualityEditor=\"editor\" VSyncPreset=\"off\" FOV=\"72\" FrameRateLockEnabled=\"0\" FrameRateLock=\"60\" ResolutionScale=\"0.95\" CameraViewCenterOffsetX=\"0\" CameraViewCenterOffsetY=\"0\" HDTexturesEnabled=\"0\" DisableLoadingMip0=\"0\" GPUMaxBufferedFrames=\"0\" ShowFPS=\"0\" Brightness=\"1\" Contrast=\"1\" CalibrationScreensShown=\"0\" HDRCalibrationScreensShown=\"0\" GammaRamp=\"1\" HDRReferenceWhiteNits=\"300\" AllowAsynchShaderLoading=\"1\">",
						string.Concat(new string[] { "\t\t<VideoModeProfileFullscreen adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"0\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" ", this.deviceID }),
						string.Concat(new string[] { "\t\t<VideoModeProfileWindow adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"3\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" refreshRateNumerator=\"59951\" refreshRateDenominator=\"1000\" />" }),
						"\t\t<CustomQuality>",
						"\t\t\t<quality EnvironmentQuality=\"low\" PostFxQuality=\"low\" TextureQuality=\"low\" VolumetricFogQuality=\"low\" WaterQuality=\"low\" VegetationQuality=\"low\" TerrainQuality=\"low\" GeometryQuality=\"low\" AmbientQuality=\"low\" ShadowQuality=\"low\" ShadowCinematicQuality=\"cinematic_pc\" ResolutionQuality=\"\" VSyncQuality=\"\" id=\"custom\" />",
						"\t\t</CustomQuality>",
						"\t</RenderProfile>",
						"\t<NetworkProfile VoiceChatEnabled=\"1\" CustomMapMaxUploadRateInBitsOnline=\"10240000\" SessionProvider=\"\" MaxUploadInbpsOnline=\"10240000\">",
						"\t\t<Accounts />",
						"\t</NetworkProfile>",
						"\t<GameProfile />",
						"\t<EngineProfile>",
						"\t\t<PhysicConfig QualitySetting=\"Low\" />",
						"\t\t<QcConfig GatherFPS=\"1\" GatherAICnt=\"1\" GatherDialogs=\"0\" IsQcTester=\"0\" />",
						"\t\t<InputConfig />",
						"\t\t<ZoneConfig />",
						"\t</EngineProfile>",
						"</GamerProfile>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<ProfileSpecificGameProfile")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<SoundProfile")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004CC RID: 1228 RVA: 0x0010FD68 File Offset: 0x0010DF68
		private void FC5_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<GamerProfile>",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"\t\t<FireConfig QualitySetting=\"Low\" />",
						"\t\t<Statistics>",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t\t<Stat Value=\"0\" />",
						"\t\t</Statistics>",
						"\t\t<IgeSettings ShowCollections=\"1\" ShowFog=\"1\" ShowShadow=\"1\" ShowWater=\"1\" ShowMapLimits=\"0\" ShowIcons=\"1\" ShowHelpers=\"1\" SoundEnabled=\"1\" ShowGrid=\"0\" GridResolution=\"64\" ShowBudgetGrid=\"0\" ShowClimbLedges=\"0\" ShowGrappleZones=\"0\" ShowNavmesh=\"0\" ShowNavmeshLayer=\"0\" ShowCovers=\"0\" ShowBoundingBoxes=\"1\" Invincible=\"0\" Invisible=\"0\" SnapObjectsToTerrain=\"1\" AutoSnapObjects=\"1\" AutoSnapObjectsRotation=\"1\" AutoSnapObjectsTerrain=\"1\" ConfirmDeleteObject=\"1\" CameraAutoScroll=\"1\" KillDistanceOverride=\"0\" ShowContextualStrategies=\"1\" ShowTriggers=\"1\" />",
						"\t</ProfileSpecificGameProfile>",
						"\t<RenderProfile GPU=\"0\" VideoModeProfile=\"1\" MainMonitor=\"0\" WindowPosition=\"0,0\" MultimonitorMode=\"2\" AntiAliasingMode=\"2\" MotionBlur=\"0\" Quality=\"custom\" QualityEditor=\"editor\" VSyncPreset=\"off\" FOV=\"72\" FrameRateLockEnabled=\"0\" FrameRateLock=\"60\" ResolutionScale=\"1.00\" CameraViewCenterOffsetX=\"0\" CameraViewCenterOffsetY=\"0\" HDTexturesEnabled=\"0\" DisableLoadingMip0=\"0\" GPUMaxBufferedFrames=\"0\" ShowFPS=\"0\" Brightness=\"1\" Contrast=\"1\" CalibrationScreensShown=\"0\" HDRCalibrationScreensShown=\"0\" GammaRamp=\"1\" HDRReferenceWhiteNits=\"300\" AllowAsynchShaderLoading=\"1\">",
						string.Concat(new string[] { "\t\t<VideoModeProfileFullscreen adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"0\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" ", this.deviceID }),
						string.Concat(new string[] { "\t\t<VideoModeProfileWindow adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"3\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" refreshRateNumerator=\"59951\" refreshRateDenominator=\"1000\" />" }),
						"\t\t<CustomQuality>",
						"\t\t\t<quality EnvironmentQuality=\"low\" PostFxQuality=\"low\" TextureQuality=\"low\" VolumetricFogQuality=\"low\" WaterQuality=\"low\" VegetationQuality=\"low\" TerrainQuality=\"low\" GeometryQuality=\"low\" AmbientQuality=\"low\" ShadowQuality=\"low\" ShadowCinematicQuality=\"cinematic_pc\" ResolutionQuality=\"\" VSyncQuality=\"\" id=\"custom\" />",
						"\t\t</CustomQuality>",
						"\t</RenderProfile>",
						"\t<NetworkProfile VoiceChatEnabled=\"1\" CustomMapMaxUploadRateInBitsOnline=\"10240000\" SessionProvider=\"\" MaxUploadInbpsOnline=\"10240000\">",
						"\t\t<Accounts />",
						"\t</NetworkProfile>",
						"\t<GameProfile />",
						"\t<EngineProfile>",
						"\t\t<PhysicConfig QualitySetting=\"Low\" />",
						"\t\t<QcConfig GatherFPS=\"1\" GatherAICnt=\"1\" GatherDialogs=\"0\" IsQcTester=\"0\" />",
						"\t\t<InputConfig />",
						"\t\t<ZoneConfig />",
						"\t</EngineProfile>",
						"</GamerProfile>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<ProfileSpecificGameProfile")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<SoundProfile")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004CD RID: 1229 RVA: 0x00110118 File Offset: 0x0010E318
		private void FC6_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<GamerProfile IsFirstStartupFlow=\"0\">",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"\t\t<FireConfig QualitySetting=\"low\" />",
						"\t</ProfileSpecificGameProfile>",
						"\t<RenderProfile GPU=\"0\" VideoModeProfile=\"1\" MainMonitor=\"0\" WindowPosition=\"320,180\" MultimonitorMode=\"1\" AntiAliasingMode=\"2\" MotionBlur=\"0\" Quality=\"low\" QualityEditor=\"editor\" VSyncPreset=\"off\" FOV=\"72\" FrameRateLockEnabled=\"0\" FrameRateLockValue=\"60\" ResolutionScale=\"0.60\" DynamicResolutionEnabled=\"0\" DynamicResolutionFrameRateLimit=\"30\" CameraViewCenterOffsetX=\"0\" CameraViewCenterOffsetY=\"0\" HDTexturesEnabled=\"0\" DisableLoadingMip0=\"0\" ShowFPS=\"0\" Brightness=\"1\" Contrast=\"1\" CalibrationScreensShown=\"0\" HDRCalibrationScreensShown=\"0\" GammaRamp=\"1\" HDRReferenceWhiteNits=\"200\" HDROutputMaximumNits=\"600\" DxrReflections=\"0\" DxrShadows=\"0\" AllowAsynchShaderLoading=\"1\" ColorblindnessMode=\"0\" CustomColorblindBaseMode=\"2\" LaserSightColor=\"15009800\" SubtitlesPlayerNameColor=\"16756276\" SubtitlesEnemyNameColor=\"14426144\" SubtitlesFriendlyNameColor=\"5406449\" HudGroupOneColor=\"14426144\" HudGroupTwoColor=\"1542796\" HudGroupThreeColor=\"16756276\" ReticleColor=\"16777215\" EnemyOutlineColor=\"16690739\" LootOutlineColor=\"16777215\" AssaultsHeatMeterHotColor=\"15009800\" AssaultsHeatMeterNeutralColor=\"16580604\" AssaultsHeatMeterColdColor=\"64250\" ReticleOnEnemyColor=\"14491425\" ReticleADSColor=\"14491425\" RoadsOnTheMapColor=\"3625136\" WorldMapGpsPathColor=\"5064136\" IsLpmEnabled=\"0\" VrsParticleBufferEnabled=\"2167103348\">",
						string.Concat(new string[] { "\t\t<VideoModeProfileFullscreen adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"0\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" ", this.deviceID }),
						string.Concat(new string[] { "\t\t<VideoModeProfileWindow adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"3\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" refreshRateNumerator=\"0\" refreshRateDenominator=\"1\" />" }),
						"\t\t<CustomQuality>",
						"\t\t\t<quality EnvironmentQuality=\"low\" PostFxQuality=\"low\" TextureQuality=\"low\" VolumetricFogQuality=\"low\" VolumetricCloudsQuality=\"low\" WaterQuality=\"low\" VegetationQuality=\"low\" TerrainQuality=\"low\" GeometryQuality=\"low\" AmbientQuality=\"low\" ShadowQuality=\"low\" ShadowCinematicQuality=\"cinematic_pc\" ResolutionQuality=\"\" VSyncQuality=\"\" VSyncCinematicQuality=\"\" id=\"custom\" />",
						"\t\t</CustomQuality>",
						"\t\t<ResolutionConfig FidelityFxCASEnabled=\"1\" />",
						"\t</RenderProfile>",
						"\t<NetworkProfile VoiceChatEnabled=\"1\" CustomMapMaxUploadRateInBitsOnline=\"10240000\" SessionProvider=\"\" MaxUploadInbpsOnline=\"10240000\">",
						"\t\t<Accounts />",
						"\t</NetworkProfile>",
						"\t<GameProfile>",
						"\t\t<SeenNewsItems />",
						"\t</GameProfile>",
						"\t<EngineProfile>",
						"\t\t<PhysicConfig QualitySetting=\"low\" />",
						"\t\t<QcConfig GatherFPS=\"1\" GatherAICnt=\"1\" GatherDialogs=\"0\" IsQcTester=\"0\" />",
						"\t</EngineProfile>",
						"</GamerProfile>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<ProfileSpecificGameProfile")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<SoundProfile")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004CE RID: 1230 RVA: 0x00110444 File Offset: 0x0010E644
		private void FC6_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<GamerProfile IsFirstStartupFlow=\"0\">",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"\t\t<FireConfig QualitySetting=\"low\" />",
						"\t</ProfileSpecificGameProfile>",
						"\t<RenderProfile GPU=\"0\" VideoModeProfile=\"1\" MainMonitor=\"0\" WindowPosition=\"320,180\" MultimonitorMode=\"1\" AntiAliasingMode=\"2\" MotionBlur=\"0\" Quality=\"low\" QualityEditor=\"editor\" VSyncPreset=\"off\" FOV=\"72\" FrameRateLockEnabled=\"0\" FrameRateLockValue=\"60\" ResolutionScale=\"0.70\" DynamicResolutionEnabled=\"0\" DynamicResolutionFrameRateLimit=\"30\" CameraViewCenterOffsetX=\"0\" CameraViewCenterOffsetY=\"0\" HDTexturesEnabled=\"0\" DisableLoadingMip0=\"0\" ShowFPS=\"0\" Brightness=\"1\" Contrast=\"1\" CalibrationScreensShown=\"0\" HDRCalibrationScreensShown=\"0\" GammaRamp=\"1\" HDRReferenceWhiteNits=\"200\" HDROutputMaximumNits=\"600\" DxrReflections=\"0\" DxrShadows=\"0\" AllowAsynchShaderLoading=\"1\" ColorblindnessMode=\"0\" CustomColorblindBaseMode=\"2\" LaserSightColor=\"15009800\" SubtitlesPlayerNameColor=\"16756276\" SubtitlesEnemyNameColor=\"14426144\" SubtitlesFriendlyNameColor=\"5406449\" HudGroupOneColor=\"14426144\" HudGroupTwoColor=\"1542796\" HudGroupThreeColor=\"16756276\" ReticleColor=\"16777215\" EnemyOutlineColor=\"16690739\" LootOutlineColor=\"16777215\" AssaultsHeatMeterHotColor=\"15009800\" AssaultsHeatMeterNeutralColor=\"16580604\" AssaultsHeatMeterColdColor=\"64250\" ReticleOnEnemyColor=\"14491425\" ReticleADSColor=\"14491425\" RoadsOnTheMapColor=\"3625136\" WorldMapGpsPathColor=\"5064136\" IsLpmEnabled=\"0\" VrsParticleBufferEnabled=\"2167103348\">",
						string.Concat(new string[] { "\t\t<VideoModeProfileFullscreen adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"0\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" ", this.deviceID }),
						string.Concat(new string[] { "\t\t<VideoModeProfileWindow adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"3\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" refreshRateNumerator=\"0\" refreshRateDenominator=\"1\" />" }),
						"\t\t<CustomQuality>",
						"\t\t\t<quality EnvironmentQuality=\"low\" PostFxQuality=\"low\" TextureQuality=\"low\" VolumetricFogQuality=\"low\" VolumetricCloudsQuality=\"low\" WaterQuality=\"low\" VegetationQuality=\"low\" TerrainQuality=\"low\" GeometryQuality=\"low\" AmbientQuality=\"low\" ShadowQuality=\"low\" ShadowCinematicQuality=\"cinematic_pc\" ResolutionQuality=\"\" VSyncQuality=\"\" VSyncCinematicQuality=\"\" id=\"custom\" />",
						"\t\t</CustomQuality>",
						"\t\t<ResolutionConfig FidelityFxCASEnabled=\"1\" />",
						"\t</RenderProfile>",
						"\t<NetworkProfile VoiceChatEnabled=\"1\" CustomMapMaxUploadRateInBitsOnline=\"10240000\" SessionProvider=\"\" MaxUploadInbpsOnline=\"10240000\">",
						"\t\t<Accounts />",
						"\t</NetworkProfile>",
						"\t<GameProfile>",
						"\t\t<SeenNewsItems />",
						"\t</GameProfile>",
						"\t<EngineProfile>",
						"\t\t<PhysicConfig QualitySetting=\"low\" />",
						"\t\t<QcConfig GatherFPS=\"1\" GatherAICnt=\"1\" GatherDialogs=\"0\" IsQcTester=\"0\" />",
						"\t</EngineProfile>",
						"</GamerProfile>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<ProfileSpecificGameProfile")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<SoundProfile")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004CF RID: 1231 RVA: 0x00110770 File Offset: 0x0010E970
		private void FC6_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<GamerProfile IsFirstStartupFlow=\"0\">",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"\t\t<FireConfig QualitySetting=\"low\" />",
						"\t</ProfileSpecificGameProfile>",
						"\t<RenderProfile GPU=\"0\" VideoModeProfile=\"1\" MainMonitor=\"0\" WindowPosition=\"320,180\" MultimonitorMode=\"1\" AntiAliasingMode=\"2\" MotionBlur=\"0\" Quality=\"low\" QualityEditor=\"editor\" VSyncPreset=\"off\" FOV=\"72\" FrameRateLockEnabled=\"0\" FrameRateLockValue=\"60\" ResolutionScale=\"0.80\" DynamicResolutionEnabled=\"0\" DynamicResolutionFrameRateLimit=\"30\" CameraViewCenterOffsetX=\"0\" CameraViewCenterOffsetY=\"0\" HDTexturesEnabled=\"0\" DisableLoadingMip0=\"0\" ShowFPS=\"0\" Brightness=\"1\" Contrast=\"1\" CalibrationScreensShown=\"0\" HDRCalibrationScreensShown=\"0\" GammaRamp=\"1\" HDRReferenceWhiteNits=\"200\" HDROutputMaximumNits=\"600\" DxrReflections=\"0\" DxrShadows=\"0\" AllowAsynchShaderLoading=\"1\" ColorblindnessMode=\"0\" CustomColorblindBaseMode=\"2\" LaserSightColor=\"15009800\" SubtitlesPlayerNameColor=\"16756276\" SubtitlesEnemyNameColor=\"14426144\" SubtitlesFriendlyNameColor=\"5406449\" HudGroupOneColor=\"14426144\" HudGroupTwoColor=\"1542796\" HudGroupThreeColor=\"16756276\" ReticleColor=\"16777215\" EnemyOutlineColor=\"16690739\" LootOutlineColor=\"16777215\" AssaultsHeatMeterHotColor=\"15009800\" AssaultsHeatMeterNeutralColor=\"16580604\" AssaultsHeatMeterColdColor=\"64250\" ReticleOnEnemyColor=\"14491425\" ReticleADSColor=\"14491425\" RoadsOnTheMapColor=\"3625136\" WorldMapGpsPathColor=\"5064136\" IsLpmEnabled=\"0\" VrsParticleBufferEnabled=\"2167103348\">",
						string.Concat(new string[] { "\t\t<VideoModeProfileFullscreen adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"0\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" ", this.deviceID }),
						string.Concat(new string[] { "\t\t<VideoModeProfileWindow adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"3\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" refreshRateNumerator=\"0\" refreshRateDenominator=\"1\" />" }),
						"\t\t<CustomQuality>",
						"\t\t\t<quality EnvironmentQuality=\"low\" PostFxQuality=\"low\" TextureQuality=\"low\" VolumetricFogQuality=\"low\" VolumetricCloudsQuality=\"low\" WaterQuality=\"low\" VegetationQuality=\"low\" TerrainQuality=\"low\" GeometryQuality=\"low\" AmbientQuality=\"low\" ShadowQuality=\"low\" ShadowCinematicQuality=\"cinematic_pc\" ResolutionQuality=\"\" VSyncQuality=\"\" VSyncCinematicQuality=\"\" id=\"custom\" />",
						"\t\t</CustomQuality>",
						"\t\t<ResolutionConfig FidelityFxCASEnabled=\"1\" />",
						"\t</RenderProfile>",
						"\t<NetworkProfile VoiceChatEnabled=\"1\" CustomMapMaxUploadRateInBitsOnline=\"10240000\" SessionProvider=\"\" MaxUploadInbpsOnline=\"10240000\">",
						"\t\t<Accounts />",
						"\t</NetworkProfile>",
						"\t<GameProfile>",
						"\t\t<SeenNewsItems />",
						"\t</GameProfile>",
						"\t<EngineProfile>",
						"\t\t<PhysicConfig QualitySetting=\"low\" />",
						"\t\t<QcConfig GatherFPS=\"1\" GatherAICnt=\"1\" GatherDialogs=\"0\" IsQcTester=\"0\" />",
						"\t</EngineProfile>",
						"</GamerProfile>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<ProfileSpecificGameProfile")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<SoundProfile")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004D0 RID: 1232 RVA: 0x00110A9C File Offset: 0x0010EC9C
		private void FC6_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<GamerProfile IsFirstStartupFlow=\"0\">",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"\t\t<FireConfig QualitySetting=\"low\" />",
						"\t</ProfileSpecificGameProfile>",
						"\t<RenderProfile GPU=\"0\" VideoModeProfile=\"1\" MainMonitor=\"0\" WindowPosition=\"320,180\" MultimonitorMode=\"1\" AntiAliasingMode=\"2\" MotionBlur=\"0\" Quality=\"low\" QualityEditor=\"editor\" VSyncPreset=\"off\" FOV=\"72\" FrameRateLockEnabled=\"0\" FrameRateLockValue=\"60\" ResolutionScale=\"0.90\" DynamicResolutionEnabled=\"0\" DynamicResolutionFrameRateLimit=\"30\" CameraViewCenterOffsetX=\"0\" CameraViewCenterOffsetY=\"0\" HDTexturesEnabled=\"0\" DisableLoadingMip0=\"0\" ShowFPS=\"0\" Brightness=\"1\" Contrast=\"1\" CalibrationScreensShown=\"0\" HDRCalibrationScreensShown=\"0\" GammaRamp=\"1\" HDRReferenceWhiteNits=\"200\" HDROutputMaximumNits=\"600\" DxrReflections=\"0\" DxrShadows=\"0\" AllowAsynchShaderLoading=\"1\" ColorblindnessMode=\"0\" CustomColorblindBaseMode=\"2\" LaserSightColor=\"15009800\" SubtitlesPlayerNameColor=\"16756276\" SubtitlesEnemyNameColor=\"14426144\" SubtitlesFriendlyNameColor=\"5406449\" HudGroupOneColor=\"14426144\" HudGroupTwoColor=\"1542796\" HudGroupThreeColor=\"16756276\" ReticleColor=\"16777215\" EnemyOutlineColor=\"16690739\" LootOutlineColor=\"16777215\" AssaultsHeatMeterHotColor=\"15009800\" AssaultsHeatMeterNeutralColor=\"16580604\" AssaultsHeatMeterColdColor=\"64250\" ReticleOnEnemyColor=\"14491425\" ReticleADSColor=\"14491425\" RoadsOnTheMapColor=\"3625136\" WorldMapGpsPathColor=\"5064136\" IsLpmEnabled=\"0\" VrsParticleBufferEnabled=\"2167103348\">",
						string.Concat(new string[] { "\t\t<VideoModeProfileFullscreen adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"0\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" ", this.deviceID }),
						string.Concat(new string[] { "\t\t<VideoModeProfileWindow adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"3\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" refreshRateNumerator=\"0\" refreshRateDenominator=\"1\" />" }),
						"\t\t<CustomQuality>",
						"\t\t\t<quality EnvironmentQuality=\"low\" PostFxQuality=\"low\" TextureQuality=\"low\" VolumetricFogQuality=\"low\" VolumetricCloudsQuality=\"low\" WaterQuality=\"low\" VegetationQuality=\"low\" TerrainQuality=\"low\" GeometryQuality=\"low\" AmbientQuality=\"low\" ShadowQuality=\"low\" ShadowCinematicQuality=\"cinematic_pc\" ResolutionQuality=\"\" VSyncQuality=\"\" VSyncCinematicQuality=\"\" id=\"custom\" />",
						"\t\t</CustomQuality>",
						"\t\t<ResolutionConfig FidelityFxCASEnabled=\"1\" />",
						"\t</RenderProfile>",
						"\t<NetworkProfile VoiceChatEnabled=\"1\" CustomMapMaxUploadRateInBitsOnline=\"10240000\" SessionProvider=\"\" MaxUploadInbpsOnline=\"10240000\">",
						"\t\t<Accounts />",
						"\t</NetworkProfile>",
						"\t<GameProfile>",
						"\t\t<SeenNewsItems />",
						"\t</GameProfile>",
						"\t<EngineProfile>",
						"\t\t<PhysicConfig QualitySetting=\"low\" />",
						"\t\t<QcConfig GatherFPS=\"1\" GatherAICnt=\"1\" GatherDialogs=\"0\" IsQcTester=\"0\" />",
						"\t</EngineProfile>",
						"</GamerProfile>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<ProfileSpecificGameProfile")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<SoundProfile")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004D1 RID: 1233 RVA: 0x00110DC8 File Offset: 0x0010EFC8
		private void FC6_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<GamerProfile IsFirstStartupFlow=\"0\">",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"\t\t<FireConfig QualitySetting=\"low\" />",
						"\t</ProfileSpecificGameProfile>",
						"\t<RenderProfile GPU=\"0\" VideoModeProfile=\"1\" MainMonitor=\"0\" WindowPosition=\"320,180\" MultimonitorMode=\"1\" AntiAliasingMode=\"2\" MotionBlur=\"0\" Quality=\"low\" QualityEditor=\"editor\" VSyncPreset=\"off\" FOV=\"72\" FrameRateLockEnabled=\"0\" FrameRateLockValue=\"60\" ResolutionScale=\"0.95\" DynamicResolutionEnabled=\"0\" DynamicResolutionFrameRateLimit=\"30\" CameraViewCenterOffsetX=\"0\" CameraViewCenterOffsetY=\"0\" HDTexturesEnabled=\"0\" DisableLoadingMip0=\"0\" ShowFPS=\"0\" Brightness=\"1\" Contrast=\"1\" CalibrationScreensShown=\"0\" HDRCalibrationScreensShown=\"0\" GammaRamp=\"1\" HDRReferenceWhiteNits=\"200\" HDROutputMaximumNits=\"600\" DxrReflections=\"0\" DxrShadows=\"0\" AllowAsynchShaderLoading=\"1\" ColorblindnessMode=\"0\" CustomColorblindBaseMode=\"2\" LaserSightColor=\"15009800\" SubtitlesPlayerNameColor=\"16756276\" SubtitlesEnemyNameColor=\"14426144\" SubtitlesFriendlyNameColor=\"5406449\" HudGroupOneColor=\"14426144\" HudGroupTwoColor=\"1542796\" HudGroupThreeColor=\"16756276\" ReticleColor=\"16777215\" EnemyOutlineColor=\"16690739\" LootOutlineColor=\"16777215\" AssaultsHeatMeterHotColor=\"15009800\" AssaultsHeatMeterNeutralColor=\"16580604\" AssaultsHeatMeterColdColor=\"64250\" ReticleOnEnemyColor=\"14491425\" ReticleADSColor=\"14491425\" RoadsOnTheMapColor=\"3625136\" WorldMapGpsPathColor=\"5064136\" IsLpmEnabled=\"0\" VrsParticleBufferEnabled=\"2167103348\">",
						string.Concat(new string[] { "\t\t<VideoModeProfileFullscreen adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"0\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" ", this.deviceID }),
						string.Concat(new string[] { "\t\t<VideoModeProfileWindow adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"3\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" refreshRateNumerator=\"0\" refreshRateDenominator=\"1\" />" }),
						"\t\t<CustomQuality>",
						"\t\t\t<quality EnvironmentQuality=\"low\" PostFxQuality=\"low\" TextureQuality=\"low\" VolumetricFogQuality=\"low\" VolumetricCloudsQuality=\"low\" WaterQuality=\"low\" VegetationQuality=\"low\" TerrainQuality=\"low\" GeometryQuality=\"low\" AmbientQuality=\"low\" ShadowQuality=\"low\" ShadowCinematicQuality=\"cinematic_pc\" ResolutionQuality=\"\" VSyncQuality=\"\" VSyncCinematicQuality=\"\" id=\"custom\" />",
						"\t\t</CustomQuality>",
						"\t\t<ResolutionConfig FidelityFxCASEnabled=\"1\" />",
						"\t</RenderProfile>",
						"\t<NetworkProfile VoiceChatEnabled=\"1\" CustomMapMaxUploadRateInBitsOnline=\"10240000\" SessionProvider=\"\" MaxUploadInbpsOnline=\"10240000\">",
						"\t\t<Accounts />",
						"\t</NetworkProfile>",
						"\t<GameProfile>",
						"\t\t<SeenNewsItems />",
						"\t</GameProfile>",
						"\t<EngineProfile>",
						"\t\t<PhysicConfig QualitySetting=\"low\" />",
						"\t\t<QcConfig GatherFPS=\"1\" GatherAICnt=\"1\" GatherDialogs=\"0\" IsQcTester=\"0\" />",
						"\t</EngineProfile>",
						"</GamerProfile>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<ProfileSpecificGameProfile")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<SoundProfile")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004D2 RID: 1234 RVA: 0x001110F4 File Offset: 0x0010F2F4
		private void FC6_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<GamerProfile IsFirstStartupFlow=\"0\">",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"\t\t<FireConfig QualitySetting=\"low\" />",
						"\t</ProfileSpecificGameProfile>",
						"\t<RenderProfile GPU=\"0\" VideoModeProfile=\"1\" MainMonitor=\"0\" WindowPosition=\"320,180\" MultimonitorMode=\"1\" AntiAliasingMode=\"2\" MotionBlur=\"0\" Quality=\"low\" QualityEditor=\"editor\" VSyncPreset=\"off\" FOV=\"72\" FrameRateLockEnabled=\"0\" FrameRateLockValue=\"60\" ResolutionScale=\"1.00\" DynamicResolutionEnabled=\"0\" DynamicResolutionFrameRateLimit=\"30\" CameraViewCenterOffsetX=\"0\" CameraViewCenterOffsetY=\"0\" HDTexturesEnabled=\"0\" DisableLoadingMip0=\"0\" ShowFPS=\"0\" Brightness=\"1\" Contrast=\"1\" CalibrationScreensShown=\"0\" HDRCalibrationScreensShown=\"0\" GammaRamp=\"1\" HDRReferenceWhiteNits=\"200\" HDROutputMaximumNits=\"600\" DxrReflections=\"0\" DxrShadows=\"0\" AllowAsynchShaderLoading=\"1\" ColorblindnessMode=\"0\" CustomColorblindBaseMode=\"2\" LaserSightColor=\"15009800\" SubtitlesPlayerNameColor=\"16756276\" SubtitlesEnemyNameColor=\"14426144\" SubtitlesFriendlyNameColor=\"5406449\" HudGroupOneColor=\"14426144\" HudGroupTwoColor=\"1542796\" HudGroupThreeColor=\"16756276\" ReticleColor=\"16777215\" EnemyOutlineColor=\"16690739\" LootOutlineColor=\"16777215\" AssaultsHeatMeterHotColor=\"15009800\" AssaultsHeatMeterNeutralColor=\"16580604\" AssaultsHeatMeterColdColor=\"64250\" ReticleOnEnemyColor=\"14491425\" ReticleADSColor=\"14491425\" RoadsOnTheMapColor=\"3625136\" WorldMapGpsPathColor=\"5064136\" IsLpmEnabled=\"0\" VrsParticleBufferEnabled=\"2167103348\">",
						string.Concat(new string[] { "\t\t<VideoModeProfileFullscreen adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"0\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" ", this.deviceID }),
						string.Concat(new string[] { "\t\t<VideoModeProfileWindow adapterIndex=\"0\" displayIndex=\"0\" windowMode=\"3\" width=\"", this.DefaultWidth, "\" height=\"", this.DefaultHeight, "\" hdr=\"0\" refreshRateNumerator=\"0\" refreshRateDenominator=\"1\" />" }),
						"\t\t<CustomQuality>",
						"\t\t\t<quality EnvironmentQuality=\"low\" PostFxQuality=\"low\" TextureQuality=\"low\" VolumetricFogQuality=\"low\" VolumetricCloudsQuality=\"low\" WaterQuality=\"low\" VegetationQuality=\"low\" TerrainQuality=\"low\" GeometryQuality=\"low\" AmbientQuality=\"low\" ShadowQuality=\"low\" ShadowCinematicQuality=\"cinematic_pc\" ResolutionQuality=\"\" VSyncQuality=\"\" VSyncCinematicQuality=\"\" id=\"custom\" />",
						"\t\t</CustomQuality>",
						"\t\t<ResolutionConfig FidelityFxCASEnabled=\"1\" />",
						"\t</RenderProfile>",
						"\t<NetworkProfile VoiceChatEnabled=\"1\" CustomMapMaxUploadRateInBitsOnline=\"10240000\" SessionProvider=\"\" MaxUploadInbpsOnline=\"10240000\">",
						"\t\t<Accounts />",
						"\t</NetworkProfile>",
						"\t<GameProfile>",
						"\t\t<SeenNewsItems />",
						"\t</GameProfile>",
						"\t<EngineProfile>",
						"\t\t<PhysicConfig QualitySetting=\"low\" />",
						"\t\t<QcConfig GatherFPS=\"1\" GatherAICnt=\"1\" GatherDialogs=\"0\" IsQcTester=\"0\" />",
						"\t</EngineProfile>",
						"</GamerProfile>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<ProfileSpecificGameProfile")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("<SoundProfile")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004D3 RID: 1235 RVA: 0x00111420 File Offset: 0x0010F620
		private void GWT_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=40", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 4;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.ghostwire_main, text2);
					num = 7;
				}
				if (num == 8)
				{
					string text3;
					File.WriteAllText(this.ghostwire_second, text3);
					num = 9;
				}
				if (num == 7)
				{
					File.WriteAllText(this.ghostwire_first, text);
					num = 8;
				}
				if (num == 5)
				{
					this.get_own_ghostwire();
					num = 6;
				}
				if (num == 4)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 5;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Snowfall.SnowfallGameUserSettings]",
						"bUseVSync=False",
						"FullscreenMode=0",
						"ProjectSettingVersion=1",
						"SSSQuality=0",
						"SSRQuality=0",
						"GIQuality=0",
						"ShadowQuality=0",
						"LevelStreamingQuality=0",
						"bRayTracingEnabled=False",
						"RayTracingShadowsQuality=0",
						"RayTracingReflectionsQuality=0",
						"RayTracingCullingQuality=0",
						"DLSSQuality=0",
						"FSRQuality=0",
						"TSRQuality=1",
						"TextureStreamingQuality=0",
						"bAudioOutputStereoEnabled=False",
						string.Join(Environment.NewLine, array),
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=0",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=40.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Snowfall",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.ghostwire_main)
						where s.Contains("PersistentUUIdBNet")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x060004D4 RID: 1236 RVA: 0x00111BE4 File Offset: 0x0010FDE4
		private void GWT_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=50", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 4;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.ghostwire_main, text2);
					num = 7;
				}
				if (num == 8)
				{
					string text3;
					File.WriteAllText(this.ghostwire_second, text3);
					num = 9;
				}
				if (num == 7)
				{
					File.WriteAllText(this.ghostwire_first, text);
					num = 8;
				}
				if (num == 5)
				{
					this.get_own_ghostwire();
					num = 6;
				}
				if (num == 4)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 5;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Snowfall.SnowfallGameUserSettings]",
						"bUseVSync=False",
						"FullscreenMode=0",
						"ProjectSettingVersion=1",
						"SSSQuality=0",
						"SSRQuality=0",
						"GIQuality=0",
						"ShadowQuality=0",
						"LevelStreamingQuality=0",
						"bRayTracingEnabled=False",
						"RayTracingShadowsQuality=0",
						"RayTracingReflectionsQuality=0",
						"RayTracingCullingQuality=0",
						"DLSSQuality=0",
						"FSRQuality=0",
						"TSRQuality=2",
						"TextureStreamingQuality=0",
						"bAudioOutputStereoEnabled=False",
						string.Join(Environment.NewLine, array),
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=0",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=50.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Snowfall",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.ghostwire_main)
						where s.Contains("PersistentUUIdBNet")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x060004D5 RID: 1237 RVA: 0x001123A8 File Offset: 0x001105A8
		private void GWT_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=70", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 4;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.ghostwire_main, text2);
					num = 7;
				}
				if (num == 8)
				{
					string text3;
					File.WriteAllText(this.ghostwire_second, text3);
					num = 9;
				}
				if (num == 7)
				{
					File.WriteAllText(this.ghostwire_first, text);
					num = 8;
				}
				if (num == 5)
				{
					this.get_own_ghostwire();
					num = 6;
				}
				if (num == 4)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 5;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Snowfall.SnowfallGameUserSettings]",
						"bUseVSync=False",
						"FullscreenMode=0",
						"ProjectSettingVersion=1",
						"SSSQuality=0",
						"SSRQuality=0",
						"GIQuality=0",
						"ShadowQuality=0",
						"LevelStreamingQuality=0",
						"bRayTracingEnabled=False",
						"RayTracingShadowsQuality=0",
						"RayTracingReflectionsQuality=0",
						"RayTracingCullingQuality=0",
						"DLSSQuality=0",
						"FSRQuality=0",
						"TSRQuality=3",
						"TextureStreamingQuality=0",
						"bAudioOutputStereoEnabled=False",
						string.Join(Environment.NewLine, array),
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=0",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=70.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Snowfall",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.ghostwire_main)
						where s.Contains("PersistentUUIdBNet")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x060004D6 RID: 1238 RVA: 0x00112B6C File Offset: 0x00110D6C
		private void GWT_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=80", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 4;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.ghostwire_main, text2);
					num = 7;
				}
				if (num == 8)
				{
					string text3;
					File.WriteAllText(this.ghostwire_second, text3);
					num = 9;
				}
				if (num == 7)
				{
					File.WriteAllText(this.ghostwire_first, text);
					num = 8;
				}
				if (num == 5)
				{
					this.get_own_ghostwire();
					num = 6;
				}
				if (num == 4)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 5;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Snowfall.SnowfallGameUserSettings]",
						"bUseVSync=False",
						"FullscreenMode=0",
						"ProjectSettingVersion=1",
						"SSSQuality=0",
						"SSRQuality=0",
						"GIQuality=0",
						"ShadowQuality=0",
						"LevelStreamingQuality=0",
						"bRayTracingEnabled=False",
						"RayTracingShadowsQuality=0",
						"RayTracingReflectionsQuality=0",
						"RayTracingCullingQuality=0",
						"DLSSQuality=0",
						"FSRQuality=0",
						"TSRQuality=3",
						"TextureStreamingQuality=0",
						"bAudioOutputStereoEnabled=False",
						string.Join(Environment.NewLine, array),
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=0",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=80.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Snowfall",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.ghostwire_main)
						where s.Contains("PersistentUUIdBNet")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x060004D7 RID: 1239 RVA: 0x00113330 File Offset: 0x00111530
		private void GWT_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=85", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 4;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.ghostwire_main, text2);
					num = 7;
				}
				if (num == 8)
				{
					string text3;
					File.WriteAllText(this.ghostwire_second, text3);
					num = 9;
				}
				if (num == 7)
				{
					File.WriteAllText(this.ghostwire_first, text);
					num = 8;
				}
				if (num == 5)
				{
					this.get_own_ghostwire();
					num = 6;
				}
				if (num == 4)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 5;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Snowfall.SnowfallGameUserSettings]",
						"bUseVSync=False",
						"FullscreenMode=0",
						"ProjectSettingVersion=1",
						"SSSQuality=0",
						"SSRQuality=0",
						"GIQuality=0",
						"ShadowQuality=0",
						"LevelStreamingQuality=0",
						"bRayTracingEnabled=False",
						"RayTracingShadowsQuality=0",
						"RayTracingReflectionsQuality=0",
						"RayTracingCullingQuality=0",
						"DLSSQuality=0",
						"FSRQuality=0",
						"TSRQuality=4",
						"TextureStreamingQuality=0",
						"bAudioOutputStereoEnabled=False",
						string.Join(Environment.NewLine, array),
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=0",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=85.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Snowfall",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.ghostwire_main)
						where s.Contains("PersistentUUIdBNet")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x060004D8 RID: 1240 RVA: 0x00113AF4 File Offset: 0x00111CF4
		private void GWT_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=90", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 4;
				}
				if (num == 6)
				{
					string text2;
					File.WriteAllText(this.ghostwire_main, text2);
					num = 7;
				}
				if (num == 8)
				{
					string text3;
					File.WriteAllText(this.ghostwire_second, text3);
					num = 9;
				}
				if (num == 7)
				{
					File.WriteAllText(this.ghostwire_first, text);
					num = 8;
				}
				if (num == 5)
				{
					this.get_own_ghostwire();
					num = 6;
				}
				if (num == 4)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 5;
				}
				if (num == 2)
				{
					string[] array;
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Snowfall.SnowfallGameUserSettings]",
						"bUseVSync=False",
						"FullscreenMode=0",
						"ProjectSettingVersion=1",
						"SSSQuality=0",
						"SSRQuality=0",
						"GIQuality=0",
						"ShadowQuality=0",
						"LevelStreamingQuality=0",
						"bRayTracingEnabled=False",
						"RayTracingShadowsQuality=0",
						"RayTracingReflectionsQuality=0",
						"RayTracingCullingQuality=0",
						"DLSSQuality=0",
						"FSRQuality=0",
						"TSRQuality=4",
						"TextureStreamingQuality=0",
						"bAudioOutputStereoEnabled=False",
						string.Join(Environment.NewLine, array),
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=0",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=90.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Snowfall",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.ghostwire_main)
						where s.Contains("PersistentUUIdBNet")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 9);
		}

		// Token: 0x060004D9 RID: 1241 RVA: 0x001142B8 File Offset: 0x001124B8
		private void GOW_g()
		{
			int num = 0;
			do
			{
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string[] array;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Settings]",
						string.Join(Environment.NewLine, array),
						"Monitor=0",
						"DisplayMode=Borderless        ; Values: Windowed, Borderless",
						"WindowLeft=0",
						"WindowTop=0",
						"WindowWidth=" + this.DefaultWidth,
						"WindowHeight=" + this.DefaultHeight,
						"AspectRatio=Auto",
						"Vsync=Off                     ; Values: Off, On",
						"MotionBlur=0                  ; Range: 0 - 10",
						"FilmGrain=0                   ; Range: 0 - 10",
						"DLSSQuality=Off               ; Values: Off, UltraPerformance, Performance, Balanced, Quality, UltraQuality",
						"FSRQuality=Off                ; Values: Off, Performance, Balanced, Quality, UltraQuality",
						"RenderScale=50               ; Values: Off, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100",
						"Brightness=50                 ; Range: 0 - 100",
						"HDR=Off                       ; Values: Off, On",
						"HDRBrightness=50              ; Range: 0 - 100",
						"HDRContrast=1.400             ; Range: 0.8 - 1.8",
						"LatencyMarkers=Off            ; Values: Off, On",
						"LatencyEnable=Off             ; Values: Off, On",
						"LatencyBoost=Off              ; Values: Off, On",
						"LatencyFlash=Off              ; Values: Off, On",
						"LatencyStats=Off              ; Values: Off, On",
						"Preset=Custom                 ; Values: Low, Original, High, Ultra, Custom",
						"TextureQuality=Min            ; Values: Min, Low, Original, High, Ultra",
						"FilterQuality=Min             ; Values: Min, Low, Original, High, Ultra",
						"ModelQuality=Original         ; Values: Original, High, Ultra",
						"ShadowQuality=Low             ; Values: Low, Original, High, Ultra",
						"AtmosphereQuality=Low         ; Values: Low, Original, High, Ultra",
						"ReflectionQuality=Disable     ; Values: Disable, Original, High, Ultra, UltraPlus",
						"OcclusionQuality=Disable      ; Values: Disable, Original, High, Ultra, UltraPlus",
						"FPSLimit=Off                  ; Values: Off, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VideoDevice")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x060004DA RID: 1242 RVA: 0x00114570 File Offset: 0x00112770
		private void GOW_f()
		{
			int num = 0;
			do
			{
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string[] array;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Settings]",
						string.Join(Environment.NewLine, array),
						"Monitor=0",
						"DisplayMode=Borderless        ; Values: Windowed, Borderless",
						"WindowLeft=0",
						"WindowTop=0",
						"WindowWidth=" + this.DefaultWidth,
						"WindowHeight=" + this.DefaultHeight,
						"AspectRatio=Auto",
						"Vsync=Off                     ; Values: Off, On",
						"MotionBlur=0                  ; Range: 0 - 10",
						"FilmGrain=0                   ; Range: 0 - 10",
						"DLSSQuality=Off               ; Values: Off, UltraPerformance, Performance, Balanced, Quality, UltraQuality",
						"FSRQuality=Off                ; Values: Off, Performance, Balanced, Quality, UltraQuality",
						"RenderScale=50               ; Values: Off, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100",
						"Brightness=50                 ; Range: 0 - 100",
						"HDR=Off                       ; Values: Off, On",
						"HDRBrightness=50              ; Range: 0 - 100",
						"HDRContrast=1.400             ; Range: 0.8 - 1.8",
						"LatencyMarkers=Off            ; Values: Off, On",
						"LatencyEnable=Off             ; Values: Off, On",
						"LatencyBoost=Off              ; Values: Off, On",
						"LatencyFlash=Off              ; Values: Off, On",
						"LatencyStats=Off              ; Values: Off, On",
						"Preset=Custom                 ; Values: Low, Original, High, Ultra, Custom",
						"TextureQuality=Min            ; Values: Min, Low, Original, High, Ultra",
						"FilterQuality=Min             ; Values: Min, Low, Original, High, Ultra",
						"ModelQuality=Original         ; Values: Original, High, Ultra",
						"ShadowQuality=Low             ; Values: Low, Original, High, Ultra",
						"AtmosphereQuality=Low         ; Values: Low, Original, High, Ultra",
						"ReflectionQuality=Disable     ; Values: Disable, Original, High, Ultra, UltraPlus",
						"OcclusionQuality=Disable      ; Values: Disable, Original, High, Ultra, UltraPlus",
						"FPSLimit=Off                  ; Values: Off, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VideoDevice")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x060004DB RID: 1243 RVA: 0x00114828 File Offset: 0x00112A28
		private void GOW_d()
		{
			int num = 0;
			do
			{
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string[] array;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Settings]",
						string.Join(Environment.NewLine, array),
						"Monitor=0",
						"DisplayMode=Borderless        ; Values: Windowed, Borderless",
						"WindowLeft=0",
						"WindowTop=0",
						"WindowWidth=" + this.DefaultWidth,
						"WindowHeight=" + this.DefaultHeight,
						"AspectRatio=Auto",
						"Vsync=Off                     ; Values: Off, On",
						"MotionBlur=0                  ; Range: 0 - 10",
						"FilmGrain=0                   ; Range: 0 - 10",
						"DLSSQuality=Off               ; Values: Off, UltraPerformance, Performance, Balanced, Quality, UltraQuality",
						"FSRQuality=Off                ; Values: Off, Performance, Balanced, Quality, UltraQuality",
						"RenderScale=70               ; Values: Off, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100",
						"Brightness=50                 ; Range: 0 - 100",
						"HDR=Off                       ; Values: Off, On",
						"HDRBrightness=50              ; Range: 0 - 100",
						"HDRContrast=1.400             ; Range: 0.8 - 1.8",
						"LatencyMarkers=Off            ; Values: Off, On",
						"LatencyEnable=Off             ; Values: Off, On",
						"LatencyBoost=Off              ; Values: Off, On",
						"LatencyFlash=Off              ; Values: Off, On",
						"LatencyStats=Off              ; Values: Off, On",
						"Preset=Custom                 ; Values: Low, Original, High, Ultra, Custom",
						"TextureQuality=Min            ; Values: Min, Low, Original, High, Ultra",
						"FilterQuality=Min             ; Values: Min, Low, Original, High, Ultra",
						"ModelQuality=Original         ; Values: Original, High, Ultra",
						"ShadowQuality=Low             ; Values: Low, Original, High, Ultra",
						"AtmosphereQuality=Low         ; Values: Low, Original, High, Ultra",
						"ReflectionQuality=Disable     ; Values: Disable, Original, High, Ultra, UltraPlus",
						"OcclusionQuality=Disable      ; Values: Disable, Original, High, Ultra, UltraPlus",
						"FPSLimit=Off                  ; Values: Off, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VideoDevice")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x060004DC RID: 1244 RVA: 0x00114AE0 File Offset: 0x00112CE0
		private void GOW_c()
		{
			int num = 0;
			do
			{
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string[] array;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Settings]",
						string.Join(Environment.NewLine, array),
						"Monitor=0",
						"DisplayMode=Borderless        ; Values: Windowed, Borderless",
						"WindowLeft=0",
						"WindowTop=0",
						"WindowWidth=" + this.DefaultWidth,
						"WindowHeight=" + this.DefaultHeight,
						"AspectRatio=Auto",
						"Vsync=Off                     ; Values: Off, On",
						"MotionBlur=0                  ; Range: 0 - 10",
						"FilmGrain=0                   ; Range: 0 - 10",
						"DLSSQuality=Off               ; Values: Off, UltraPerformance, Performance, Balanced, Quality, UltraQuality",
						"FSRQuality=Off                ; Values: Off, Performance, Balanced, Quality, UltraQuality",
						"RenderScale=80               ; Values: Off, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100",
						"Brightness=50                 ; Range: 0 - 100",
						"HDR=Off                       ; Values: Off, On",
						"HDRBrightness=50              ; Range: 0 - 100",
						"HDRContrast=1.400             ; Range: 0.8 - 1.8",
						"LatencyMarkers=Off            ; Values: Off, On",
						"LatencyEnable=Off             ; Values: Off, On",
						"LatencyBoost=Off              ; Values: Off, On",
						"LatencyFlash=Off              ; Values: Off, On",
						"LatencyStats=Off              ; Values: Off, On",
						"Preset=Custom                 ; Values: Low, Original, High, Ultra, Custom",
						"TextureQuality=Min            ; Values: Min, Low, Original, High, Ultra",
						"FilterQuality=Min             ; Values: Min, Low, Original, High, Ultra",
						"ModelQuality=Original         ; Values: Original, High, Ultra",
						"ShadowQuality=Low             ; Values: Low, Original, High, Ultra",
						"AtmosphereQuality=Low         ; Values: Low, Original, High, Ultra",
						"ReflectionQuality=Disable     ; Values: Disable, Original, High, Ultra, UltraPlus",
						"OcclusionQuality=Disable      ; Values: Disable, Original, High, Ultra, UltraPlus",
						"FPSLimit=Off                  ; Values: Off, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VideoDevice")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x060004DD RID: 1245 RVA: 0x00114D98 File Offset: 0x00112F98
		private void GOW_b()
		{
			int num = 0;
			do
			{
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string[] array;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Settings]",
						string.Join(Environment.NewLine, array),
						"Monitor=0",
						"DisplayMode=Borderless        ; Values: Windowed, Borderless",
						"WindowLeft=0",
						"WindowTop=0",
						"WindowWidth=" + this.DefaultWidth,
						"WindowHeight=" + this.DefaultHeight,
						"AspectRatio=Auto",
						"Vsync=Off                     ; Values: Off, On",
						"MotionBlur=0                  ; Range: 0 - 10",
						"FilmGrain=0                   ; Range: 0 - 10",
						"DLSSQuality=Off               ; Values: Off, UltraPerformance, Performance, Balanced, Quality, UltraQuality",
						"FSRQuality=Off                ; Values: Off, Performance, Balanced, Quality, UltraQuality",
						"RenderScale=80               ; Values: Off, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100",
						"Brightness=50                 ; Range: 0 - 100",
						"HDR=Off                       ; Values: Off, On",
						"HDRBrightness=50              ; Range: 0 - 100",
						"HDRContrast=1.400             ; Range: 0.8 - 1.8",
						"LatencyMarkers=Off            ; Values: Off, On",
						"LatencyEnable=Off             ; Values: Off, On",
						"LatencyBoost=Off              ; Values: Off, On",
						"LatencyFlash=Off              ; Values: Off, On",
						"LatencyStats=Off              ; Values: Off, On",
						"Preset=Custom                 ; Values: Low, Original, High, Ultra, Custom",
						"TextureQuality=Min            ; Values: Min, Low, Original, High, Ultra",
						"FilterQuality=Min             ; Values: Min, Low, Original, High, Ultra",
						"ModelQuality=Original         ; Values: Original, High, Ultra",
						"ShadowQuality=Low             ; Values: Low, Original, High, Ultra",
						"AtmosphereQuality=Low         ; Values: Low, Original, High, Ultra",
						"ReflectionQuality=Disable     ; Values: Disable, Original, High, Ultra, UltraPlus",
						"OcclusionQuality=Disable      ; Values: Disable, Original, High, Ultra, UltraPlus",
						"FPSLimit=Off                  ; Values: Off, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VideoDevice")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x060004DE RID: 1246 RVA: 0x00115050 File Offset: 0x00113250
		private void GOW_a()
		{
			int num = 0;
			do
			{
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string[] array;
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[Settings]",
						string.Join(Environment.NewLine, array),
						"Monitor=0",
						"DisplayMode=Borderless        ; Values: Windowed, Borderless",
						"WindowLeft=0",
						"WindowTop=0",
						"WindowWidth=" + this.DefaultWidth,
						"WindowHeight=" + this.DefaultHeight,
						"AspectRatio=Auto",
						"Vsync=Off                     ; Values: Off, On",
						"MotionBlur=0                  ; Range: 0 - 10",
						"FilmGrain=0                   ; Range: 0 - 10",
						"DLSSQuality=Off               ; Values: Off, UltraPerformance, Performance, Balanced, Quality, UltraQuality",
						"FSRQuality=Off                ; Values: Off, Performance, Balanced, Quality, UltraQuality",
						"RenderScale=90               ; Values: Off, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100",
						"Brightness=50                 ; Range: 0 - 100",
						"HDR=Off                       ; Values: Off, On",
						"HDRBrightness=50              ; Range: 0 - 100",
						"HDRContrast=1.400             ; Range: 0.8 - 1.8",
						"LatencyMarkers=Off            ; Values: Off, On",
						"LatencyEnable=Off             ; Values: Off, On",
						"LatencyBoost=Off              ; Values: Off, On",
						"LatencyFlash=Off              ; Values: Off, On",
						"LatencyStats=Off              ; Values: Off, On",
						"Preset=Custom                 ; Values: Low, Original, High, Ultra, Custom",
						"TextureQuality=Min            ; Values: Min, Low, Original, High, Ultra",
						"FilterQuality=Min             ; Values: Min, Low, Original, High, Ultra",
						"ModelQuality=Original         ; Values: Original, High, Ultra",
						"ShadowQuality=Low             ; Values: Low, Original, High, Ultra",
						"AtmosphereQuality=Low         ; Values: Low, Original, High, Ultra",
						"ReflectionQuality=Disable     ; Values: Disable, Original, High, Ultra, UltraPlus",
						"OcclusionQuality=Disable      ; Values: Disable, Original, High, Ultra, UltraPlus",
						"FPSLimit=Off                  ; Values: Off, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120",
						""
					});
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VideoDevice")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x060004DF RID: 1247 RVA: 0x00115308 File Offset: 0x00113508
		private void GTAV_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
						"",
						"<Settings>",
						"  <version value=\"27\" />",
						"  <configSource>SMC_AUTO</configSource>",
						"  <graphics>",
						"    <Tessellation value=\"0\" />",
						"    <LodScale value=\"0.000000\" />",
						"    <PedLodBias value=\"0.000000\" />",
						"    <VehicleLodBias value=\"0.000000\" />",
						"    <ShadowQuality value=\"0\" />",
						"    <ReflectionQuality value=\"0\" />",
						"    <ReflectionMSAA value=\"0\" />",
						"    <SSAO value=\"0\" />",
						"    <AnisotropicFiltering value=\"0\" />",
						"    <MSAA value=\"0\" />",
						"    <MSAAFragments value=\"0\" />",
						"    <MSAAQuality value=\"0\" />",
						"    <SamplingMode value=\"2\" />",
						"    <TextureQuality value=\"0\" />",
						"    <ParticleQuality value=\"0\" />",
						"    <WaterQuality value=\"0\" />",
						"    <GrassQuality value=\"0\" />",
						"    <ShaderQuality value=\"0\" />",
						"    <Shadow_SoftShadows value=\"3\" />",
						"    <UltraShadows_Enabled value=\"false\" />",
						"    <Shadow_ParticleShadows value=\"true\" />",
						"    <Shadow_Distance value=\"0.000000\" />",
						"    <Shadow_LongShadows value=\"false\" />",
						"    <Shadow_SplitZStart value=\"0.000000\" />",
						"    <Shadow_SplitZEnd value=\"0.000000\" />",
						"    <Shadow_aircraftExpWeight value=\"0.000000\" />",
						"    <Shadow_DisableScreenSizeCheck value=\"false\" />",
						"    <Reflection_MipBlur value=\"false\" />",
						"    <FXAA_Enabled value=\"false\" />",
						"    <TXAA_Enabled value=\"false\" />",
						"    <Lighting_FogVolumes value=\"false\" />",
						"    <Shader_SSA value=\"false\" />",
						this.graphicsAPIVersion,
						"    <CityDensity value=\"0.000000\" />",
						"    <PedVarietyMultiplier value=\"0.000000\" />",
						"    <VehicleVarietyMultiplier value=\"0.000000\" />",
						"    <PostFX value=\"0\" />",
						"    <DoF value=\"false\" />",
						"    <HdStreamingInFlight value=\"false\" />",
						"    <MaxLodScale value=\"-0.250000\" />",
						"    <MotionBlurStrength value=\"0.000000\" />",
						"  </graphics>",
						"  <system>",
						"    <numBytesPerReplayBlock value=\"9000000\" />",
						"    <numReplayBlocks value=\"36\" />",
						"    <maxSizeOfStreamingReplay value=\"1024\" />",
						"    <maxFileStoreSize value=\"65536\" />",
						"  </system>",
						"  <audio>",
						"    <Audio3d value=\"false\" />",
						"  </audio>",
						"  <video>",
						"    <AdapterIndex value=\"0\" />",
						"    <OutputIndex value=\"0\" />",
						"    <ScreenWidth value=\"" + this.DefaultWidth + "\" />",
						"    <ScreenHeight value=\"" + this.DefaultHeight + "\" />",
						string.Join(Environment.NewLine, array),
						"    <Windowed value=\"0\" />",
						"    <VSync value=\"0\" />",
						"    <Stereo value=\"0\" />",
						"    <Convergence value=\"0.001000\" />",
						"    <Separation value=\"1.000000\" />",
						"    <PauseOnFocusLoss value=\"0\" />",
						"    <AspectRatio value=\"0\" />",
						"  </video>",
						string.Join(Environment.NewLine, array2),
						"</Settings>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.gta_settingloc, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.gta_settingloc, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array = (from s in File.ReadAllLines(this.gta_settingloc)
						where s.Contains("<RefreshRate")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.gta_settingloc)
						where s.Contains("<VideoCardDescription>")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004E0 RID: 1248 RVA: 0x001157EC File Offset: 0x001139EC
		private void GTAV_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
						"",
						"<Settings>",
						"  <version value=\"27\" />",
						"  <configSource>SMC_AUTO</configSource>",
						"  <graphics>",
						"    <Tessellation value=\"0\" />",
						"    <LodScale value=\"0.000000\" />",
						"    <PedLodBias value=\"0.000000\" />",
						"    <VehicleLodBias value=\"0.000000\" />",
						"    <ShadowQuality value=\"0\" />",
						"    <ReflectionQuality value=\"0\" />",
						"    <ReflectionMSAA value=\"0\" />",
						"    <SSAO value=\"0\" />",
						"    <AnisotropicFiltering value=\"0\" />",
						"    <MSAA value=\"0\" />",
						"    <MSAAFragments value=\"0\" />",
						"    <MSAAQuality value=\"0\" />",
						"    <SamplingMode value=\"3\" />",
						"    <TextureQuality value=\"0\" />",
						"    <ParticleQuality value=\"0\" />",
						"    <WaterQuality value=\"0\" />",
						"    <GrassQuality value=\"0\" />",
						"    <ShaderQuality value=\"0\" />",
						"    <Shadow_SoftShadows value=\"3\" />",
						"    <UltraShadows_Enabled value=\"false\" />",
						"    <Shadow_ParticleShadows value=\"true\" />",
						"    <Shadow_Distance value=\"0.000000\" />",
						"    <Shadow_LongShadows value=\"false\" />",
						"    <Shadow_SplitZStart value=\"0.000000\" />",
						"    <Shadow_SplitZEnd value=\"0.000000\" />",
						"    <Shadow_aircraftExpWeight value=\"0.000000\" />",
						"    <Shadow_DisableScreenSizeCheck value=\"false\" />",
						"    <Reflection_MipBlur value=\"false\" />",
						"    <FXAA_Enabled value=\"false\" />",
						"    <TXAA_Enabled value=\"false\" />",
						"    <Lighting_FogVolumes value=\"false\" />",
						"    <Shader_SSA value=\"false\" />",
						this.graphicsAPIVersion,
						"    <CityDensity value=\"0.000000\" />",
						"    <PedVarietyMultiplier value=\"0.000000\" />",
						"    <VehicleVarietyMultiplier value=\"0.000000\" />",
						"    <PostFX value=\"0\" />",
						"    <DoF value=\"false\" />",
						"    <HdStreamingInFlight value=\"false\" />",
						"    <MaxLodScale value=\"-0.250000\" />",
						"    <MotionBlurStrength value=\"0.000000\" />",
						"  </graphics>",
						"  <system>",
						"    <numBytesPerReplayBlock value=\"9000000\" />",
						"    <numReplayBlocks value=\"36\" />",
						"    <maxSizeOfStreamingReplay value=\"1024\" />",
						"    <maxFileStoreSize value=\"65536\" />",
						"  </system>",
						"  <audio>",
						"    <Audio3d value=\"false\" />",
						"  </audio>",
						"  <video>",
						"    <AdapterIndex value=\"0\" />",
						"    <OutputIndex value=\"0\" />",
						"    <ScreenWidth value=\"" + this.DefaultWidth + "\" />",
						"    <ScreenHeight value=\"" + this.DefaultHeight + "\" />",
						string.Join(Environment.NewLine, array),
						"    <Windowed value=\"0\" />",
						"    <VSync value=\"0\" />",
						"    <Stereo value=\"0\" />",
						"    <Convergence value=\"0.001000\" />",
						"    <Separation value=\"1.000000\" />",
						"    <PauseOnFocusLoss value=\"0\" />",
						"    <AspectRatio value=\"0\" />",
						"  </video>",
						string.Join(Environment.NewLine, array2),
						"</Settings>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.gta_settingloc, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.gta_settingloc, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array = (from s in File.ReadAllLines(this.gta_settingloc)
						where s.Contains("<RefreshRate")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.gta_settingloc)
						where s.Contains("<VideoCardDescription>")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004E1 RID: 1249 RVA: 0x00115CD0 File Offset: 0x00113ED0
		private void GTAV_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
						"",
						"<Settings>",
						"  <version value=\"27\" />",
						"  <configSource>SMC_AUTO</configSource>",
						"  <graphics>",
						"    <Tessellation value=\"0\" />",
						"    <LodScale value=\"0.000000\" />",
						"    <PedLodBias value=\"0.000000\" />",
						"    <VehicleLodBias value=\"0.000000\" />",
						"    <ShadowQuality value=\"0\" />",
						"    <ReflectionQuality value=\"0\" />",
						"    <ReflectionMSAA value=\"0\" />",
						"    <SSAO value=\"0\" />",
						"    <AnisotropicFiltering value=\"0\" />",
						"    <MSAA value=\"0\" />",
						"    <MSAAFragments value=\"0\" />",
						"    <MSAAQuality value=\"0\" />",
						"    <SamplingMode value=\"3\" />",
						"    <TextureQuality value=\"0\" />",
						"    <ParticleQuality value=\"0\" />",
						"    <WaterQuality value=\"0\" />",
						"    <GrassQuality value=\"0\" />",
						"    <ShaderQuality value=\"0\" />",
						"    <Shadow_SoftShadows value=\"3\" />",
						"    <UltraShadows_Enabled value=\"false\" />",
						"    <Shadow_ParticleShadows value=\"true\" />",
						"    <Shadow_Distance value=\"0.000000\" />",
						"    <Shadow_LongShadows value=\"false\" />",
						"    <Shadow_SplitZStart value=\"0.000000\" />",
						"    <Shadow_SplitZEnd value=\"0.000000\" />",
						"    <Shadow_aircraftExpWeight value=\"0.000000\" />",
						"    <Shadow_DisableScreenSizeCheck value=\"false\" />",
						"    <Reflection_MipBlur value=\"false\" />",
						"    <FXAA_Enabled value=\"false\" />",
						"    <TXAA_Enabled value=\"false\" />",
						"    <Lighting_FogVolumes value=\"false\" />",
						"    <Shader_SSA value=\"false\" />",
						this.graphicsAPIVersion,
						"    <CityDensity value=\"0.000000\" />",
						"    <PedVarietyMultiplier value=\"0.000000\" />",
						"    <VehicleVarietyMultiplier value=\"0.000000\" />",
						"    <PostFX value=\"0\" />",
						"    <DoF value=\"false\" />",
						"    <HdStreamingInFlight value=\"false\" />",
						"    <MaxLodScale value=\"-0.250000\" />",
						"    <MotionBlurStrength value=\"0.000000\" />",
						"  </graphics>",
						"  <system>",
						"    <numBytesPerReplayBlock value=\"9000000\" />",
						"    <numReplayBlocks value=\"36\" />",
						"    <maxSizeOfStreamingReplay value=\"1024\" />",
						"    <maxFileStoreSize value=\"65536\" />",
						"  </system>",
						"  <audio>",
						"    <Audio3d value=\"false\" />",
						"  </audio>",
						"  <video>",
						"    <AdapterIndex value=\"0\" />",
						"    <OutputIndex value=\"0\" />",
						"    <ScreenWidth value=\"" + this.DefaultWidth + "\" />",
						"    <ScreenHeight value=\"" + this.DefaultHeight + "\" />",
						string.Join(Environment.NewLine, array),
						"    <Windowed value=\"0\" />",
						"    <VSync value=\"0\" />",
						"    <Stereo value=\"0\" />",
						"    <Convergence value=\"0.001000\" />",
						"    <Separation value=\"1.000000\" />",
						"    <PauseOnFocusLoss value=\"0\" />",
						"    <AspectRatio value=\"0\" />",
						"  </video>",
						string.Join(Environment.NewLine, array2),
						"</Settings>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.gta_settingloc, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.gta_settingloc, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array = (from s in File.ReadAllLines(this.gta_settingloc)
						where s.Contains("<RefreshRate")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.gta_settingloc)
						where s.Contains("<VideoCardDescription>")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004E2 RID: 1250 RVA: 0x001161B4 File Offset: 0x001143B4
		private void GTAV_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
						"",
						"<Settings>",
						"  <version value=\"27\" />",
						"  <configSource>SMC_AUTO</configSource>",
						"  <graphics>",
						"    <Tessellation value=\"0\" />",
						"    <LodScale value=\"0.000000\" />",
						"    <PedLodBias value=\"0.000000\" />",
						"    <VehicleLodBias value=\"0.000000\" />",
						"    <ShadowQuality value=\"0\" />",
						"    <ReflectionQuality value=\"0\" />",
						"    <ReflectionMSAA value=\"0\" />",
						"    <SSAO value=\"0\" />",
						"    <AnisotropicFiltering value=\"0\" />",
						"    <MSAA value=\"0\" />",
						"    <MSAAFragments value=\"0\" />",
						"    <MSAAQuality value=\"0\" />",
						"    <SamplingMode value=\"4\" />",
						"    <TextureQuality value=\"0\" />",
						"    <ParticleQuality value=\"0\" />",
						"    <WaterQuality value=\"0\" />",
						"    <GrassQuality value=\"0\" />",
						"    <ShaderQuality value=\"0\" />",
						"    <Shadow_SoftShadows value=\"3\" />",
						"    <UltraShadows_Enabled value=\"false\" />",
						"    <Shadow_ParticleShadows value=\"true\" />",
						"    <Shadow_Distance value=\"0.000000\" />",
						"    <Shadow_LongShadows value=\"false\" />",
						"    <Shadow_SplitZStart value=\"0.000000\" />",
						"    <Shadow_SplitZEnd value=\"0.000000\" />",
						"    <Shadow_aircraftExpWeight value=\"0.000000\" />",
						"    <Shadow_DisableScreenSizeCheck value=\"false\" />",
						"    <Reflection_MipBlur value=\"false\" />",
						"    <FXAA_Enabled value=\"false\" />",
						"    <TXAA_Enabled value=\"false\" />",
						"    <Lighting_FogVolumes value=\"false\" />",
						"    <Shader_SSA value=\"false\" />",
						this.graphicsAPIVersion,
						"    <CityDensity value=\"0.000000\" />",
						"    <PedVarietyMultiplier value=\"0.000000\" />",
						"    <VehicleVarietyMultiplier value=\"0.000000\" />",
						"    <PostFX value=\"0\" />",
						"    <DoF value=\"false\" />",
						"    <HdStreamingInFlight value=\"false\" />",
						"    <MaxLodScale value=\"-0.250000\" />",
						"    <MotionBlurStrength value=\"0.000000\" />",
						"  </graphics>",
						"  <system>",
						"    <numBytesPerReplayBlock value=\"9000000\" />",
						"    <numReplayBlocks value=\"36\" />",
						"    <maxSizeOfStreamingReplay value=\"1024\" />",
						"    <maxFileStoreSize value=\"65536\" />",
						"  </system>",
						"  <audio>",
						"    <Audio3d value=\"false\" />",
						"  </audio>",
						"  <video>",
						"    <AdapterIndex value=\"0\" />",
						"    <OutputIndex value=\"0\" />",
						"    <ScreenWidth value=\"" + this.DefaultWidth + "\" />",
						"    <ScreenHeight value=\"" + this.DefaultHeight + "\" />",
						string.Join(Environment.NewLine, array),
						"    <Windowed value=\"0\" />",
						"    <VSync value=\"0\" />",
						"    <Stereo value=\"0\" />",
						"    <Convergence value=\"0.001000\" />",
						"    <Separation value=\"1.000000\" />",
						"    <PauseOnFocusLoss value=\"0\" />",
						"    <AspectRatio value=\"0\" />",
						"  </video>",
						string.Join(Environment.NewLine, array2),
						"</Settings>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.gta_settingloc, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.gta_settingloc, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array = (from s in File.ReadAllLines(this.gta_settingloc)
						where s.Contains("<RefreshRate")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.gta_settingloc)
						where s.Contains("<VideoCardDescription>")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004E3 RID: 1251 RVA: 0x00116698 File Offset: 0x00114898
		private void GTAV_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
						"",
						"<Settings>",
						"  <version value=\"27\" />",
						"  <configSource>SMC_AUTO</configSource>",
						"  <graphics>",
						"    <Tessellation value=\"0\" />",
						"    <LodScale value=\"0.000000\" />",
						"    <PedLodBias value=\"0.000000\" />",
						"    <VehicleLodBias value=\"0.000000\" />",
						"    <ShadowQuality value=\"0\" />",
						"    <ReflectionQuality value=\"0\" />",
						"    <ReflectionMSAA value=\"0\" />",
						"    <SSAO value=\"0\" />",
						"    <AnisotropicFiltering value=\"0\" />",
						"    <MSAA value=\"0\" />",
						"    <MSAAFragments value=\"0\" />",
						"    <MSAAQuality value=\"0\" />",
						"    <SamplingMode value=\"0\" />",
						"    <TextureQuality value=\"0\" />",
						"    <ParticleQuality value=\"0\" />",
						"    <WaterQuality value=\"0\" />",
						"    <GrassQuality value=\"0\" />",
						"    <ShaderQuality value=\"0\" />",
						"    <Shadow_SoftShadows value=\"3\" />",
						"    <UltraShadows_Enabled value=\"false\" />",
						"    <Shadow_ParticleShadows value=\"true\" />",
						"    <Shadow_Distance value=\"0.000000\" />",
						"    <Shadow_LongShadows value=\"false\" />",
						"    <Shadow_SplitZStart value=\"0.000000\" />",
						"    <Shadow_SplitZEnd value=\"0.000000\" />",
						"    <Shadow_aircraftExpWeight value=\"0.000000\" />",
						"    <Shadow_DisableScreenSizeCheck value=\"false\" />",
						"    <Reflection_MipBlur value=\"false\" />",
						"    <FXAA_Enabled value=\"false\" />",
						"    <TXAA_Enabled value=\"false\" />",
						"    <Lighting_FogVolumes value=\"false\" />",
						"    <Shader_SSA value=\"false\" />",
						this.graphicsAPIVersion,
						"    <CityDensity value=\"0.000000\" />",
						"    <PedVarietyMultiplier value=\"0.000000\" />",
						"    <VehicleVarietyMultiplier value=\"0.000000\" />",
						"    <PostFX value=\"0\" />",
						"    <DoF value=\"false\" />",
						"    <HdStreamingInFlight value=\"false\" />",
						"    <MaxLodScale value=\"-0.250000\" />",
						"    <MotionBlurStrength value=\"0.000000\" />",
						"  </graphics>",
						"  <system>",
						"    <numBytesPerReplayBlock value=\"9000000\" />",
						"    <numReplayBlocks value=\"36\" />",
						"    <maxSizeOfStreamingReplay value=\"1024\" />",
						"    <maxFileStoreSize value=\"65536\" />",
						"  </system>",
						"  <audio>",
						"    <Audio3d value=\"false\" />",
						"  </audio>",
						"  <video>",
						"    <AdapterIndex value=\"0\" />",
						"    <OutputIndex value=\"0\" />",
						"    <ScreenWidth value=\"" + this.DefaultWidth + "\" />",
						"    <ScreenHeight value=\"" + this.DefaultHeight + "\" />",
						string.Join(Environment.NewLine, array),
						"    <Windowed value=\"0\" />",
						"    <VSync value=\"0\" />",
						"    <Stereo value=\"0\" />",
						"    <Convergence value=\"0.001000\" />",
						"    <Separation value=\"1.000000\" />",
						"    <PauseOnFocusLoss value=\"0\" />",
						"    <AspectRatio value=\"0\" />",
						"  </video>",
						string.Join(Environment.NewLine, array2),
						"</Settings>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.gta_settingloc, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.gta_settingloc, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array = (from s in File.ReadAllLines(this.gta_settingloc)
						where s.Contains("<RefreshRate")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.gta_settingloc)
						where s.Contains("<VideoCardDescription>")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004E4 RID: 1252 RVA: 0x00116B7C File Offset: 0x00114D7C
		private void GTAV_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 3)
				{
					string[] array;
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
						"",
						"<Settings>",
						"  <version value=\"27\" />",
						"  <configSource>SMC_AUTO</configSource>",
						"  <graphics>",
						"    <Tessellation value=\"0\" />",
						"    <LodScale value=\"0.000000\" />",
						"    <PedLodBias value=\"0.000000\" />",
						"    <VehicleLodBias value=\"0.000000\" />",
						"    <ShadowQuality value=\"0\" />",
						"    <ReflectionQuality value=\"0\" />",
						"    <ReflectionMSAA value=\"0\" />",
						"    <SSAO value=\"0\" />",
						"    <AnisotropicFiltering value=\"0\" />",
						"    <MSAA value=\"0\" />",
						"    <MSAAFragments value=\"0\" />",
						"    <MSAAQuality value=\"0\" />",
						"    <SamplingMode value=\"0\" />",
						"    <TextureQuality value=\"0\" />",
						"    <ParticleQuality value=\"0\" />",
						"    <WaterQuality value=\"0\" />",
						"    <GrassQuality value=\"0\" />",
						"    <ShaderQuality value=\"0\" />",
						"    <Shadow_SoftShadows value=\"3\" />",
						"    <UltraShadows_Enabled value=\"false\" />",
						"    <Shadow_ParticleShadows value=\"true\" />",
						"    <Shadow_Distance value=\"0.000000\" />",
						"    <Shadow_LongShadows value=\"false\" />",
						"    <Shadow_SplitZStart value=\"0.000000\" />",
						"    <Shadow_SplitZEnd value=\"0.000000\" />",
						"    <Shadow_aircraftExpWeight value=\"0.000000\" />",
						"    <Shadow_DisableScreenSizeCheck value=\"false\" />",
						"    <Reflection_MipBlur value=\"false\" />",
						"    <FXAA_Enabled value=\"false\" />",
						"    <TXAA_Enabled value=\"false\" />",
						"    <Lighting_FogVolumes value=\"false\" />",
						"    <Shader_SSA value=\"false\" />",
						this.graphicsAPIVersion,
						"    <CityDensity value=\"0.000000\" />",
						"    <PedVarietyMultiplier value=\"0.000000\" />",
						"    <VehicleVarietyMultiplier value=\"0.000000\" />",
						"    <PostFX value=\"0\" />",
						"    <DoF value=\"false\" />",
						"    <HdStreamingInFlight value=\"false\" />",
						"    <MaxLodScale value=\"-0.250000\" />",
						"    <MotionBlurStrength value=\"0.000000\" />",
						"  </graphics>",
						"  <system>",
						"    <numBytesPerReplayBlock value=\"9000000\" />",
						"    <numReplayBlocks value=\"36\" />",
						"    <maxSizeOfStreamingReplay value=\"1024\" />",
						"    <maxFileStoreSize value=\"65536\" />",
						"  </system>",
						"  <audio>",
						"    <Audio3d value=\"false\" />",
						"  </audio>",
						"  <video>",
						"    <AdapterIndex value=\"0\" />",
						"    <OutputIndex value=\"0\" />",
						"    <ScreenWidth value=\"" + this.DefaultWidth + "\" />",
						"    <ScreenHeight value=\"" + this.DefaultHeight + "\" />",
						string.Join(Environment.NewLine, array),
						"    <Windowed value=\"0\" />",
						"    <VSync value=\"0\" />",
						"    <Stereo value=\"0\" />",
						"    <Convergence value=\"0.001000\" />",
						"    <Separation value=\"1.000000\" />",
						"    <PauseOnFocusLoss value=\"0\" />",
						"    <AspectRatio value=\"0\" />",
						"  </video>",
						string.Join(Environment.NewLine, array2),
						"</Settings>",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.gta_settingloc, text);
					num = 6;
				}
				if (num == 4)
				{
					File.SetAttributes(this.gta_settingloc, FileAttributes.Normal);
					num = 5;
				}
				if (num == 2)
				{
					string[] array = (from s in File.ReadAllLines(this.gta_settingloc)
						where s.Contains("<RefreshRate")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array2 = (from s in File.ReadAllLines(this.gta_settingloc)
						where s.Contains("<VideoCardDescription>")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x060004E5 RID: 1253 RVA: 0x00117060 File Offset: 0x00115260
		private void HOL_g()
		{
			int num = 0;
			do
			{
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 6)
				{
					string[] array;
					string[] array2;
					string[] array3;
					string[] array4;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=60.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"sg.MeshQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Oregon",
						""
					});
					num = 7;
				}
				if (num == 9)
				{
					this.get_own_highonlife();
					num = 10;
				}
				if (num == 12)
				{
					string text2;
					File.WriteAllText(this.highonlife_second, text2);
					num = 13;
				}
				if (num == 13)
				{
					Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1065224602709655623/1280.sav", this.highonlife_third);
					num = 14;
				}
				if (num == 11)
				{
					string text3;
					File.WriteAllText(this.highonlife_first, text3);
					num = 12;
				}
				if (num == 10)
				{
					File.WriteAllText(this.highonlife_main, text);
					num = 11;
				}
				if (num == 8)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 9;
				}
				if (num == 7)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=60", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 8;
				}
				if (num == 5)
				{
					string[] array4 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastVRAMBenchmarkResult")
						select s).ToArray<string>();
					num = 6;
				}
				if (num == 4)
				{
					string[] array3 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastRAMBenchmarkResult")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 14);
		}

		// Token: 0x060004E6 RID: 1254 RVA: 0x00117A38 File Offset: 0x00115C38
		private void HOL_f()
		{
			int num = 0;
			do
			{
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 6)
				{
					string[] array;
					string[] array2;
					string[] array3;
					string[] array4;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=70.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"sg.MeshQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Oregon",
						""
					});
					num = 7;
				}
				if (num == 9)
				{
					this.get_own_highonlife();
					num = 10;
				}
				if (num == 12)
				{
					string text2;
					File.WriteAllText(this.highonlife_second, text2);
					num = 13;
				}
				if (num == 13)
				{
					Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1065224603087163443/1366.sav", this.highonlife_third);
					num = 14;
				}
				if (num == 11)
				{
					string text3;
					File.WriteAllText(this.highonlife_first, text3);
					num = 12;
				}
				if (num == 10)
				{
					File.WriteAllText(this.highonlife_main, text);
					num = 11;
				}
				if (num == 8)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 9;
				}
				if (num == 7)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=70", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 8;
				}
				if (num == 5)
				{
					string[] array4 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastVRAMBenchmarkResult")
						select s).ToArray<string>();
					num = 6;
				}
				if (num == 4)
				{
					string[] array3 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastRAMBenchmarkResult")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 14);
		}

		// Token: 0x060004E7 RID: 1255 RVA: 0x00118410 File Offset: 0x00116610
		private void HOL_d()
		{
			int num = 0;
			do
			{
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 6)
				{
					string[] array;
					string[] array2;
					string[] array3;
					string[] array4;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=80.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"sg.MeshQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Oregon",
						""
					});
					num = 7;
				}
				if (num == 9)
				{
					this.get_own_highonlife();
					num = 10;
				}
				if (num == 12)
				{
					string text2;
					File.WriteAllText(this.highonlife_second, text2);
					num = 13;
				}
				if (num == 13)
				{
					Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1065224603087163443/1366.sav", this.highonlife_third);
					num = 14;
				}
				if (num == 11)
				{
					string text3;
					File.WriteAllText(this.highonlife_first, text3);
					num = 12;
				}
				if (num == 10)
				{
					File.WriteAllText(this.highonlife_main, text);
					num = 11;
				}
				if (num == 8)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 9;
				}
				if (num == 7)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=80", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 8;
				}
				if (num == 5)
				{
					string[] array4 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastVRAMBenchmarkResult")
						select s).ToArray<string>();
					num = 6;
				}
				if (num == 4)
				{
					string[] array3 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastRAMBenchmarkResult")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 14);
		}

		// Token: 0x060004E8 RID: 1256 RVA: 0x00118DE8 File Offset: 0x00116FE8
		private void HOL_c()
		{
			int num = 0;
			do
			{
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 6)
				{
					string[] array;
					string[] array2;
					string[] array3;
					string[] array4;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=90.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"sg.MeshQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Oregon",
						""
					});
					num = 7;
				}
				if (num == 9)
				{
					this.get_own_highonlife();
					num = 10;
				}
				if (num == 12)
				{
					string text2;
					File.WriteAllText(this.highonlife_second, text2);
					num = 13;
				}
				if (num == 13)
				{
					Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1065224603393339414/1600.sav", this.highonlife_third);
					num = 14;
				}
				if (num == 11)
				{
					string text3;
					File.WriteAllText(this.highonlife_first, text3);
					num = 12;
				}
				if (num == 10)
				{
					File.WriteAllText(this.highonlife_main, text);
					num = 11;
				}
				if (num == 8)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 9;
				}
				if (num == 7)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=90", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 8;
				}
				if (num == 5)
				{
					string[] array4 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastVRAMBenchmarkResult")
						select s).ToArray<string>();
					num = 6;
				}
				if (num == 4)
				{
					string[] array3 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastRAMBenchmarkResult")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 14);
		}

		// Token: 0x060004E9 RID: 1257 RVA: 0x001197C0 File Offset: 0x001179C0
		private void HOL_b()
		{
			int num = 0;
			do
			{
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 6)
				{
					string[] array;
					string[] array2;
					string[] array3;
					string[] array4;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=95.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"sg.MeshQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Oregon",
						""
					});
					num = 7;
				}
				if (num == 9)
				{
					this.get_own_highonlife();
					num = 10;
				}
				if (num == 12)
				{
					string text2;
					File.WriteAllText(this.highonlife_second, text2);
					num = 13;
				}
				if (num == 13)
				{
					Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1065224604064436234/2560.sav", this.highonlife_third);
					num = 14;
				}
				if (num == 11)
				{
					string text3;
					File.WriteAllText(this.highonlife_first, text3);
					num = 12;
				}
				if (num == 10)
				{
					File.WriteAllText(this.highonlife_main, text);
					num = 11;
				}
				if (num == 8)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 9;
				}
				if (num == 7)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=95", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 8;
				}
				if (num == 5)
				{
					string[] array4 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastVRAMBenchmarkResult")
						select s).ToArray<string>();
					num = 6;
				}
				if (num == 4)
				{
					string[] array3 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastRAMBenchmarkResult")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 14);
		}

		// Token: 0x060004EA RID: 1258 RVA: 0x0011A198 File Offset: 0x00118398
		private void HOL_a()
		{
			int num = 0;
			do
			{
				if (num == 3)
				{
					(from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("GPUBenchmarkValue")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 6)
				{
					string[] array;
					string[] array2;
					string[] array3;
					string[] array4;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=100.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"sg.MeshQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"bUseDesiredScreenHeight=False",
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Oregon",
						""
					});
					num = 7;
				}
				if (num == 9)
				{
					this.get_own_highonlife();
					num = 10;
				}
				if (num == 12)
				{
					string text2;
					File.WriteAllText(this.highonlife_second, text2);
					num = 13;
				}
				if (num == 13)
				{
					Utils.DownloadFile("https://cdn.discordapp.com/attachments/901077907043156009/1065224604353835039/3840.sav", this.highonlife_third);
					num = 14;
				}
				if (num == 11)
				{
					string text3;
					File.WriteAllText(this.highonlife_first, text3);
					num = 12;
				}
				if (num == 10)
				{
					File.WriteAllText(this.highonlife_main, text);
					num = 11;
				}
				if (num == 8)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 9;
				}
				if (num == 7)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=100", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 8;
				}
				if (num == 5)
				{
					string[] array4 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastVRAMBenchmarkResult")
						select s).ToArray<string>();
					num = 6;
				}
				if (num == 4)
				{
					string[] array3 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastRAMBenchmarkResult")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 2)
				{
					string[] array2 = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string[] array = (from s in File.ReadAllLines(this.highonlife_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 14);
		}

		// Token: 0x060004EB RID: 1259 RVA: 0x0011AB70 File Offset: 0x00118D70
		private void HOGL_g()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 3)
				{
					array = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("r.GPULUIDHigh=")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 6)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=40", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				if (num == 9)
				{
					File.WriteAllText(this.hogwarts_first, text);
					num = 10;
				}
				if (num == 10)
				{
					string text2;
					File.WriteAllText(this.hogwarts_second, text2);
					num = 11;
				}
				if (num == 8)
				{
					string text3;
					File.WriteAllText(this.hogwarts_main, text3);
					num = 9;
				}
				if (num == 7)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				if (num == 5)
				{
					string text4;
					string[] array2;
					string[] array3;
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Phoenix.PhoenixGameSettings]",
						"FrameRateLimit=-1.000000",
						"bUseVSync=False",
						"EffectsSoundVolume=1.000000",
						"MusicSoundVolume=1.000000",
						"VoiceSoundVolume=1.000000",
						"SoundMuted=False",
						"MonoAudio=False",
						"DynamicRange=10.000000",
						"MasteringSuite=Headphones",
						"bEnableRaytracingShadows=False",
						"bEnableRaytracingReflections=False",
						"bEnableRaytracingAO=False",
						"PerformanceMode=",
						"bFrameRateUncapped=False",
						"CameraSettings=(FieldOfViewOffset=0.000000,InputSensitivityDefault=1.000000,InputSensitivityAiming=1.000000,InputAccelerationDefault=1.000000,InputAccelerationAiming=1.000000,AimAssistStrength=1.000000,GamepadDeadzone=0.000000,bGamepadSouthpaw=False,bGamepadAimingSwitch=False,bInvertX=False,bInvertY=False,bInvertFlightY=False,bToggleAim=False,FollowSpeed=1.000000,CameraShake=0.000000,bCineCameraShake=True,bDepthOfField=False,bChromaticAberration=False,bFilmGrain=False,bMotionBlur=False,MotionBlurAmount=1.000000,DirectorCam_RotationInputSensitivity=1.000000,DirectorCam_RotationInputAcceleration=1.000000,DirectorCam_RollInputSensitivity=1.000000,DirectorCam_RollInputAcceleration=1.000000,DirectorCam_RotationFiltering=0.600000,DirectorCam_MoveInputSensitivity=1.000000,DirectorCam_MoveInputAcceleration=1.000000,DirectorCam_PedestalInputSensitivity=1.000000,DirectorCam_PedestalInputAcceleration=1.000000,DirectorCam_MoveFiltering=0.600000,DirectorCam_ZoomInputSensitivity=1.000000,DirectorCam_ZoomInputAcceleration=1.000000,DirectorCam_ZoomFiltering=0.600000,DirectorCam_FocusDistanceInputSensitivity=1.000000,DirectorCam_FocusDistanceInputAcceleration=1.000000,DirectorCam_FocusDistanceFiltering=0.600000,DirectorCam_Aperture=10.000000,DirectorCam_AmbientIntensity=0.000000,DirectorCam_AmbientFrequency=1.000000,bDirectorCam_DollyInLocalSpace=True,bDirectorCam_TruckInLocalSpace=False,bDirectorCam_PedestalInLocalSpace=False,bDirectorCam_SwitchRollAndZoomInput=False)",
						"MenuReaderEnabled=False",
						"MenuReaderVoiceID=Microsoft David",
						"MenuReaderVoiceDescription=Microsoft David",
						"MenuReaderVoiceGender=Male",
						"MenuReaderVolume=0.700000",
						"ColorVisionDeficiencyType=NormalVision",
						"CursorSpeedMultiplier=1.000000",
						"MiniMapSize=2",
						"MiniMapOpacity=0.650000",
						"PathLineEnabled=True",
						"AccessibilityAudioCueOpacity=0.000000",
						"AccessibilityAudioCueScale=0.500000",
						"UseMinimalHud=False",
						"ShowTargetHighlights=True",
						"ShowTargetName=True",
						"ShowHudBeacons=True",
						"ShowNotificationElements=True",
						"ShowXPElements=True",
						"ShowMissionElements=True",
						"ShowSpellElements=True",
						"ShowMeterElements=True",
						"ShowMapElements=True",
						"ShowTargetElements=True",
						"ShowSpecialNotificationElements=True",
						"ShowTutorialElements=True",
						"ShowToolWheelElements=True",
						"ShowEnemyDamageElements=True",
						"ShowBeastControls=True",
						"FontSizeOffset=0",
						"FontIndex=0",
						"HighContrastMode=0",
						"AudioVisualizer=False",
						"bEnableKeyboardSprintWalkToggle=True",
						"bAccessibilitySpellToggle=False",
						"SubtitlesEnabled=True",
						"ControllerRumble=True",
						"RGBPeripheralsEnabled=True",
						"AlwaysUseCameraAiming=True",
						"INILanguageSetting=None",
						"SwitchTextLanguageSetting=None",
						"TiltControls=False",
						"TiltSensitivity=1.000000",
						"bIsUpscaleModeModified=True",
						"UpscaleMode=" + text4,
						"UpscaleSoftness=0.000000",
						"AntiAliasingMode=TAA_Low",
						"DefaultAntiAliasingMode=TAA_Low",
						"NvidiaLatencyMode=Off",
						"NvidiaFrameGeneration=True",
						"Brightness=2.200000",
						"MinToneMapLuminance=0.000100",
						"MidToneMapLuminance=25.000000",
						"MaxToneMapLuminance=2000.000000",
						"UIBrightness=1.000000",
						"bAutomaticHDRCalibration=True",
						string.Join(Environment.NewLine, array2),
						"bHardwareBenchmarkApplied=True",
						"GPUConfigPreset=3",
						"RecViewDistanceQuality=3",
						"RecAntiAliasingQuality=3",
						"RecShadowQuality=3",
						"RecPostProcessQuality=3",
						"RecTextureQuality=3",
						"RecEffectsQuality=3",
						"RecFoliageQuality=3",
						"RecShadingQuality=3",
						"RecFogQuality=3",
						"RecSkyQuality=3",
						"RecPopulationQuality=3",
						"RecRaytracingQuality=3",
						"bAltTooltipsEnabled=False",
						"bPauseOnFocusLoss=True",
						"FrameRateLimitMinimized=6.000000",
						"SubVersion=1",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"DesiredScreenWidth=" + this.DefaultHeight,
						"DesiredScreenHeight=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=2000",
						"PreferredFullscreenMode=0",
						"",
						"[SystemSettings]",
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array),
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=60.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=3",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"sg.VolumetricsQuality=0",
						"sg.SkyQuality=0",
						"sg.PopulationQuality=0",
						"sg.RaytracingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Phoenix",
						""
					});
					num = 6;
				}
				if (num == 4)
				{
					string[] array2 = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("MonitorIdx=")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 2)
				{
					string[] array3 = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("r.GPULUIDLow=")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string text4 = "None";
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 11);
		}

		// Token: 0x060004EC RID: 1260 RVA: 0x0011B7A0 File Offset: 0x001199A0
		private void HOGL_f()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 3)
				{
					array = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("r.GPULUIDHigh=")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 6)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=50", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				if (num == 9)
				{
					File.WriteAllText(this.hogwarts_first, text);
					num = 10;
				}
				if (num == 10)
				{
					string text2;
					File.WriteAllText(this.hogwarts_second, text2);
					num = 11;
				}
				if (num == 8)
				{
					string text3;
					File.WriteAllText(this.hogwarts_main, text3);
					num = 9;
				}
				if (num == 7)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				if (num == 5)
				{
					string text4;
					string[] array2;
					string[] array3;
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Phoenix.PhoenixGameSettings]",
						"FrameRateLimit=-1.000000",
						"bUseVSync=False",
						"EffectsSoundVolume=1.000000",
						"MusicSoundVolume=1.000000",
						"VoiceSoundVolume=1.000000",
						"SoundMuted=False",
						"MonoAudio=False",
						"DynamicRange=10.000000",
						"MasteringSuite=Headphones",
						"bEnableRaytracingShadows=False",
						"bEnableRaytracingReflections=False",
						"bEnableRaytracingAO=False",
						"PerformanceMode=",
						"bFrameRateUncapped=False",
						"CameraSettings=(FieldOfViewOffset=0.000000,InputSensitivityDefault=1.000000,InputSensitivityAiming=1.000000,InputAccelerationDefault=1.000000,InputAccelerationAiming=1.000000,AimAssistStrength=1.000000,GamepadDeadzone=0.000000,bGamepadSouthpaw=False,bGamepadAimingSwitch=False,bInvertX=False,bInvertY=False,bInvertFlightY=False,bToggleAim=False,FollowSpeed=1.000000,CameraShake=0.000000,bCineCameraShake=True,bDepthOfField=False,bChromaticAberration=False,bFilmGrain=False,bMotionBlur=False,MotionBlurAmount=1.000000,DirectorCam_RotationInputSensitivity=1.000000,DirectorCam_RotationInputAcceleration=1.000000,DirectorCam_RollInputSensitivity=1.000000,DirectorCam_RollInputAcceleration=1.000000,DirectorCam_RotationFiltering=0.600000,DirectorCam_MoveInputSensitivity=1.000000,DirectorCam_MoveInputAcceleration=1.000000,DirectorCam_PedestalInputSensitivity=1.000000,DirectorCam_PedestalInputAcceleration=1.000000,DirectorCam_MoveFiltering=0.600000,DirectorCam_ZoomInputSensitivity=1.000000,DirectorCam_ZoomInputAcceleration=1.000000,DirectorCam_ZoomFiltering=0.600000,DirectorCam_FocusDistanceInputSensitivity=1.000000,DirectorCam_FocusDistanceInputAcceleration=1.000000,DirectorCam_FocusDistanceFiltering=0.600000,DirectorCam_Aperture=10.000000,DirectorCam_AmbientIntensity=0.000000,DirectorCam_AmbientFrequency=1.000000,bDirectorCam_DollyInLocalSpace=True,bDirectorCam_TruckInLocalSpace=False,bDirectorCam_PedestalInLocalSpace=False,bDirectorCam_SwitchRollAndZoomInput=False)",
						"MenuReaderEnabled=False",
						"MenuReaderVoiceID=Microsoft David",
						"MenuReaderVoiceDescription=Microsoft David",
						"MenuReaderVoiceGender=Male",
						"MenuReaderVolume=0.700000",
						"ColorVisionDeficiencyType=NormalVision",
						"CursorSpeedMultiplier=1.000000",
						"MiniMapSize=2",
						"MiniMapOpacity=0.650000",
						"PathLineEnabled=True",
						"AccessibilityAudioCueOpacity=0.000000",
						"AccessibilityAudioCueScale=0.500000",
						"UseMinimalHud=False",
						"ShowTargetHighlights=True",
						"ShowTargetName=True",
						"ShowHudBeacons=True",
						"ShowNotificationElements=True",
						"ShowXPElements=True",
						"ShowMissionElements=True",
						"ShowSpellElements=True",
						"ShowMeterElements=True",
						"ShowMapElements=True",
						"ShowTargetElements=True",
						"ShowSpecialNotificationElements=True",
						"ShowTutorialElements=True",
						"ShowToolWheelElements=True",
						"ShowEnemyDamageElements=True",
						"ShowBeastControls=True",
						"FontSizeOffset=0",
						"FontIndex=0",
						"HighContrastMode=0",
						"AudioVisualizer=False",
						"bEnableKeyboardSprintWalkToggle=True",
						"bAccessibilitySpellToggle=False",
						"SubtitlesEnabled=True",
						"ControllerRumble=True",
						"RGBPeripheralsEnabled=True",
						"AlwaysUseCameraAiming=True",
						"INILanguageSetting=None",
						"SwitchTextLanguageSetting=None",
						"TiltControls=False",
						"TiltSensitivity=1.000000",
						"bIsUpscaleModeModified=True",
						"UpscaleMode=" + text4,
						"UpscaleSoftness=0.000000",
						"AntiAliasingMode=TAA_Low",
						"DefaultAntiAliasingMode=TAA_Low",
						"NvidiaLatencyMode=Off",
						"NvidiaFrameGeneration=True",
						"Brightness=2.200000",
						"MinToneMapLuminance=0.000100",
						"MidToneMapLuminance=25.000000",
						"MaxToneMapLuminance=2000.000000",
						"UIBrightness=1.000000",
						"bAutomaticHDRCalibration=True",
						string.Join(Environment.NewLine, array2),
						"bHardwareBenchmarkApplied=True",
						"GPUConfigPreset=3",
						"RecViewDistanceQuality=3",
						"RecAntiAliasingQuality=3",
						"RecShadowQuality=3",
						"RecPostProcessQuality=3",
						"RecTextureQuality=3",
						"RecEffectsQuality=3",
						"RecFoliageQuality=3",
						"RecShadingQuality=3",
						"RecFogQuality=3",
						"RecSkyQuality=3",
						"RecPopulationQuality=3",
						"RecRaytracingQuality=3",
						"bAltTooltipsEnabled=False",
						"bPauseOnFocusLoss=True",
						"FrameRateLimitMinimized=6.000000",
						"SubVersion=1",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"DesiredScreenWidth=" + this.DefaultHeight,
						"DesiredScreenHeight=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=2000",
						"PreferredFullscreenMode=0",
						"",
						"[SystemSettings]",
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array),
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=70.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=3",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"sg.VolumetricsQuality=0",
						"sg.SkyQuality=0",
						"sg.PopulationQuality=0",
						"sg.RaytracingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Phoenix",
						""
					});
					num = 6;
				}
				if (num == 4)
				{
					string[] array2 = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("MonitorIdx=")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 2)
				{
					string[] array3 = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("r.GPULUIDLow=")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string text4 = "None";
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 11);
		}

		// Token: 0x060004ED RID: 1261 RVA: 0x0011C3D0 File Offset: 0x0011A5D0
		private void HOGL_d()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 3)
				{
					array = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("r.GPULUIDHigh=")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 6)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=70", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				if (num == 9)
				{
					File.WriteAllText(this.hogwarts_first, text);
					num = 10;
				}
				if (num == 10)
				{
					string text2;
					File.WriteAllText(this.hogwarts_second, text2);
					num = 11;
				}
				if (num == 8)
				{
					string text3;
					File.WriteAllText(this.hogwarts_main, text3);
					num = 9;
				}
				if (num == 7)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				if (num == 5)
				{
					string text4;
					string[] array2;
					string[] array3;
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Phoenix.PhoenixGameSettings]",
						"FrameRateLimit=-1.000000",
						"bUseVSync=False",
						"EffectsSoundVolume=1.000000",
						"MusicSoundVolume=1.000000",
						"VoiceSoundVolume=1.000000",
						"SoundMuted=False",
						"MonoAudio=False",
						"DynamicRange=10.000000",
						"MasteringSuite=Headphones",
						"bEnableRaytracingShadows=False",
						"bEnableRaytracingReflections=False",
						"bEnableRaytracingAO=False",
						"PerformanceMode=",
						"bFrameRateUncapped=False",
						"CameraSettings=(FieldOfViewOffset=0.000000,InputSensitivityDefault=1.000000,InputSensitivityAiming=1.000000,InputAccelerationDefault=1.000000,InputAccelerationAiming=1.000000,AimAssistStrength=1.000000,GamepadDeadzone=0.000000,bGamepadSouthpaw=False,bGamepadAimingSwitch=False,bInvertX=False,bInvertY=False,bInvertFlightY=False,bToggleAim=False,FollowSpeed=1.000000,CameraShake=0.000000,bCineCameraShake=True,bDepthOfField=False,bChromaticAberration=False,bFilmGrain=False,bMotionBlur=False,MotionBlurAmount=1.000000,DirectorCam_RotationInputSensitivity=1.000000,DirectorCam_RotationInputAcceleration=1.000000,DirectorCam_RollInputSensitivity=1.000000,DirectorCam_RollInputAcceleration=1.000000,DirectorCam_RotationFiltering=0.600000,DirectorCam_MoveInputSensitivity=1.000000,DirectorCam_MoveInputAcceleration=1.000000,DirectorCam_PedestalInputSensitivity=1.000000,DirectorCam_PedestalInputAcceleration=1.000000,DirectorCam_MoveFiltering=0.600000,DirectorCam_ZoomInputSensitivity=1.000000,DirectorCam_ZoomInputAcceleration=1.000000,DirectorCam_ZoomFiltering=0.600000,DirectorCam_FocusDistanceInputSensitivity=1.000000,DirectorCam_FocusDistanceInputAcceleration=1.000000,DirectorCam_FocusDistanceFiltering=0.600000,DirectorCam_Aperture=10.000000,DirectorCam_AmbientIntensity=0.000000,DirectorCam_AmbientFrequency=1.000000,bDirectorCam_DollyInLocalSpace=True,bDirectorCam_TruckInLocalSpace=False,bDirectorCam_PedestalInLocalSpace=False,bDirectorCam_SwitchRollAndZoomInput=False)",
						"MenuReaderEnabled=False",
						"MenuReaderVoiceID=Microsoft David",
						"MenuReaderVoiceDescription=Microsoft David",
						"MenuReaderVoiceGender=Male",
						"MenuReaderVolume=0.700000",
						"ColorVisionDeficiencyType=NormalVision",
						"CursorSpeedMultiplier=1.000000",
						"MiniMapSize=2",
						"MiniMapOpacity=0.650000",
						"PathLineEnabled=True",
						"AccessibilityAudioCueOpacity=0.000000",
						"AccessibilityAudioCueScale=0.500000",
						"UseMinimalHud=False",
						"ShowTargetHighlights=True",
						"ShowTargetName=True",
						"ShowHudBeacons=True",
						"ShowNotificationElements=True",
						"ShowXPElements=True",
						"ShowMissionElements=True",
						"ShowSpellElements=True",
						"ShowMeterElements=True",
						"ShowMapElements=True",
						"ShowTargetElements=True",
						"ShowSpecialNotificationElements=True",
						"ShowTutorialElements=True",
						"ShowToolWheelElements=True",
						"ShowEnemyDamageElements=True",
						"ShowBeastControls=True",
						"FontSizeOffset=0",
						"FontIndex=0",
						"HighContrastMode=0",
						"AudioVisualizer=False",
						"bEnableKeyboardSprintWalkToggle=True",
						"bAccessibilitySpellToggle=False",
						"SubtitlesEnabled=True",
						"ControllerRumble=True",
						"RGBPeripheralsEnabled=True",
						"AlwaysUseCameraAiming=True",
						"INILanguageSetting=None",
						"SwitchTextLanguageSetting=None",
						"TiltControls=False",
						"TiltSensitivity=1.000000",
						"bIsUpscaleModeModified=True",
						"UpscaleMode=" + text4,
						"UpscaleSoftness=0.000000",
						"AntiAliasingMode=TAA_Low",
						"DefaultAntiAliasingMode=TAA_Low",
						"NvidiaLatencyMode=Off",
						"NvidiaFrameGeneration=True",
						"Brightness=2.200000",
						"MinToneMapLuminance=0.000100",
						"MidToneMapLuminance=25.000000",
						"MaxToneMapLuminance=2000.000000",
						"UIBrightness=1.000000",
						"bAutomaticHDRCalibration=True",
						string.Join(Environment.NewLine, array2),
						"bHardwareBenchmarkApplied=True",
						"GPUConfigPreset=3",
						"RecViewDistanceQuality=3",
						"RecAntiAliasingQuality=3",
						"RecShadowQuality=3",
						"RecPostProcessQuality=3",
						"RecTextureQuality=3",
						"RecEffectsQuality=3",
						"RecFoliageQuality=3",
						"RecShadingQuality=3",
						"RecFogQuality=3",
						"RecSkyQuality=3",
						"RecPopulationQuality=3",
						"RecRaytracingQuality=3",
						"bAltTooltipsEnabled=False",
						"bPauseOnFocusLoss=True",
						"FrameRateLimitMinimized=6.000000",
						"SubVersion=1",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"DesiredScreenWidth=" + this.DefaultHeight,
						"DesiredScreenHeight=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=2000",
						"PreferredFullscreenMode=0",
						"",
						"[SystemSettings]",
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array),
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=80.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=3",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"sg.VolumetricsQuality=0",
						"sg.SkyQuality=0",
						"sg.PopulationQuality=0",
						"sg.RaytracingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Phoenix",
						""
					});
					num = 6;
				}
				if (num == 4)
				{
					string[] array2 = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("MonitorIdx=")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 2)
				{
					string[] array3 = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("r.GPULUIDLow=")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string text4 = "None";
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 11);
		}

		// Token: 0x060004EE RID: 1262 RVA: 0x0011D000 File Offset: 0x0011B200
		private void HOGL_c()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 3)
				{
					array = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("r.GPULUIDHigh=")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 6)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=80", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				if (num == 9)
				{
					File.WriteAllText(this.hogwarts_first, text);
					num = 10;
				}
				if (num == 10)
				{
					string text2;
					File.WriteAllText(this.hogwarts_second, text2);
					num = 11;
				}
				if (num == 8)
				{
					string text3;
					File.WriteAllText(this.hogwarts_main, text3);
					num = 9;
				}
				if (num == 7)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				if (num == 5)
				{
					string text4;
					string[] array2;
					string[] array3;
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Phoenix.PhoenixGameSettings]",
						"FrameRateLimit=-1.000000",
						"bUseVSync=False",
						"EffectsSoundVolume=1.000000",
						"MusicSoundVolume=1.000000",
						"VoiceSoundVolume=1.000000",
						"SoundMuted=False",
						"MonoAudio=False",
						"DynamicRange=10.000000",
						"MasteringSuite=Headphones",
						"bEnableRaytracingShadows=False",
						"bEnableRaytracingReflections=False",
						"bEnableRaytracingAO=False",
						"PerformanceMode=",
						"bFrameRateUncapped=False",
						"CameraSettings=(FieldOfViewOffset=0.000000,InputSensitivityDefault=1.000000,InputSensitivityAiming=1.000000,InputAccelerationDefault=1.000000,InputAccelerationAiming=1.000000,AimAssistStrength=1.000000,GamepadDeadzone=0.000000,bGamepadSouthpaw=False,bGamepadAimingSwitch=False,bInvertX=False,bInvertY=False,bInvertFlightY=False,bToggleAim=False,FollowSpeed=1.000000,CameraShake=0.000000,bCineCameraShake=True,bDepthOfField=False,bChromaticAberration=False,bFilmGrain=False,bMotionBlur=False,MotionBlurAmount=1.000000,DirectorCam_RotationInputSensitivity=1.000000,DirectorCam_RotationInputAcceleration=1.000000,DirectorCam_RollInputSensitivity=1.000000,DirectorCam_RollInputAcceleration=1.000000,DirectorCam_RotationFiltering=0.600000,DirectorCam_MoveInputSensitivity=1.000000,DirectorCam_MoveInputAcceleration=1.000000,DirectorCam_PedestalInputSensitivity=1.000000,DirectorCam_PedestalInputAcceleration=1.000000,DirectorCam_MoveFiltering=0.600000,DirectorCam_ZoomInputSensitivity=1.000000,DirectorCam_ZoomInputAcceleration=1.000000,DirectorCam_ZoomFiltering=0.600000,DirectorCam_FocusDistanceInputSensitivity=1.000000,DirectorCam_FocusDistanceInputAcceleration=1.000000,DirectorCam_FocusDistanceFiltering=0.600000,DirectorCam_Aperture=10.000000,DirectorCam_AmbientIntensity=0.000000,DirectorCam_AmbientFrequency=1.000000,bDirectorCam_DollyInLocalSpace=True,bDirectorCam_TruckInLocalSpace=False,bDirectorCam_PedestalInLocalSpace=False,bDirectorCam_SwitchRollAndZoomInput=False)",
						"MenuReaderEnabled=False",
						"MenuReaderVoiceID=Microsoft David",
						"MenuReaderVoiceDescription=Microsoft David",
						"MenuReaderVoiceGender=Male",
						"MenuReaderVolume=0.700000",
						"ColorVisionDeficiencyType=NormalVision",
						"CursorSpeedMultiplier=1.000000",
						"MiniMapSize=2",
						"MiniMapOpacity=0.650000",
						"PathLineEnabled=True",
						"AccessibilityAudioCueOpacity=0.000000",
						"AccessibilityAudioCueScale=0.500000",
						"UseMinimalHud=False",
						"ShowTargetHighlights=True",
						"ShowTargetName=True",
						"ShowHudBeacons=True",
						"ShowNotificationElements=True",
						"ShowXPElements=True",
						"ShowMissionElements=True",
						"ShowSpellElements=True",
						"ShowMeterElements=True",
						"ShowMapElements=True",
						"ShowTargetElements=True",
						"ShowSpecialNotificationElements=True",
						"ShowTutorialElements=True",
						"ShowToolWheelElements=True",
						"ShowEnemyDamageElements=True",
						"ShowBeastControls=True",
						"FontSizeOffset=0",
						"FontIndex=0",
						"HighContrastMode=0",
						"AudioVisualizer=False",
						"bEnableKeyboardSprintWalkToggle=True",
						"bAccessibilitySpellToggle=False",
						"SubtitlesEnabled=True",
						"ControllerRumble=True",
						"RGBPeripheralsEnabled=True",
						"AlwaysUseCameraAiming=True",
						"INILanguageSetting=None",
						"SwitchTextLanguageSetting=None",
						"TiltControls=False",
						"TiltSensitivity=1.000000",
						"bIsUpscaleModeModified=True",
						"UpscaleMode=" + text4,
						"UpscaleSoftness=0.000000",
						"AntiAliasingMode=TAA_Low",
						"DefaultAntiAliasingMode=TAA_Low",
						"NvidiaLatencyMode=Off",
						"NvidiaFrameGeneration=True",
						"Brightness=2.200000",
						"MinToneMapLuminance=0.000100",
						"MidToneMapLuminance=25.000000",
						"MaxToneMapLuminance=2000.000000",
						"UIBrightness=1.000000",
						"bAutomaticHDRCalibration=True",
						string.Join(Environment.NewLine, array2),
						"bHardwareBenchmarkApplied=True",
						"GPUConfigPreset=3",
						"RecViewDistanceQuality=3",
						"RecAntiAliasingQuality=3",
						"RecShadowQuality=3",
						"RecPostProcessQuality=3",
						"RecTextureQuality=3",
						"RecEffectsQuality=3",
						"RecFoliageQuality=3",
						"RecShadingQuality=3",
						"RecFogQuality=3",
						"RecSkyQuality=3",
						"RecPopulationQuality=3",
						"RecRaytracingQuality=3",
						"bAltTooltipsEnabled=False",
						"bPauseOnFocusLoss=True",
						"FrameRateLimitMinimized=6.000000",
						"SubVersion=1",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"DesiredScreenWidth=" + this.DefaultHeight,
						"DesiredScreenHeight=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=2000",
						"PreferredFullscreenMode=0",
						"",
						"[SystemSettings]",
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array),
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=90.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=3",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"sg.VolumetricsQuality=0",
						"sg.SkyQuality=0",
						"sg.PopulationQuality=0",
						"sg.RaytracingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Phoenix",
						""
					});
					num = 6;
				}
				if (num == 4)
				{
					string[] array2 = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("MonitorIdx=")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 2)
				{
					string[] array3 = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("r.GPULUIDLow=")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 1)
				{
					string text4 = "None";
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 11);
		}

		// Token: 0x060004EF RID: 1263 RVA: 0x0011DC30 File Offset: 0x0011BE30
		private void HOGL_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = "None";
					num = 2;
				}
				string[] array;
				if (num == 2)
				{
					array = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("r.GPULUIDLow=")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array2;
				if (num == 4)
				{
					array2 = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("MonitorIdx=")
						select s).ToArray<string>();
					num = 5;
				}
				string text2;
				if (num == 5)
				{
					string[] array3;
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Phoenix.PhoenixGameSettings]",
						"FrameRateLimit=-1.000000",
						"bUseVSync=False",
						"EffectsSoundVolume=1.000000",
						"MusicSoundVolume=1.000000",
						"VoiceSoundVolume=1.000000",
						"SoundMuted=False",
						"MonoAudio=False",
						"DynamicRange=10.000000",
						"MasteringSuite=Headphones",
						"bEnableRaytracingShadows=False",
						"bEnableRaytracingReflections=False",
						"bEnableRaytracingAO=False",
						"PerformanceMode=",
						"bFrameRateUncapped=False",
						"CameraSettings=(FieldOfViewOffset=0.000000,InputSensitivityDefault=1.000000,InputSensitivityAiming=1.000000,InputAccelerationDefault=1.000000,InputAccelerationAiming=1.000000,AimAssistStrength=1.000000,GamepadDeadzone=0.000000,bGamepadSouthpaw=False,bGamepadAimingSwitch=False,bInvertX=False,bInvertY=False,bInvertFlightY=False,bToggleAim=False,FollowSpeed=1.000000,CameraShake=0.000000,bCineCameraShake=True,bDepthOfField=False,bChromaticAberration=False,bFilmGrain=False,bMotionBlur=False,MotionBlurAmount=1.000000,DirectorCam_RotationInputSensitivity=1.000000,DirectorCam_RotationInputAcceleration=1.000000,DirectorCam_RollInputSensitivity=1.000000,DirectorCam_RollInputAcceleration=1.000000,DirectorCam_RotationFiltering=0.600000,DirectorCam_MoveInputSensitivity=1.000000,DirectorCam_MoveInputAcceleration=1.000000,DirectorCam_PedestalInputSensitivity=1.000000,DirectorCam_PedestalInputAcceleration=1.000000,DirectorCam_MoveFiltering=0.600000,DirectorCam_ZoomInputSensitivity=1.000000,DirectorCam_ZoomInputAcceleration=1.000000,DirectorCam_ZoomFiltering=0.600000,DirectorCam_FocusDistanceInputSensitivity=1.000000,DirectorCam_FocusDistanceInputAcceleration=1.000000,DirectorCam_FocusDistanceFiltering=0.600000,DirectorCam_Aperture=10.000000,DirectorCam_AmbientIntensity=0.000000,DirectorCam_AmbientFrequency=1.000000,bDirectorCam_DollyInLocalSpace=True,bDirectorCam_TruckInLocalSpace=False,bDirectorCam_PedestalInLocalSpace=False,bDirectorCam_SwitchRollAndZoomInput=False)",
						"MenuReaderEnabled=False",
						"MenuReaderVoiceID=Microsoft David",
						"MenuReaderVoiceDescription=Microsoft David",
						"MenuReaderVoiceGender=Male",
						"MenuReaderVolume=0.700000",
						"ColorVisionDeficiencyType=NormalVision",
						"CursorSpeedMultiplier=1.000000",
						"MiniMapSize=2",
						"MiniMapOpacity=0.650000",
						"PathLineEnabled=True",
						"AccessibilityAudioCueOpacity=0.000000",
						"AccessibilityAudioCueScale=0.500000",
						"UseMinimalHud=False",
						"ShowTargetHighlights=True",
						"ShowTargetName=True",
						"ShowHudBeacons=True",
						"ShowNotificationElements=True",
						"ShowXPElements=True",
						"ShowMissionElements=True",
						"ShowSpellElements=True",
						"ShowMeterElements=True",
						"ShowMapElements=True",
						"ShowTargetElements=True",
						"ShowSpecialNotificationElements=True",
						"ShowTutorialElements=True",
						"ShowToolWheelElements=True",
						"ShowEnemyDamageElements=True",
						"ShowBeastControls=True",
						"FontSizeOffset=0",
						"FontIndex=0",
						"HighContrastMode=0",
						"AudioVisualizer=False",
						"bEnableKeyboardSprintWalkToggle=True",
						"bAccessibilitySpellToggle=False",
						"SubtitlesEnabled=True",
						"ControllerRumble=True",
						"RGBPeripheralsEnabled=True",
						"AlwaysUseCameraAiming=True",
						"INILanguageSetting=None",
						"SwitchTextLanguageSetting=None",
						"TiltControls=False",
						"TiltSensitivity=1.000000",
						"bIsUpscaleModeModified=True",
						"UpscaleMode=" + text,
						"UpscaleSoftness=0.000000",
						"AntiAliasingMode=TAA_Low",
						"DefaultAntiAliasingMode=TAA_Low",
						"NvidiaLatencyMode=Off",
						"NvidiaFrameGeneration=True",
						"Brightness=2.200000",
						"MinToneMapLuminance=0.000100",
						"MidToneMapLuminance=25.000000",
						"MaxToneMapLuminance=2000.000000",
						"UIBrightness=1.000000",
						"bAutomaticHDRCalibration=True",
						string.Join(Environment.NewLine, array2),
						"bHardwareBenchmarkApplied=True",
						"GPUConfigPreset=3",
						"RecViewDistanceQuality=3",
						"RecAntiAliasingQuality=3",
						"RecShadowQuality=3",
						"RecPostProcessQuality=3",
						"RecTextureQuality=3",
						"RecEffectsQuality=3",
						"RecFoliageQuality=3",
						"RecShadingQuality=3",
						"RecFogQuality=3",
						"RecSkyQuality=3",
						"RecPopulationQuality=3",
						"RecRaytracingQuality=3",
						"bAltTooltipsEnabled=False",
						"bPauseOnFocusLoss=True",
						"FrameRateLimitMinimized=6.000000",
						"SubVersion=1",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"DesiredScreenWidth=" + this.DefaultHeight,
						"DesiredScreenHeight=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=2000",
						"PreferredFullscreenMode=0",
						"",
						"[SystemSettings]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array3),
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=95.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=3",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"sg.VolumetricsQuality=0",
						"sg.SkyQuality=0",
						"sg.PopulationQuality=0",
						"sg.RaytracingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Phoenix",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 7)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				if (num == 8)
				{
					File.WriteAllText(this.hogwarts_main, text2);
					num = 9;
				}
				if (num == 10)
				{
					File.WriteAllText(this.hogwarts_second, text3);
					num = 11;
				}
				if (num == 9)
				{
					string text4;
					File.WriteAllText(this.hogwarts_first, text4);
					num = 10;
				}
				if (num == 6)
				{
					string text4 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=85", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				if (num == 3)
				{
					string[] array3 = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("r.GPULUIDHigh=")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 11);
		}

		// Token: 0x060004F0 RID: 1264 RVA: 0x0011E85C File Offset: 0x0011CA5C
		private void HOGL_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = "None";
					num = 2;
				}
				string[] array;
				if (num == 2)
				{
					array = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("r.GPULUIDLow=")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array2;
				if (num == 4)
				{
					array2 = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("MonitorIdx=")
						select s).ToArray<string>();
					num = 5;
				}
				string text2;
				if (num == 5)
				{
					string[] array3;
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Phoenix.PhoenixGameSettings]",
						"FrameRateLimit=-1.000000",
						"bUseVSync=False",
						"EffectsSoundVolume=1.000000",
						"MusicSoundVolume=1.000000",
						"VoiceSoundVolume=1.000000",
						"SoundMuted=False",
						"MonoAudio=False",
						"DynamicRange=10.000000",
						"MasteringSuite=Headphones",
						"bEnableRaytracingShadows=False",
						"bEnableRaytracingReflections=False",
						"bEnableRaytracingAO=False",
						"PerformanceMode=",
						"bFrameRateUncapped=False",
						"CameraSettings=(FieldOfViewOffset=0.000000,InputSensitivityDefault=1.000000,InputSensitivityAiming=1.000000,InputAccelerationDefault=1.000000,InputAccelerationAiming=1.000000,AimAssistStrength=1.000000,GamepadDeadzone=0.000000,bGamepadSouthpaw=False,bGamepadAimingSwitch=False,bInvertX=False,bInvertY=False,bInvertFlightY=False,bToggleAim=False,FollowSpeed=1.000000,CameraShake=0.000000,bCineCameraShake=True,bDepthOfField=False,bChromaticAberration=False,bFilmGrain=False,bMotionBlur=False,MotionBlurAmount=1.000000,DirectorCam_RotationInputSensitivity=1.000000,DirectorCam_RotationInputAcceleration=1.000000,DirectorCam_RollInputSensitivity=1.000000,DirectorCam_RollInputAcceleration=1.000000,DirectorCam_RotationFiltering=0.600000,DirectorCam_MoveInputSensitivity=1.000000,DirectorCam_MoveInputAcceleration=1.000000,DirectorCam_PedestalInputSensitivity=1.000000,DirectorCam_PedestalInputAcceleration=1.000000,DirectorCam_MoveFiltering=0.600000,DirectorCam_ZoomInputSensitivity=1.000000,DirectorCam_ZoomInputAcceleration=1.000000,DirectorCam_ZoomFiltering=0.600000,DirectorCam_FocusDistanceInputSensitivity=1.000000,DirectorCam_FocusDistanceInputAcceleration=1.000000,DirectorCam_FocusDistanceFiltering=0.600000,DirectorCam_Aperture=10.000000,DirectorCam_AmbientIntensity=0.000000,DirectorCam_AmbientFrequency=1.000000,bDirectorCam_DollyInLocalSpace=True,bDirectorCam_TruckInLocalSpace=False,bDirectorCam_PedestalInLocalSpace=False,bDirectorCam_SwitchRollAndZoomInput=False)",
						"MenuReaderEnabled=False",
						"MenuReaderVoiceID=Microsoft David",
						"MenuReaderVoiceDescription=Microsoft David",
						"MenuReaderVoiceGender=Male",
						"MenuReaderVolume=0.700000",
						"ColorVisionDeficiencyType=NormalVision",
						"CursorSpeedMultiplier=1.000000",
						"MiniMapSize=2",
						"MiniMapOpacity=0.650000",
						"PathLineEnabled=True",
						"AccessibilityAudioCueOpacity=0.000000",
						"AccessibilityAudioCueScale=0.500000",
						"UseMinimalHud=False",
						"ShowTargetHighlights=True",
						"ShowTargetName=True",
						"ShowHudBeacons=True",
						"ShowNotificationElements=True",
						"ShowXPElements=True",
						"ShowMissionElements=True",
						"ShowSpellElements=True",
						"ShowMeterElements=True",
						"ShowMapElements=True",
						"ShowTargetElements=True",
						"ShowSpecialNotificationElements=True",
						"ShowTutorialElements=True",
						"ShowToolWheelElements=True",
						"ShowEnemyDamageElements=True",
						"ShowBeastControls=True",
						"FontSizeOffset=0",
						"FontIndex=0",
						"HighContrastMode=0",
						"AudioVisualizer=False",
						"bEnableKeyboardSprintWalkToggle=True",
						"bAccessibilitySpellToggle=False",
						"SubtitlesEnabled=True",
						"ControllerRumble=True",
						"RGBPeripheralsEnabled=True",
						"AlwaysUseCameraAiming=True",
						"INILanguageSetting=None",
						"SwitchTextLanguageSetting=None",
						"TiltControls=False",
						"TiltSensitivity=1.000000",
						"bIsUpscaleModeModified=True",
						"UpscaleMode=" + text,
						"UpscaleSoftness=0.000000",
						"AntiAliasingMode=TAA_Low",
						"DefaultAntiAliasingMode=TAA_Low",
						"NvidiaLatencyMode=Off",
						"NvidiaFrameGeneration=True",
						"Brightness=2.200000",
						"MinToneMapLuminance=0.000100",
						"MidToneMapLuminance=25.000000",
						"MaxToneMapLuminance=2000.000000",
						"UIBrightness=1.000000",
						"bAutomaticHDRCalibration=True",
						string.Join(Environment.NewLine, array2),
						"bHardwareBenchmarkApplied=True",
						"GPUConfigPreset=3",
						"RecViewDistanceQuality=3",
						"RecAntiAliasingQuality=3",
						"RecShadowQuality=3",
						"RecPostProcessQuality=3",
						"RecTextureQuality=3",
						"RecEffectsQuality=3",
						"RecFoliageQuality=3",
						"RecShadingQuality=3",
						"RecFogQuality=3",
						"RecSkyQuality=3",
						"RecPopulationQuality=3",
						"RecRaytracingQuality=3",
						"bAltTooltipsEnabled=False",
						"bPauseOnFocusLoss=True",
						"FrameRateLimitMinimized=6.000000",
						"SubVersion=1",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"DesiredScreenWidth=" + this.DefaultHeight,
						"DesiredScreenHeight=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=2000",
						"PreferredFullscreenMode=0",
						"",
						"[SystemSettings]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array3),
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=100.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=3",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"sg.ShadingQuality=0",
						"sg.VolumetricsQuality=0",
						"sg.SkyQuality=0",
						"sg.PopulationQuality=0",
						"sg.RaytracingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=Phoenix",
						""
					});
					num = 6;
				}
				string text3;
				if (num == 7)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 8;
				}
				if (num == 8)
				{
					File.WriteAllText(this.hogwarts_main, text2);
					num = 9;
				}
				if (num == 10)
				{
					File.WriteAllText(this.hogwarts_second, text3);
					num = 11;
				}
				if (num == 9)
				{
					string text4;
					File.WriteAllText(this.hogwarts_first, text4);
					num = 10;
				}
				if (num == 6)
				{
					string text4 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=90", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 7;
				}
				if (num == 3)
				{
					string[] array3 = (from s in File.ReadAllLines(this.hogwarts_main)
						where s.Contains("r.GPULUIDHigh=")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 11);
		}

		// Token: 0x060004F1 RID: 1265 RVA: 0x0011F488 File Offset: 0x0011D688
		private void LOL_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"",
						"",
						"[FloatingText]",
						"Special_Enabled=1",
						"Score_Enabled=1",
						"QuestReceived_Enabled=1",
						"PhysicalDamage_Enabled=1",
						"ManaDamage_Enabled=0",
						"Level_Enabled=1",
						"Invulnerable_Enabled=1",
						"Heal_Enabled=1",
						"Gold_Enabled=1",
						"Experience_Enabled=0",
						"EnemyPhysicalDamage_Enabled=1",
						"Dodge_Enabled=1",
						"",
						"[General]",
						"EnableScreenShake=0",
						"SystemMouseSpeed=10",
						"Height=" + this.DefaultHeight,
						"Width=" + this.DefaultWidth,
						"MinimizeCameraMotion=0",
						"EnableLightFx=0",
						"EnableCustomAnnouncer=1",
						"AlwaysShowExtendedTooltip=0",
						"CfgVersion=12.5.425.9171",
						"WindowMode=0",
						"WaitForVerticalSync=0",
						"ThemeMusic=0",
						"SnapCameraOnRespawn=1",
						"ShowTurretRangeIndicators=1",
						"ShowGodray=1",
						"ShowCursorLocator=0",
						"RelativeTeamColors=1",
						"PreferOpenGLLegacyMode=0",
						"PreferDX9LegacyMode=0",
						"PredictMovement=0",
						"OSXMouseAcceleration=0",
						"HideEyeCandy=1",
						"GameMouseSpeed=10",
						"EnableTargetedAttackMove=0",
						"EnableAudio=1",
						"CursorScale=0.5000",
						"CursorOverride=0",
						"BindSysKeys=0",
						"AutoAcquireTarget=1",
						"",
						"[HUD]",
						"SmartCastWithIndicator_CastWhenNewSpellSelected=0",
						"SmartCastOnKeyRelease=1",
						"ShowTimestamps=0",
						"ShowTeamFramesOnLeft=0",
						"ShowSummonerNamesInScoreboard=0",
						"ShowSummonerNames=1",
						"ShowSpellCosts=0",
						"ShowNeutralCamps=1",
						"ShowAttackRadius=1",
						"ShowAlliedChat=1",
						"ShowAllChannelChat=0",
						"ScrollSmoothingEnabled=0",
						"ObjectTooltips=1",
						"NumericCooldownFormat=1",
						"MirroredScoreboard=0",
						"MinimapScale=1.0000",
						"MinimapMoveSelf=1",
						"MiddleClickDragScrollEnabled=0",
						"MapScrollSpeed=0.5000",
						"KeyboardScrollSpeed=0.0000",
						"GlobalScale=1",
						"FlipMiniMap=0",
						"FlashScreenWhenStunned=1",
						"FlashScreenWhenDamaged=1",
						"EternalsMilestoneDisplayMode=0",
						"EnableLineMissileVis=1",
						"EmoteSize=0",
						"EmotePopupUIDisplayMode=0",
						"DrawHealthBars=1",
						"DisableHudSpellClick=0",
						"ChatScale=100",
						"CameraLockMode=0",
						"AutoDisplayTarget=1",
						"",
						"[LossOfControl]",
						"ShowSlows=0",
						"LossOfControlEnabled=1",
						"",
						"[Performance]",
						"ShadowQuality=0",
						"FrameCapType=2",
						"EnvironmentQuality=1",
						"EffectsQuality=0",
						"CharacterQuality=0",
						"EnableGrassSwaying=0",
						"EnableFXAA=0",
						"CharacterInking=0",
						"EnableHUDAnimations=0",
						"",
						"[Voice]",
						"InputDevice=Default System Device",
						"InputVolume=0.5000",
						"ActivationSensitivity=0.6500",
						"InputMode=0",
						"ShowVoicePanelWithScoreboard=1",
						"ShowVoiceChatHalos=1",
						"",
						"[Volume]",
						"VoiceVolume=0.7500",
						"VoiceMute=0",
						"SfxVolume=0.7500",
						"SfxMute=0",
						"PingsVolume=0.7500",
						"PingsMute=0",
						"MusicVolume=0.7500",
						"MusicMute=0",
						"MasterVolume=0.1100",
						"MasterMute=0",
						"AnnouncerVolume=0.7500",
						"AnnouncerMute=0",
						"AmbienceVolume=0.7500",
						"AmbienceMute=0",
						"",
						"[MapSkinOptions]",
						"MapSkinOptionDisableWorlds=0",
						"MapSkinOptionDisableURF=0",
						"MapSkinOptionDisableStarGuardian=0",
						"MapSkinOptionDisableSnowdown=0",
						"MapSkinOptionDisableProject=0",
						"MapSkinOptionDisablePopstar=0",
						"MapSkinOptionDisablePoolParty=0",
						"MapSkinOptionDisableOdyssey=0",
						"MapSkinOptionDisableMSI=0",
						"MapSkinOptionDisableLunarRevel=0",
						"MapSkinOptionDisableArcade=0",
						"",
						"[Replay]",
						"EnableDirectedCamera=1",
						"",
						"[Mobile]",
						"LastTickerTime=",
						"AppRegion=",
						"SelectedQueue=1090",
						"iOSMetalUserId=-1",
						"iOSMetalPercentEnabled=0",
						"OfferedTutorial=0",
						"",
						"[Highlights]",
						"VideoQuality=0",
						"VideoFrameRate=60",
						"ScaleVideo=720",
						"AudioQuality=1",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x060004F2 RID: 1266 RVA: 0x0011F488 File Offset: 0x0011D688
		private void LOL_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"",
						"",
						"[FloatingText]",
						"Special_Enabled=1",
						"Score_Enabled=1",
						"QuestReceived_Enabled=1",
						"PhysicalDamage_Enabled=1",
						"ManaDamage_Enabled=0",
						"Level_Enabled=1",
						"Invulnerable_Enabled=1",
						"Heal_Enabled=1",
						"Gold_Enabled=1",
						"Experience_Enabled=0",
						"EnemyPhysicalDamage_Enabled=1",
						"Dodge_Enabled=1",
						"",
						"[General]",
						"EnableScreenShake=0",
						"SystemMouseSpeed=10",
						"Height=" + this.DefaultHeight,
						"Width=" + this.DefaultWidth,
						"MinimizeCameraMotion=0",
						"EnableLightFx=0",
						"EnableCustomAnnouncer=1",
						"AlwaysShowExtendedTooltip=0",
						"CfgVersion=12.5.425.9171",
						"WindowMode=0",
						"WaitForVerticalSync=0",
						"ThemeMusic=0",
						"SnapCameraOnRespawn=1",
						"ShowTurretRangeIndicators=1",
						"ShowGodray=1",
						"ShowCursorLocator=0",
						"RelativeTeamColors=1",
						"PreferOpenGLLegacyMode=0",
						"PreferDX9LegacyMode=0",
						"PredictMovement=0",
						"OSXMouseAcceleration=0",
						"HideEyeCandy=1",
						"GameMouseSpeed=10",
						"EnableTargetedAttackMove=0",
						"EnableAudio=1",
						"CursorScale=0.5000",
						"CursorOverride=0",
						"BindSysKeys=0",
						"AutoAcquireTarget=1",
						"",
						"[HUD]",
						"SmartCastWithIndicator_CastWhenNewSpellSelected=0",
						"SmartCastOnKeyRelease=1",
						"ShowTimestamps=0",
						"ShowTeamFramesOnLeft=0",
						"ShowSummonerNamesInScoreboard=0",
						"ShowSummonerNames=1",
						"ShowSpellCosts=0",
						"ShowNeutralCamps=1",
						"ShowAttackRadius=1",
						"ShowAlliedChat=1",
						"ShowAllChannelChat=0",
						"ScrollSmoothingEnabled=0",
						"ObjectTooltips=1",
						"NumericCooldownFormat=1",
						"MirroredScoreboard=0",
						"MinimapScale=1.0000",
						"MinimapMoveSelf=1",
						"MiddleClickDragScrollEnabled=0",
						"MapScrollSpeed=0.5000",
						"KeyboardScrollSpeed=0.0000",
						"GlobalScale=1",
						"FlipMiniMap=0",
						"FlashScreenWhenStunned=1",
						"FlashScreenWhenDamaged=1",
						"EternalsMilestoneDisplayMode=0",
						"EnableLineMissileVis=1",
						"EmoteSize=0",
						"EmotePopupUIDisplayMode=0",
						"DrawHealthBars=1",
						"DisableHudSpellClick=0",
						"ChatScale=100",
						"CameraLockMode=0",
						"AutoDisplayTarget=1",
						"",
						"[LossOfControl]",
						"ShowSlows=0",
						"LossOfControlEnabled=1",
						"",
						"[Performance]",
						"ShadowQuality=0",
						"FrameCapType=2",
						"EnvironmentQuality=1",
						"EffectsQuality=0",
						"CharacterQuality=0",
						"EnableGrassSwaying=0",
						"EnableFXAA=0",
						"CharacterInking=0",
						"EnableHUDAnimations=0",
						"",
						"[Voice]",
						"InputDevice=Default System Device",
						"InputVolume=0.5000",
						"ActivationSensitivity=0.6500",
						"InputMode=0",
						"ShowVoicePanelWithScoreboard=1",
						"ShowVoiceChatHalos=1",
						"",
						"[Volume]",
						"VoiceVolume=0.7500",
						"VoiceMute=0",
						"SfxVolume=0.7500",
						"SfxMute=0",
						"PingsVolume=0.7500",
						"PingsMute=0",
						"MusicVolume=0.7500",
						"MusicMute=0",
						"MasterVolume=0.1100",
						"MasterMute=0",
						"AnnouncerVolume=0.7500",
						"AnnouncerMute=0",
						"AmbienceVolume=0.7500",
						"AmbienceMute=0",
						"",
						"[MapSkinOptions]",
						"MapSkinOptionDisableWorlds=0",
						"MapSkinOptionDisableURF=0",
						"MapSkinOptionDisableStarGuardian=0",
						"MapSkinOptionDisableSnowdown=0",
						"MapSkinOptionDisableProject=0",
						"MapSkinOptionDisablePopstar=0",
						"MapSkinOptionDisablePoolParty=0",
						"MapSkinOptionDisableOdyssey=0",
						"MapSkinOptionDisableMSI=0",
						"MapSkinOptionDisableLunarRevel=0",
						"MapSkinOptionDisableArcade=0",
						"",
						"[Replay]",
						"EnableDirectedCamera=1",
						"",
						"[Mobile]",
						"LastTickerTime=",
						"AppRegion=",
						"SelectedQueue=1090",
						"iOSMetalUserId=-1",
						"iOSMetalPercentEnabled=0",
						"OfferedTutorial=0",
						"",
						"[Highlights]",
						"VideoQuality=0",
						"VideoFrameRate=60",
						"ScaleVideo=720",
						"AudioQuality=1",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x060004F3 RID: 1267 RVA: 0x0011F488 File Offset: 0x0011D688
		private void LOL_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"",
						"",
						"[FloatingText]",
						"Special_Enabled=1",
						"Score_Enabled=1",
						"QuestReceived_Enabled=1",
						"PhysicalDamage_Enabled=1",
						"ManaDamage_Enabled=0",
						"Level_Enabled=1",
						"Invulnerable_Enabled=1",
						"Heal_Enabled=1",
						"Gold_Enabled=1",
						"Experience_Enabled=0",
						"EnemyPhysicalDamage_Enabled=1",
						"Dodge_Enabled=1",
						"",
						"[General]",
						"EnableScreenShake=0",
						"SystemMouseSpeed=10",
						"Height=" + this.DefaultHeight,
						"Width=" + this.DefaultWidth,
						"MinimizeCameraMotion=0",
						"EnableLightFx=0",
						"EnableCustomAnnouncer=1",
						"AlwaysShowExtendedTooltip=0",
						"CfgVersion=12.5.425.9171",
						"WindowMode=0",
						"WaitForVerticalSync=0",
						"ThemeMusic=0",
						"SnapCameraOnRespawn=1",
						"ShowTurretRangeIndicators=1",
						"ShowGodray=1",
						"ShowCursorLocator=0",
						"RelativeTeamColors=1",
						"PreferOpenGLLegacyMode=0",
						"PreferDX9LegacyMode=0",
						"PredictMovement=0",
						"OSXMouseAcceleration=0",
						"HideEyeCandy=1",
						"GameMouseSpeed=10",
						"EnableTargetedAttackMove=0",
						"EnableAudio=1",
						"CursorScale=0.5000",
						"CursorOverride=0",
						"BindSysKeys=0",
						"AutoAcquireTarget=1",
						"",
						"[HUD]",
						"SmartCastWithIndicator_CastWhenNewSpellSelected=0",
						"SmartCastOnKeyRelease=1",
						"ShowTimestamps=0",
						"ShowTeamFramesOnLeft=0",
						"ShowSummonerNamesInScoreboard=0",
						"ShowSummonerNames=1",
						"ShowSpellCosts=0",
						"ShowNeutralCamps=1",
						"ShowAttackRadius=1",
						"ShowAlliedChat=1",
						"ShowAllChannelChat=0",
						"ScrollSmoothingEnabled=0",
						"ObjectTooltips=1",
						"NumericCooldownFormat=1",
						"MirroredScoreboard=0",
						"MinimapScale=1.0000",
						"MinimapMoveSelf=1",
						"MiddleClickDragScrollEnabled=0",
						"MapScrollSpeed=0.5000",
						"KeyboardScrollSpeed=0.0000",
						"GlobalScale=1",
						"FlipMiniMap=0",
						"FlashScreenWhenStunned=1",
						"FlashScreenWhenDamaged=1",
						"EternalsMilestoneDisplayMode=0",
						"EnableLineMissileVis=1",
						"EmoteSize=0",
						"EmotePopupUIDisplayMode=0",
						"DrawHealthBars=1",
						"DisableHudSpellClick=0",
						"ChatScale=100",
						"CameraLockMode=0",
						"AutoDisplayTarget=1",
						"",
						"[LossOfControl]",
						"ShowSlows=0",
						"LossOfControlEnabled=1",
						"",
						"[Performance]",
						"ShadowQuality=0",
						"FrameCapType=2",
						"EnvironmentQuality=1",
						"EffectsQuality=0",
						"CharacterQuality=0",
						"EnableGrassSwaying=0",
						"EnableFXAA=0",
						"CharacterInking=0",
						"EnableHUDAnimations=0",
						"",
						"[Voice]",
						"InputDevice=Default System Device",
						"InputVolume=0.5000",
						"ActivationSensitivity=0.6500",
						"InputMode=0",
						"ShowVoicePanelWithScoreboard=1",
						"ShowVoiceChatHalos=1",
						"",
						"[Volume]",
						"VoiceVolume=0.7500",
						"VoiceMute=0",
						"SfxVolume=0.7500",
						"SfxMute=0",
						"PingsVolume=0.7500",
						"PingsMute=0",
						"MusicVolume=0.7500",
						"MusicMute=0",
						"MasterVolume=0.1100",
						"MasterMute=0",
						"AnnouncerVolume=0.7500",
						"AnnouncerMute=0",
						"AmbienceVolume=0.7500",
						"AmbienceMute=0",
						"",
						"[MapSkinOptions]",
						"MapSkinOptionDisableWorlds=0",
						"MapSkinOptionDisableURF=0",
						"MapSkinOptionDisableStarGuardian=0",
						"MapSkinOptionDisableSnowdown=0",
						"MapSkinOptionDisableProject=0",
						"MapSkinOptionDisablePopstar=0",
						"MapSkinOptionDisablePoolParty=0",
						"MapSkinOptionDisableOdyssey=0",
						"MapSkinOptionDisableMSI=0",
						"MapSkinOptionDisableLunarRevel=0",
						"MapSkinOptionDisableArcade=0",
						"",
						"[Replay]",
						"EnableDirectedCamera=1",
						"",
						"[Mobile]",
						"LastTickerTime=",
						"AppRegion=",
						"SelectedQueue=1090",
						"iOSMetalUserId=-1",
						"iOSMetalPercentEnabled=0",
						"OfferedTutorial=0",
						"",
						"[Highlights]",
						"VideoQuality=0",
						"VideoFrameRate=60",
						"ScaleVideo=720",
						"AudioQuality=1",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x060004F4 RID: 1268 RVA: 0x0011FC60 File Offset: 0x0011DE60
		private void LOL_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"",
						"",
						"[FloatingText]",
						"Special_Enabled=1",
						"Score_Enabled=1",
						"QuestReceived_Enabled=1",
						"PhysicalDamage_Enabled=1",
						"ManaDamage_Enabled=0",
						"Level_Enabled=1",
						"Invulnerable_Enabled=1",
						"Heal_Enabled=1",
						"Gold_Enabled=1",
						"Experience_Enabled=0",
						"EnemyPhysicalDamage_Enabled=1",
						"Dodge_Enabled=1",
						"",
						"[General]",
						"EnableScreenShake=0",
						"SystemMouseSpeed=10",
						"Height=" + this.DefaultHeight,
						"Width=" + this.DefaultWidth,
						"MinimizeCameraMotion=0",
						"EnableLightFx=0",
						"EnableCustomAnnouncer=1",
						"AlwaysShowExtendedTooltip=0",
						"CfgVersion=12.5.425.9171",
						"WindowMode=0",
						"WaitForVerticalSync=0",
						"ThemeMusic=0",
						"SnapCameraOnRespawn=1",
						"ShowTurretRangeIndicators=1",
						"ShowGodray=1",
						"ShowCursorLocator=0",
						"RelativeTeamColors=1",
						"PreferOpenGLLegacyMode=0",
						"PreferDX9LegacyMode=0",
						"PredictMovement=0",
						"OSXMouseAcceleration=0",
						"HideEyeCandy=1",
						"GameMouseSpeed=10",
						"EnableTargetedAttackMove=0",
						"EnableAudio=1",
						"CursorScale=0.5000",
						"CursorOverride=0",
						"BindSysKeys=0",
						"AutoAcquireTarget=1",
						"",
						"[HUD]",
						"SmartCastWithIndicator_CastWhenNewSpellSelected=0",
						"SmartCastOnKeyRelease=1",
						"ShowTimestamps=0",
						"ShowTeamFramesOnLeft=0",
						"ShowSummonerNamesInScoreboard=0",
						"ShowSummonerNames=1",
						"ShowSpellCosts=0",
						"ShowNeutralCamps=1",
						"ShowAttackRadius=1",
						"ShowAlliedChat=1",
						"ShowAllChannelChat=0",
						"ScrollSmoothingEnabled=0",
						"ObjectTooltips=1",
						"NumericCooldownFormat=1",
						"MirroredScoreboard=0",
						"MinimapScale=1.0000",
						"MinimapMoveSelf=1",
						"MiddleClickDragScrollEnabled=0",
						"MapScrollSpeed=0.5000",
						"KeyboardScrollSpeed=0.0000",
						"GlobalScale=1",
						"FlipMiniMap=0",
						"FlashScreenWhenStunned=1",
						"FlashScreenWhenDamaged=1",
						"EternalsMilestoneDisplayMode=0",
						"EnableLineMissileVis=1",
						"EmoteSize=0",
						"EmotePopupUIDisplayMode=0",
						"DrawHealthBars=1",
						"DisableHudSpellClick=0",
						"ChatScale=100",
						"CameraLockMode=0",
						"AutoDisplayTarget=1",
						"",
						"[LossOfControl]",
						"ShowSlows=0",
						"LossOfControlEnabled=1",
						"",
						"[Performance]",
						"ShadowQuality=1",
						"FrameCapType=2",
						"EnvironmentQuality=1",
						"EffectsQuality=0",
						"CharacterQuality=0",
						"EnableGrassSwaying=0",
						"EnableFXAA=0",
						"CharacterInking=0",
						"EnableHUDAnimations=0",
						"",
						"[Voice]",
						"InputDevice=Default System Device",
						"InputVolume=0.5000",
						"ActivationSensitivity=0.6500",
						"InputMode=0",
						"ShowVoicePanelWithScoreboard=1",
						"ShowVoiceChatHalos=1",
						"",
						"[Volume]",
						"VoiceVolume=0.7500",
						"VoiceMute=0",
						"SfxVolume=0.7500",
						"SfxMute=0",
						"PingsVolume=0.7500",
						"PingsMute=0",
						"MusicVolume=0.7500",
						"MusicMute=0",
						"MasterVolume=0.1100",
						"MasterMute=0",
						"AnnouncerVolume=0.7500",
						"AnnouncerMute=0",
						"AmbienceVolume=0.7500",
						"AmbienceMute=0",
						"",
						"[MapSkinOptions]",
						"MapSkinOptionDisableWorlds=0",
						"MapSkinOptionDisableURF=0",
						"MapSkinOptionDisableStarGuardian=0",
						"MapSkinOptionDisableSnowdown=0",
						"MapSkinOptionDisableProject=0",
						"MapSkinOptionDisablePopstar=0",
						"MapSkinOptionDisablePoolParty=0",
						"MapSkinOptionDisableOdyssey=0",
						"MapSkinOptionDisableMSI=0",
						"MapSkinOptionDisableLunarRevel=0",
						"MapSkinOptionDisableArcade=0",
						"",
						"[Replay]",
						"EnableDirectedCamera=1",
						"",
						"[Mobile]",
						"LastTickerTime=",
						"AppRegion=",
						"SelectedQueue=1090",
						"iOSMetalUserId=-1",
						"iOSMetalPercentEnabled=0",
						"OfferedTutorial=0",
						"",
						"[Highlights]",
						"VideoQuality=0",
						"VideoFrameRate=60",
						"ScaleVideo=720",
						"AudioQuality=1",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x060004F5 RID: 1269 RVA: 0x00120438 File Offset: 0x0011E638
		private void LOL_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"",
						"",
						"[FloatingText]",
						"Special_Enabled=1",
						"Score_Enabled=1",
						"QuestReceived_Enabled=1",
						"PhysicalDamage_Enabled=1",
						"ManaDamage_Enabled=0",
						"Level_Enabled=1",
						"Invulnerable_Enabled=1",
						"Heal_Enabled=1",
						"Gold_Enabled=1",
						"Experience_Enabled=0",
						"EnemyPhysicalDamage_Enabled=1",
						"Dodge_Enabled=1",
						"",
						"[General]",
						"EnableScreenShake=0",
						"SystemMouseSpeed=10",
						"Height=" + this.DefaultHeight,
						"Width=" + this.DefaultWidth,
						"MinimizeCameraMotion=0",
						"EnableLightFx=0",
						"EnableCustomAnnouncer=1",
						"AlwaysShowExtendedTooltip=0",
						"CfgVersion=12.5.425.9171",
						"WindowMode=0",
						"WaitForVerticalSync=0",
						"ThemeMusic=0",
						"SnapCameraOnRespawn=1",
						"ShowTurretRangeIndicators=1",
						"ShowGodray=1",
						"ShowCursorLocator=0",
						"RelativeTeamColors=1",
						"PreferOpenGLLegacyMode=0",
						"PreferDX9LegacyMode=0",
						"PredictMovement=0",
						"OSXMouseAcceleration=0",
						"HideEyeCandy=1",
						"GameMouseSpeed=10",
						"EnableTargetedAttackMove=0",
						"EnableAudio=1",
						"CursorScale=0.5000",
						"CursorOverride=0",
						"BindSysKeys=0",
						"AutoAcquireTarget=1",
						"",
						"[HUD]",
						"SmartCastWithIndicator_CastWhenNewSpellSelected=0",
						"SmartCastOnKeyRelease=1",
						"ShowTimestamps=0",
						"ShowTeamFramesOnLeft=0",
						"ShowSummonerNamesInScoreboard=0",
						"ShowSummonerNames=1",
						"ShowSpellCosts=0",
						"ShowNeutralCamps=1",
						"ShowAttackRadius=1",
						"ShowAlliedChat=1",
						"ShowAllChannelChat=0",
						"ScrollSmoothingEnabled=0",
						"ObjectTooltips=1",
						"NumericCooldownFormat=1",
						"MirroredScoreboard=0",
						"MinimapScale=1.0000",
						"MinimapMoveSelf=1",
						"MiddleClickDragScrollEnabled=0",
						"MapScrollSpeed=0.5000",
						"KeyboardScrollSpeed=0.0000",
						"GlobalScale=1",
						"FlipMiniMap=0",
						"FlashScreenWhenStunned=1",
						"FlashScreenWhenDamaged=1",
						"EternalsMilestoneDisplayMode=0",
						"EnableLineMissileVis=1",
						"EmoteSize=0",
						"EmotePopupUIDisplayMode=0",
						"DrawHealthBars=1",
						"DisableHudSpellClick=0",
						"ChatScale=100",
						"CameraLockMode=0",
						"AutoDisplayTarget=1",
						"",
						"[LossOfControl]",
						"ShowSlows=0",
						"LossOfControlEnabled=1",
						"",
						"[Performance]",
						"ShadowQuality=1",
						"FrameCapType=2",
						"EnvironmentQuality=2",
						"EffectsQuality=1",
						"CharacterQuality=1",
						"EnableGrassSwaying=1",
						"EnableFXAA=0",
						"CharacterInking=1",
						"EnableHUDAnimations=0",
						"",
						"[Voice]",
						"InputDevice=Default System Device",
						"InputVolume=0.5000",
						"ActivationSensitivity=0.6500",
						"InputMode=0",
						"ShowVoicePanelWithScoreboard=1",
						"ShowVoiceChatHalos=1",
						"",
						"[Volume]",
						"VoiceVolume=0.7500",
						"VoiceMute=0",
						"SfxVolume=0.7500",
						"SfxMute=0",
						"PingsVolume=0.7500",
						"PingsMute=0",
						"MusicVolume=0.7500",
						"MusicMute=0",
						"MasterVolume=0.1100",
						"MasterMute=0",
						"AnnouncerVolume=0.7500",
						"AnnouncerMute=0",
						"AmbienceVolume=0.7500",
						"AmbienceMute=0",
						"",
						"[MapSkinOptions]",
						"MapSkinOptionDisableWorlds=0",
						"MapSkinOptionDisableURF=0",
						"MapSkinOptionDisableStarGuardian=0",
						"MapSkinOptionDisableSnowdown=0",
						"MapSkinOptionDisableProject=0",
						"MapSkinOptionDisablePopstar=0",
						"MapSkinOptionDisablePoolParty=0",
						"MapSkinOptionDisableOdyssey=0",
						"MapSkinOptionDisableMSI=0",
						"MapSkinOptionDisableLunarRevel=0",
						"MapSkinOptionDisableArcade=0",
						"",
						"[Replay]",
						"EnableDirectedCamera=1",
						"",
						"[Mobile]",
						"LastTickerTime=",
						"AppRegion=",
						"SelectedQueue=1090",
						"iOSMetalUserId=-1",
						"iOSMetalPercentEnabled=0",
						"OfferedTutorial=0",
						"",
						"[Highlights]",
						"VideoQuality=0",
						"VideoFrameRate=60",
						"ScaleVideo=720",
						"AudioQuality=1",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x060004F6 RID: 1270 RVA: 0x00120C10 File Offset: 0x0011EE10
		private void LOL_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"",
						"",
						"[FloatingText]",
						"Special_Enabled=1",
						"Score_Enabled=1",
						"QuestReceived_Enabled=1",
						"PhysicalDamage_Enabled=1",
						"ManaDamage_Enabled=0",
						"Level_Enabled=1",
						"Invulnerable_Enabled=1",
						"Heal_Enabled=1",
						"Gold_Enabled=1",
						"Experience_Enabled=0",
						"EnemyPhysicalDamage_Enabled=1",
						"Dodge_Enabled=1",
						"",
						"[General]",
						"EnableScreenShake=0",
						"SystemMouseSpeed=10",
						"Height=" + this.DefaultHeight,
						"Width=" + this.DefaultWidth,
						"MinimizeCameraMotion=0",
						"EnableLightFx=0",
						"EnableCustomAnnouncer=1",
						"AlwaysShowExtendedTooltip=0",
						"CfgVersion=12.5.425.9171",
						"WindowMode=0",
						"WaitForVerticalSync=0",
						"ThemeMusic=0",
						"SnapCameraOnRespawn=1",
						"ShowTurretRangeIndicators=1",
						"ShowGodray=1",
						"ShowCursorLocator=0",
						"RelativeTeamColors=1",
						"PreferOpenGLLegacyMode=0",
						"PreferDX9LegacyMode=0",
						"PredictMovement=0",
						"OSXMouseAcceleration=0",
						"HideEyeCandy=1",
						"GameMouseSpeed=10",
						"EnableTargetedAttackMove=0",
						"EnableAudio=1",
						"CursorScale=0.5000",
						"CursorOverride=0",
						"BindSysKeys=0",
						"AutoAcquireTarget=1",
						"",
						"[HUD]",
						"SmartCastWithIndicator_CastWhenNewSpellSelected=0",
						"SmartCastOnKeyRelease=1",
						"ShowTimestamps=0",
						"ShowTeamFramesOnLeft=0",
						"ShowSummonerNamesInScoreboard=0",
						"ShowSummonerNames=1",
						"ShowSpellCosts=0",
						"ShowNeutralCamps=1",
						"ShowAttackRadius=1",
						"ShowAlliedChat=1",
						"ShowAllChannelChat=0",
						"ScrollSmoothingEnabled=0",
						"ObjectTooltips=1",
						"NumericCooldownFormat=1",
						"MirroredScoreboard=0",
						"MinimapScale=1.0000",
						"MinimapMoveSelf=1",
						"MiddleClickDragScrollEnabled=0",
						"MapScrollSpeed=0.5000",
						"KeyboardScrollSpeed=0.0000",
						"GlobalScale=1",
						"FlipMiniMap=0",
						"FlashScreenWhenStunned=1",
						"FlashScreenWhenDamaged=1",
						"EternalsMilestoneDisplayMode=0",
						"EnableLineMissileVis=1",
						"EmoteSize=0",
						"EmotePopupUIDisplayMode=0",
						"DrawHealthBars=1",
						"DisableHudSpellClick=0",
						"ChatScale=100",
						"CameraLockMode=0",
						"AutoDisplayTarget=1",
						"",
						"[LossOfControl]",
						"ShowSlows=0",
						"LossOfControlEnabled=1",
						"",
						"[Performance]",
						"ShadowQuality=2",
						"FrameCapType=2",
						"EnvironmentQuality=2",
						"EffectsQuality=1",
						"CharacterQuality=2",
						"EnableGrassSwaying=1",
						"EnableFXAA=1",
						"CharacterInking=1",
						"EnableHUDAnimations=0",
						"",
						"[Voice]",
						"InputDevice=Default System Device",
						"InputVolume=0.5000",
						"ActivationSensitivity=0.6500",
						"InputMode=0",
						"ShowVoicePanelWithScoreboard=1",
						"ShowVoiceChatHalos=1",
						"",
						"[Volume]",
						"VoiceVolume=0.7500",
						"VoiceMute=0",
						"SfxVolume=0.7500",
						"SfxMute=0",
						"PingsVolume=0.7500",
						"PingsMute=0",
						"MusicVolume=0.7500",
						"MusicMute=0",
						"MasterVolume=0.1100",
						"MasterMute=0",
						"AnnouncerVolume=0.7500",
						"AnnouncerMute=0",
						"AmbienceVolume=0.7500",
						"AmbienceMute=0",
						"",
						"[MapSkinOptions]",
						"MapSkinOptionDisableWorlds=0",
						"MapSkinOptionDisableURF=0",
						"MapSkinOptionDisableStarGuardian=0",
						"MapSkinOptionDisableSnowdown=0",
						"MapSkinOptionDisableProject=0",
						"MapSkinOptionDisablePopstar=0",
						"MapSkinOptionDisablePoolParty=0",
						"MapSkinOptionDisableOdyssey=0",
						"MapSkinOptionDisableMSI=0",
						"MapSkinOptionDisableLunarRevel=0",
						"MapSkinOptionDisableArcade=0",
						"",
						"[Replay]",
						"EnableDirectedCamera=1",
						"",
						"[Mobile]",
						"LastTickerTime=",
						"AppRegion=",
						"SelectedQueue=1090",
						"iOSMetalUserId=-1",
						"iOSMetalPercentEnabled=0",
						"OfferedTutorial=0",
						"",
						"[Highlights]",
						"VideoQuality=0",
						"VideoFrameRate=60",
						"ScaleVideo=720",
						"AudioQuality=1",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x060004F7 RID: 1271 RVA: 0x001213E8 File Offset: 0x0011F5E8
		private void NFSHeat_g()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.nfs_heat_main)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingPost 1",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.DisplayResolution_ID",
						"GstRender.DofMethod 0",
						"GstRender.EffectsQuality 0",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenScreen 1",
						"GstRender.HDRMode 1",
						"GstRender.LightingQuality 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PhotoSensitivityEnabled 0",
						"GstRender.PostProcessQuality 0",
						"GstRender.ReflectionQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionScale 0.60000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHasBeenSet 1",
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						""
					});
					num = 3;
				}
				if (num == 4)
				{
					File.SetAttributes(this.nfs_heat_main, FileAttributes.Normal);
					num = 5;
				}
				if (num == 5)
				{
					File.SetAttributes(this.nfs_heat_first, FileAttributes.Normal);
					num = 6;
				}
				if (num == 7)
				{
					string text2;
					File.WriteAllText(this.nfs_heat_first, text2);
					num = 8;
				}
				if (num == 6)
				{
					File.WriteAllText(this.nfs_heat_main, text);
					num = 7;
				}
				if (num == 3)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004F8 RID: 1272 RVA: 0x00121948 File Offset: 0x0011FB48
		private void NFSHeat_f()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.nfs_heat_main)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingPost 1",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.DisplayResolution_ID",
						"GstRender.DofMethod 0",
						"GstRender.EffectsQuality 0",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenScreen 1",
						"GstRender.HDRMode 1",
						"GstRender.LightingQuality 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PhotoSensitivityEnabled 0",
						"GstRender.PostProcessQuality 0",
						"GstRender.ReflectionQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionScale 0.70000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHasBeenSet 1",
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						""
					});
					num = 3;
				}
				if (num == 4)
				{
					File.SetAttributes(this.nfs_heat_main, FileAttributes.Normal);
					num = 5;
				}
				if (num == 5)
				{
					File.SetAttributes(this.nfs_heat_first, FileAttributes.Normal);
					num = 6;
				}
				if (num == 7)
				{
					string text2;
					File.WriteAllText(this.nfs_heat_first, text2);
					num = 8;
				}
				if (num == 6)
				{
					File.WriteAllText(this.nfs_heat_main, text);
					num = 7;
				}
				if (num == 3)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004F9 RID: 1273 RVA: 0x00121EA8 File Offset: 0x001200A8
		private void NFSHeat_d()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.nfs_heat_main)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingPost 1",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.DisplayResolution_ID",
						"GstRender.DofMethod 0",
						"GstRender.EffectsQuality 0",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenScreen 1",
						"GstRender.HDRMode 1",
						"GstRender.LightingQuality 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PhotoSensitivityEnabled 0",
						"GstRender.PostProcessQuality 0",
						"GstRender.ReflectionQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionScale 0.80000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHasBeenSet 1",
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						""
					});
					num = 3;
				}
				if (num == 4)
				{
					File.SetAttributes(this.nfs_heat_main, FileAttributes.Normal);
					num = 5;
				}
				if (num == 5)
				{
					File.SetAttributes(this.nfs_heat_first, FileAttributes.Normal);
					num = 6;
				}
				if (num == 7)
				{
					string text2;
					File.WriteAllText(this.nfs_heat_first, text2);
					num = 8;
				}
				if (num == 6)
				{
					File.WriteAllText(this.nfs_heat_main, text);
					num = 7;
				}
				if (num == 3)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004FA RID: 1274 RVA: 0x00122408 File Offset: 0x00120608
		private void NFSHeat_c()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.nfs_heat_main)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingPost 1",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.DisplayResolution_ID",
						"GstRender.DofMethod 0",
						"GstRender.EffectsQuality 0",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenScreen 1",
						"GstRender.HDRMode 1",
						"GstRender.LightingQuality 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PhotoSensitivityEnabled 0",
						"GstRender.PostProcessQuality 0",
						"GstRender.ReflectionQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionScale 0.90000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHasBeenSet 1",
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						""
					});
					num = 3;
				}
				if (num == 4)
				{
					File.SetAttributes(this.nfs_heat_main, FileAttributes.Normal);
					num = 5;
				}
				if (num == 5)
				{
					File.SetAttributes(this.nfs_heat_first, FileAttributes.Normal);
					num = 6;
				}
				if (num == 7)
				{
					string text2;
					File.WriteAllText(this.nfs_heat_first, text2);
					num = 8;
				}
				if (num == 6)
				{
					File.WriteAllText(this.nfs_heat_main, text);
					num = 7;
				}
				if (num == 3)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004FB RID: 1275 RVA: 0x00122968 File Offset: 0x00120B68
		private void NFSHeat_b()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.nfs_heat_main)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingPost 1",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.DisplayResolution_ID",
						"GstRender.DofMethod 0",
						"GstRender.EffectsQuality 0",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenScreen 1",
						"GstRender.HDRMode 1",
						"GstRender.LightingQuality 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PhotoSensitivityEnabled 0",
						"GstRender.PostProcessQuality 0",
						"GstRender.ReflectionQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionScale 0.95000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHasBeenSet 1",
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						""
					});
					num = 3;
				}
				if (num == 4)
				{
					File.SetAttributes(this.nfs_heat_main, FileAttributes.Normal);
					num = 5;
				}
				if (num == 5)
				{
					File.SetAttributes(this.nfs_heat_first, FileAttributes.Normal);
					num = 6;
				}
				if (num == 7)
				{
					string text2;
					File.WriteAllText(this.nfs_heat_first, text2);
					num = 8;
				}
				if (num == 6)
				{
					File.WriteAllText(this.nfs_heat_main, text);
					num = 7;
				}
				if (num == 3)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004FC RID: 1276 RVA: 0x00122EC8 File Offset: 0x001210C8
		private void NFSHeat_a()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.nfs_heat_main)
						where s.Contains("GstAudio")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						string.Join(Environment.NewLine, array),
						"GstRender.AmbientOcclusion 0",
						"GstRender.AnisotropicFilter 0",
						"GstRender.AntiAliasingPost 1",
						"GstRender.Brightness 0.500000",
						"GstRender.ColorBlindMode 0",
						"GstRender.DisplayResolution_ID",
						"GstRender.DofMethod 0",
						"GstRender.EffectsQuality 0",
						"GstRender.FullscreenMode 0",
						"GstRender.FullscreenScreen 1",
						"GstRender.HDRMode 1",
						"GstRender.LightingQuality 0",
						"GstRender.MeshQuality 0",
						"GstRender.MotionBlurEnabled 0",
						"GstRender.OverallGraphicsQuality 5",
						"GstRender.PhotoSensitivityEnabled 0",
						"GstRender.PostProcessQuality 0",
						"GstRender.ReflectionQuality 0",
						"GstRender.ResolutionHeight " + this.DefaultHeight,
						"GstRender.ResolutionScale 1.00000",
						"GstRender.ResolutionWidth " + this.DefaultWidth,
						"GstRender.ScreenSafeAreaHasBeenSet 1",
						"GstRender.ScreenSafeAreaHeight 1.000000",
						"GstRender.ScreenSafeAreaWidth 1.000000",
						"GstRender.ShadowQuality 0",
						"GstRender.TerrainQuality 0",
						"GstRender.TextureFiltering 0",
						"GstRender.TextureQuality 0",
						"GstRender.UndergrowthQuality 0",
						"GstRender.VSyncEnabled 0",
						""
					});
					num = 3;
				}
				if (num == 4)
				{
					File.SetAttributes(this.nfs_heat_main, FileAttributes.Normal);
					num = 5;
				}
				if (num == 5)
				{
					File.SetAttributes(this.nfs_heat_first, FileAttributes.Normal);
					num = 6;
				}
				if (num == 7)
				{
					string text2;
					File.WriteAllText(this.nfs_heat_first, text2);
					num = 8;
				}
				if (num == 6)
				{
					File.WriteAllText(this.nfs_heat_main, text);
					num = 7;
				}
				if (num == 3)
				{
					string text2 = string.Join(Environment.NewLine, new string[]
					{
						"RenderDevice.VSyncEnable 0", "Render.VSyncFlashTestEnable 0", "PostProcess.BlurMethod 0", "PostProcess.BlurPyramidQuarterResEnable 0", "WorldRender.MotionBlurEnable 0", "WorldRender.MotionRadialBlurMax 0", "WorldRender.MotionBlurQuality 0", "WorldRender.MotionBlurMaxSampleCount 0", "WorldRender.TiledMotionBlurEnable 0", "WorldRender.MotionBlurEnable 0",
						"WorldRender.MotionBlurForceOn 0", "WorldRender.MotionBlurFixedShutterTime 0", "PostProcess.DofMethod 0", "PostProcess.ForceDofEnable 0", "PostProcess.SpriteDofEnable 0", "PostProcess.SpriteDofHalfResolutionEnable 0", "PostProcess.DynamicAOEnable 0", "PostProcess.DynamicAOMethod 0", "RenderDevice.Dx11Enable 0", "RenderDevice.Dx11Dot1Enable 0",
						"RenderDevice.Dx11Dot1RuntimeEnable 0", "RenderDevice.DxDiagDriverDectectionEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceQuality 0", "PostProcess.ScreenSpaceRaytrace32BitEnable 0", "PostProcess.ScreenSpaceRaytraceEnable 0", "PostProcess.ScreenSpaceRaytraceDeferredResolveEnable 0", "PostProcess.ScreenSpaceRaytraceSeparateCoverageEnable 0", "PostProcess.ScreenSpaceRaytraceFullresEnable 0", "WorldRender.SpotLightShadowmapEnable 0",
						"WorldRender.SpotLightShadowmapResolution 256", "WorldRender.EmitterSunTransmittanceMapEnable 0", "WorldRender.EmitterSunTransmittanceMapResolution 0", "RenderDevice.StereoConvergenceScale 0", "RenderDevice.StereoSeparationScale 0", "RenderDevice.StereoSoldierZoomConvergenceScale 0", "RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "GstRender.ConsoleAntiAlias 0", "RenderDevice.TripleBufferingEnable 0",
						"RenderDevice.RenderAheadLimit 0", "RenderDevice.ForceRenderAheadLimit 0", "WorldRender.PlanarReflectionEnable 0", "WorldRender.FilmicEffectsEnable 0  ", "WorldRender.TransparencyShadowmapsEnable 0", "WorldRender.LightTileCsPathEnable 0", "WorldRender.FxaaEnable 0", "WorldRender.DistortionEnable 0", "WorldRender.FastHdrEnable 0", "WorldRender.TranslucencyAutoThicknessEnable 0",
						""
					});
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004FD RID: 1277 RVA: 0x00123428 File Offset: 0x00121628
		private void OW2_g()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUDeviceID")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUName")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 4)
				{
					array3 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUVenderID")
						select s).ToArray<string>();
					num = 5;
				}
				string text;
				if (num == 5)
				{
					string[] array4;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Cinematics.1]",
						"ShowIntro = \"0\"",
						"",
						"[GPU.6]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array3),
						"",
						"[Render.13]",
						"AADetail = \"0\"",
						"AnisotropicFiltering = \"0\"",
						"DirectionalShadowDetail = \"1\"",
						"FrameRateCap = \"600\"",
						"FullScreenRefresh = \"0\"",
						"FullScreenHeight = \"" + this.DefaultHeight + "\"",
						"FullScreenWidth = \"" + this.DefaultWidth + "\"",
						"GFXPresetLevel = \"1\"",
						"HorizontalFOV = \"88.000000\"",
						"LightQuality = \"0\"",
						"LocalFogDetail = \"1\"",
						"LocalReflections = \"0\"",
						"MaxAnisotropy = \"1\"",
						"MaxEffectsAnisotropy = \"1\"",
						"MaxExtraQualityAnisotropy = \"1\"",
						"MaxWorldScale = \"60.000000\"",
						"ModelQuality = \"1\"",
						"RefractionDetail = \"0\"",
						"ShaderQuality = \"1\"",
						"ShowFPS = \"0\"",
						"SimpleDirectionalShadows = \"1\"",
						"SoundQuality = \"1\"",
						"SSAODetail = \"0\"",
						"TextureDetail = \"1\"",
						"UseCustomFrameRates = \"1\"",
						"UseCustomWorldScale = \"1\"",
						"WindowedRefresh = \"0\"",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.overwatch2_settings, text);
					num = 8;
				}
				if (num == 6)
				{
					File.SetAttributes(this.overwatch2_settings, FileAttributes.Normal);
					num = 7;
				}
				if (num == 3)
				{
					string[] array4 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUScaler")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004FE RID: 1278 RVA: 0x001237FC File Offset: 0x001219FC
		private void OW2_f()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUDeviceID")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUName")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 4)
				{
					array3 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUVenderID")
						select s).ToArray<string>();
					num = 5;
				}
				string text;
				if (num == 5)
				{
					string[] array4;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Cinematics.1]",
						"ShowIntro = \"0\"",
						"",
						"[GPU.6]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array3),
						"",
						"[Render.13]",
						"AADetail = \"0\"",
						"AnisotropicFiltering = \"0\"",
						"DirectionalShadowDetail = \"1\"",
						"FrameRateCap = \"600\"",
						"FullScreenRefresh = \"0\"",
						"FullScreenHeight = \"" + this.DefaultHeight + "\"",
						"FullScreenWidth = \"" + this.DefaultWidth + "\"",
						"GFXPresetLevel = \"1\"",
						"HorizontalFOV = \"88.000000\"",
						"LightQuality = \"0\"",
						"LocalFogDetail = \"1\"",
						"LocalReflections = \"0\"",
						"MaxAnisotropy = \"1\"",
						"MaxEffectsAnisotropy = \"1\"",
						"MaxExtraQualityAnisotropy = \"1\"",
						"MaxWorldScale = \"70.000000\"",
						"ModelQuality = \"1\"",
						"RefractionDetail = \"0\"",
						"ShaderQuality = \"1\"",
						"ShowFPS = \"0\"",
						"SimpleDirectionalShadows = \"1\"",
						"SoundQuality = \"1\"",
						"SSAODetail = \"0\"",
						"TextureDetail = \"1\"",
						"UseCustomFrameRates = \"1\"",
						"UseCustomWorldScale = \"1\"",
						"WindowedRefresh = \"0\"",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.overwatch2_settings, text);
					num = 8;
				}
				if (num == 6)
				{
					File.SetAttributes(this.overwatch2_settings, FileAttributes.Normal);
					num = 7;
				}
				if (num == 3)
				{
					string[] array4 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUScaler")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x060004FF RID: 1279 RVA: 0x00123BD0 File Offset: 0x00121DD0
		private void OW2_d()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUDeviceID")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUName")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 4)
				{
					array3 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUVenderID")
						select s).ToArray<string>();
					num = 5;
				}
				string text;
				if (num == 5)
				{
					string[] array4;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Cinematics.1]",
						"ShowIntro = \"0\"",
						"",
						"[GPU.6]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array3),
						"",
						"[Render.13]",
						"AADetail = \"0\"",
						"AnisotropicFiltering = \"0\"",
						"DirectionalShadowDetail = \"1\"",
						"FrameRateCap = \"600\"",
						"FullScreenRefresh = \"0\"",
						"FullScreenHeight = \"" + this.DefaultHeight + "\"",
						"FullScreenWidth = \"" + this.DefaultWidth + "\"",
						"GFXPresetLevel = \"1\"",
						"HorizontalFOV = \"88.000000\"",
						"LightQuality = \"0\"",
						"LocalFogDetail = \"1\"",
						"LocalReflections = \"0\"",
						"MaxAnisotropy = \"1\"",
						"MaxEffectsAnisotropy = \"1\"",
						"MaxExtraQualityAnisotropy = \"1\"",
						"MaxWorldScale = \"80.000000\"",
						"ModelQuality = \"1\"",
						"RefractionDetail = \"0\"",
						"ShaderQuality = \"1\"",
						"ShowFPS = \"0\"",
						"SimpleDirectionalShadows = \"1\"",
						"SoundQuality = \"1\"",
						"SSAODetail = \"0\"",
						"TextureDetail = \"1\"",
						"UseCustomFrameRates = \"1\"",
						"UseCustomWorldScale = \"1\"",
						"WindowedRefresh = \"0\"",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.overwatch2_settings, text);
					num = 8;
				}
				if (num == 6)
				{
					File.SetAttributes(this.overwatch2_settings, FileAttributes.Normal);
					num = 7;
				}
				if (num == 3)
				{
					string[] array4 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUScaler")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000500 RID: 1280 RVA: 0x00123FA4 File Offset: 0x001221A4
		private void OW2_c()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUDeviceID")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUName")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 4)
				{
					array3 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUVenderID")
						select s).ToArray<string>();
					num = 5;
				}
				string text;
				if (num == 5)
				{
					string[] array4;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Cinematics.1]",
						"ShowIntro = \"0\"",
						"",
						"[GPU.6]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array3),
						"",
						"[Render.13]",
						"AADetail = \"0\"",
						"AnisotropicFiltering = \"0\"",
						"DirectionalShadowDetail = \"1\"",
						"FrameRateCap = \"600\"",
						"FullScreenRefresh = \"0\"",
						"FullScreenHeight = \"" + this.DefaultHeight + "\"",
						"FullScreenWidth = \"" + this.DefaultWidth + "\"",
						"GFXPresetLevel = \"1\"",
						"HorizontalFOV = \"88.000000\"",
						"LightQuality = \"0\"",
						"LocalFogDetail = \"1\"",
						"LocalReflections = \"0\"",
						"MaxAnisotropy = \"1\"",
						"MaxEffectsAnisotropy = \"1\"",
						"MaxExtraQualityAnisotropy = \"1\"",
						"MaxWorldScale = \"90.000000\"",
						"ModelQuality = \"1\"",
						"RefractionDetail = \"0\"",
						"ShaderQuality = \"1\"",
						"ShowFPS = \"0\"",
						"SimpleDirectionalShadows = \"1\"",
						"SoundQuality = \"1\"",
						"SSAODetail = \"0\"",
						"TextureDetail = \"1\"",
						"UseCustomFrameRates = \"1\"",
						"UseCustomWorldScale = \"1\"",
						"WindowedRefresh = \"0\"",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.overwatch2_settings, text);
					num = 8;
				}
				if (num == 6)
				{
					File.SetAttributes(this.overwatch2_settings, FileAttributes.Normal);
					num = 7;
				}
				if (num == 3)
				{
					string[] array4 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUScaler")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000501 RID: 1281 RVA: 0x00124378 File Offset: 0x00122578
		private void OW2_b()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUDeviceID")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUName")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 4)
				{
					array3 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUVenderID")
						select s).ToArray<string>();
					num = 5;
				}
				string text;
				if (num == 5)
				{
					string[] array4;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Cinematics.1]",
						"ShowIntro = \"0\"",
						"",
						"[GPU.6]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array3),
						"",
						"[Render.13]",
						"AADetail = \"0\"",
						"AnisotropicFiltering = \"0\"",
						"DirectionalShadowDetail = \"1\"",
						"FrameRateCap = \"600\"",
						"FullScreenRefresh = \"0\"",
						"FullScreenHeight = \"" + this.DefaultHeight + "\"",
						"FullScreenWidth = \"" + this.DefaultWidth + "\"",
						"GFXPresetLevel = \"1\"",
						"HorizontalFOV = \"88.000000\"",
						"LightQuality = \"0\"",
						"LocalFogDetail = \"1\"",
						"LocalReflections = \"0\"",
						"MaxAnisotropy = \"1\"",
						"MaxEffectsAnisotropy = \"1\"",
						"MaxExtraQualityAnisotropy = \"1\"",
						"MaxWorldScale = \"95.000000\"",
						"ModelQuality = \"1\"",
						"RefractionDetail = \"0\"",
						"ShaderQuality = \"1\"",
						"ShowFPS = \"0\"",
						"SimpleDirectionalShadows = \"1\"",
						"SoundQuality = \"1\"",
						"SSAODetail = \"0\"",
						"TextureDetail = \"1\"",
						"UseCustomFrameRates = \"1\"",
						"UseCustomWorldScale = \"1\"",
						"WindowedRefresh = \"0\"",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.overwatch2_settings, text);
					num = 8;
				}
				if (num == 6)
				{
					File.SetAttributes(this.overwatch2_settings, FileAttributes.Normal);
					num = 7;
				}
				if (num == 3)
				{
					string[] array4 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUScaler")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000502 RID: 1282 RVA: 0x0012474C File Offset: 0x0012294C
		private void OW2_a()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUDeviceID")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUName")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 4)
				{
					array3 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUVenderID")
						select s).ToArray<string>();
					num = 5;
				}
				string text;
				if (num == 5)
				{
					string[] array4;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Cinematics.1]",
						"ShowIntro = \"0\"",
						"",
						"[GPU.6]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array3),
						"",
						"[Render.13]",
						"AADetail = \"0\"",
						"AnisotropicFiltering = \"0\"",
						"DirectionalShadowDetail = \"1\"",
						"FrameRateCap = \"600\"",
						"FullScreenRefresh = \"0\"",
						"FullScreenHeight = \"" + this.DefaultHeight + "\"",
						"FullScreenWidth = \"" + this.DefaultWidth + "\"",
						"GFXPresetLevel = \"1\"",
						"HorizontalFOV = \"88.000000\"",
						"LightQuality = \"0\"",
						"LocalFogDetail = \"1\"",
						"LocalReflections = \"0\"",
						"MaxAnisotropy = \"1\"",
						"MaxEffectsAnisotropy = \"1\"",
						"MaxExtraQualityAnisotropy = \"1\"",
						"MaxWorldScale = \"100.000000\"",
						"ModelQuality = \"1\"",
						"RefractionDetail = \"0\"",
						"ShaderQuality = \"1\"",
						"ShowFPS = \"0\"",
						"SimpleDirectionalShadows = \"1\"",
						"SoundQuality = \"1\"",
						"SSAODetail = \"0\"",
						"TextureDetail = \"1\"",
						"UseCustomFrameRates = \"1\"",
						"UseCustomWorldScale = \"1\"",
						"WindowedRefresh = \"0\"",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.overwatch2_settings, text);
					num = 8;
				}
				if (num == 6)
				{
					File.SetAttributes(this.overwatch2_settings, FileAttributes.Normal);
					num = 7;
				}
				if (num == 3)
				{
					string[] array4 = (from s in File.ReadAllLines(this.overwatch2_settings)
						where s.Contains("GPUScaler")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000503 RID: 1283 RVA: 0x00124B20 File Offset: 0x00122D20
		private void PUBG_g()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.pubg_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.pubg_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				string text;
				if (num == 4)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=60", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.postprocessAAQuality=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "",
						"[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 5;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					string text3;
					File.WriteAllText(this.pubg_main, text3);
					num = 8;
				}
				if (num == 8)
				{
					File.WriteAllText(this.pubg_first, text);
					num = 9;
				}
				if (num == 9)
				{
					File.WriteAllText(this.pubg_second, text2);
					num = 10;
				}
				if (num == 6)
				{
					this.get_own_PUBG();
					num = 7;
				}
				if (num == 3)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"GraphicsAPI=DX11",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=60.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"",
						"[/Script/TslGame.TslGameUserSettings]",
						"ScreenScale=60.000000",
						"LobbyFrameRateLimitType=Unlimited",
						"InGameFrameRateLimitType=Unlimited",
						"InGameCustomFrameRateLimit=60.000000",
						"bUseInGameSmoothedFrameRate=False",
						"bSavedGraphicOption=True",
						"bNvidiaDLSS=False",
						"bMotionBlur=False",
						"bSharpen=False",
						"CultureName=en",
						"LastCultureName=",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=0",
						"Version=1001",
						"AudioQualityLevel=0",
						"FrameRateLimit=1000.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						""
					});
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 10);
		}

		// Token: 0x06000504 RID: 1284 RVA: 0x001253F4 File Offset: 0x001235F4
		private void PUBG_f()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.pubg_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.pubg_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				string text;
				if (num == 4)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=70", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.postprocessAAQuality=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "",
						"[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 5;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					string text3;
					File.WriteAllText(this.pubg_main, text3);
					num = 8;
				}
				if (num == 8)
				{
					File.WriteAllText(this.pubg_first, text);
					num = 9;
				}
				if (num == 9)
				{
					File.WriteAllText(this.pubg_second, text2);
					num = 10;
				}
				if (num == 6)
				{
					this.get_own_PUBG();
					num = 7;
				}
				if (num == 3)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"GraphicsAPI=DX11",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=70.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"",
						"[/Script/TslGame.TslGameUserSettings]",
						"ScreenScale=70.000000",
						"LobbyFrameRateLimitType=Unlimited",
						"InGameFrameRateLimitType=Unlimited",
						"InGameCustomFrameRateLimit=60.000000",
						"bUseInGameSmoothedFrameRate=False",
						"bSavedGraphicOption=True",
						"bNvidiaDLSS=False",
						"bMotionBlur=False",
						"bSharpen=False",
						"CultureName=en",
						"LastCultureName=",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=0",
						"Version=1001",
						"AudioQualityLevel=0",
						"FrameRateLimit=1000.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						""
					});
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 10);
		}

		// Token: 0x06000505 RID: 1285 RVA: 0x00125CC8 File Offset: 0x00123EC8
		private void PUBG_d()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.pubg_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.pubg_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				string text;
				if (num == 4)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=80", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.postprocessAAQuality=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "",
						"[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 5;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					string text3;
					File.WriteAllText(this.pubg_main, text3);
					num = 8;
				}
				if (num == 8)
				{
					File.WriteAllText(this.pubg_first, text);
					num = 9;
				}
				if (num == 9)
				{
					File.WriteAllText(this.pubg_second, text2);
					num = 10;
				}
				if (num == 6)
				{
					this.get_own_PUBG();
					num = 7;
				}
				if (num == 3)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"GraphicsAPI=DX11",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=80.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"",
						"[/Script/TslGame.TslGameUserSettings]",
						"ScreenScale=80.000000",
						"LobbyFrameRateLimitType=Unlimited",
						"InGameFrameRateLimitType=Unlimited",
						"InGameCustomFrameRateLimit=60.000000",
						"bUseInGameSmoothedFrameRate=False",
						"bSavedGraphicOption=True",
						"bNvidiaDLSS=False",
						"bMotionBlur=False",
						"bSharpen=False",
						"CultureName=en",
						"LastCultureName=",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=0",
						"Version=1001",
						"AudioQualityLevel=0",
						"FrameRateLimit=1000.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						""
					});
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 10);
		}

		// Token: 0x06000506 RID: 1286 RVA: 0x0012659C File Offset: 0x0012479C
		private void PUBG_c()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.pubg_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.pubg_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				string text;
				if (num == 4)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=90", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.postprocessAAQuality=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "",
						"[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 5;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					string text3;
					File.WriteAllText(this.pubg_main, text3);
					num = 8;
				}
				if (num == 8)
				{
					File.WriteAllText(this.pubg_first, text);
					num = 9;
				}
				if (num == 9)
				{
					File.WriteAllText(this.pubg_second, text2);
					num = 10;
				}
				if (num == 6)
				{
					this.get_own_PUBG();
					num = 7;
				}
				if (num == 3)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"GraphicsAPI=DX11",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=90.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"",
						"[/Script/TslGame.TslGameUserSettings]",
						"ScreenScale=90.000000",
						"LobbyFrameRateLimitType=Unlimited",
						"InGameFrameRateLimitType=Unlimited",
						"InGameCustomFrameRateLimit=60.000000",
						"bUseInGameSmoothedFrameRate=False",
						"bSavedGraphicOption=True",
						"bNvidiaDLSS=False",
						"bMotionBlur=False",
						"bSharpen=False",
						"CultureName=en",
						"LastCultureName=",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=0",
						"Version=1001",
						"AudioQualityLevel=0",
						"FrameRateLimit=1000.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						""
					});
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 10);
		}

		// Token: 0x06000507 RID: 1287 RVA: 0x00126E70 File Offset: 0x00125070
		private void PUBG_b()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.pubg_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.pubg_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				string text;
				if (num == 4)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=95", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.postprocessAAQuality=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "",
						"[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 5;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					string text3;
					File.WriteAllText(this.pubg_main, text3);
					num = 8;
				}
				if (num == 8)
				{
					File.WriteAllText(this.pubg_first, text);
					num = 9;
				}
				if (num == 9)
				{
					File.WriteAllText(this.pubg_second, text2);
					num = 10;
				}
				if (num == 6)
				{
					this.get_own_PUBG();
					num = 7;
				}
				if (num == 3)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"GraphicsAPI=DX11",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=95.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"",
						"[/Script/TslGame.TslGameUserSettings]",
						"ScreenScale=95.000000",
						"LobbyFrameRateLimitType=Unlimited",
						"InGameFrameRateLimitType=Unlimited",
						"InGameCustomFrameRateLimit=60.000000",
						"bUseInGameSmoothedFrameRate=False",
						"bSavedGraphicOption=True",
						"bNvidiaDLSS=False",
						"bMotionBlur=False",
						"bSharpen=False",
						"CultureName=en",
						"LastCultureName=",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=0",
						"Version=1001",
						"AudioQualityLevel=0",
						"FrameRateLimit=1000.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						""
					});
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 10);
		}

		// Token: 0x06000508 RID: 1288 RVA: 0x00127744 File Offset: 0x00125944
		private void PUBG_a()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.pubg_main)
						where s.Contains("LastGPUBenchmark")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.pubg_main)
						where s.Contains("LastCPUBenchmark")
						select s).ToArray<string>();
					num = 3;
				}
				string text;
				if (num == 4)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=100", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.postprocessAAQuality=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "",
						"[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 5;
				}
				string text2;
				if (num == 5)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					string text3;
					File.WriteAllText(this.pubg_main, text3);
					num = 8;
				}
				if (num == 8)
				{
					File.WriteAllText(this.pubg_first, text);
					num = 9;
				}
				if (num == 9)
				{
					File.WriteAllText(this.pubg_second, text2);
					num = 10;
				}
				if (num == 6)
				{
					this.get_own_PUBG();
					num = 7;
				}
				if (num == 3)
				{
					string text3 = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"GraphicsAPI=DX11",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=100.000000",
						"sg.ViewDistanceQuality=0",
						"sg.AntiAliasingQuality=0",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"sg.FoliageQuality=0",
						"",
						"[/Script/TslGame.TslGameUserSettings]",
						"ScreenScale=100.000000",
						"LobbyFrameRateLimitType=Unlimited",
						"InGameFrameRateLimitType=Unlimited",
						"InGameCustomFrameRateLimit=60.000000",
						"bUseInGameSmoothedFrameRate=False",
						"bSavedGraphicOption=True",
						"bNvidiaDLSS=False",
						"bMotionBlur=False",
						"bSharpen=False",
						"CultureName=en",
						"LastCultureName=",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=0",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=0",
						"Version=1001",
						"AudioQualityLevel=0",
						"FrameRateLimit=1000.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						""
					});
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 10);
		}

		// Token: 0x06000509 RID: 1289 RVA: 0x00128018 File Offset: 0x00126218
		private void RSS_g()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUVendor=")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUDeviceId=")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 4)
				{
					array3 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUDedicatedMemoryMB=")
						select s).ToArray<string>();
					num = 5;
				}
				string[] array4;
				if (num == 5)
				{
					array4 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUScore=")
						select s).ToArray<string>();
					num = 6;
				}
				string[] array5;
				if (num == 7)
				{
					array5 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("SystemMemoryMB=")
						select s).ToArray<string>();
					num = 8;
				}
				string[] array6;
				if (num == 8)
				{
					array6 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("CPUScore=")
						select s).ToArray<string>();
					num = 9;
				}
				string[] array7;
				if (num == 10)
				{
					array7 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("PartyPrivacyEnable=")
						select s).ToArray<string>();
					num = 11;
				}
				string[] array8;
				if (num == 11)
				{
					array8 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GameplayPingEnable=")
						select s).ToArray<string>();
					num = 12;
				}
				string[] array9;
				if (num == 13)
				{
					array9 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("RefreshRate=")
						select s).ToArray<string>();
					num = 14;
				}
				string[] array10;
				if (num == 14)
				{
					array10 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Brightness=")
						select s).ToArray<string>();
					num = 15;
				}
				string[] array11;
				if (num == 15)
				{
					array11 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DefaultFOV=")
						select s).ToArray<string>();
					num = 16;
				}
				string[] array12;
				if (num == 17)
				{
					array12 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("InvertAxisY=")
						select s).ToArray<string>();
					num = 18;
				}
				string[] array13;
				if (num == 18)
				{
					array13 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("InvertMouseAxisY=")
						select s).ToArray<string>();
					num = 19;
				}
				string[] array14;
				if (num == 20)
				{
					array14 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimAssist=")
						select s).ToArray<string>();
					num = 21;
				}
				string[] array15;
				if (num == 21)
				{
					array15 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("YawSensitivity=")
						select s).ToArray<string>();
					num = 22;
				}
				string[] array16;
				if (num == 23)
				{
					array16 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeadzoneLeftStick=")
						select s).ToArray<string>();
					num = 24;
				}
				string[] array17;
				if (num == 24)
				{
					array17 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeadzoneRightStick=")
						select s).ToArray<string>();
					num = 25;
				}
				string[] array18;
				if (num == 26)
				{
					array18 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseSensitivityMultiplierUnit=")
						select s).ToArray<string>();
					num = 27;
				}
				string[] array19;
				if (num == 27)
				{
					array19 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseScroll=")
						select s).ToArray<string>();
					num = 28;
				}
				string[] array20;
				if (num == 28)
				{
					array20 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("XFactorAiming=")
						select s).ToArray<string>();
					num = 29;
				}
				string[] array21;
				if (num == 30)
				{
					array21 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleLean=")
						select s).ToArray<string>();
					num = 31;
				}
				string[] array22;
				if (num == 31)
				{
					array22 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleSprint=")
						select s).ToArray<string>();
					num = 32;
				}
				string[] array23;
				if (num == 33)
				{
					array23 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleProne=")
						select s).ToArray<string>();
					num = 34;
				}
				string[] array24;
				if (num == 34)
				{
					array24 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleWalk=")
						select s).ToArray<string>();
					num = 35;
				}
				string[] array25;
				if (num == 36)
				{
					array25 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleGadgetDeploymentKeyboard=")
						select s).ToArray<string>();
					num = 37;
				}
				string[] array26;
				if (num == 37)
				{
					array26 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimDownSights=")
						select s).ToArray<string>();
					num = 38;
				}
				string[] array27;
				if (num == 39)
				{
					array27 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivityGlobal=")
						select s).ToArray<string>();
					num = 40;
				}
				string[] array28;
				if (num == 40)
				{
					array28 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity1x=")
						select s).ToArray<string>();
					num = 41;
				}
				string[] array29;
				if (num == 41)
				{
					array29 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity1xHalf=")
						select s).ToArray<string>();
					num = 42;
				}
				string[] array30;
				if (num == 43)
				{
					array30 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity2xHalf=")
						select s).ToArray<string>();
					num = 44;
				}
				string[] array31;
				if (num == 44)
				{
					array31 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity3x=")
						select s).ToArray<string>();
					num = 45;
				}
				string[] array32;
				if (num == 46)
				{
					array32 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity5x=")
						select s).ToArray<string>();
					num = 47;
				}
				string[] array33;
				if (num == 47)
				{
					array33 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity12x=")
						select s).ToArray<string>();
					num = 48;
				}
				string[] array34;
				if (num == 49)
				{
					array34 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimDownSightsMouse=")
						select s).ToArray<string>();
					num = 50;
				}
				string[] array35;
				if (num == 50)
				{
					array35 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseUseSpecific=")
						select s).ToArray<string>();
					num = 51;
				}
				string[] array36;
				if (num == 52)
				{
					array36 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity1x=")
						select s).ToArray<string>();
					num = 53;
				}
				string[] array37;
				if (num == 53)
				{
					array37 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity1xHalf=")
						select s).ToArray<string>();
					num = 54;
				}
				string[] array38;
				if (num == 54)
				{
					array38 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity2x=")
						select s).ToArray<string>();
					num = 55;
				}
				string[] array39;
				if (num == 56)
				{
					array39 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity3x=")
						select s).ToArray<string>();
					num = 57;
				}
				string[] array40;
				if (num == 57)
				{
					array40 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity4x=")
						select s).ToArray<string>();
					num = 58;
				}
				string[] array41;
				if (num == 59)
				{
					array41 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity12x=")
						select s).ToArray<string>();
					num = 60;
				}
				string[] array42;
				if (num == 60)
				{
					array42 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseMultiplierUnit=")
						select s).ToArray<string>();
					num = 61;
				}
				string[] array43;
				if (num == 62)
				{
					array43 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ControllerInputDevice=")
						select s).ToArray<string>();
					num = 63;
				}
				string[] array44;
				if (num == 63)
				{
					array44 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Subtitle=")
						select s).ToArray<string>();
					num = 64;
				}
				string[] array45;
				if (num == 65)
				{
					array45 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeMusic=")
						select s).ToArray<string>();
					num = 66;
				}
				string[] array46;
				if (num == 66)
				{
					array46 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeSoundEffects=")
						select s).ToArray<string>();
					num = 67;
				}
				string[] array47;
				if (num == 68)
				{
					array47 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DynamicRangeMode=")
						select s).ToArray<string>();
					num = 69;
				}
				string[] array48;
				if (num == 69)
				{
					array48 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatPlaybackLevel=")
						select s).ToArray<string>();
					num = 70;
				}
				string[] array49;
				if (num == 70)
				{
					array49 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureThresholdV2=")
						select s).ToArray<string>();
					num = 71;
				}
				string[] array50;
				if (num == 72)
				{
					array50 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureLevel=")
						select s).ToArray<string>();
					num = 73;
				}
				string[] array51;
				if (num == 73)
				{
					array51 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Mute=")
						select s).ToArray<string>();
					num = 74;
				}
				string[] array52;
				if (num == 75)
				{
					array52 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatTeamOnly=")
						select s).ToArray<string>();
					num = 76;
				}
				string text;
				if (num == 76)
				{
					string[] array53;
					string[] array54;
					string[] array55;
					string[] array56;
					string[] array57;
					string[] array58;
					string[] array59;
					string[] array60;
					string[] array61;
					string[] array62;
					string[] array63;
					string[] array64;
					string[] array65;
					string[] array66;
					string[] array67;
					string[] array68;
					string[] array69;
					string[] array70;
					string[] array71;
					string[] array72;
					string[] array73;
					string[] array74;
					string[] array75;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[DISPLAY_SETTINGS]",
						";ResolutionXXX    => 0 for autodetection",
						";RefreshRate      => 0 will let DirectX pick it",
						";WindowMode       => 0 fullscreen / 1 windowed / 2 borderless",
						";AspectRatio      => 0 display / 1 resolution / 2..N as options",
						";VSync            => 0 disabled / 1 frame / 2 frames",
						";UseLetterbox     => 0 disabled / 1 enabled",
						";DefaultFOV       => Default vertical field of view (degrees)",
						";TAASharpenFactor => Sharpen filter applied to TAA",
						";RenderScaling => Percentage of the display resolution at which 3D rendering is performed",
						";TAAScaling => Percentage of the display resolution at which TAA is performed",
						";UseAmdAGS => Enables usage of AMD AGS library for additional info in crash reports",
						";UseDynamicResolution => Enable dynamic resolution on vulkan",
						";DynamicResolutionTargetFPS => Target FPS on the GPU when dynamic resolution is enabled",
						";DynamicResolutionMin => Minimum render scaling value the dynamic resolution will be able to reach",
						";DynamicResolutionMax => Maximum render scaling value the dynamic resolution will be able to reach",
						";VulkanWhitelistedLayers => Semicolon separated list, with all the Vulkan layers you want to enable, like VK_LAYER_VALVE_steam_fossilize;VK_LAYER_RTSS",
						";InitialWindowPositionX/Y => -1 for centering",
						"GPUAdapter=0",
						"Monitor=0",
						"ResolutionWidth=" + this.DefaultWidth,
						"ResolutionHeight=" + this.DefaultHeight,
						string.Join(Environment.NewLine, array9),
						"WindowMode=0",
						"AspectRatio=0",
						"VSync=0",
						"MaxGPUBufferedFrame=1",
						"UseLetterbox=0",
						string.Join(Environment.NewLine, array11),
						"EnableAMDMultiDraw=1",
						"TAASharpenFactor=0.280000",
						"RenderScaling=25",
						"TAAScaling=100",
						"UseAmdAGS=1",
						"UseDynamicResolution=0",
						"DynamicResolutionTargetFPS=60",
						"DynamicResolutionMin=25",
						"DynamicResolutionMax=100",
						"VulkanWhitelistedLayers=",
						"InitialWindowPositionX=-1",
						"InitialWindowPositionY=-1",
						"",
						"[HARDWARE_INFO]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array53),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array54),
						string.Join(Environment.NewLine, array5),
						string.Join(Environment.NewLine, array6),
						"HardwareNotificationEnable=1",
						"",
						"[QUALITY_SETTINGS]",
						"QualityPresetName=Custom",
						"TexturePresetName=Low",
						"",
						"[CUSTOM_PRESET_SETTINGS]",
						"Texture=0",
						"Shadow=0",
						"Reflection=0",
						"LOD=0",
						"AO=0",
						"Shading=0",
						"MotionBlur=0",
						"LensEffects=0",
						"DepthOfField=0",
						"TextureFiltering=0",
						"AntiAliasingMethod=0",
						"",
						"[READ_ONLY]",
						string.Join(Environment.NewLine, array55),
						"",
						"[INPUT]",
						string.Join(Environment.NewLine, array56),
						string.Join(Environment.NewLine, array12),
						string.Join(Environment.NewLine, array13),
						string.Join(Environment.NewLine, array57),
						string.Join(Environment.NewLine, array14),
						string.Join(Environment.NewLine, array15),
						string.Join(Environment.NewLine, array58),
						string.Join(Environment.NewLine, array16),
						string.Join(Environment.NewLine, array17),
						string.Join(Environment.NewLine, array59),
						string.Join(Environment.NewLine, array18),
						string.Join(Environment.NewLine, array19),
						string.Join(Environment.NewLine, array20),
						string.Join(Environment.NewLine, array60),
						string.Join(Environment.NewLine, array21),
						string.Join(Environment.NewLine, array22),
						string.Join(Environment.NewLine, array61),
						string.Join(Environment.NewLine, array23),
						string.Join(Environment.NewLine, array24),
						string.Join(Environment.NewLine, array62),
						string.Join(Environment.NewLine, array25),
						string.Join(Environment.NewLine, array26),
						string.Join(Environment.NewLine, array63),
						string.Join(Environment.NewLine, array27),
						string.Join(Environment.NewLine, array28),
						string.Join(Environment.NewLine, array29),
						string.Join(Environment.NewLine, array64),
						string.Join(Environment.NewLine, array30),
						string.Join(Environment.NewLine, array31),
						string.Join(Environment.NewLine, array65),
						string.Join(Environment.NewLine, array32),
						string.Join(Environment.NewLine, array33),
						string.Join(Environment.NewLine, array66),
						string.Join(Environment.NewLine, array34),
						string.Join(Environment.NewLine, array35),
						string.Join(Environment.NewLine, array67),
						string.Join(Environment.NewLine, array36),
						string.Join(Environment.NewLine, array37),
						string.Join(Environment.NewLine, array38),
						string.Join(Environment.NewLine, array68),
						string.Join(Environment.NewLine, array39),
						string.Join(Environment.NewLine, array40),
						string.Join(Environment.NewLine, array69),
						string.Join(Environment.NewLine, array41),
						string.Join(Environment.NewLine, array42),
						string.Join(Environment.NewLine, array70),
						string.Join(Environment.NewLine, array43),
						"",
						"[DISPLAY]",
						";FPSLimit => Limit the game's fps. Minimum of 30fps. Anything below will disable the fps limit.",
						";Console => Enables the in-game console which is mapped to `/~. Will only work if the key is not already mapped.",
						string.Join(Environment.NewLine, array10),
						"FPSLimit=0",
						"Console=0",
						"",
						"[AUDIO]",
						";Dynamic Range mode: (0) Hi-Fi, (1) TV, (2) Night Mode",
						";VoiceChatCaptureMode => 0 Auto / 1 Manual / 2 Push to talk",
						string.Join(Environment.NewLine, array44),
						string.Join(Environment.NewLine, array71),
						string.Join(Environment.NewLine, array45),
						string.Join(Environment.NewLine, array46),
						string.Join(Environment.NewLine, array72),
						string.Join(Environment.NewLine, array47),
						string.Join(Environment.NewLine, array48),
						string.Join(Environment.NewLine, array49),
						string.Join(Environment.NewLine, array73),
						string.Join(Environment.NewLine, array50),
						string.Join(Environment.NewLine, array51),
						string.Join(Environment.NewLine, array74),
						string.Join(Environment.NewLine, array52),
						"",
						"[GAMEPLAY]",
						string.Join(Environment.NewLine, array7),
						string.Join(Environment.NewLine, array8),
						"",
						"[ONLINE]",
						";DataCenterHint => ",
						";    default (ping based)",
						";    eastus",
						";    centralus",
						";    southcentralus",
						";    westus",
						";    brazilsouth",
						";    northeurope",
						";    westeurope",
						";    southafricanorth",
						";    eastasia",
						";    southeastasia",
						";    australiaeast",
						";    australiasoutheast",
						";    japanwest",
						"",
						";",
						";if UseProxyAutoDiscovery is set to true, http_proxy or https_proxy or all_proxy and no_proxy are going to be looked up and used for all http calls",
						string.Join(Environment.NewLine, array75),
						"UseProxyAutoDiscovery=0",
						""
					});
					num = 77;
				}
				if (num == 78)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 79;
				}
				if (num == 77)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 78;
				}
				if (num == 74)
				{
					string[] array74 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatMuteAll=")
						select s).ToArray<string>();
					num = 75;
				}
				if (num == 71)
				{
					string[] array73 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureMode=")
						select s).ToArray<string>();
					num = 72;
				}
				if (num == 67)
				{
					string[] array72 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeVoice=")
						select s).ToArray<string>();
					num = 68;
				}
				if (num == 64)
				{
					string[] array71 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Volume=")
						select s).ToArray<string>();
					num = 65;
				}
				if (num == 61)
				{
					string[] array70 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ControlSchemeIndex=")
						select s).ToArray<string>();
					num = 62;
				}
				if (num == 58)
				{
					string[] array69 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity5x=")
						select s).ToArray<string>();
					num = 59;
				}
				if (num == 55)
				{
					string[] array68 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity2xHalf=")
						select s).ToArray<string>();
					num = 56;
				}
				if (num == 51)
				{
					string[] array67 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivityGlobal=")
						select s).ToArray<string>();
					num = 52;
				}
				if (num == 48)
				{
					string[] array66 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadMultiplierUnit=")
						select s).ToArray<string>();
					num = 49;
				}
				if (num == 45)
				{
					string[] array65 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity4x=")
						select s).ToArray<string>();
					num = 46;
				}
				if (num == 42)
				{
					string[] array64 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity2x=")
						select s).ToArray<string>();
					num = 43;
				}
				if (num == 38)
				{
					string[] array63 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadUseSpecific=")
						select s).ToArray<string>();
					num = 39;
				}
				if (num == 35)
				{
					string[] array62 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleGadgetDeploymentGamepad=")
						select s).ToArray<string>();
					num = 36;
				}
				if (num == 32)
				{
					string[] array61 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleCrouch=")
						select s).ToArray<string>();
					num = 33;
				}
				if (num == 29)
				{
					string[] array60 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleAim=")
						select s).ToArray<string>();
					num = 30;
				}
				if (num == 25)
				{
					string[] array59 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseSensitivity=")
						select s).ToArray<string>();
					num = 26;
				}
				if (num == 22)
				{
					string[] array58 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("PitchSensitivity=")
						select s).ToArray<string>();
					num = 23;
				}
				if (num == 19)
				{
					string[] array57 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Rumble=")
						select s).ToArray<string>();
					num = 20;
				}
				if (num == 16)
				{
					string[] array56 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("RawInputMouseKeyboard=")
						select s).ToArray<string>();
					num = 17;
				}
				if (num == 12)
				{
					string[] array75 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DataCenterHint=")
						select s).ToArray<string>();
					num = 13;
				}
				if (num == 9)
				{
					string[] array55 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DefaultValuesVersion=")
						select s).ToArray<string>();
					num = 10;
				}
				if (num == 6)
				{
					string[] array54 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUScoreConf=")
						select s).ToArray<string>();
					num = 7;
				}
				if (num == 3)
				{
					string[] array53 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUSubSysId=")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 79);
		}

		// Token: 0x0600050A RID: 1290 RVA: 0x0012A1DC File Offset: 0x001283DC
		private void RSS_f()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUVendor=")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUDeviceId=")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 4)
				{
					array3 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUDedicatedMemoryMB=")
						select s).ToArray<string>();
					num = 5;
				}
				string[] array4;
				if (num == 5)
				{
					array4 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUScore=")
						select s).ToArray<string>();
					num = 6;
				}
				string[] array5;
				if (num == 7)
				{
					array5 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("SystemMemoryMB=")
						select s).ToArray<string>();
					num = 8;
				}
				string[] array6;
				if (num == 8)
				{
					array6 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("CPUScore=")
						select s).ToArray<string>();
					num = 9;
				}
				string[] array7;
				if (num == 10)
				{
					array7 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("PartyPrivacyEnable=")
						select s).ToArray<string>();
					num = 11;
				}
				string[] array8;
				if (num == 11)
				{
					array8 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GameplayPingEnable=")
						select s).ToArray<string>();
					num = 12;
				}
				string[] array9;
				if (num == 13)
				{
					array9 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("RefreshRate=")
						select s).ToArray<string>();
					num = 14;
				}
				string[] array10;
				if (num == 14)
				{
					array10 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Brightness=")
						select s).ToArray<string>();
					num = 15;
				}
				string[] array11;
				if (num == 15)
				{
					array11 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DefaultFOV=")
						select s).ToArray<string>();
					num = 16;
				}
				string[] array12;
				if (num == 17)
				{
					array12 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("InvertAxisY=")
						select s).ToArray<string>();
					num = 18;
				}
				string[] array13;
				if (num == 18)
				{
					array13 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("InvertMouseAxisY=")
						select s).ToArray<string>();
					num = 19;
				}
				string[] array14;
				if (num == 20)
				{
					array14 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimAssist=")
						select s).ToArray<string>();
					num = 21;
				}
				string[] array15;
				if (num == 21)
				{
					array15 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("YawSensitivity=")
						select s).ToArray<string>();
					num = 22;
				}
				string[] array16;
				if (num == 23)
				{
					array16 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeadzoneLeftStick=")
						select s).ToArray<string>();
					num = 24;
				}
				string[] array17;
				if (num == 24)
				{
					array17 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeadzoneRightStick=")
						select s).ToArray<string>();
					num = 25;
				}
				string[] array18;
				if (num == 26)
				{
					array18 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseSensitivityMultiplierUnit=")
						select s).ToArray<string>();
					num = 27;
				}
				string[] array19;
				if (num == 27)
				{
					array19 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseScroll=")
						select s).ToArray<string>();
					num = 28;
				}
				string[] array20;
				if (num == 28)
				{
					array20 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("XFactorAiming=")
						select s).ToArray<string>();
					num = 29;
				}
				string[] array21;
				if (num == 30)
				{
					array21 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleLean=")
						select s).ToArray<string>();
					num = 31;
				}
				string[] array22;
				if (num == 31)
				{
					array22 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleSprint=")
						select s).ToArray<string>();
					num = 32;
				}
				string[] array23;
				if (num == 33)
				{
					array23 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleProne=")
						select s).ToArray<string>();
					num = 34;
				}
				string[] array24;
				if (num == 34)
				{
					array24 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleWalk=")
						select s).ToArray<string>();
					num = 35;
				}
				string[] array25;
				if (num == 36)
				{
					array25 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleGadgetDeploymentKeyboard=")
						select s).ToArray<string>();
					num = 37;
				}
				string[] array26;
				if (num == 37)
				{
					array26 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimDownSights=")
						select s).ToArray<string>();
					num = 38;
				}
				string[] array27;
				if (num == 39)
				{
					array27 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivityGlobal=")
						select s).ToArray<string>();
					num = 40;
				}
				string[] array28;
				if (num == 40)
				{
					array28 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity1x=")
						select s).ToArray<string>();
					num = 41;
				}
				string[] array29;
				if (num == 41)
				{
					array29 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity1xHalf=")
						select s).ToArray<string>();
					num = 42;
				}
				string[] array30;
				if (num == 43)
				{
					array30 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity2xHalf=")
						select s).ToArray<string>();
					num = 44;
				}
				string[] array31;
				if (num == 44)
				{
					array31 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity3x=")
						select s).ToArray<string>();
					num = 45;
				}
				string[] array32;
				if (num == 46)
				{
					array32 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity5x=")
						select s).ToArray<string>();
					num = 47;
				}
				string[] array33;
				if (num == 47)
				{
					array33 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity12x=")
						select s).ToArray<string>();
					num = 48;
				}
				string[] array34;
				if (num == 49)
				{
					array34 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimDownSightsMouse=")
						select s).ToArray<string>();
					num = 50;
				}
				string[] array35;
				if (num == 50)
				{
					array35 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseUseSpecific=")
						select s).ToArray<string>();
					num = 51;
				}
				string[] array36;
				if (num == 52)
				{
					array36 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity1x=")
						select s).ToArray<string>();
					num = 53;
				}
				string[] array37;
				if (num == 53)
				{
					array37 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity1xHalf=")
						select s).ToArray<string>();
					num = 54;
				}
				string[] array38;
				if (num == 54)
				{
					array38 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity2x=")
						select s).ToArray<string>();
					num = 55;
				}
				string[] array39;
				if (num == 56)
				{
					array39 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity3x=")
						select s).ToArray<string>();
					num = 57;
				}
				string[] array40;
				if (num == 57)
				{
					array40 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity4x=")
						select s).ToArray<string>();
					num = 58;
				}
				string[] array41;
				if (num == 59)
				{
					array41 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity12x=")
						select s).ToArray<string>();
					num = 60;
				}
				string[] array42;
				if (num == 60)
				{
					array42 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseMultiplierUnit=")
						select s).ToArray<string>();
					num = 61;
				}
				string[] array43;
				if (num == 62)
				{
					array43 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ControllerInputDevice=")
						select s).ToArray<string>();
					num = 63;
				}
				string[] array44;
				if (num == 63)
				{
					array44 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Subtitle=")
						select s).ToArray<string>();
					num = 64;
				}
				string[] array45;
				if (num == 65)
				{
					array45 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeMusic=")
						select s).ToArray<string>();
					num = 66;
				}
				string[] array46;
				if (num == 66)
				{
					array46 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeSoundEffects=")
						select s).ToArray<string>();
					num = 67;
				}
				string[] array47;
				if (num == 68)
				{
					array47 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DynamicRangeMode=")
						select s).ToArray<string>();
					num = 69;
				}
				string[] array48;
				if (num == 69)
				{
					array48 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatPlaybackLevel=")
						select s).ToArray<string>();
					num = 70;
				}
				string[] array49;
				if (num == 70)
				{
					array49 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureThresholdV2=")
						select s).ToArray<string>();
					num = 71;
				}
				string[] array50;
				if (num == 72)
				{
					array50 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureLevel=")
						select s).ToArray<string>();
					num = 73;
				}
				string[] array51;
				if (num == 73)
				{
					array51 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Mute=")
						select s).ToArray<string>();
					num = 74;
				}
				string[] array52;
				if (num == 75)
				{
					array52 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatTeamOnly=")
						select s).ToArray<string>();
					num = 76;
				}
				string text;
				if (num == 76)
				{
					string[] array53;
					string[] array54;
					string[] array55;
					string[] array56;
					string[] array57;
					string[] array58;
					string[] array59;
					string[] array60;
					string[] array61;
					string[] array62;
					string[] array63;
					string[] array64;
					string[] array65;
					string[] array66;
					string[] array67;
					string[] array68;
					string[] array69;
					string[] array70;
					string[] array71;
					string[] array72;
					string[] array73;
					string[] array74;
					string[] array75;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[DISPLAY_SETTINGS]",
						";ResolutionXXX    => 0 for autodetection",
						";RefreshRate      => 0 will let DirectX pick it",
						";WindowMode       => 0 fullscreen / 1 windowed / 2 borderless",
						";AspectRatio      => 0 display / 1 resolution / 2..N as options",
						";VSync            => 0 disabled / 1 frame / 2 frames",
						";UseLetterbox     => 0 disabled / 1 enabled",
						";DefaultFOV       => Default vertical field of view (degrees)",
						";TAASharpenFactor => Sharpen filter applied to TAA",
						";RenderScaling => Percentage of the display resolution at which 3D rendering is performed",
						";TAAScaling => Percentage of the display resolution at which TAA is performed",
						";UseAmdAGS => Enables usage of AMD AGS library for additional info in crash reports",
						";UseDynamicResolution => Enable dynamic resolution on vulkan",
						";DynamicResolutionTargetFPS => Target FPS on the GPU when dynamic resolution is enabled",
						";DynamicResolutionMin => Minimum render scaling value the dynamic resolution will be able to reach",
						";DynamicResolutionMax => Maximum render scaling value the dynamic resolution will be able to reach",
						";VulkanWhitelistedLayers => Semicolon separated list, with all the Vulkan layers you want to enable, like VK_LAYER_VALVE_steam_fossilize;VK_LAYER_RTSS",
						";InitialWindowPositionX/Y => -1 for centering",
						"GPUAdapter=0",
						"Monitor=0",
						"ResolutionWidth=" + this.DefaultWidth,
						"ResolutionHeight=" + this.DefaultHeight,
						string.Join(Environment.NewLine, array9),
						"WindowMode=0",
						"AspectRatio=0",
						"VSync=0",
						"MaxGPUBufferedFrame=1",
						"UseLetterbox=0",
						string.Join(Environment.NewLine, array11),
						"EnableAMDMultiDraw=1",
						"TAASharpenFactor=0.250000",
						"RenderScaling=30",
						"TAAScaling=100",
						"UseAmdAGS=1",
						"UseDynamicResolution=0",
						"DynamicResolutionTargetFPS=60",
						"DynamicResolutionMin=25",
						"DynamicResolutionMax=100",
						"VulkanWhitelistedLayers=",
						"InitialWindowPositionX=-1",
						"InitialWindowPositionY=-1",
						"",
						"[HARDWARE_INFO]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array53),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array54),
						string.Join(Environment.NewLine, array5),
						string.Join(Environment.NewLine, array6),
						"HardwareNotificationEnable=1",
						"",
						"[QUALITY_SETTINGS]",
						"QualityPresetName=Custom",
						"TexturePresetName=Low",
						"",
						"[CUSTOM_PRESET_SETTINGS]",
						"Texture=0",
						"Shadow=0",
						"Reflection=0",
						"LOD=0",
						"AO=0",
						"Shading=0",
						"MotionBlur=0",
						"LensEffects=0",
						"DepthOfField=0",
						"TextureFiltering=0",
						"AntiAliasingMethod=0",
						"",
						"[READ_ONLY]",
						string.Join(Environment.NewLine, array55),
						"",
						"[INPUT]",
						string.Join(Environment.NewLine, array56),
						string.Join(Environment.NewLine, array12),
						string.Join(Environment.NewLine, array13),
						string.Join(Environment.NewLine, array57),
						string.Join(Environment.NewLine, array14),
						string.Join(Environment.NewLine, array15),
						string.Join(Environment.NewLine, array58),
						string.Join(Environment.NewLine, array16),
						string.Join(Environment.NewLine, array17),
						string.Join(Environment.NewLine, array59),
						string.Join(Environment.NewLine, array18),
						string.Join(Environment.NewLine, array19),
						string.Join(Environment.NewLine, array20),
						string.Join(Environment.NewLine, array60),
						string.Join(Environment.NewLine, array21),
						string.Join(Environment.NewLine, array22),
						string.Join(Environment.NewLine, array61),
						string.Join(Environment.NewLine, array23),
						string.Join(Environment.NewLine, array24),
						string.Join(Environment.NewLine, array62),
						string.Join(Environment.NewLine, array25),
						string.Join(Environment.NewLine, array26),
						string.Join(Environment.NewLine, array63),
						string.Join(Environment.NewLine, array27),
						string.Join(Environment.NewLine, array28),
						string.Join(Environment.NewLine, array29),
						string.Join(Environment.NewLine, array64),
						string.Join(Environment.NewLine, array30),
						string.Join(Environment.NewLine, array31),
						string.Join(Environment.NewLine, array65),
						string.Join(Environment.NewLine, array32),
						string.Join(Environment.NewLine, array33),
						string.Join(Environment.NewLine, array66),
						string.Join(Environment.NewLine, array34),
						string.Join(Environment.NewLine, array35),
						string.Join(Environment.NewLine, array67),
						string.Join(Environment.NewLine, array36),
						string.Join(Environment.NewLine, array37),
						string.Join(Environment.NewLine, array38),
						string.Join(Environment.NewLine, array68),
						string.Join(Environment.NewLine, array39),
						string.Join(Environment.NewLine, array40),
						string.Join(Environment.NewLine, array69),
						string.Join(Environment.NewLine, array41),
						string.Join(Environment.NewLine, array42),
						string.Join(Environment.NewLine, array70),
						string.Join(Environment.NewLine, array43),
						"",
						"[DISPLAY]",
						";FPSLimit => Limit the game's fps. Minimum of 30fps. Anything below will disable the fps limit.",
						";Console => Enables the in-game console which is mapped to `/~. Will only work if the key is not already mapped.",
						string.Join(Environment.NewLine, array10),
						"FPSLimit=0",
						"Console=0",
						"",
						"[AUDIO]",
						";Dynamic Range mode: (0) Hi-Fi, (1) TV, (2) Night Mode",
						";VoiceChatCaptureMode => 0 Auto / 1 Manual / 2 Push to talk",
						string.Join(Environment.NewLine, array44),
						string.Join(Environment.NewLine, array71),
						string.Join(Environment.NewLine, array45),
						string.Join(Environment.NewLine, array46),
						string.Join(Environment.NewLine, array72),
						string.Join(Environment.NewLine, array47),
						string.Join(Environment.NewLine, array48),
						string.Join(Environment.NewLine, array49),
						string.Join(Environment.NewLine, array73),
						string.Join(Environment.NewLine, array50),
						string.Join(Environment.NewLine, array51),
						string.Join(Environment.NewLine, array74),
						string.Join(Environment.NewLine, array52),
						"",
						"[GAMEPLAY]",
						string.Join(Environment.NewLine, array7),
						string.Join(Environment.NewLine, array8),
						"",
						"[ONLINE]",
						";DataCenterHint => ",
						";    default (ping based)",
						";    eastus",
						";    centralus",
						";    southcentralus",
						";    westus",
						";    brazilsouth",
						";    northeurope",
						";    westeurope",
						";    southafricanorth",
						";    eastasia",
						";    southeastasia",
						";    australiaeast",
						";    australiasoutheast",
						";    japanwest",
						"",
						";",
						";if UseProxyAutoDiscovery is set to true, http_proxy or https_proxy or all_proxy and no_proxy are going to be looked up and used for all http calls",
						string.Join(Environment.NewLine, array75),
						"UseProxyAutoDiscovery=0",
						""
					});
					num = 77;
				}
				if (num == 78)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 79;
				}
				if (num == 77)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 78;
				}
				if (num == 74)
				{
					string[] array74 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatMuteAll=")
						select s).ToArray<string>();
					num = 75;
				}
				if (num == 71)
				{
					string[] array73 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureMode=")
						select s).ToArray<string>();
					num = 72;
				}
				if (num == 67)
				{
					string[] array72 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeVoice=")
						select s).ToArray<string>();
					num = 68;
				}
				if (num == 64)
				{
					string[] array71 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Volume=")
						select s).ToArray<string>();
					num = 65;
				}
				if (num == 61)
				{
					string[] array70 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ControlSchemeIndex=")
						select s).ToArray<string>();
					num = 62;
				}
				if (num == 58)
				{
					string[] array69 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity5x=")
						select s).ToArray<string>();
					num = 59;
				}
				if (num == 55)
				{
					string[] array68 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity2xHalf=")
						select s).ToArray<string>();
					num = 56;
				}
				if (num == 51)
				{
					string[] array67 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivityGlobal=")
						select s).ToArray<string>();
					num = 52;
				}
				if (num == 48)
				{
					string[] array66 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadMultiplierUnit=")
						select s).ToArray<string>();
					num = 49;
				}
				if (num == 45)
				{
					string[] array65 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity4x=")
						select s).ToArray<string>();
					num = 46;
				}
				if (num == 42)
				{
					string[] array64 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity2x=")
						select s).ToArray<string>();
					num = 43;
				}
				if (num == 38)
				{
					string[] array63 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadUseSpecific=")
						select s).ToArray<string>();
					num = 39;
				}
				if (num == 35)
				{
					string[] array62 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleGadgetDeploymentGamepad=")
						select s).ToArray<string>();
					num = 36;
				}
				if (num == 32)
				{
					string[] array61 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleCrouch=")
						select s).ToArray<string>();
					num = 33;
				}
				if (num == 29)
				{
					string[] array60 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleAim=")
						select s).ToArray<string>();
					num = 30;
				}
				if (num == 25)
				{
					string[] array59 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseSensitivity=")
						select s).ToArray<string>();
					num = 26;
				}
				if (num == 22)
				{
					string[] array58 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("PitchSensitivity=")
						select s).ToArray<string>();
					num = 23;
				}
				if (num == 19)
				{
					string[] array57 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Rumble=")
						select s).ToArray<string>();
					num = 20;
				}
				if (num == 16)
				{
					string[] array56 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("RawInputMouseKeyboard=")
						select s).ToArray<string>();
					num = 17;
				}
				if (num == 12)
				{
					string[] array75 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DataCenterHint=")
						select s).ToArray<string>();
					num = 13;
				}
				if (num == 9)
				{
					string[] array55 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DefaultValuesVersion=")
						select s).ToArray<string>();
					num = 10;
				}
				if (num == 6)
				{
					string[] array54 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUScoreConf=")
						select s).ToArray<string>();
					num = 7;
				}
				if (num == 3)
				{
					string[] array53 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUSubSysId=")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 79);
		}

		// Token: 0x0600050B RID: 1291 RVA: 0x0012C3A0 File Offset: 0x0012A5A0
		private void RSS_d()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUVendor=")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUDeviceId=")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 4)
				{
					array3 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUDedicatedMemoryMB=")
						select s).ToArray<string>();
					num = 5;
				}
				string[] array4;
				if (num == 5)
				{
					array4 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUScore=")
						select s).ToArray<string>();
					num = 6;
				}
				string[] array5;
				if (num == 7)
				{
					array5 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("SystemMemoryMB=")
						select s).ToArray<string>();
					num = 8;
				}
				string[] array6;
				if (num == 8)
				{
					array6 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("CPUScore=")
						select s).ToArray<string>();
					num = 9;
				}
				string[] array7;
				if (num == 10)
				{
					array7 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("PartyPrivacyEnable=")
						select s).ToArray<string>();
					num = 11;
				}
				string[] array8;
				if (num == 11)
				{
					array8 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GameplayPingEnable=")
						select s).ToArray<string>();
					num = 12;
				}
				string[] array9;
				if (num == 13)
				{
					array9 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("RefreshRate=")
						select s).ToArray<string>();
					num = 14;
				}
				string[] array10;
				if (num == 14)
				{
					array10 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Brightness=")
						select s).ToArray<string>();
					num = 15;
				}
				string[] array11;
				if (num == 15)
				{
					array11 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DefaultFOV=")
						select s).ToArray<string>();
					num = 16;
				}
				string[] array12;
				if (num == 17)
				{
					array12 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("InvertAxisY=")
						select s).ToArray<string>();
					num = 18;
				}
				string[] array13;
				if (num == 18)
				{
					array13 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("InvertMouseAxisY=")
						select s).ToArray<string>();
					num = 19;
				}
				string[] array14;
				if (num == 20)
				{
					array14 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimAssist=")
						select s).ToArray<string>();
					num = 21;
				}
				string[] array15;
				if (num == 21)
				{
					array15 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("YawSensitivity=")
						select s).ToArray<string>();
					num = 22;
				}
				string[] array16;
				if (num == 23)
				{
					array16 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeadzoneLeftStick=")
						select s).ToArray<string>();
					num = 24;
				}
				string[] array17;
				if (num == 24)
				{
					array17 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeadzoneRightStick=")
						select s).ToArray<string>();
					num = 25;
				}
				string[] array18;
				if (num == 26)
				{
					array18 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseSensitivityMultiplierUnit=")
						select s).ToArray<string>();
					num = 27;
				}
				string[] array19;
				if (num == 27)
				{
					array19 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseScroll=")
						select s).ToArray<string>();
					num = 28;
				}
				string[] array20;
				if (num == 28)
				{
					array20 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("XFactorAiming=")
						select s).ToArray<string>();
					num = 29;
				}
				string[] array21;
				if (num == 30)
				{
					array21 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleLean=")
						select s).ToArray<string>();
					num = 31;
				}
				string[] array22;
				if (num == 31)
				{
					array22 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleSprint=")
						select s).ToArray<string>();
					num = 32;
				}
				string[] array23;
				if (num == 33)
				{
					array23 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleProne=")
						select s).ToArray<string>();
					num = 34;
				}
				string[] array24;
				if (num == 34)
				{
					array24 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleWalk=")
						select s).ToArray<string>();
					num = 35;
				}
				string[] array25;
				if (num == 36)
				{
					array25 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleGadgetDeploymentKeyboard=")
						select s).ToArray<string>();
					num = 37;
				}
				string[] array26;
				if (num == 37)
				{
					array26 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimDownSights=")
						select s).ToArray<string>();
					num = 38;
				}
				string[] array27;
				if (num == 39)
				{
					array27 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivityGlobal=")
						select s).ToArray<string>();
					num = 40;
				}
				string[] array28;
				if (num == 40)
				{
					array28 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity1x=")
						select s).ToArray<string>();
					num = 41;
				}
				string[] array29;
				if (num == 41)
				{
					array29 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity1xHalf=")
						select s).ToArray<string>();
					num = 42;
				}
				string[] array30;
				if (num == 43)
				{
					array30 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity2xHalf=")
						select s).ToArray<string>();
					num = 44;
				}
				string[] array31;
				if (num == 44)
				{
					array31 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity3x=")
						select s).ToArray<string>();
					num = 45;
				}
				string[] array32;
				if (num == 46)
				{
					array32 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity5x=")
						select s).ToArray<string>();
					num = 47;
				}
				string[] array33;
				if (num == 47)
				{
					array33 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity12x=")
						select s).ToArray<string>();
					num = 48;
				}
				string[] array34;
				if (num == 49)
				{
					array34 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimDownSightsMouse=")
						select s).ToArray<string>();
					num = 50;
				}
				string[] array35;
				if (num == 50)
				{
					array35 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseUseSpecific=")
						select s).ToArray<string>();
					num = 51;
				}
				string[] array36;
				if (num == 52)
				{
					array36 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity1x=")
						select s).ToArray<string>();
					num = 53;
				}
				string[] array37;
				if (num == 53)
				{
					array37 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity1xHalf=")
						select s).ToArray<string>();
					num = 54;
				}
				string[] array38;
				if (num == 54)
				{
					array38 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity2x=")
						select s).ToArray<string>();
					num = 55;
				}
				string[] array39;
				if (num == 56)
				{
					array39 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity3x=")
						select s).ToArray<string>();
					num = 57;
				}
				string[] array40;
				if (num == 57)
				{
					array40 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity4x=")
						select s).ToArray<string>();
					num = 58;
				}
				string[] array41;
				if (num == 59)
				{
					array41 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity12x=")
						select s).ToArray<string>();
					num = 60;
				}
				string[] array42;
				if (num == 60)
				{
					array42 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseMultiplierUnit=")
						select s).ToArray<string>();
					num = 61;
				}
				string[] array43;
				if (num == 62)
				{
					array43 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ControllerInputDevice=")
						select s).ToArray<string>();
					num = 63;
				}
				string[] array44;
				if (num == 63)
				{
					array44 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Subtitle=")
						select s).ToArray<string>();
					num = 64;
				}
				string[] array45;
				if (num == 65)
				{
					array45 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeMusic=")
						select s).ToArray<string>();
					num = 66;
				}
				string[] array46;
				if (num == 66)
				{
					array46 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeSoundEffects=")
						select s).ToArray<string>();
					num = 67;
				}
				string[] array47;
				if (num == 68)
				{
					array47 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DynamicRangeMode=")
						select s).ToArray<string>();
					num = 69;
				}
				string[] array48;
				if (num == 69)
				{
					array48 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatPlaybackLevel=")
						select s).ToArray<string>();
					num = 70;
				}
				string[] array49;
				if (num == 70)
				{
					array49 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureThresholdV2=")
						select s).ToArray<string>();
					num = 71;
				}
				string[] array50;
				if (num == 72)
				{
					array50 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureLevel=")
						select s).ToArray<string>();
					num = 73;
				}
				string[] array51;
				if (num == 73)
				{
					array51 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Mute=")
						select s).ToArray<string>();
					num = 74;
				}
				string[] array52;
				if (num == 75)
				{
					array52 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatTeamOnly=")
						select s).ToArray<string>();
					num = 76;
				}
				string text;
				if (num == 76)
				{
					string[] array53;
					string[] array54;
					string[] array55;
					string[] array56;
					string[] array57;
					string[] array58;
					string[] array59;
					string[] array60;
					string[] array61;
					string[] array62;
					string[] array63;
					string[] array64;
					string[] array65;
					string[] array66;
					string[] array67;
					string[] array68;
					string[] array69;
					string[] array70;
					string[] array71;
					string[] array72;
					string[] array73;
					string[] array74;
					string[] array75;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[DISPLAY_SETTINGS]",
						";ResolutionXXX    => 0 for autodetection",
						";RefreshRate      => 0 will let DirectX pick it",
						";WindowMode       => 0 fullscreen / 1 windowed / 2 borderless",
						";AspectRatio      => 0 display / 1 resolution / 2..N as options",
						";VSync            => 0 disabled / 1 frame / 2 frames",
						";UseLetterbox     => 0 disabled / 1 enabled",
						";DefaultFOV       => Default vertical field of view (degrees)",
						";TAASharpenFactor => Sharpen filter applied to TAA",
						";RenderScaling => Percentage of the display resolution at which 3D rendering is performed",
						";TAAScaling => Percentage of the display resolution at which TAA is performed",
						";UseAmdAGS => Enables usage of AMD AGS library for additional info in crash reports",
						";UseDynamicResolution => Enable dynamic resolution on vulkan",
						";DynamicResolutionTargetFPS => Target FPS on the GPU when dynamic resolution is enabled",
						";DynamicResolutionMin => Minimum render scaling value the dynamic resolution will be able to reach",
						";DynamicResolutionMax => Maximum render scaling value the dynamic resolution will be able to reach",
						";VulkanWhitelistedLayers => Semicolon separated list, with all the Vulkan layers you want to enable, like VK_LAYER_VALVE_steam_fossilize;VK_LAYER_RTSS",
						";InitialWindowPositionX/Y => -1 for centering",
						"GPUAdapter=0",
						"Monitor=0",
						"ResolutionWidth=" + this.DefaultWidth,
						"ResolutionHeight=" + this.DefaultHeight,
						string.Join(Environment.NewLine, array9),
						"WindowMode=0",
						"AspectRatio=0",
						"VSync=0",
						"MaxGPUBufferedFrame=1",
						"UseLetterbox=0",
						string.Join(Environment.NewLine, array11),
						"EnableAMDMultiDraw=1",
						"TAASharpenFactor=0.250000",
						"RenderScaling=40",
						"TAAScaling=100",
						"UseAmdAGS=1",
						"UseDynamicResolution=0",
						"DynamicResolutionTargetFPS=60",
						"DynamicResolutionMin=25",
						"DynamicResolutionMax=100",
						"VulkanWhitelistedLayers=",
						"InitialWindowPositionX=-1",
						"InitialWindowPositionY=-1",
						"",
						"[HARDWARE_INFO]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array53),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array54),
						string.Join(Environment.NewLine, array5),
						string.Join(Environment.NewLine, array6),
						"HardwareNotificationEnable=1",
						"",
						"[QUALITY_SETTINGS]",
						"QualityPresetName=Custom",
						"TexturePresetName=Medium",
						"",
						"[CUSTOM_PRESET_SETTINGS]",
						"Texture=0",
						"Shadow=0",
						"Reflection=0",
						"LOD=0",
						"AO=0",
						"Shading=0",
						"MotionBlur=0",
						"LensEffects=0",
						"DepthOfField=0",
						"TextureFiltering=1",
						"AntiAliasingMethod=0",
						"",
						"[READ_ONLY]",
						string.Join(Environment.NewLine, array55),
						"",
						"[INPUT]",
						string.Join(Environment.NewLine, array56),
						string.Join(Environment.NewLine, array12),
						string.Join(Environment.NewLine, array13),
						string.Join(Environment.NewLine, array57),
						string.Join(Environment.NewLine, array14),
						string.Join(Environment.NewLine, array15),
						string.Join(Environment.NewLine, array58),
						string.Join(Environment.NewLine, array16),
						string.Join(Environment.NewLine, array17),
						string.Join(Environment.NewLine, array59),
						string.Join(Environment.NewLine, array18),
						string.Join(Environment.NewLine, array19),
						string.Join(Environment.NewLine, array20),
						string.Join(Environment.NewLine, array60),
						string.Join(Environment.NewLine, array21),
						string.Join(Environment.NewLine, array22),
						string.Join(Environment.NewLine, array61),
						string.Join(Environment.NewLine, array23),
						string.Join(Environment.NewLine, array24),
						string.Join(Environment.NewLine, array62),
						string.Join(Environment.NewLine, array25),
						string.Join(Environment.NewLine, array26),
						string.Join(Environment.NewLine, array63),
						string.Join(Environment.NewLine, array27),
						string.Join(Environment.NewLine, array28),
						string.Join(Environment.NewLine, array29),
						string.Join(Environment.NewLine, array64),
						string.Join(Environment.NewLine, array30),
						string.Join(Environment.NewLine, array31),
						string.Join(Environment.NewLine, array65),
						string.Join(Environment.NewLine, array32),
						string.Join(Environment.NewLine, array33),
						string.Join(Environment.NewLine, array66),
						string.Join(Environment.NewLine, array34),
						string.Join(Environment.NewLine, array35),
						string.Join(Environment.NewLine, array67),
						string.Join(Environment.NewLine, array36),
						string.Join(Environment.NewLine, array37),
						string.Join(Environment.NewLine, array38),
						string.Join(Environment.NewLine, array68),
						string.Join(Environment.NewLine, array39),
						string.Join(Environment.NewLine, array40),
						string.Join(Environment.NewLine, array69),
						string.Join(Environment.NewLine, array41),
						string.Join(Environment.NewLine, array42),
						string.Join(Environment.NewLine, array70),
						string.Join(Environment.NewLine, array43),
						"",
						"[DISPLAY]",
						";FPSLimit => Limit the game's fps. Minimum of 30fps. Anything below will disable the fps limit.",
						";Console => Enables the in-game console which is mapped to `/~. Will only work if the key is not already mapped.",
						string.Join(Environment.NewLine, array10),
						"FPSLimit=0",
						"Console=0",
						"",
						"[AUDIO]",
						";Dynamic Range mode: (0) Hi-Fi, (1) TV, (2) Night Mode",
						";VoiceChatCaptureMode => 0 Auto / 1 Manual / 2 Push to talk",
						string.Join(Environment.NewLine, array44),
						string.Join(Environment.NewLine, array71),
						string.Join(Environment.NewLine, array45),
						string.Join(Environment.NewLine, array46),
						string.Join(Environment.NewLine, array72),
						string.Join(Environment.NewLine, array47),
						string.Join(Environment.NewLine, array48),
						string.Join(Environment.NewLine, array49),
						string.Join(Environment.NewLine, array73),
						string.Join(Environment.NewLine, array50),
						string.Join(Environment.NewLine, array51),
						string.Join(Environment.NewLine, array74),
						string.Join(Environment.NewLine, array52),
						"",
						"[GAMEPLAY]",
						string.Join(Environment.NewLine, array7),
						string.Join(Environment.NewLine, array8),
						"",
						"[ONLINE]",
						";DataCenterHint => ",
						";    default (ping based)",
						";    eastus",
						";    centralus",
						";    southcentralus",
						";    westus",
						";    brazilsouth",
						";    northeurope",
						";    westeurope",
						";    southafricanorth",
						";    eastasia",
						";    southeastasia",
						";    australiaeast",
						";    australiasoutheast",
						";    japanwest",
						"",
						";",
						";if UseProxyAutoDiscovery is set to true, http_proxy or https_proxy or all_proxy and no_proxy are going to be looked up and used for all http calls",
						string.Join(Environment.NewLine, array75),
						"UseProxyAutoDiscovery=0",
						""
					});
					num = 77;
				}
				if (num == 78)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 79;
				}
				if (num == 77)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 78;
				}
				if (num == 74)
				{
					string[] array74 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatMuteAll=")
						select s).ToArray<string>();
					num = 75;
				}
				if (num == 71)
				{
					string[] array73 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureMode=")
						select s).ToArray<string>();
					num = 72;
				}
				if (num == 67)
				{
					string[] array72 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeVoice=")
						select s).ToArray<string>();
					num = 68;
				}
				if (num == 64)
				{
					string[] array71 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Volume=")
						select s).ToArray<string>();
					num = 65;
				}
				if (num == 61)
				{
					string[] array70 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ControlSchemeIndex=")
						select s).ToArray<string>();
					num = 62;
				}
				if (num == 58)
				{
					string[] array69 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity5x=")
						select s).ToArray<string>();
					num = 59;
				}
				if (num == 55)
				{
					string[] array68 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity2xHalf=")
						select s).ToArray<string>();
					num = 56;
				}
				if (num == 51)
				{
					string[] array67 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivityGlobal=")
						select s).ToArray<string>();
					num = 52;
				}
				if (num == 48)
				{
					string[] array66 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadMultiplierUnit=")
						select s).ToArray<string>();
					num = 49;
				}
				if (num == 45)
				{
					string[] array65 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity4x=")
						select s).ToArray<string>();
					num = 46;
				}
				if (num == 42)
				{
					string[] array64 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity2x=")
						select s).ToArray<string>();
					num = 43;
				}
				if (num == 38)
				{
					string[] array63 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadUseSpecific=")
						select s).ToArray<string>();
					num = 39;
				}
				if (num == 35)
				{
					string[] array62 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleGadgetDeploymentGamepad=")
						select s).ToArray<string>();
					num = 36;
				}
				if (num == 32)
				{
					string[] array61 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleCrouch=")
						select s).ToArray<string>();
					num = 33;
				}
				if (num == 29)
				{
					string[] array60 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleAim=")
						select s).ToArray<string>();
					num = 30;
				}
				if (num == 25)
				{
					string[] array59 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseSensitivity=")
						select s).ToArray<string>();
					num = 26;
				}
				if (num == 22)
				{
					string[] array58 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("PitchSensitivity=")
						select s).ToArray<string>();
					num = 23;
				}
				if (num == 19)
				{
					string[] array57 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Rumble=")
						select s).ToArray<string>();
					num = 20;
				}
				if (num == 16)
				{
					string[] array56 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("RawInputMouseKeyboard=")
						select s).ToArray<string>();
					num = 17;
				}
				if (num == 12)
				{
					string[] array75 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DataCenterHint=")
						select s).ToArray<string>();
					num = 13;
				}
				if (num == 9)
				{
					string[] array55 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DefaultValuesVersion=")
						select s).ToArray<string>();
					num = 10;
				}
				if (num == 6)
				{
					string[] array54 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUScoreConf=")
						select s).ToArray<string>();
					num = 7;
				}
				if (num == 3)
				{
					string[] array53 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUSubSysId=")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 79);
		}

		// Token: 0x0600050C RID: 1292 RVA: 0x0012E564 File Offset: 0x0012C764
		private void RSS_c()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUVendor=")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUDeviceId=")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 4)
				{
					array3 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUDedicatedMemoryMB=")
						select s).ToArray<string>();
					num = 5;
				}
				string[] array4;
				if (num == 5)
				{
					array4 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUScore=")
						select s).ToArray<string>();
					num = 6;
				}
				string[] array5;
				if (num == 7)
				{
					array5 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("SystemMemoryMB=")
						select s).ToArray<string>();
					num = 8;
				}
				string[] array6;
				if (num == 8)
				{
					array6 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("CPUScore=")
						select s).ToArray<string>();
					num = 9;
				}
				string[] array7;
				if (num == 10)
				{
					array7 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("PartyPrivacyEnable=")
						select s).ToArray<string>();
					num = 11;
				}
				string[] array8;
				if (num == 11)
				{
					array8 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GameplayPingEnable=")
						select s).ToArray<string>();
					num = 12;
				}
				string[] array9;
				if (num == 13)
				{
					array9 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("RefreshRate=")
						select s).ToArray<string>();
					num = 14;
				}
				string[] array10;
				if (num == 14)
				{
					array10 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Brightness=")
						select s).ToArray<string>();
					num = 15;
				}
				string[] array11;
				if (num == 15)
				{
					array11 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DefaultFOV=")
						select s).ToArray<string>();
					num = 16;
				}
				string[] array12;
				if (num == 17)
				{
					array12 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("InvertAxisY=")
						select s).ToArray<string>();
					num = 18;
				}
				string[] array13;
				if (num == 18)
				{
					array13 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("InvertMouseAxisY=")
						select s).ToArray<string>();
					num = 19;
				}
				string[] array14;
				if (num == 20)
				{
					array14 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimAssist=")
						select s).ToArray<string>();
					num = 21;
				}
				string[] array15;
				if (num == 21)
				{
					array15 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("YawSensitivity=")
						select s).ToArray<string>();
					num = 22;
				}
				string[] array16;
				if (num == 23)
				{
					array16 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeadzoneLeftStick=")
						select s).ToArray<string>();
					num = 24;
				}
				string[] array17;
				if (num == 24)
				{
					array17 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeadzoneRightStick=")
						select s).ToArray<string>();
					num = 25;
				}
				string[] array18;
				if (num == 26)
				{
					array18 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseSensitivityMultiplierUnit=")
						select s).ToArray<string>();
					num = 27;
				}
				string[] array19;
				if (num == 27)
				{
					array19 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseScroll=")
						select s).ToArray<string>();
					num = 28;
				}
				string[] array20;
				if (num == 28)
				{
					array20 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("XFactorAiming=")
						select s).ToArray<string>();
					num = 29;
				}
				string[] array21;
				if (num == 30)
				{
					array21 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleLean=")
						select s).ToArray<string>();
					num = 31;
				}
				string[] array22;
				if (num == 31)
				{
					array22 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleSprint=")
						select s).ToArray<string>();
					num = 32;
				}
				string[] array23;
				if (num == 33)
				{
					array23 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleProne=")
						select s).ToArray<string>();
					num = 34;
				}
				string[] array24;
				if (num == 34)
				{
					array24 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleWalk=")
						select s).ToArray<string>();
					num = 35;
				}
				string[] array25;
				if (num == 36)
				{
					array25 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleGadgetDeploymentKeyboard=")
						select s).ToArray<string>();
					num = 37;
				}
				string[] array26;
				if (num == 37)
				{
					array26 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimDownSights=")
						select s).ToArray<string>();
					num = 38;
				}
				string[] array27;
				if (num == 39)
				{
					array27 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivityGlobal=")
						select s).ToArray<string>();
					num = 40;
				}
				string[] array28;
				if (num == 40)
				{
					array28 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity1x=")
						select s).ToArray<string>();
					num = 41;
				}
				string[] array29;
				if (num == 41)
				{
					array29 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity1xHalf=")
						select s).ToArray<string>();
					num = 42;
				}
				string[] array30;
				if (num == 43)
				{
					array30 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity2xHalf=")
						select s).ToArray<string>();
					num = 44;
				}
				string[] array31;
				if (num == 44)
				{
					array31 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity3x=")
						select s).ToArray<string>();
					num = 45;
				}
				string[] array32;
				if (num == 46)
				{
					array32 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity5x=")
						select s).ToArray<string>();
					num = 47;
				}
				string[] array33;
				if (num == 47)
				{
					array33 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity12x=")
						select s).ToArray<string>();
					num = 48;
				}
				string[] array34;
				if (num == 49)
				{
					array34 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimDownSightsMouse=")
						select s).ToArray<string>();
					num = 50;
				}
				string[] array35;
				if (num == 50)
				{
					array35 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseUseSpecific=")
						select s).ToArray<string>();
					num = 51;
				}
				string[] array36;
				if (num == 52)
				{
					array36 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity1x=")
						select s).ToArray<string>();
					num = 53;
				}
				string[] array37;
				if (num == 53)
				{
					array37 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity1xHalf=")
						select s).ToArray<string>();
					num = 54;
				}
				string[] array38;
				if (num == 54)
				{
					array38 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity2x=")
						select s).ToArray<string>();
					num = 55;
				}
				string[] array39;
				if (num == 56)
				{
					array39 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity3x=")
						select s).ToArray<string>();
					num = 57;
				}
				string[] array40;
				if (num == 57)
				{
					array40 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity4x=")
						select s).ToArray<string>();
					num = 58;
				}
				string[] array41;
				if (num == 59)
				{
					array41 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity12x=")
						select s).ToArray<string>();
					num = 60;
				}
				string[] array42;
				if (num == 60)
				{
					array42 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseMultiplierUnit=")
						select s).ToArray<string>();
					num = 61;
				}
				string[] array43;
				if (num == 62)
				{
					array43 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ControllerInputDevice=")
						select s).ToArray<string>();
					num = 63;
				}
				string[] array44;
				if (num == 63)
				{
					array44 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Subtitle=")
						select s).ToArray<string>();
					num = 64;
				}
				string[] array45;
				if (num == 65)
				{
					array45 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeMusic=")
						select s).ToArray<string>();
					num = 66;
				}
				string[] array46;
				if (num == 66)
				{
					array46 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeSoundEffects=")
						select s).ToArray<string>();
					num = 67;
				}
				string[] array47;
				if (num == 68)
				{
					array47 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DynamicRangeMode=")
						select s).ToArray<string>();
					num = 69;
				}
				string[] array48;
				if (num == 69)
				{
					array48 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatPlaybackLevel=")
						select s).ToArray<string>();
					num = 70;
				}
				string[] array49;
				if (num == 70)
				{
					array49 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureThresholdV2=")
						select s).ToArray<string>();
					num = 71;
				}
				string[] array50;
				if (num == 72)
				{
					array50 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureLevel=")
						select s).ToArray<string>();
					num = 73;
				}
				string[] array51;
				if (num == 73)
				{
					array51 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Mute=")
						select s).ToArray<string>();
					num = 74;
				}
				string[] array52;
				if (num == 75)
				{
					array52 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatTeamOnly=")
						select s).ToArray<string>();
					num = 76;
				}
				string text;
				if (num == 76)
				{
					string[] array53;
					string[] array54;
					string[] array55;
					string[] array56;
					string[] array57;
					string[] array58;
					string[] array59;
					string[] array60;
					string[] array61;
					string[] array62;
					string[] array63;
					string[] array64;
					string[] array65;
					string[] array66;
					string[] array67;
					string[] array68;
					string[] array69;
					string[] array70;
					string[] array71;
					string[] array72;
					string[] array73;
					string[] array74;
					string[] array75;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[DISPLAY_SETTINGS]",
						";ResolutionXXX    => 0 for autodetection",
						";RefreshRate      => 0 will let DirectX pick it",
						";WindowMode       => 0 fullscreen / 1 windowed / 2 borderless",
						";AspectRatio      => 0 display / 1 resolution / 2..N as options",
						";VSync            => 0 disabled / 1 frame / 2 frames",
						";UseLetterbox     => 0 disabled / 1 enabled",
						";DefaultFOV       => Default vertical field of view (degrees)",
						";TAASharpenFactor => Sharpen filter applied to TAA",
						";RenderScaling => Percentage of the display resolution at which 3D rendering is performed",
						";TAAScaling => Percentage of the display resolution at which TAA is performed",
						";UseAmdAGS => Enables usage of AMD AGS library for additional info in crash reports",
						";UseDynamicResolution => Enable dynamic resolution on vulkan",
						";DynamicResolutionTargetFPS => Target FPS on the GPU when dynamic resolution is enabled",
						";DynamicResolutionMin => Minimum render scaling value the dynamic resolution will be able to reach",
						";DynamicResolutionMax => Maximum render scaling value the dynamic resolution will be able to reach",
						";VulkanWhitelistedLayers => Semicolon separated list, with all the Vulkan layers you want to enable, like VK_LAYER_VALVE_steam_fossilize;VK_LAYER_RTSS",
						";InitialWindowPositionX/Y => -1 for centering",
						"GPUAdapter=0",
						"Monitor=0",
						"ResolutionWidth=" + this.DefaultWidth,
						"ResolutionHeight=" + this.DefaultHeight,
						string.Join(Environment.NewLine, array9),
						"WindowMode=0",
						"AspectRatio=0",
						"VSync=0",
						"MaxGPUBufferedFrame=1",
						"UseLetterbox=0",
						string.Join(Environment.NewLine, array11),
						"EnableAMDMultiDraw=1",
						"TAASharpenFactor=0.250000",
						"RenderScaling=45",
						"TAAScaling=100",
						"UseAmdAGS=1",
						"UseDynamicResolution=0",
						"DynamicResolutionTargetFPS=60",
						"DynamicResolutionMin=25",
						"DynamicResolutionMax=100",
						"VulkanWhitelistedLayers=",
						"InitialWindowPositionX=-1",
						"InitialWindowPositionY=-1",
						"",
						"[HARDWARE_INFO]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array53),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array54),
						string.Join(Environment.NewLine, array5),
						string.Join(Environment.NewLine, array6),
						"HardwareNotificationEnable=1",
						"",
						"[QUALITY_SETTINGS]",
						"QualityPresetName=Custom",
						"TexturePresetName=Medium",
						"",
						"[CUSTOM_PRESET_SETTINGS]",
						"Texture=0",
						"Shadow=0",
						"Reflection=0",
						"LOD=0",
						"AO=0",
						"Shading=0",
						"MotionBlur=0",
						"LensEffects=0",
						"DepthOfField=0",
						"TextureFiltering=2",
						"AntiAliasingMethod=0",
						"",
						"[READ_ONLY]",
						string.Join(Environment.NewLine, array55),
						"",
						"[INPUT]",
						string.Join(Environment.NewLine, array56),
						string.Join(Environment.NewLine, array12),
						string.Join(Environment.NewLine, array13),
						string.Join(Environment.NewLine, array57),
						string.Join(Environment.NewLine, array14),
						string.Join(Environment.NewLine, array15),
						string.Join(Environment.NewLine, array58),
						string.Join(Environment.NewLine, array16),
						string.Join(Environment.NewLine, array17),
						string.Join(Environment.NewLine, array59),
						string.Join(Environment.NewLine, array18),
						string.Join(Environment.NewLine, array19),
						string.Join(Environment.NewLine, array20),
						string.Join(Environment.NewLine, array60),
						string.Join(Environment.NewLine, array21),
						string.Join(Environment.NewLine, array22),
						string.Join(Environment.NewLine, array61),
						string.Join(Environment.NewLine, array23),
						string.Join(Environment.NewLine, array24),
						string.Join(Environment.NewLine, array62),
						string.Join(Environment.NewLine, array25),
						string.Join(Environment.NewLine, array26),
						string.Join(Environment.NewLine, array63),
						string.Join(Environment.NewLine, array27),
						string.Join(Environment.NewLine, array28),
						string.Join(Environment.NewLine, array29),
						string.Join(Environment.NewLine, array64),
						string.Join(Environment.NewLine, array30),
						string.Join(Environment.NewLine, array31),
						string.Join(Environment.NewLine, array65),
						string.Join(Environment.NewLine, array32),
						string.Join(Environment.NewLine, array33),
						string.Join(Environment.NewLine, array66),
						string.Join(Environment.NewLine, array34),
						string.Join(Environment.NewLine, array35),
						string.Join(Environment.NewLine, array67),
						string.Join(Environment.NewLine, array36),
						string.Join(Environment.NewLine, array37),
						string.Join(Environment.NewLine, array38),
						string.Join(Environment.NewLine, array68),
						string.Join(Environment.NewLine, array39),
						string.Join(Environment.NewLine, array40),
						string.Join(Environment.NewLine, array69),
						string.Join(Environment.NewLine, array41),
						string.Join(Environment.NewLine, array42),
						string.Join(Environment.NewLine, array70),
						string.Join(Environment.NewLine, array43),
						"",
						"[DISPLAY]",
						";FPSLimit => Limit the game's fps. Minimum of 30fps. Anything below will disable the fps limit.",
						";Console => Enables the in-game console which is mapped to `/~. Will only work if the key is not already mapped.",
						string.Join(Environment.NewLine, array10),
						"FPSLimit=0",
						"Console=0",
						"",
						"[AUDIO]",
						";Dynamic Range mode: (0) Hi-Fi, (1) TV, (2) Night Mode",
						";VoiceChatCaptureMode => 0 Auto / 1 Manual / 2 Push to talk",
						string.Join(Environment.NewLine, array44),
						string.Join(Environment.NewLine, array71),
						string.Join(Environment.NewLine, array45),
						string.Join(Environment.NewLine, array46),
						string.Join(Environment.NewLine, array72),
						string.Join(Environment.NewLine, array47),
						string.Join(Environment.NewLine, array48),
						string.Join(Environment.NewLine, array49),
						string.Join(Environment.NewLine, array73),
						string.Join(Environment.NewLine, array50),
						string.Join(Environment.NewLine, array51),
						string.Join(Environment.NewLine, array74),
						string.Join(Environment.NewLine, array52),
						"",
						"[GAMEPLAY]",
						string.Join(Environment.NewLine, array7),
						string.Join(Environment.NewLine, array8),
						"",
						"[ONLINE]",
						";DataCenterHint => ",
						";    default (ping based)",
						";    eastus",
						";    centralus",
						";    southcentralus",
						";    westus",
						";    brazilsouth",
						";    northeurope",
						";    westeurope",
						";    southafricanorth",
						";    eastasia",
						";    southeastasia",
						";    australiaeast",
						";    australiasoutheast",
						";    japanwest",
						"",
						";",
						";if UseProxyAutoDiscovery is set to true, http_proxy or https_proxy or all_proxy and no_proxy are going to be looked up and used for all http calls",
						string.Join(Environment.NewLine, array75),
						"UseProxyAutoDiscovery=0",
						""
					});
					num = 77;
				}
				if (num == 78)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 79;
				}
				if (num == 77)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 78;
				}
				if (num == 74)
				{
					string[] array74 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatMuteAll=")
						select s).ToArray<string>();
					num = 75;
				}
				if (num == 71)
				{
					string[] array73 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureMode=")
						select s).ToArray<string>();
					num = 72;
				}
				if (num == 67)
				{
					string[] array72 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeVoice=")
						select s).ToArray<string>();
					num = 68;
				}
				if (num == 64)
				{
					string[] array71 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Volume=")
						select s).ToArray<string>();
					num = 65;
				}
				if (num == 61)
				{
					string[] array70 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ControlSchemeIndex=")
						select s).ToArray<string>();
					num = 62;
				}
				if (num == 58)
				{
					string[] array69 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity5x=")
						select s).ToArray<string>();
					num = 59;
				}
				if (num == 55)
				{
					string[] array68 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity2xHalf=")
						select s).ToArray<string>();
					num = 56;
				}
				if (num == 51)
				{
					string[] array67 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivityGlobal=")
						select s).ToArray<string>();
					num = 52;
				}
				if (num == 48)
				{
					string[] array66 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadMultiplierUnit=")
						select s).ToArray<string>();
					num = 49;
				}
				if (num == 45)
				{
					string[] array65 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity4x=")
						select s).ToArray<string>();
					num = 46;
				}
				if (num == 42)
				{
					string[] array64 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity2x=")
						select s).ToArray<string>();
					num = 43;
				}
				if (num == 38)
				{
					string[] array63 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadUseSpecific=")
						select s).ToArray<string>();
					num = 39;
				}
				if (num == 35)
				{
					string[] array62 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleGadgetDeploymentGamepad=")
						select s).ToArray<string>();
					num = 36;
				}
				if (num == 32)
				{
					string[] array61 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleCrouch=")
						select s).ToArray<string>();
					num = 33;
				}
				if (num == 29)
				{
					string[] array60 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleAim=")
						select s).ToArray<string>();
					num = 30;
				}
				if (num == 25)
				{
					string[] array59 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseSensitivity=")
						select s).ToArray<string>();
					num = 26;
				}
				if (num == 22)
				{
					string[] array58 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("PitchSensitivity=")
						select s).ToArray<string>();
					num = 23;
				}
				if (num == 19)
				{
					string[] array57 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Rumble=")
						select s).ToArray<string>();
					num = 20;
				}
				if (num == 16)
				{
					string[] array56 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("RawInputMouseKeyboard=")
						select s).ToArray<string>();
					num = 17;
				}
				if (num == 12)
				{
					string[] array75 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DataCenterHint=")
						select s).ToArray<string>();
					num = 13;
				}
				if (num == 9)
				{
					string[] array55 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DefaultValuesVersion=")
						select s).ToArray<string>();
					num = 10;
				}
				if (num == 6)
				{
					string[] array54 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUScoreConf=")
						select s).ToArray<string>();
					num = 7;
				}
				if (num == 3)
				{
					string[] array53 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUSubSysId=")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 79);
		}

		// Token: 0x0600050D RID: 1293 RVA: 0x00130728 File Offset: 0x0012E928
		private void RSS_b()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUVendor=")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUDeviceId=")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 4)
				{
					array3 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUDedicatedMemoryMB=")
						select s).ToArray<string>();
					num = 5;
				}
				string[] array4;
				if (num == 5)
				{
					array4 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUScore=")
						select s).ToArray<string>();
					num = 6;
				}
				string[] array5;
				if (num == 7)
				{
					array5 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("SystemMemoryMB=")
						select s).ToArray<string>();
					num = 8;
				}
				string[] array6;
				if (num == 8)
				{
					array6 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("CPUScore=")
						select s).ToArray<string>();
					num = 9;
				}
				string[] array7;
				if (num == 10)
				{
					array7 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("PartyPrivacyEnable=")
						select s).ToArray<string>();
					num = 11;
				}
				string[] array8;
				if (num == 11)
				{
					array8 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GameplayPingEnable=")
						select s).ToArray<string>();
					num = 12;
				}
				string[] array9;
				if (num == 13)
				{
					array9 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("RefreshRate=")
						select s).ToArray<string>();
					num = 14;
				}
				string[] array10;
				if (num == 14)
				{
					array10 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Brightness=")
						select s).ToArray<string>();
					num = 15;
				}
				string[] array11;
				if (num == 15)
				{
					array11 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DefaultFOV=")
						select s).ToArray<string>();
					num = 16;
				}
				string[] array12;
				if (num == 17)
				{
					array12 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("InvertAxisY=")
						select s).ToArray<string>();
					num = 18;
				}
				string[] array13;
				if (num == 18)
				{
					array13 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("InvertMouseAxisY=")
						select s).ToArray<string>();
					num = 19;
				}
				string[] array14;
				if (num == 20)
				{
					array14 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimAssist=")
						select s).ToArray<string>();
					num = 21;
				}
				string[] array15;
				if (num == 21)
				{
					array15 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("YawSensitivity=")
						select s).ToArray<string>();
					num = 22;
				}
				string[] array16;
				if (num == 23)
				{
					array16 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeadzoneLeftStick=")
						select s).ToArray<string>();
					num = 24;
				}
				string[] array17;
				if (num == 24)
				{
					array17 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeadzoneRightStick=")
						select s).ToArray<string>();
					num = 25;
				}
				string[] array18;
				if (num == 26)
				{
					array18 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseSensitivityMultiplierUnit=")
						select s).ToArray<string>();
					num = 27;
				}
				string[] array19;
				if (num == 27)
				{
					array19 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseScroll=")
						select s).ToArray<string>();
					num = 28;
				}
				string[] array20;
				if (num == 28)
				{
					array20 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("XFactorAiming=")
						select s).ToArray<string>();
					num = 29;
				}
				string[] array21;
				if (num == 30)
				{
					array21 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleLean=")
						select s).ToArray<string>();
					num = 31;
				}
				string[] array22;
				if (num == 31)
				{
					array22 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleSprint=")
						select s).ToArray<string>();
					num = 32;
				}
				string[] array23;
				if (num == 33)
				{
					array23 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleProne=")
						select s).ToArray<string>();
					num = 34;
				}
				string[] array24;
				if (num == 34)
				{
					array24 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleWalk=")
						select s).ToArray<string>();
					num = 35;
				}
				string[] array25;
				if (num == 36)
				{
					array25 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleGadgetDeploymentKeyboard=")
						select s).ToArray<string>();
					num = 37;
				}
				string[] array26;
				if (num == 37)
				{
					array26 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimDownSights=")
						select s).ToArray<string>();
					num = 38;
				}
				string[] array27;
				if (num == 39)
				{
					array27 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivityGlobal=")
						select s).ToArray<string>();
					num = 40;
				}
				string[] array28;
				if (num == 40)
				{
					array28 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity1x=")
						select s).ToArray<string>();
					num = 41;
				}
				string[] array29;
				if (num == 41)
				{
					array29 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity1xHalf=")
						select s).ToArray<string>();
					num = 42;
				}
				string[] array30;
				if (num == 43)
				{
					array30 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity2xHalf=")
						select s).ToArray<string>();
					num = 44;
				}
				string[] array31;
				if (num == 44)
				{
					array31 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity3x=")
						select s).ToArray<string>();
					num = 45;
				}
				string[] array32;
				if (num == 46)
				{
					array32 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity5x=")
						select s).ToArray<string>();
					num = 47;
				}
				string[] array33;
				if (num == 47)
				{
					array33 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity12x=")
						select s).ToArray<string>();
					num = 48;
				}
				string[] array34;
				if (num == 49)
				{
					array34 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimDownSightsMouse=")
						select s).ToArray<string>();
					num = 50;
				}
				string[] array35;
				if (num == 50)
				{
					array35 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseUseSpecific=")
						select s).ToArray<string>();
					num = 51;
				}
				string[] array36;
				if (num == 52)
				{
					array36 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity1x=")
						select s).ToArray<string>();
					num = 53;
				}
				string[] array37;
				if (num == 53)
				{
					array37 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity1xHalf=")
						select s).ToArray<string>();
					num = 54;
				}
				string[] array38;
				if (num == 54)
				{
					array38 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity2x=")
						select s).ToArray<string>();
					num = 55;
				}
				string[] array39;
				if (num == 56)
				{
					array39 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity3x=")
						select s).ToArray<string>();
					num = 57;
				}
				string[] array40;
				if (num == 57)
				{
					array40 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity4x=")
						select s).ToArray<string>();
					num = 58;
				}
				string[] array41;
				if (num == 59)
				{
					array41 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity12x=")
						select s).ToArray<string>();
					num = 60;
				}
				string[] array42;
				if (num == 60)
				{
					array42 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseMultiplierUnit=")
						select s).ToArray<string>();
					num = 61;
				}
				string[] array43;
				if (num == 62)
				{
					array43 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ControllerInputDevice=")
						select s).ToArray<string>();
					num = 63;
				}
				string[] array44;
				if (num == 63)
				{
					array44 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Subtitle=")
						select s).ToArray<string>();
					num = 64;
				}
				string[] array45;
				if (num == 65)
				{
					array45 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeMusic=")
						select s).ToArray<string>();
					num = 66;
				}
				string[] array46;
				if (num == 66)
				{
					array46 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeSoundEffects=")
						select s).ToArray<string>();
					num = 67;
				}
				string[] array47;
				if (num == 68)
				{
					array47 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DynamicRangeMode=")
						select s).ToArray<string>();
					num = 69;
				}
				string[] array48;
				if (num == 69)
				{
					array48 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatPlaybackLevel=")
						select s).ToArray<string>();
					num = 70;
				}
				string[] array49;
				if (num == 70)
				{
					array49 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureThresholdV2=")
						select s).ToArray<string>();
					num = 71;
				}
				string[] array50;
				if (num == 72)
				{
					array50 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureLevel=")
						select s).ToArray<string>();
					num = 73;
				}
				string[] array51;
				if (num == 73)
				{
					array51 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Mute=")
						select s).ToArray<string>();
					num = 74;
				}
				string[] array52;
				if (num == 75)
				{
					array52 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatTeamOnly=")
						select s).ToArray<string>();
					num = 76;
				}
				string text;
				if (num == 76)
				{
					string[] array53;
					string[] array54;
					string[] array55;
					string[] array56;
					string[] array57;
					string[] array58;
					string[] array59;
					string[] array60;
					string[] array61;
					string[] array62;
					string[] array63;
					string[] array64;
					string[] array65;
					string[] array66;
					string[] array67;
					string[] array68;
					string[] array69;
					string[] array70;
					string[] array71;
					string[] array72;
					string[] array73;
					string[] array74;
					string[] array75;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[DISPLAY_SETTINGS]",
						";ResolutionXXX    => 0 for autodetection",
						";RefreshRate      => 0 will let DirectX pick it",
						";WindowMode       => 0 fullscreen / 1 windowed / 2 borderless",
						";AspectRatio      => 0 display / 1 resolution / 2..N as options",
						";VSync            => 0 disabled / 1 frame / 2 frames",
						";UseLetterbox     => 0 disabled / 1 enabled",
						";DefaultFOV       => Default vertical field of view (degrees)",
						";TAASharpenFactor => Sharpen filter applied to TAA",
						";RenderScaling => Percentage of the display resolution at which 3D rendering is performed",
						";TAAScaling => Percentage of the display resolution at which TAA is performed",
						";UseAmdAGS => Enables usage of AMD AGS library for additional info in crash reports",
						";UseDynamicResolution => Enable dynamic resolution on vulkan",
						";DynamicResolutionTargetFPS => Target FPS on the GPU when dynamic resolution is enabled",
						";DynamicResolutionMin => Minimum render scaling value the dynamic resolution will be able to reach",
						";DynamicResolutionMax => Maximum render scaling value the dynamic resolution will be able to reach",
						";VulkanWhitelistedLayers => Semicolon separated list, with all the Vulkan layers you want to enable, like VK_LAYER_VALVE_steam_fossilize;VK_LAYER_RTSS",
						";InitialWindowPositionX/Y => -1 for centering",
						"GPUAdapter=0",
						"Monitor=0",
						"ResolutionWidth=" + this.DefaultWidth,
						"ResolutionHeight=" + this.DefaultHeight,
						string.Join(Environment.NewLine, array9),
						"WindowMode=0",
						"AspectRatio=0",
						"VSync=0",
						"MaxGPUBufferedFrame=1",
						"UseLetterbox=0",
						string.Join(Environment.NewLine, array11),
						"EnableAMDMultiDraw=1",
						"TAASharpenFactor=0.250000",
						"RenderScaling=45",
						"TAAScaling=100",
						"UseAmdAGS=1",
						"UseDynamicResolution=0",
						"DynamicResolutionTargetFPS=60",
						"DynamicResolutionMin=25",
						"DynamicResolutionMax=100",
						"VulkanWhitelistedLayers=",
						"InitialWindowPositionX=-1",
						"InitialWindowPositionY=-1",
						"",
						"[HARDWARE_INFO]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array53),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array54),
						string.Join(Environment.NewLine, array5),
						string.Join(Environment.NewLine, array6),
						"HardwareNotificationEnable=1",
						"",
						"[QUALITY_SETTINGS]",
						"QualityPresetName=Custom",
						"TexturePresetName=Medium",
						"",
						"[CUSTOM_PRESET_SETTINGS]",
						"Texture=0",
						"Shadow=0",
						"Reflection=0",
						"LOD=0",
						"AO=0",
						"Shading=0",
						"MotionBlur=0",
						"LensEffects=0",
						"DepthOfField=0",
						"TextureFiltering=3",
						"AntiAliasingMethod=0",
						"",
						"[READ_ONLY]",
						string.Join(Environment.NewLine, array55),
						"",
						"[INPUT]",
						string.Join(Environment.NewLine, array56),
						string.Join(Environment.NewLine, array12),
						string.Join(Environment.NewLine, array13),
						string.Join(Environment.NewLine, array57),
						string.Join(Environment.NewLine, array14),
						string.Join(Environment.NewLine, array15),
						string.Join(Environment.NewLine, array58),
						string.Join(Environment.NewLine, array16),
						string.Join(Environment.NewLine, array17),
						string.Join(Environment.NewLine, array59),
						string.Join(Environment.NewLine, array18),
						string.Join(Environment.NewLine, array19),
						string.Join(Environment.NewLine, array20),
						string.Join(Environment.NewLine, array60),
						string.Join(Environment.NewLine, array21),
						string.Join(Environment.NewLine, array22),
						string.Join(Environment.NewLine, array61),
						string.Join(Environment.NewLine, array23),
						string.Join(Environment.NewLine, array24),
						string.Join(Environment.NewLine, array62),
						string.Join(Environment.NewLine, array25),
						string.Join(Environment.NewLine, array26),
						string.Join(Environment.NewLine, array63),
						string.Join(Environment.NewLine, array27),
						string.Join(Environment.NewLine, array28),
						string.Join(Environment.NewLine, array29),
						string.Join(Environment.NewLine, array64),
						string.Join(Environment.NewLine, array30),
						string.Join(Environment.NewLine, array31),
						string.Join(Environment.NewLine, array65),
						string.Join(Environment.NewLine, array32),
						string.Join(Environment.NewLine, array33),
						string.Join(Environment.NewLine, array66),
						string.Join(Environment.NewLine, array34),
						string.Join(Environment.NewLine, array35),
						string.Join(Environment.NewLine, array67),
						string.Join(Environment.NewLine, array36),
						string.Join(Environment.NewLine, array37),
						string.Join(Environment.NewLine, array38),
						string.Join(Environment.NewLine, array68),
						string.Join(Environment.NewLine, array39),
						string.Join(Environment.NewLine, array40),
						string.Join(Environment.NewLine, array69),
						string.Join(Environment.NewLine, array41),
						string.Join(Environment.NewLine, array42),
						string.Join(Environment.NewLine, array70),
						string.Join(Environment.NewLine, array43),
						"",
						"[DISPLAY]",
						";FPSLimit => Limit the game's fps. Minimum of 30fps. Anything below will disable the fps limit.",
						";Console => Enables the in-game console which is mapped to `/~. Will only work if the key is not already mapped.",
						string.Join(Environment.NewLine, array10),
						"FPSLimit=0",
						"Console=0",
						"",
						"[AUDIO]",
						";Dynamic Range mode: (0) Hi-Fi, (1) TV, (2) Night Mode",
						";VoiceChatCaptureMode => 0 Auto / 1 Manual / 2 Push to talk",
						string.Join(Environment.NewLine, array44),
						string.Join(Environment.NewLine, array71),
						string.Join(Environment.NewLine, array45),
						string.Join(Environment.NewLine, array46),
						string.Join(Environment.NewLine, array72),
						string.Join(Environment.NewLine, array47),
						string.Join(Environment.NewLine, array48),
						string.Join(Environment.NewLine, array49),
						string.Join(Environment.NewLine, array73),
						string.Join(Environment.NewLine, array50),
						string.Join(Environment.NewLine, array51),
						string.Join(Environment.NewLine, array74),
						string.Join(Environment.NewLine, array52),
						"",
						"[GAMEPLAY]",
						string.Join(Environment.NewLine, array7),
						string.Join(Environment.NewLine, array8),
						"",
						"[ONLINE]",
						";DataCenterHint => ",
						";    default (ping based)",
						";    eastus",
						";    centralus",
						";    southcentralus",
						";    westus",
						";    brazilsouth",
						";    northeurope",
						";    westeurope",
						";    southafricanorth",
						";    eastasia",
						";    southeastasia",
						";    australiaeast",
						";    australiasoutheast",
						";    japanwest",
						"",
						";",
						";if UseProxyAutoDiscovery is set to true, http_proxy or https_proxy or all_proxy and no_proxy are going to be looked up and used for all http calls",
						string.Join(Environment.NewLine, array75),
						"UseProxyAutoDiscovery=0",
						""
					});
					num = 77;
				}
				if (num == 78)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 79;
				}
				if (num == 77)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 78;
				}
				if (num == 74)
				{
					string[] array74 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatMuteAll=")
						select s).ToArray<string>();
					num = 75;
				}
				if (num == 71)
				{
					string[] array73 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureMode=")
						select s).ToArray<string>();
					num = 72;
				}
				if (num == 67)
				{
					string[] array72 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeVoice=")
						select s).ToArray<string>();
					num = 68;
				}
				if (num == 64)
				{
					string[] array71 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Volume=")
						select s).ToArray<string>();
					num = 65;
				}
				if (num == 61)
				{
					string[] array70 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ControlSchemeIndex=")
						select s).ToArray<string>();
					num = 62;
				}
				if (num == 58)
				{
					string[] array69 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity5x=")
						select s).ToArray<string>();
					num = 59;
				}
				if (num == 55)
				{
					string[] array68 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity2xHalf=")
						select s).ToArray<string>();
					num = 56;
				}
				if (num == 51)
				{
					string[] array67 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivityGlobal=")
						select s).ToArray<string>();
					num = 52;
				}
				if (num == 48)
				{
					string[] array66 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadMultiplierUnit=")
						select s).ToArray<string>();
					num = 49;
				}
				if (num == 45)
				{
					string[] array65 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity4x=")
						select s).ToArray<string>();
					num = 46;
				}
				if (num == 42)
				{
					string[] array64 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity2x=")
						select s).ToArray<string>();
					num = 43;
				}
				if (num == 38)
				{
					string[] array63 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadUseSpecific=")
						select s).ToArray<string>();
					num = 39;
				}
				if (num == 35)
				{
					string[] array62 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleGadgetDeploymentGamepad=")
						select s).ToArray<string>();
					num = 36;
				}
				if (num == 32)
				{
					string[] array61 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleCrouch=")
						select s).ToArray<string>();
					num = 33;
				}
				if (num == 29)
				{
					string[] array60 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleAim=")
						select s).ToArray<string>();
					num = 30;
				}
				if (num == 25)
				{
					string[] array59 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseSensitivity=")
						select s).ToArray<string>();
					num = 26;
				}
				if (num == 22)
				{
					string[] array58 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("PitchSensitivity=")
						select s).ToArray<string>();
					num = 23;
				}
				if (num == 19)
				{
					string[] array57 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Rumble=")
						select s).ToArray<string>();
					num = 20;
				}
				if (num == 16)
				{
					string[] array56 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("RawInputMouseKeyboard=")
						select s).ToArray<string>();
					num = 17;
				}
				if (num == 12)
				{
					string[] array75 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DataCenterHint=")
						select s).ToArray<string>();
					num = 13;
				}
				if (num == 9)
				{
					string[] array55 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DefaultValuesVersion=")
						select s).ToArray<string>();
					num = 10;
				}
				if (num == 6)
				{
					string[] array54 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUScoreConf=")
						select s).ToArray<string>();
					num = 7;
				}
				if (num == 3)
				{
					string[] array53 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUSubSysId=")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 79);
		}

		// Token: 0x0600050E RID: 1294 RVA: 0x001328EC File Offset: 0x00130AEC
		private void RSS_a()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUVendor=")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array2;
				if (num == 2)
				{
					array2 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUDeviceId=")
						select s).ToArray<string>();
					num = 3;
				}
				string[] array3;
				if (num == 4)
				{
					array3 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUDedicatedMemoryMB=")
						select s).ToArray<string>();
					num = 5;
				}
				string[] array4;
				if (num == 5)
				{
					array4 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUScore=")
						select s).ToArray<string>();
					num = 6;
				}
				string[] array5;
				if (num == 7)
				{
					array5 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("SystemMemoryMB=")
						select s).ToArray<string>();
					num = 8;
				}
				string[] array6;
				if (num == 8)
				{
					array6 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("CPUScore=")
						select s).ToArray<string>();
					num = 9;
				}
				string[] array7;
				if (num == 10)
				{
					array7 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("PartyPrivacyEnable=")
						select s).ToArray<string>();
					num = 11;
				}
				string[] array8;
				if (num == 11)
				{
					array8 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GameplayPingEnable=")
						select s).ToArray<string>();
					num = 12;
				}
				string[] array9;
				if (num == 13)
				{
					array9 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("RefreshRate=")
						select s).ToArray<string>();
					num = 14;
				}
				string[] array10;
				if (num == 14)
				{
					array10 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Brightness=")
						select s).ToArray<string>();
					num = 15;
				}
				string[] array11;
				if (num == 15)
				{
					array11 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DefaultFOV=")
						select s).ToArray<string>();
					num = 16;
				}
				string[] array12;
				if (num == 17)
				{
					array12 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("InvertAxisY=")
						select s).ToArray<string>();
					num = 18;
				}
				string[] array13;
				if (num == 18)
				{
					array13 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("InvertMouseAxisY=")
						select s).ToArray<string>();
					num = 19;
				}
				string[] array14;
				if (num == 20)
				{
					array14 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimAssist=")
						select s).ToArray<string>();
					num = 21;
				}
				string[] array15;
				if (num == 21)
				{
					array15 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("YawSensitivity=")
						select s).ToArray<string>();
					num = 22;
				}
				string[] array16;
				if (num == 23)
				{
					array16 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeadzoneLeftStick=")
						select s).ToArray<string>();
					num = 24;
				}
				string[] array17;
				if (num == 24)
				{
					array17 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeadzoneRightStick=")
						select s).ToArray<string>();
					num = 25;
				}
				string[] array18;
				if (num == 26)
				{
					array18 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseSensitivityMultiplierUnit=")
						select s).ToArray<string>();
					num = 27;
				}
				string[] array19;
				if (num == 27)
				{
					array19 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseScroll=")
						select s).ToArray<string>();
					num = 28;
				}
				string[] array20;
				if (num == 28)
				{
					array20 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("XFactorAiming=")
						select s).ToArray<string>();
					num = 29;
				}
				string[] array21;
				if (num == 30)
				{
					array21 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleLean=")
						select s).ToArray<string>();
					num = 31;
				}
				string[] array22;
				if (num == 31)
				{
					array22 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleSprint=")
						select s).ToArray<string>();
					num = 32;
				}
				string[] array23;
				if (num == 33)
				{
					array23 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleProne=")
						select s).ToArray<string>();
					num = 34;
				}
				string[] array24;
				if (num == 34)
				{
					array24 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleWalk=")
						select s).ToArray<string>();
					num = 35;
				}
				string[] array25;
				if (num == 36)
				{
					array25 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleGadgetDeploymentKeyboard=")
						select s).ToArray<string>();
					num = 37;
				}
				string[] array26;
				if (num == 37)
				{
					array26 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimDownSights=")
						select s).ToArray<string>();
					num = 38;
				}
				string[] array27;
				if (num == 39)
				{
					array27 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivityGlobal=")
						select s).ToArray<string>();
					num = 40;
				}
				string[] array28;
				if (num == 40)
				{
					array28 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity1x=")
						select s).ToArray<string>();
					num = 41;
				}
				string[] array29;
				if (num == 41)
				{
					array29 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity1xHalf=")
						select s).ToArray<string>();
					num = 42;
				}
				string[] array30;
				if (num == 43)
				{
					array30 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity2xHalf=")
						select s).ToArray<string>();
					num = 44;
				}
				string[] array31;
				if (num == 44)
				{
					array31 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity3x=")
						select s).ToArray<string>();
					num = 45;
				}
				string[] array32;
				if (num == 46)
				{
					array32 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity5x=")
						select s).ToArray<string>();
					num = 47;
				}
				string[] array33;
				if (num == 47)
				{
					array33 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity12x=")
						select s).ToArray<string>();
					num = 48;
				}
				string[] array34;
				if (num == 49)
				{
					array34 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("AimDownSightsMouse=")
						select s).ToArray<string>();
					num = 50;
				}
				string[] array35;
				if (num == 50)
				{
					array35 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseUseSpecific=")
						select s).ToArray<string>();
					num = 51;
				}
				string[] array36;
				if (num == 52)
				{
					array36 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity1x=")
						select s).ToArray<string>();
					num = 53;
				}
				string[] array37;
				if (num == 53)
				{
					array37 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity1xHalf=")
						select s).ToArray<string>();
					num = 54;
				}
				string[] array38;
				if (num == 54)
				{
					array38 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity2x=")
						select s).ToArray<string>();
					num = 55;
				}
				string[] array39;
				if (num == 56)
				{
					array39 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity3x=")
						select s).ToArray<string>();
					num = 57;
				}
				string[] array40;
				if (num == 57)
				{
					array40 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity4x=")
						select s).ToArray<string>();
					num = 58;
				}
				string[] array41;
				if (num == 59)
				{
					array41 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity12x=")
						select s).ToArray<string>();
					num = 60;
				}
				string[] array42;
				if (num == 60)
				{
					array42 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseMultiplierUnit=")
						select s).ToArray<string>();
					num = 61;
				}
				string[] array43;
				if (num == 62)
				{
					array43 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ControllerInputDevice=")
						select s).ToArray<string>();
					num = 63;
				}
				string[] array44;
				if (num == 63)
				{
					array44 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Subtitle=")
						select s).ToArray<string>();
					num = 64;
				}
				string[] array45;
				if (num == 65)
				{
					array45 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeMusic=")
						select s).ToArray<string>();
					num = 66;
				}
				string[] array46;
				if (num == 66)
				{
					array46 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeSoundEffects=")
						select s).ToArray<string>();
					num = 67;
				}
				string[] array47;
				if (num == 68)
				{
					array47 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DynamicRangeMode=")
						select s).ToArray<string>();
					num = 69;
				}
				string[] array48;
				if (num == 69)
				{
					array48 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatPlaybackLevel=")
						select s).ToArray<string>();
					num = 70;
				}
				string[] array49;
				if (num == 70)
				{
					array49 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureThresholdV2=")
						select s).ToArray<string>();
					num = 71;
				}
				string[] array50;
				if (num == 72)
				{
					array50 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureLevel=")
						select s).ToArray<string>();
					num = 73;
				}
				string[] array51;
				if (num == 73)
				{
					array51 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Mute=")
						select s).ToArray<string>();
					num = 74;
				}
				string[] array52;
				if (num == 75)
				{
					array52 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatTeamOnly=")
						select s).ToArray<string>();
					num = 76;
				}
				string text;
				if (num == 76)
				{
					string[] array53;
					string[] array54;
					string[] array55;
					string[] array56;
					string[] array57;
					string[] array58;
					string[] array59;
					string[] array60;
					string[] array61;
					string[] array62;
					string[] array63;
					string[] array64;
					string[] array65;
					string[] array66;
					string[] array67;
					string[] array68;
					string[] array69;
					string[] array70;
					string[] array71;
					string[] array72;
					string[] array73;
					string[] array74;
					string[] array75;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[DISPLAY_SETTINGS]",
						";ResolutionXXX    => 0 for autodetection",
						";RefreshRate      => 0 will let DirectX pick it",
						";WindowMode       => 0 fullscreen / 1 windowed / 2 borderless",
						";AspectRatio      => 0 display / 1 resolution / 2..N as options",
						";VSync            => 0 disabled / 1 frame / 2 frames",
						";UseLetterbox     => 0 disabled / 1 enabled",
						";DefaultFOV       => Default vertical field of view (degrees)",
						";TAASharpenFactor => Sharpen filter applied to TAA",
						";RenderScaling => Percentage of the display resolution at which 3D rendering is performed",
						";TAAScaling => Percentage of the display resolution at which TAA is performed",
						";UseAmdAGS => Enables usage of AMD AGS library for additional info in crash reports",
						";UseDynamicResolution => Enable dynamic resolution on vulkan",
						";DynamicResolutionTargetFPS => Target FPS on the GPU when dynamic resolution is enabled",
						";DynamicResolutionMin => Minimum render scaling value the dynamic resolution will be able to reach",
						";DynamicResolutionMax => Maximum render scaling value the dynamic resolution will be able to reach",
						";VulkanWhitelistedLayers => Semicolon separated list, with all the Vulkan layers you want to enable, like VK_LAYER_VALVE_steam_fossilize;VK_LAYER_RTSS",
						";InitialWindowPositionX/Y => -1 for centering",
						"GPUAdapter=0",
						"Monitor=0",
						"ResolutionWidth=" + this.DefaultWidth,
						"ResolutionHeight=" + this.DefaultHeight,
						string.Join(Environment.NewLine, array9),
						"WindowMode=0",
						"AspectRatio=0",
						"VSync=0",
						"MaxGPUBufferedFrame=1",
						"UseLetterbox=0",
						string.Join(Environment.NewLine, array11),
						"EnableAMDMultiDraw=1",
						"TAASharpenFactor=0.250000",
						"RenderScaling=50",
						"TAAScaling=100",
						"UseAmdAGS=1",
						"UseDynamicResolution=0",
						"DynamicResolutionTargetFPS=60",
						"DynamicResolutionMin=25",
						"DynamicResolutionMax=100",
						"VulkanWhitelistedLayers=",
						"InitialWindowPositionX=-1",
						"InitialWindowPositionY=-1",
						"",
						"[HARDWARE_INFO]",
						string.Join(Environment.NewLine, array),
						string.Join(Environment.NewLine, array2),
						string.Join(Environment.NewLine, array53),
						string.Join(Environment.NewLine, array3),
						string.Join(Environment.NewLine, array4),
						string.Join(Environment.NewLine, array54),
						string.Join(Environment.NewLine, array5),
						string.Join(Environment.NewLine, array6),
						"HardwareNotificationEnable=1",
						"",
						"[QUALITY_SETTINGS]",
						"QualityPresetName=Custom",
						"TexturePresetName=Low",
						"",
						"[CUSTOM_PRESET_SETTINGS]",
						"Texture=0",
						"Shadow=0",
						"Reflection=0",
						"LOD=0",
						"AO=0",
						"Shading=0",
						"MotionBlur=0",
						"LensEffects=0",
						"DepthOfField=0",
						"TextureFiltering=4",
						"AntiAliasingMethod=0",
						"",
						"[READ_ONLY]",
						string.Join(Environment.NewLine, array55),
						"",
						"[INPUT]",
						string.Join(Environment.NewLine, array56),
						string.Join(Environment.NewLine, array12),
						string.Join(Environment.NewLine, array13),
						string.Join(Environment.NewLine, array57),
						string.Join(Environment.NewLine, array14),
						string.Join(Environment.NewLine, array15),
						string.Join(Environment.NewLine, array58),
						string.Join(Environment.NewLine, array16),
						string.Join(Environment.NewLine, array17),
						string.Join(Environment.NewLine, array59),
						string.Join(Environment.NewLine, array18),
						string.Join(Environment.NewLine, array19),
						string.Join(Environment.NewLine, array20),
						string.Join(Environment.NewLine, array60),
						string.Join(Environment.NewLine, array21),
						string.Join(Environment.NewLine, array22),
						string.Join(Environment.NewLine, array61),
						string.Join(Environment.NewLine, array23),
						string.Join(Environment.NewLine, array24),
						string.Join(Environment.NewLine, array62),
						string.Join(Environment.NewLine, array25),
						string.Join(Environment.NewLine, array26),
						string.Join(Environment.NewLine, array63),
						string.Join(Environment.NewLine, array27),
						string.Join(Environment.NewLine, array28),
						string.Join(Environment.NewLine, array29),
						string.Join(Environment.NewLine, array64),
						string.Join(Environment.NewLine, array30),
						string.Join(Environment.NewLine, array31),
						string.Join(Environment.NewLine, array65),
						string.Join(Environment.NewLine, array32),
						string.Join(Environment.NewLine, array33),
						string.Join(Environment.NewLine, array66),
						string.Join(Environment.NewLine, array34),
						string.Join(Environment.NewLine, array35),
						string.Join(Environment.NewLine, array67),
						string.Join(Environment.NewLine, array36),
						string.Join(Environment.NewLine, array37),
						string.Join(Environment.NewLine, array38),
						string.Join(Environment.NewLine, array68),
						string.Join(Environment.NewLine, array39),
						string.Join(Environment.NewLine, array40),
						string.Join(Environment.NewLine, array69),
						string.Join(Environment.NewLine, array41),
						string.Join(Environment.NewLine, array42),
						string.Join(Environment.NewLine, array70),
						string.Join(Environment.NewLine, array43),
						"",
						"[DISPLAY]",
						";FPSLimit => Limit the game's fps. Minimum of 30fps. Anything below will disable the fps limit.",
						";Console => Enables the in-game console which is mapped to `/~. Will only work if the key is not already mapped.",
						string.Join(Environment.NewLine, array10),
						"FPSLimit=0",
						"Console=0",
						"",
						"[AUDIO]",
						";Dynamic Range mode: (0) Hi-Fi, (1) TV, (2) Night Mode",
						";VoiceChatCaptureMode => 0 Auto / 1 Manual / 2 Push to talk",
						string.Join(Environment.NewLine, array44),
						string.Join(Environment.NewLine, array71),
						string.Join(Environment.NewLine, array45),
						string.Join(Environment.NewLine, array46),
						string.Join(Environment.NewLine, array72),
						string.Join(Environment.NewLine, array47),
						string.Join(Environment.NewLine, array48),
						string.Join(Environment.NewLine, array49),
						string.Join(Environment.NewLine, array73),
						string.Join(Environment.NewLine, array50),
						string.Join(Environment.NewLine, array51),
						string.Join(Environment.NewLine, array74),
						string.Join(Environment.NewLine, array52),
						"",
						"[GAMEPLAY]",
						string.Join(Environment.NewLine, array7),
						string.Join(Environment.NewLine, array8),
						"",
						"[ONLINE]",
						";DataCenterHint => ",
						";    default (ping based)",
						";    eastus",
						";    centralus",
						";    southcentralus",
						";    westus",
						";    brazilsouth",
						";    northeurope",
						";    westeurope",
						";    southafricanorth",
						";    eastasia",
						";    southeastasia",
						";    australiaeast",
						";    australiasoutheast",
						";    japanwest",
						"",
						";",
						";if UseProxyAutoDiscovery is set to true, http_proxy or https_proxy or all_proxy and no_proxy are going to be looked up and used for all http calls",
						string.Join(Environment.NewLine, array75),
						"UseProxyAutoDiscovery=0",
						""
					});
					num = 77;
				}
				if (num == 78)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 79;
				}
				if (num == 77)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 78;
				}
				if (num == 74)
				{
					string[] array74 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatMuteAll=")
						select s).ToArray<string>();
					num = 75;
				}
				if (num == 71)
				{
					string[] array73 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VoiceChatCaptureMode=")
						select s).ToArray<string>();
					num = 72;
				}
				if (num == 67)
				{
					string[] array72 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("VolumeVoice=")
						select s).ToArray<string>();
					num = 68;
				}
				if (num == 64)
				{
					string[] array71 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Volume=")
						select s).ToArray<string>();
					num = 65;
				}
				if (num == 61)
				{
					string[] array70 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ControlSchemeIndex=")
						select s).ToArray<string>();
					num = 62;
				}
				if (num == 58)
				{
					string[] array69 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity5x=")
						select s).ToArray<string>();
					num = 59;
				}
				if (num == 55)
				{
					string[] array68 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivity2xHalf=")
						select s).ToArray<string>();
					num = 56;
				}
				if (num == 51)
				{
					string[] array67 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSMouseSensitivityGlobal=")
						select s).ToArray<string>();
					num = 52;
				}
				if (num == 48)
				{
					string[] array66 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadMultiplierUnit=")
						select s).ToArray<string>();
					num = 49;
				}
				if (num == 45)
				{
					string[] array65 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity4x=")
						select s).ToArray<string>();
					num = 46;
				}
				if (num == 42)
				{
					string[] array64 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadSensitivity2x=")
						select s).ToArray<string>();
					num = 43;
				}
				if (num == 38)
				{
					string[] array63 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ADSGamepadUseSpecific=")
						select s).ToArray<string>();
					num = 39;
				}
				if (num == 35)
				{
					string[] array62 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleGadgetDeploymentGamepad=")
						select s).ToArray<string>();
					num = 36;
				}
				if (num == 32)
				{
					string[] array61 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleCrouch=")
						select s).ToArray<string>();
					num = 33;
				}
				if (num == 29)
				{
					string[] array60 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("ToggleAim=")
						select s).ToArray<string>();
					num = 30;
				}
				if (num == 25)
				{
					string[] array59 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("MouseSensitivity=")
						select s).ToArray<string>();
					num = 26;
				}
				if (num == 22)
				{
					string[] array58 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("PitchSensitivity=")
						select s).ToArray<string>();
					num = 23;
				}
				if (num == 19)
				{
					string[] array57 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Rumble=")
						select s).ToArray<string>();
					num = 20;
				}
				if (num == 16)
				{
					string[] array56 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("RawInputMouseKeyboard=")
						select s).ToArray<string>();
					num = 17;
				}
				if (num == 12)
				{
					string[] array75 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DataCenterHint=")
						select s).ToArray<string>();
					num = 13;
				}
				if (num == 9)
				{
					string[] array55 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DefaultValuesVersion=")
						select s).ToArray<string>();
					num = 10;
				}
				if (num == 6)
				{
					string[] array54 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUScoreConf=")
						select s).ToArray<string>();
					num = 7;
				}
				if (num == 3)
				{
					string[] array53 = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("GPUSubSysId=")
						select s).ToArray<string>();
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 79);
		}

		// Token: 0x0600050F RID: 1295 RVA: 0x00134AB0 File Offset: 0x00132CB0
		private void RDR2_g()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.rdr2_settingloc)
						where s.Contains("<videoCardDescription>")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
						"",
						"<rage__fwuiSystemSettingsCollection>",
						"  <version value=\"37\" />",
						"  <configSource>kSettingsConfig_Auto</configSource>",
						"  <graphics>",
						"    <tessellation>kSettingLevel_Low</tessellation>",
						"    <shadowQuality>kSettingLevel_Low</shadowQuality>",
						"    <farShadowQuality>kSettingLevel_Low</farShadowQuality>",
						"    <reflectionQuality>kSettingLevel_Low</reflectionQuality>",
						"    <mirrorQuality>kSettingLevel_Low</mirrorQuality>",
						"    <ssao>kSettingLevel_Low</ssao>",
						"    <textureQuality>kSettingLevel_Low</textureQuality>",
						"    <particleQuality>kSettingLevel_Low</particleQuality>",
						"    <waterQuality>kSettingLevel_Custom</waterQuality>",
						"    <volumetricsQuality>kSettingLevel_Custom</volumetricsQuality>",
						"    <lightingQuality>kSettingLevel_Low</lightingQuality>",
						"    <ambientLightingQuality>kSettingLevel_Low</ambientLightingQuality>",
						"    <anisotropicFiltering value=\"1\" />",
						"    <dlssIndex value=\"0\" />",
						"    <dlssQuality value=\"5\" />",
						"    <taa>kSettingLevel_Low</taa>",
						"    <fxaaEnabled value=\"false\" />",
						"    <msaa value=\"0\" />",
						"    <graphicsQualityPreset value=\"0.500000\" />",
						"    <hdr value=\"true\" />",
						"    <hdrIntensity value=\"100\" />",
						"    <hdrPeakBrightness value=\"1000\" />",
						"    <hdrFilmicMode value=\"true\" />",
						"    <gamma value=\"15\" />",
						"    <hdrSettingsMigrated value=\"true\" />",
						"  </graphics>",
						"  <advancedGraphics>",
						"    <API>kSettingAPI_DX12</API>",
						"    <locked value=\"false\" />",
						"    <asyncComputeEnabled value=\"false\" />",
						"    <transferQueuesEnabled value=\"true\" />",
						"    <shadowSoftShadows>kSettingLevel_Low</shadowSoftShadows>",
						"    <motionBlur value=\"false\" />",
						"    <motionBlurLimit value=\"0.000000\" />",
						"    <particleLightingQuality>kSettingLevel_Low</particleLightingQuality>",
						"    <waterReflectionSSR value=\"false\" />",
						"    <waterRefractionQuality>kSettingLevel_Low</waterRefractionQuality>",
						"    <waterReflectionQuality>kSettingLevel_Low</waterReflectionQuality>",
						"    <waterSimulationQuality value=\"0\" />",
						"    <waterLightingQuality>kSettingLevel_Low</waterLightingQuality>",
						"    <furDisplayQuality>kSettingLevel_Low</furDisplayQuality>",
						"    <maxTexUpgradesPerFrame value=\"5\" />",
						"    <shadowGrassShadows>kSettingLevel_Low</shadowGrassShadows>",
						"    <shadowParticleShadows value=\"false\" />",
						"    <shadowLongShadows value=\"false\" />",
						"    <directionalShadowsAlpha value=\"false\" />",
						"    <worldHeightShadowQuality value=\"0.000000\" />",
						"    <directionalScreenSpaceShadowQuality value=\"0.000000\" />",
						"    <ambientMaskVolumesHighPrecision value=\"false\" />",
						"    <scatteringVolumeQuality>kSettingLevel_Low</scatteringVolumeQuality>",
						"    <volumetricsRaymarchQuality>kSettingLevel_Low</volumetricsRaymarchQuality>",
						"    <volumetricsLightingQuality>kSettingLevel_Low</volumetricsLightingQuality>",
						"    <volumetricsRaymarchResolutionUnclamped value=\"false\" />",
						"    <terrainShadowQuality>kSettingLevel_Low</terrainShadowQuality>",
						"    <damageModelsDisabled value=\"false\" />",
						"    <decalQuality>kSettingLevel_Low</decalQuality>",
						"    <ssaoFullScreenEnabled value=\"false\" />",
						"    <ssaoType value=\"0\" />",
						"    <ssdoSampleCount value=\"0\" />",
						"    <ssdoUseDualRadii value=\"false\" />",
						"    <ssdoResolution>kSettingLevel_Low</ssdoResolution>",
						"    <ssdoTAABlendEnabled value=\"false\" />",
						"    <ssroSampleCount value=\"0\" />",
						"    <snowGlints value=\"false\" />",
						"    <POMQuality>kSettingLevel_Low</POMQuality>",
						"    <probeRelightEveryFrame value=\"false\" />",
						"    <scalingMode>kSettingScale_Mode1o2</scalingMode>",
						"    <reflectionMSAA value=\"0\" />",
						"    <lodScale value=\"0.250000\" />",
						"    <grassLod value=\"0.000000\" />",
						"    <pedLodBias value=\"0.000000\" />",
						"    <vehicleLodBias value=\"0.000000\" />",
						"    <sharpenIntensity value=\"2.350000\" />",
						"    <treeQuality>kSettingLevel_Low</treeQuality>",
						"    <deepsurfaceQuality>kSettingLevel_Low</deepsurfaceQuality>",
						"    <treeTessellationEnabled value=\"false\" />",
						"  </advancedGraphics>",
						"  <video>",
						"    <adapterIndex value=\"0\" />",
						"    <outputIndex value=\"0\" />",
						"    <resolutionIndex value=\"17\" />",
						"    <screenWidth value=\"" + this.DefaultWidth + "\" />",
						"    <screenHeight value=\"" + this.DefaultHeight + "\" />",
						"    <resolutionIndexWindowed value=\"13\" />",
						"    <screenWidthWindowed value=\"" + this.DefaultWidth + "\" />",
						"    <screenHeightWindowed value=\"" + this.DefaultHeight + "\" />",
						"    <refreshRateIndex value=\"5\" />",
						"    <refreshRateNumerator value=\"60000\" />",
						"    <refreshRateDenominator value=\"1000\" />",
						"    <windowed value=\"0\" />",
						"    <vSync value=\"0\" />",
						"    <tripleBuffered value=\"false\" />",
						"    <pauseOnFocusLoss value=\"false\" />",
						"    <constrainMousePointer value=\"false\" />",
						"  </video>",
						string.Join(Environment.NewLine, array),
						"</rage__fwuiSystemSettingsCollection>",
						""
					});
					num = 3;
				}
				if (num == 4)
				{
					File.WriteAllText(this.rdr2_settingloc, text);
					num = 5;
				}
				if (num == 3)
				{
					File.SetAttributes(this.rdr2_settingloc, FileAttributes.Normal);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000510 RID: 1296 RVA: 0x001350D4 File Offset: 0x001332D4
		private void RDR2_f()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.rdr2_settingloc)
						where s.Contains("<videoCardDescription>")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
						"",
						"<rage__fwuiSystemSettingsCollection>",
						"  <version value=\"37\" />",
						"  <configSource>kSettingsConfig_Auto</configSource>",
						"  <graphics>",
						"    <tessellation>kSettingLevel_Low</tessellation>",
						"    <shadowQuality>kSettingLevel_Low</shadowQuality>",
						"    <farShadowQuality>kSettingLevel_Low</farShadowQuality>",
						"    <reflectionQuality>kSettingLevel_Low</reflectionQuality>",
						"    <mirrorQuality>kSettingLevel_Low</mirrorQuality>",
						"    <ssao>kSettingLevel_Low</ssao>",
						"    <textureQuality>kSettingLevel_Medium</textureQuality>",
						"    <particleQuality>kSettingLevel_Low</particleQuality>",
						"    <waterQuality>kSettingLevel_Custom</waterQuality>",
						"    <volumetricsQuality>kSettingLevel_Custom</volumetricsQuality>",
						"    <lightingQuality>kSettingLevel_Low</lightingQuality>",
						"    <ambientLightingQuality>kSettingLevel_Low</ambientLightingQuality>",
						"    <anisotropicFiltering value=\"2\" />",
						"    <dlssIndex value=\"0\" />",
						"    <dlssQuality value=\"5\" />",
						"    <taa>kSettingLevel_Low</taa>",
						"    <fxaaEnabled value=\"false\" />",
						"    <msaa value=\"0\" />",
						"    <graphicsQualityPreset value=\"0.500000\" />",
						"    <hdr value=\"true\" />",
						"    <hdrIntensity value=\"100\" />",
						"    <hdrPeakBrightness value=\"1000\" />",
						"    <hdrFilmicMode value=\"true\" />",
						"    <gamma value=\"15\" />",
						"    <hdrSettingsMigrated value=\"true\" />",
						"  </graphics>",
						"  <advancedGraphics>",
						"    <API>kSettingAPI_DX12</API>",
						"    <locked value=\"false\" />",
						"    <asyncComputeEnabled value=\"false\" />",
						"    <transferQueuesEnabled value=\"true\" />",
						"    <shadowSoftShadows>kSettingLevel_Low</shadowSoftShadows>",
						"    <motionBlur value=\"false\" />",
						"    <motionBlurLimit value=\"0.000000\" />",
						"    <particleLightingQuality>kSettingLevel_Low</particleLightingQuality>",
						"    <waterReflectionSSR value=\"false\" />",
						"    <waterRefractionQuality>kSettingLevel_Low</waterRefractionQuality>",
						"    <waterReflectionQuality>kSettingLevel_Low</waterReflectionQuality>",
						"    <waterSimulationQuality value=\"0\" />",
						"    <waterLightingQuality>kSettingLevel_Low</waterLightingQuality>",
						"    <furDisplayQuality>kSettingLevel_Low</furDisplayQuality>",
						"    <maxTexUpgradesPerFrame value=\"5\" />",
						"    <shadowGrassShadows>kSettingLevel_Low</shadowGrassShadows>",
						"    <shadowParticleShadows value=\"false\" />",
						"    <shadowLongShadows value=\"false\" />",
						"    <directionalShadowsAlpha value=\"false\" />",
						"    <worldHeightShadowQuality value=\"0.000000\" />",
						"    <directionalScreenSpaceShadowQuality value=\"0.000000\" />",
						"    <ambientMaskVolumesHighPrecision value=\"false\" />",
						"    <scatteringVolumeQuality>kSettingLevel_Low</scatteringVolumeQuality>",
						"    <volumetricsRaymarchQuality>kSettingLevel_Low</volumetricsRaymarchQuality>",
						"    <volumetricsLightingQuality>kSettingLevel_Low</volumetricsLightingQuality>",
						"    <volumetricsRaymarchResolutionUnclamped value=\"false\" />",
						"    <terrainShadowQuality>kSettingLevel_Low</terrainShadowQuality>",
						"    <damageModelsDisabled value=\"false\" />",
						"    <decalQuality>kSettingLevel_Low</decalQuality>",
						"    <ssaoFullScreenEnabled value=\"false\" />",
						"    <ssaoType value=\"0\" />",
						"    <ssdoSampleCount value=\"0\" />",
						"    <ssdoUseDualRadii value=\"false\" />",
						"    <ssdoResolution>kSettingLevel_Low</ssdoResolution>",
						"    <ssdoTAABlendEnabled value=\"false\" />",
						"    <ssroSampleCount value=\"0\" />",
						"    <snowGlints value=\"false\" />",
						"    <POMQuality>kSettingLevel_Low</POMQuality>",
						"    <probeRelightEveryFrame value=\"false\" />",
						"    <scalingMode>kSettingScale_Mode2o3</scalingMode>",
						"    <reflectionMSAA value=\"0\" />",
						"    <lodScale value=\"0.250000\" />",
						"    <grassLod value=\"0.000000\" />",
						"    <pedLodBias value=\"0.000000\" />",
						"    <vehicleLodBias value=\"0.000000\" />",
						"    <sharpenIntensity value=\"2.350000\" />",
						"    <treeQuality>kSettingLevel_Low</treeQuality>",
						"    <deepsurfaceQuality>kSettingLevel_Low</deepsurfaceQuality>",
						"    <treeTessellationEnabled value=\"false\" />",
						"  </advancedGraphics>",
						"  <video>",
						"    <adapterIndex value=\"0\" />",
						"    <outputIndex value=\"0\" />",
						"    <resolutionIndex value=\"17\" />",
						"    <screenWidth value=\"" + this.DefaultWidth + "\" />",
						"    <screenHeight value=\"" + this.DefaultHeight + "\" />",
						"    <resolutionIndexWindowed value=\"13\" />",
						"    <screenWidthWindowed value=\"" + this.DefaultWidth + "\" />",
						"    <screenHeightWindowed value=\"" + this.DefaultHeight + "\" />",
						"    <refreshRateIndex value=\"5\" />",
						"    <refreshRateNumerator value=\"60000\" />",
						"    <refreshRateDenominator value=\"1000\" />",
						"    <windowed value=\"0\" />",
						"    <vSync value=\"0\" />",
						"    <tripleBuffered value=\"false\" />",
						"    <pauseOnFocusLoss value=\"false\" />",
						"    <constrainMousePointer value=\"false\" />",
						"  </video>",
						string.Join(Environment.NewLine, array),
						"</rage__fwuiSystemSettingsCollection>",
						""
					});
					num = 3;
				}
				if (num == 4)
				{
					File.WriteAllText(this.rdr2_settingloc, text);
					num = 5;
				}
				if (num == 3)
				{
					File.SetAttributes(this.rdr2_settingloc, FileAttributes.Normal);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000511 RID: 1297 RVA: 0x001356F8 File Offset: 0x001338F8
		private void RDR2_d()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.rdr2_settingloc)
						where s.Contains("<videoCardDescription>")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
						"",
						"<rage__fwuiSystemSettingsCollection>",
						"  <version value=\"37\" />",
						"  <configSource>kSettingsConfig_Auto</configSource>",
						"  <graphics>",
						"    <tessellation>kSettingLevel_Low</tessellation>",
						"    <shadowQuality>kSettingLevel_Low</shadowQuality>",
						"    <farShadowQuality>kSettingLevel_Low</farShadowQuality>",
						"    <reflectionQuality>kSettingLevel_Low</reflectionQuality>",
						"    <mirrorQuality>kSettingLevel_Low</mirrorQuality>",
						"    <ssao>kSettingLevel_Low</ssao>",
						"    <textureQuality>kSettingLevel_Medium</textureQuality>",
						"    <particleQuality>kSettingLevel_Low</particleQuality>",
						"    <waterQuality>kSettingLevel_Custom</waterQuality>",
						"    <volumetricsQuality>kSettingLevel_Custom</volumetricsQuality>",
						"    <lightingQuality>kSettingLevel_Low</lightingQuality>",
						"    <ambientLightingQuality>kSettingLevel_Low</ambientLightingQuality>",
						"    <anisotropicFiltering value=\"3\" />",
						"    <dlssIndex value=\"0\" />",
						"    <dlssQuality value=\"5\" />",
						"    <taa>kSettingLevel_Low</taa>",
						"    <fxaaEnabled value=\"false\" />",
						"    <msaa value=\"0\" />",
						"    <graphicsQualityPreset value=\"0.500000\" />",
						"    <hdr value=\"true\" />",
						"    <hdrIntensity value=\"100\" />",
						"    <hdrPeakBrightness value=\"1000\" />",
						"    <hdrFilmicMode value=\"true\" />",
						"    <gamma value=\"15\" />",
						"    <hdrSettingsMigrated value=\"true\" />",
						"  </graphics>",
						"  <advancedGraphics>",
						"    <API>kSettingAPI_DX12</API>",
						"    <locked value=\"false\" />",
						"    <asyncComputeEnabled value=\"false\" />",
						"    <transferQueuesEnabled value=\"true\" />",
						"    <shadowSoftShadows>kSettingLevel_Low</shadowSoftShadows>",
						"    <motionBlur value=\"false\" />",
						"    <motionBlurLimit value=\"0.000000\" />",
						"    <particleLightingQuality>kSettingLevel_Low</particleLightingQuality>",
						"    <waterReflectionSSR value=\"false\" />",
						"    <waterRefractionQuality>kSettingLevel_Low</waterRefractionQuality>",
						"    <waterReflectionQuality>kSettingLevel_Low</waterReflectionQuality>",
						"    <waterSimulationQuality value=\"0\" />",
						"    <waterLightingQuality>kSettingLevel_Low</waterLightingQuality>",
						"    <furDisplayQuality>kSettingLevel_Low</furDisplayQuality>",
						"    <maxTexUpgradesPerFrame value=\"5\" />",
						"    <shadowGrassShadows>kSettingLevel_Low</shadowGrassShadows>",
						"    <shadowParticleShadows value=\"false\" />",
						"    <shadowLongShadows value=\"false\" />",
						"    <directionalShadowsAlpha value=\"false\" />",
						"    <worldHeightShadowQuality value=\"0.000000\" />",
						"    <directionalScreenSpaceShadowQuality value=\"0.000000\" />",
						"    <ambientMaskVolumesHighPrecision value=\"false\" />",
						"    <scatteringVolumeQuality>kSettingLevel_Low</scatteringVolumeQuality>",
						"    <volumetricsRaymarchQuality>kSettingLevel_Low</volumetricsRaymarchQuality>",
						"    <volumetricsLightingQuality>kSettingLevel_Low</volumetricsLightingQuality>",
						"    <volumetricsRaymarchResolutionUnclamped value=\"false\" />",
						"    <terrainShadowQuality>kSettingLevel_Low</terrainShadowQuality>",
						"    <damageModelsDisabled value=\"false\" />",
						"    <decalQuality>kSettingLevel_Low</decalQuality>",
						"    <ssaoFullScreenEnabled value=\"false\" />",
						"    <ssaoType value=\"0\" />",
						"    <ssdoSampleCount value=\"0\" />",
						"    <ssdoUseDualRadii value=\"false\" />",
						"    <ssdoResolution>kSettingLevel_Low</ssdoResolution>",
						"    <ssdoTAABlendEnabled value=\"false\" />",
						"    <ssroSampleCount value=\"0\" />",
						"    <snowGlints value=\"false\" />",
						"    <POMQuality>kSettingLevel_Low</POMQuality>",
						"    <probeRelightEveryFrame value=\"false\" />",
						"    <scalingMode>kSettingScale_Mode3o4</scalingMode>",
						"    <reflectionMSAA value=\"0\" />",
						"    <lodScale value=\"0.500000\" />",
						"    <grassLod value=\"0.000000\" />",
						"    <pedLodBias value=\"0.000000\" />",
						"    <vehicleLodBias value=\"0.000000\" />",
						"    <sharpenIntensity value=\"2.350000\" />",
						"    <treeQuality>kSettingLevel_Low</treeQuality>",
						"    <deepsurfaceQuality>kSettingLevel_Low</deepsurfaceQuality>",
						"    <treeTessellationEnabled value=\"false\" />",
						"  </advancedGraphics>",
						"  <video>",
						"    <adapterIndex value=\"0\" />",
						"    <outputIndex value=\"0\" />",
						"    <resolutionIndex value=\"17\" />",
						"    <screenWidth value=\"" + this.DefaultWidth + "\" />",
						"    <screenHeight value=\"" + this.DefaultHeight + "\" />",
						"    <resolutionIndexWindowed value=\"13\" />",
						"    <screenWidthWindowed value=\"" + this.DefaultWidth + "\" />",
						"    <screenHeightWindowed value=\"" + this.DefaultHeight + "\" />",
						"    <refreshRateIndex value=\"5\" />",
						"    <refreshRateNumerator value=\"60000\" />",
						"    <refreshRateDenominator value=\"1000\" />",
						"    <windowed value=\"0\" />",
						"    <vSync value=\"0\" />",
						"    <tripleBuffered value=\"false\" />",
						"    <pauseOnFocusLoss value=\"false\" />",
						"    <constrainMousePointer value=\"false\" />",
						"  </video>",
						string.Join(Environment.NewLine, array),
						"</rage__fwuiSystemSettingsCollection>",
						""
					});
					num = 3;
				}
				if (num == 4)
				{
					File.WriteAllText(this.rdr2_settingloc, text);
					num = 5;
				}
				if (num == 3)
				{
					File.SetAttributes(this.rdr2_settingloc, FileAttributes.Normal);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000512 RID: 1298 RVA: 0x00135D1C File Offset: 0x00133F1C
		private void RDR2_c()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.rdr2_settingloc)
						where s.Contains("<videoCardDescription>")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
						"",
						"<rage__fwuiSystemSettingsCollection>",
						"  <version value=\"37\" />",
						"  <configSource>kSettingsConfig_Auto</configSource>",
						"  <graphics>",
						"    <tessellation>kSettingLevel_Low</tessellation>",
						"    <shadowQuality>kSettingLevel_Low</shadowQuality>",
						"    <farShadowQuality>kSettingLevel_Low</farShadowQuality>",
						"    <reflectionQuality>kSettingLevel_Low</reflectionQuality>",
						"    <mirrorQuality>kSettingLevel_Low</mirrorQuality>",
						"    <ssao>kSettingLevel_Low</ssao>",
						"    <textureQuality>kSettingLevel_Medium</textureQuality>",
						"    <particleQuality>kSettingLevel_Low</particleQuality>",
						"    <waterQuality>kSettingLevel_Custom</waterQuality>",
						"    <volumetricsQuality>kSettingLevel_Custom</volumetricsQuality>",
						"    <lightingQuality>kSettingLevel_Low</lightingQuality>",
						"    <ambientLightingQuality>kSettingLevel_Low</ambientLightingQuality>",
						"    <anisotropicFiltering value=\"3\" />",
						"    <dlssIndex value=\"0\" />",
						"    <dlssQuality value=\"5\" />",
						"    <taa>kSettingLevel_Low</taa>",
						"    <fxaaEnabled value=\"false\" />",
						"    <msaa value=\"0\" />",
						"    <graphicsQualityPreset value=\"0.500000\" />",
						"    <hdr value=\"true\" />",
						"    <hdrIntensity value=\"100\" />",
						"    <hdrPeakBrightness value=\"1000\" />",
						"    <hdrFilmicMode value=\"true\" />",
						"    <gamma value=\"15\" />",
						"    <hdrSettingsMigrated value=\"true\" />",
						"  </graphics>",
						"  <advancedGraphics>",
						"    <API>kSettingAPI_DX12</API>",
						"    <locked value=\"false\" />",
						"    <asyncComputeEnabled value=\"false\" />",
						"    <transferQueuesEnabled value=\"true\" />",
						"    <shadowSoftShadows>kSettingLevel_Low</shadowSoftShadows>",
						"    <motionBlur value=\"false\" />",
						"    <motionBlurLimit value=\"0.000000\" />",
						"    <particleLightingQuality>kSettingLevel_Low</particleLightingQuality>",
						"    <waterReflectionSSR value=\"false\" />",
						"    <waterRefractionQuality>kSettingLevel_Low</waterRefractionQuality>",
						"    <waterReflectionQuality>kSettingLevel_Low</waterReflectionQuality>",
						"    <waterSimulationQuality value=\"0\" />",
						"    <waterLightingQuality>kSettingLevel_Low</waterLightingQuality>",
						"    <furDisplayQuality>kSettingLevel_Low</furDisplayQuality>",
						"    <maxTexUpgradesPerFrame value=\"5\" />",
						"    <shadowGrassShadows>kSettingLevel_Low</shadowGrassShadows>",
						"    <shadowParticleShadows value=\"false\" />",
						"    <shadowLongShadows value=\"false\" />",
						"    <directionalShadowsAlpha value=\"false\" />",
						"    <worldHeightShadowQuality value=\"0.000000\" />",
						"    <directionalScreenSpaceShadowQuality value=\"0.000000\" />",
						"    <ambientMaskVolumesHighPrecision value=\"false\" />",
						"    <scatteringVolumeQuality>kSettingLevel_Low</scatteringVolumeQuality>",
						"    <volumetricsRaymarchQuality>kSettingLevel_Low</volumetricsRaymarchQuality>",
						"    <volumetricsLightingQuality>kSettingLevel_Low</volumetricsLightingQuality>",
						"    <volumetricsRaymarchResolutionUnclamped value=\"false\" />",
						"    <terrainShadowQuality>kSettingLevel_Low</terrainShadowQuality>",
						"    <damageModelsDisabled value=\"false\" />",
						"    <decalQuality>kSettingLevel_Low</decalQuality>",
						"    <ssaoFullScreenEnabled value=\"false\" />",
						"    <ssaoType value=\"0\" />",
						"    <ssdoSampleCount value=\"0\" />",
						"    <ssdoUseDualRadii value=\"false\" />",
						"    <ssdoResolution>kSettingLevel_Low</ssdoResolution>",
						"    <ssdoTAABlendEnabled value=\"false\" />",
						"    <ssroSampleCount value=\"0\" />",
						"    <snowGlints value=\"false\" />",
						"    <POMQuality>kSettingLevel_Low</POMQuality>",
						"    <probeRelightEveryFrame value=\"false\" />",
						"    <scalingMode>kSettingScale_Mode4o5</scalingMode>",
						"    <reflectionMSAA value=\"0\" />",
						"    <lodScale value=\"0.600000\" />",
						"    <grassLod value=\"0.000000\" />",
						"    <pedLodBias value=\"0.000000\" />",
						"    <vehicleLodBias value=\"0.000000\" />",
						"    <sharpenIntensity value=\"2.350000\" />",
						"    <treeQuality>kSettingLevel_Low</treeQuality>",
						"    <deepsurfaceQuality>kSettingLevel_Low</deepsurfaceQuality>",
						"    <treeTessellationEnabled value=\"false\" />",
						"  </advancedGraphics>",
						"  <video>",
						"    <adapterIndex value=\"0\" />",
						"    <outputIndex value=\"0\" />",
						"    <resolutionIndex value=\"17\" />",
						"    <screenWidth value=\"" + this.DefaultWidth + "\" />",
						"    <screenHeight value=\"" + this.DefaultHeight + "\" />",
						"    <resolutionIndexWindowed value=\"13\" />",
						"    <screenWidthWindowed value=\"" + this.DefaultWidth + "\" />",
						"    <screenHeightWindowed value=\"" + this.DefaultHeight + "\" />",
						"    <refreshRateIndex value=\"5\" />",
						"    <refreshRateNumerator value=\"60000\" />",
						"    <refreshRateDenominator value=\"1000\" />",
						"    <windowed value=\"0\" />",
						"    <vSync value=\"0\" />",
						"    <tripleBuffered value=\"false\" />",
						"    <pauseOnFocusLoss value=\"false\" />",
						"    <constrainMousePointer value=\"false\" />",
						"  </video>",
						string.Join(Environment.NewLine, array),
						"</rage__fwuiSystemSettingsCollection>",
						""
					});
					num = 3;
				}
				if (num == 4)
				{
					File.WriteAllText(this.rdr2_settingloc, text);
					num = 5;
				}
				if (num == 3)
				{
					File.SetAttributes(this.rdr2_settingloc, FileAttributes.Normal);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000513 RID: 1299 RVA: 0x00136340 File Offset: 0x00134540
		private void RDR2_b()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.rdr2_settingloc)
						where s.Contains("<videoCardDescription>")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
						"",
						"<rage__fwuiSystemSettingsCollection>",
						"  <version value=\"37\" />",
						"  <configSource>kSettingsConfig_Auto</configSource>",
						"  <graphics>",
						"    <tessellation>kSettingLevel_Low</tessellation>",
						"    <shadowQuality>kSettingLevel_Low</shadowQuality>",
						"    <farShadowQuality>kSettingLevel_Low</farShadowQuality>",
						"    <reflectionQuality>kSettingLevel_Low</reflectionQuality>",
						"    <mirrorQuality>kSettingLevel_Low</mirrorQuality>",
						"    <ssao>kSettingLevel_Low</ssao>",
						"    <textureQuality>kSettingLevel_Medium</textureQuality>",
						"    <particleQuality>kSettingLevel_Low</particleQuality>",
						"    <waterQuality>kSettingLevel_Custom</waterQuality>",
						"    <volumetricsQuality>kSettingLevel_Custom</volumetricsQuality>",
						"    <lightingQuality>kSettingLevel_Low</lightingQuality>",
						"    <ambientLightingQuality>kSettingLevel_Low</ambientLightingQuality>",
						"    <anisotropicFiltering value=\"4\" />",
						"    <dlssIndex value=\"0\" />",
						"    <dlssQuality value=\"5\" />",
						"    <taa>kSettingLevel_Low</taa>",
						"    <fxaaEnabled value=\"false\" />",
						"    <msaa value=\"0\" />",
						"    <graphicsQualityPreset value=\"0.500000\" />",
						"    <hdr value=\"true\" />",
						"    <hdrIntensity value=\"100\" />",
						"    <hdrPeakBrightness value=\"1000\" />",
						"    <hdrFilmicMode value=\"true\" />",
						"    <gamma value=\"15\" />",
						"    <hdrSettingsMigrated value=\"true\" />",
						"  </graphics>",
						"  <advancedGraphics>",
						"    <API>kSettingAPI_DX12</API>",
						"    <locked value=\"false\" />",
						"    <asyncComputeEnabled value=\"false\" />",
						"    <transferQueuesEnabled value=\"true\" />",
						"    <shadowSoftShadows>kSettingLevel_Low</shadowSoftShadows>",
						"    <motionBlur value=\"false\" />",
						"    <motionBlurLimit value=\"0.000000\" />",
						"    <particleLightingQuality>kSettingLevel_Low</particleLightingQuality>",
						"    <waterReflectionSSR value=\"false\" />",
						"    <waterRefractionQuality>kSettingLevel_Low</waterRefractionQuality>",
						"    <waterReflectionQuality>kSettingLevel_Low</waterReflectionQuality>",
						"    <waterSimulationQuality value=\"0\" />",
						"    <waterLightingQuality>kSettingLevel_Low</waterLightingQuality>",
						"    <furDisplayQuality>kSettingLevel_Low</furDisplayQuality>",
						"    <maxTexUpgradesPerFrame value=\"5\" />",
						"    <shadowGrassShadows>kSettingLevel_Low</shadowGrassShadows>",
						"    <shadowParticleShadows value=\"false\" />",
						"    <shadowLongShadows value=\"false\" />",
						"    <directionalShadowsAlpha value=\"false\" />",
						"    <worldHeightShadowQuality value=\"0.000000\" />",
						"    <directionalScreenSpaceShadowQuality value=\"0.000000\" />",
						"    <ambientMaskVolumesHighPrecision value=\"false\" />",
						"    <scatteringVolumeQuality>kSettingLevel_Low</scatteringVolumeQuality>",
						"    <volumetricsRaymarchQuality>kSettingLevel_Low</volumetricsRaymarchQuality>",
						"    <volumetricsLightingQuality>kSettingLevel_Low</volumetricsLightingQuality>",
						"    <volumetricsRaymarchResolutionUnclamped value=\"false\" />",
						"    <terrainShadowQuality>kSettingLevel_Low</terrainShadowQuality>",
						"    <damageModelsDisabled value=\"false\" />",
						"    <decalQuality>kSettingLevel_Low</decalQuality>",
						"    <ssaoFullScreenEnabled value=\"false\" />",
						"    <ssaoType value=\"0\" />",
						"    <ssdoSampleCount value=\"0\" />",
						"    <ssdoUseDualRadii value=\"false\" />",
						"    <ssdoResolution>kSettingLevel_Low</ssdoResolution>",
						"    <ssdoTAABlendEnabled value=\"false\" />",
						"    <ssroSampleCount value=\"0\" />",
						"    <snowGlints value=\"false\" />",
						"    <POMQuality>kSettingLevel_Low</POMQuality>",
						"    <probeRelightEveryFrame value=\"false\" />",
						"    <scalingMode>kSettingScale_Mode5o6</scalingMode>",
						"    <reflectionMSAA value=\"0\" />",
						"    <lodScale value=\"0.700000\" />",
						"    <grassLod value=\"0.250000\" />",
						"    <pedLodBias value=\"0.000000\" />",
						"    <vehicleLodBias value=\"0.000000\" />",
						"    <sharpenIntensity value=\"2.350000\" />",
						"    <treeQuality>kSettingLevel_Low</treeQuality>",
						"    <deepsurfaceQuality>kSettingLevel_Low</deepsurfaceQuality>",
						"    <treeTessellationEnabled value=\"false\" />",
						"  </advancedGraphics>",
						"  <video>",
						"    <adapterIndex value=\"0\" />",
						"    <outputIndex value=\"0\" />",
						"    <resolutionIndex value=\"17\" />",
						"    <screenWidth value=\"" + this.DefaultWidth + "\" />",
						"    <screenHeight value=\"" + this.DefaultHeight + "\" />",
						"    <resolutionIndexWindowed value=\"13\" />",
						"    <screenWidthWindowed value=\"" + this.DefaultWidth + "\" />",
						"    <screenHeightWindowed value=\"" + this.DefaultHeight + "\" />",
						"    <refreshRateIndex value=\"5\" />",
						"    <refreshRateNumerator value=\"60000\" />",
						"    <refreshRateDenominator value=\"1000\" />",
						"    <windowed value=\"0\" />",
						"    <vSync value=\"0\" />",
						"    <tripleBuffered value=\"false\" />",
						"    <pauseOnFocusLoss value=\"false\" />",
						"    <constrainMousePointer value=\"false\" />",
						"  </video>",
						string.Join(Environment.NewLine, array),
						"</rage__fwuiSystemSettingsCollection>",
						""
					});
					num = 3;
				}
				if (num == 4)
				{
					File.WriteAllText(this.rdr2_settingloc, text);
					num = 5;
				}
				if (num == 3)
				{
					File.SetAttributes(this.rdr2_settingloc, FileAttributes.Normal);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000514 RID: 1300 RVA: 0x00136964 File Offset: 0x00134B64
		private void RDR2_a()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.rdr2_settingloc)
						where s.Contains("<videoCardDescription>")
						select s).ToArray<string>();
					num = 2;
				}
				string text;
				if (num == 2)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
						"",
						"<rage__fwuiSystemSettingsCollection>",
						"  <version value=\"37\" />",
						"  <configSource>kSettingsConfig_Auto</configSource>",
						"  <graphics>",
						"    <tessellation>kSettingLevel_Low</tessellation>",
						"    <shadowQuality>kSettingLevel_Low</shadowQuality>",
						"    <farShadowQuality>kSettingLevel_Low</farShadowQuality>",
						"    <reflectionQuality>kSettingLevel_Low</reflectionQuality>",
						"    <mirrorQuality>kSettingLevel_Low</mirrorQuality>",
						"    <ssao>kSettingLevel_Low</ssao>",
						"    <textureQuality>kSettingLevel_High</textureQuality>",
						"    <particleQuality>kSettingLevel_Low</particleQuality>",
						"    <waterQuality>kSettingLevel_Custom</waterQuality>",
						"    <volumetricsQuality>kSettingLevel_Custom</volumetricsQuality>",
						"    <lightingQuality>kSettingLevel_Low</lightingQuality>",
						"    <ambientLightingQuality>kSettingLevel_Low</ambientLightingQuality>",
						"    <anisotropicFiltering value=\"4\" />",
						"    <dlssIndex value=\"0\" />",
						"    <dlssQuality value=\"5\" />",
						"    <taa>kSettingLevel_Low</taa>",
						"    <fxaaEnabled value=\"false\" />",
						"    <msaa value=\"0\" />",
						"    <graphicsQualityPreset value=\"0.500000\" />",
						"    <hdr value=\"true\" />",
						"    <hdrIntensity value=\"100\" />",
						"    <hdrPeakBrightness value=\"1000\" />",
						"    <hdrFilmicMode value=\"true\" />",
						"    <gamma value=\"15\" />",
						"    <hdrSettingsMigrated value=\"true\" />",
						"  </graphics>",
						"  <advancedGraphics>",
						"    <API>kSettingAPI_DX12</API>",
						"    <locked value=\"false\" />",
						"    <asyncComputeEnabled value=\"false\" />",
						"    <transferQueuesEnabled value=\"true\" />",
						"    <shadowSoftShadows>kSettingLevel_Low</shadowSoftShadows>",
						"    <motionBlur value=\"false\" />",
						"    <motionBlurLimit value=\"0.000000\" />",
						"    <particleLightingQuality>kSettingLevel_Low</particleLightingQuality>",
						"    <waterReflectionSSR value=\"false\" />",
						"    <waterRefractionQuality>kSettingLevel_Low</waterRefractionQuality>",
						"    <waterReflectionQuality>kSettingLevel_Low</waterReflectionQuality>",
						"    <waterSimulationQuality value=\"0\" />",
						"    <waterLightingQuality>kSettingLevel_Low</waterLightingQuality>",
						"    <furDisplayQuality>kSettingLevel_Low</furDisplayQuality>",
						"    <maxTexUpgradesPerFrame value=\"5\" />",
						"    <shadowGrassShadows>kSettingLevel_Low</shadowGrassShadows>",
						"    <shadowParticleShadows value=\"false\" />",
						"    <shadowLongShadows value=\"false\" />",
						"    <directionalShadowsAlpha value=\"false\" />",
						"    <worldHeightShadowQuality value=\"0.000000\" />",
						"    <directionalScreenSpaceShadowQuality value=\"0.000000\" />",
						"    <ambientMaskVolumesHighPrecision value=\"false\" />",
						"    <scatteringVolumeQuality>kSettingLevel_Low</scatteringVolumeQuality>",
						"    <volumetricsRaymarchQuality>kSettingLevel_Low</volumetricsRaymarchQuality>",
						"    <volumetricsLightingQuality>kSettingLevel_Low</volumetricsLightingQuality>",
						"    <volumetricsRaymarchResolutionUnclamped value=\"false\" />",
						"    <terrainShadowQuality>kSettingLevel_Low</terrainShadowQuality>",
						"    <damageModelsDisabled value=\"false\" />",
						"    <decalQuality>kSettingLevel_Low</decalQuality>",
						"    <ssaoFullScreenEnabled value=\"false\" />",
						"    <ssaoType value=\"0\" />",
						"    <ssdoSampleCount value=\"0\" />",
						"    <ssdoUseDualRadii value=\"false\" />",
						"    <ssdoResolution>kSettingLevel_Low</ssdoResolution>",
						"    <ssdoTAABlendEnabled value=\"false\" />",
						"    <ssroSampleCount value=\"0\" />",
						"    <snowGlints value=\"false\" />",
						"    <POMQuality>kSettingLevel_Low</POMQuality>",
						"    <probeRelightEveryFrame value=\"false\" />",
						"    <scalingMode>kSettingScale_Mode7o8</scalingMode>",
						"    <reflectionMSAA value=\"0\" />",
						"    <lodScale value=\"0.750000\" />",
						"    <grassLod value=\"0.500000\" />",
						"    <pedLodBias value=\"0.000000\" />",
						"    <vehicleLodBias value=\"0.000000\" />",
						"    <sharpenIntensity value=\"2.350000\" />",
						"    <treeQuality>kSettingLevel_Low</treeQuality>",
						"    <deepsurfaceQuality>kSettingLevel_Low</deepsurfaceQuality>",
						"    <treeTessellationEnabled value=\"false\" />",
						"  </advancedGraphics>",
						"  <video>",
						"    <adapterIndex value=\"0\" />",
						"    <outputIndex value=\"0\" />",
						"    <resolutionIndex value=\"17\" />",
						"    <screenWidth value=\"" + this.DefaultWidth + "\" />",
						"    <screenHeight value=\"" + this.DefaultHeight + "\" />",
						"    <resolutionIndexWindowed value=\"13\" />",
						"    <screenWidthWindowed value=\"" + this.DefaultWidth + "\" />",
						"    <screenHeightWindowed value=\"" + this.DefaultHeight + "\" />",
						"    <refreshRateIndex value=\"5\" />",
						"    <refreshRateNumerator value=\"60000\" />",
						"    <refreshRateDenominator value=\"1000\" />",
						"    <windowed value=\"0\" />",
						"    <vSync value=\"0\" />",
						"    <tripleBuffered value=\"false\" />",
						"    <pauseOnFocusLoss value=\"false\" />",
						"    <constrainMousePointer value=\"false\" />",
						"  </video>",
						string.Join(Environment.NewLine, array),
						"</rage__fwuiSystemSettingsCollection>",
						""
					});
					num = 3;
				}
				if (num == 4)
				{
					File.WriteAllText(this.rdr2_settingloc, text);
					num = 5;
				}
				if (num == 3)
				{
					File.SetAttributes(this.rdr2_settingloc, FileAttributes.Normal);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000515 RID: 1301 RVA: 0x00136F88 File Offset: 0x00135188
		private void RE2_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"PCTargetAPIFallback=Enable",
						"Capability=DirectX12",
						"TargetPlatform=DirectX11",
						"UseVendorExtention=Enable",
						"UseOptimizeShader=Enable",
						"MainMenu=True",
						"LastCrashReport=",
						"[RenderConfig]",
						"PCDXver=DirectX11",
						string.Concat(new string[] { "NormalWindowResolution=(", this.DefaultWidth, ".000000,", this.DefaultHeight, ".000000)" }),
						"FullScreenDisplayMode=3",
						"FullScreenMode=false",
						"WindowMode=Normal",
						"PCColorSpace=0",
						"PCWindowMode=0",
						"PCResolution=6",
						"PCRefreshRate=1",
						"PCFrame_Rate=0",
						"PCVSync=1",
						"PCRenderingMethod=1",
						"PCImage_Quality=0",
						"PCTextureQuality=0",
						"PCSamplerQuality=2",
						"PCMeshQuality=0",
						"PCAntiAliasing=2",
						"PCMotionBlurEnable=1",
						"PCShadowQuality=0",
						"PCShadowCacheEnable=1",
						"PCAOSetting=0",
						"PCBloomEnable=1",
						"PCLensFlareEnable=1",
						"PCVolumeLight=0",
						"PCReflection=1",
						"PCSSSS=1",
						"PCDOF=1",
						"PCLensDistortion=2",
						"PCFilmGrainNoise=1",
						"PCContactShadow=1",
						"PCParticleLight=1",
						"PCGIReflection=0",
						"PCRaytracingReflection=0",
						"PCFidelityFXResolution=0",
						"PCRaytracingAO=0",
						"[Display]",
						"HDRmode=1",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000516 RID: 1302 RVA: 0x001372B4 File Offset: 0x001354B4
		private void RE2_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"PCTargetAPIFallback=Enable",
						"Capability=DirectX12",
						"TargetPlatform=DirectX11",
						"UseVendorExtention=Enable",
						"UseOptimizeShader=Enable",
						"MainMenu=True",
						"LastCrashReport=",
						"[RenderConfig]",
						"PCDXver=DirectX11",
						string.Concat(new string[] { "NormalWindowResolution=(", this.DefaultWidth, ".000000,", this.DefaultHeight, ".000000)" }),
						"FullScreenDisplayMode=3",
						"FullScreenMode=false",
						"WindowMode=Normal",
						"PCColorSpace=0",
						"PCWindowMode=0",
						"PCResolution=6",
						"PCRefreshRate=1",
						"PCFrame_Rate=0",
						"PCVSync=1",
						"PCRenderingMethod=1",
						"PCImage_Quality=0",
						"PCTextureQuality=3",
						"PCSamplerQuality=2",
						"PCMeshQuality=0",
						"PCAntiAliasing=2",
						"PCMotionBlurEnable=1",
						"PCShadowQuality=0",
						"PCShadowCacheEnable=1",
						"PCAOSetting=0",
						"PCBloomEnable=1",
						"PCLensFlareEnable=1",
						"PCVolumeLight=0",
						"PCReflection=1",
						"PCSSSS=1",
						"PCDOF=1",
						"PCLensDistortion=2",
						"PCFilmGrainNoise=1",
						"PCContactShadow=1",
						"PCParticleLight=1",
						"PCGIReflection=0",
						"PCRaytracingReflection=0",
						"PCFidelityFXResolution=0",
						"PCRaytracingAO=0",
						"[Display]",
						"HDRmode=1",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000517 RID: 1303 RVA: 0x001375E0 File Offset: 0x001357E0
		private void RE2_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"PCTargetAPIFallback=Enable",
						"Capability=DirectX12",
						"TargetPlatform=DirectX11",
						"UseVendorExtention=Enable",
						"UseOptimizeShader=Enable",
						"MainMenu=True",
						"LastCrashReport=",
						"[RenderConfig]",
						"PCDXver=DirectX11",
						string.Concat(new string[] { "NormalWindowResolution=(", this.DefaultWidth, ".000000,", this.DefaultHeight, ".000000)" }),
						"FullScreenDisplayMode=3",
						"FullScreenMode=false",
						"WindowMode=Normal",
						"PCColorSpace=0",
						"PCWindowMode=0",
						"PCResolution=6",
						"PCRefreshRate=1",
						"PCFrame_Rate=0",
						"PCVSync=1",
						"PCRenderingMethod=1",
						"PCImage_Quality=2",
						"PCTextureQuality=4",
						"PCSamplerQuality=3",
						"PCMeshQuality=0",
						"PCAntiAliasing=2",
						"PCMotionBlurEnable=1",
						"PCShadowQuality=0",
						"PCShadowCacheEnable=1",
						"PCAOSetting=0",
						"PCBloomEnable=1",
						"PCLensFlareEnable=1",
						"PCVolumeLight=0",
						"PCReflection=1",
						"PCSSSS=1",
						"PCDOF=1",
						"PCLensDistortion=2",
						"PCFilmGrainNoise=1",
						"PCContactShadow=1",
						"PCParticleLight=1",
						"PCGIReflection=0",
						"PCRaytracingReflection=0",
						"PCFidelityFXResolution=0",
						"PCRaytracingAO=0",
						"[Display]",
						"HDRmode=1",
						""
					});
					num = 2;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000518 RID: 1304 RVA: 0x0013790C File Offset: 0x00135B0C
		private void RE2_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"PCTargetAPIFallback=Enable",
						"Capability=DirectX12",
						"TargetPlatform=DirectX11",
						"UseVendorExtention=Enable",
						"UseOptimizeShader=Enable",
						"MainMenu=True",
						"LastCrashReport=",
						"[RenderConfig]",
						"PCDXver=DirectX11",
						string.Concat(new string[] { "NormalWindowResolution=(", this.DefaultWidth, ".000000,", this.DefaultHeight, ".000000)" }),
						"FullScreenDisplayMode=3",
						"FullScreenMode=false",
						"WindowMode=Normal",
						"PCColorSpace=0",
						"PCWindowMode=0",
						"PCResolution=6",
						"PCRefreshRate=1",
						"PCFrame_Rate=0",
						"PCVSync=1",
						"PCRenderingMethod=1",
						"PCImage_Quality=3",
						"PCTextureQuality=5",
						"PCSamplerQuality=4",
						"PCMeshQuality=0",
						"PCAntiAliasing=2",
						"PCMotionBlurEnable=1",
						"PCShadowQuality=0",
						"PCShadowCacheEnable=1",
						"PCAOSetting=0",
						"PCBloomEnable=1",
						"PCLensFlareEnable=1",
						"PCVolumeLight=0",
						"PCReflection=1",
						"PCSSSS=1",
						"PCDOF=1",
						"PCLensDistortion=2",
						"PCFilmGrainNoise=1",
						"PCContactShadow=1",
						"PCParticleLight=1",
						"PCGIReflection=0",
						"PCRaytracingReflection=0",
						"PCFidelityFXResolution=0",
						"PCRaytracingAO=0",
						"[Display]",
						"HDRmode=1",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000519 RID: 1305 RVA: 0x0013790C File Offset: 0x00135B0C
		private void RE2_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"PCTargetAPIFallback=Enable",
						"Capability=DirectX12",
						"TargetPlatform=DirectX11",
						"UseVendorExtention=Enable",
						"UseOptimizeShader=Enable",
						"MainMenu=True",
						"LastCrashReport=",
						"[RenderConfig]",
						"PCDXver=DirectX11",
						string.Concat(new string[] { "NormalWindowResolution=(", this.DefaultWidth, ".000000,", this.DefaultHeight, ".000000)" }),
						"FullScreenDisplayMode=3",
						"FullScreenMode=false",
						"WindowMode=Normal",
						"PCColorSpace=0",
						"PCWindowMode=0",
						"PCResolution=6",
						"PCRefreshRate=1",
						"PCFrame_Rate=0",
						"PCVSync=1",
						"PCRenderingMethod=1",
						"PCImage_Quality=3",
						"PCTextureQuality=5",
						"PCSamplerQuality=4",
						"PCMeshQuality=0",
						"PCAntiAliasing=2",
						"PCMotionBlurEnable=1",
						"PCShadowQuality=0",
						"PCShadowCacheEnable=1",
						"PCAOSetting=0",
						"PCBloomEnable=1",
						"PCLensFlareEnable=1",
						"PCVolumeLight=0",
						"PCReflection=1",
						"PCSSSS=1",
						"PCDOF=1",
						"PCLensDistortion=2",
						"PCFilmGrainNoise=1",
						"PCContactShadow=1",
						"PCParticleLight=1",
						"PCGIReflection=0",
						"PCRaytracingReflection=0",
						"PCFidelityFXResolution=0",
						"PCRaytracingAO=0",
						"[Display]",
						"HDRmode=1",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600051A RID: 1306 RVA: 0x00137C38 File Offset: 0x00135E38
		private void RE2_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"PCTargetAPIFallback=Enable",
						"Capability=DirectX12",
						"TargetPlatform=DirectX11",
						"UseVendorExtention=Enable",
						"UseOptimizeShader=Enable",
						"MainMenu=True",
						"LastCrashReport=",
						"[RenderConfig]",
						"PCDXver=DirectX11",
						string.Concat(new string[] { "NormalWindowResolution=(", this.DefaultWidth, ".000000,", this.DefaultHeight, ".000000)" }),
						"FullScreenDisplayMode=3",
						"FullScreenMode=false",
						"WindowMode=Normal",
						"PCColorSpace=0",
						"PCWindowMode=0",
						"PCResolution=6",
						"PCRefreshRate=1",
						"PCFrame_Rate=0",
						"PCVSync=1",
						"PCRenderingMethod=1",
						"PCImage_Quality=4",
						"PCTextureQuality=5",
						"PCSamplerQuality=4",
						"PCMeshQuality=0",
						"PCAntiAliasing=2",
						"PCMotionBlurEnable=1",
						"PCShadowQuality=0",
						"PCShadowCacheEnable=1",
						"PCAOSetting=0",
						"PCBloomEnable=1",
						"PCLensFlareEnable=1",
						"PCVolumeLight=0",
						"PCReflection=1",
						"PCSSSS=1",
						"PCDOF=1",
						"PCLensDistortion=2",
						"PCFilmGrainNoise=1",
						"PCContactShadow=1",
						"PCParticleLight=1",
						"PCGIReflection=0",
						"PCRaytracingReflection=0",
						"PCFidelityFXResolution=0",
						"PCRaytracingAO=0",
						"[Display]",
						"HDRmode=1",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600051B RID: 1307 RVA: 0x00137F64 File Offset: 0x00136164
		private void RE3_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"PCTargetAPIFallback=Enable",
						"Capability=DirectX12",
						"TargetPlatform=DirectX11",
						"UseOptimizeShader=Enable",
						"MainMenu=False",
						"LastCrashReport=",
						"UseVendorExtention=Enable",
						"[RenderConfig]",
						"PCDXver=DirectX11",
						string.Concat(new string[] { "NormalWindowResolution=(", this.DefaultWidth, ".000000,", this.DefaultHeight, ".000000)" }),
						"FullScreenDisplayMode=3",
						"FullScreenMode=false",
						"WindowMode=Normal",
						"PCColorSpace=0",
						"PCWindowMode=0",
						"PCResolution=6",
						"PCRefreshRate=1",
						"PCFrame_Rate=0",
						"PCVSync=1",
						"PCRenderingMethod=1",
						"PCImage_Quality=0",
						"PCTextureQuality=1",
						"PCSamplerQuality=2",
						"PCMeshQuality=0",
						"PCAntiAliasing=2",
						"PCMotionBlurEnable=1",
						"PCShadowQuality=0",
						"PCShadowCacheEnable=1",
						"PCAOSetting=0",
						"PCBloomEnable=1",
						"PCLensFlareEnable=1",
						"PCVolumeLight=0",
						"PCReflection=1",
						"PCSSSS=1",
						"PCDOF=1",
						"PCLensDistortion=2",
						"PCFilmGrainNoise=0",
						"PCParticleLight=1",
						"PCSharpnessSetting=0",
						"PCGIReflection=0",
						"PCRaytracingReflection=0",
						"PCFidelityFXResolution=0",
						"PCRaytracingAO=0",
						"[Display]",
						"HDRmode=1",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600051C RID: 1308 RVA: 0x00138290 File Offset: 0x00136490
		private void RE3_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"PCTargetAPIFallback=Enable",
						"Capability=DirectX12",
						"TargetPlatform=DirectX11",
						"UseOptimizeShader=Enable",
						"MainMenu=False",
						"LastCrashReport=",
						"UseVendorExtention=Enable",
						"[RenderConfig]",
						"PCDXver=DirectX11",
						string.Concat(new string[] { "NormalWindowResolution=(", this.DefaultWidth, ".000000,", this.DefaultHeight, ".000000)" }),
						"FullScreenDisplayMode=3",
						"FullScreenMode=false",
						"WindowMode=Normal",
						"PCColorSpace=0",
						"PCWindowMode=0",
						"PCResolution=6",
						"PCRefreshRate=1",
						"PCFrame_Rate=0",
						"PCVSync=1",
						"PCRenderingMethod=1",
						"PCImage_Quality=0",
						"PCTextureQuality=3",
						"PCSamplerQuality=3",
						"PCMeshQuality=0",
						"PCAntiAliasing=2",
						"PCMotionBlurEnable=1",
						"PCShadowQuality=0",
						"PCShadowCacheEnable=1",
						"PCAOSetting=0",
						"PCBloomEnable=1",
						"PCLensFlareEnable=1",
						"PCVolumeLight=0",
						"PCReflection=1",
						"PCSSSS=1",
						"PCDOF=1",
						"PCLensDistortion=2",
						"PCFilmGrainNoise=0",
						"PCParticleLight=1",
						"PCSharpnessSetting=0",
						"PCGIReflection=0",
						"PCRaytracingReflection=0",
						"PCFidelityFXResolution=0",
						"PCRaytracingAO=0",
						"[Display]",
						"HDRmode=1",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600051D RID: 1309 RVA: 0x001385BC File Offset: 0x001367BC
		private void RE3_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"PCTargetAPIFallback=Enable",
						"Capability=DirectX12",
						"TargetPlatform=DirectX11",
						"UseOptimizeShader=Enable",
						"MainMenu=False",
						"LastCrashReport=",
						"UseVendorExtention=Enable",
						"[RenderConfig]",
						"PCDXver=DirectX11",
						string.Concat(new string[] { "NormalWindowResolution=(", this.DefaultWidth, ".000000,", this.DefaultHeight, ".000000)" }),
						"FullScreenDisplayMode=3",
						"FullScreenMode=false",
						"WindowMode=Normal",
						"PCColorSpace=0",
						"PCWindowMode=0",
						"PCResolution=6",
						"PCRefreshRate=1",
						"PCFrame_Rate=0",
						"PCVSync=1",
						"PCRenderingMethod=1",
						"PCImage_Quality=2",
						"PCTextureQuality=4",
						"PCSamplerQuality=3",
						"PCMeshQuality=0",
						"PCAntiAliasing=2",
						"PCMotionBlurEnable=1",
						"PCShadowQuality=0",
						"PCShadowCacheEnable=1",
						"PCAOSetting=0",
						"PCBloomEnable=1",
						"PCLensFlareEnable=1",
						"PCVolumeLight=0",
						"PCReflection=1",
						"PCSSSS=1",
						"PCDOF=1",
						"PCLensDistortion=2",
						"PCFilmGrainNoise=0",
						"PCParticleLight=1",
						"PCSharpnessSetting=0",
						"PCGIReflection=0",
						"PCRaytracingReflection=0",
						"PCFidelityFXResolution=0",
						"PCRaytracingAO=0",
						"[Display]",
						"HDRmode=1",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600051E RID: 1310 RVA: 0x001388E8 File Offset: 0x00136AE8
		private void RE3_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"PCTargetAPIFallback=Enable",
						"Capability=DirectX12",
						"TargetPlatform=DirectX11",
						"UseOptimizeShader=Enable",
						"MainMenu=False",
						"LastCrashReport=",
						"UseVendorExtention=Enable",
						"[RenderConfig]",
						"PCDXver=DirectX11",
						string.Concat(new string[] { "NormalWindowResolution=(", this.DefaultWidth, ".000000,", this.DefaultHeight, ".000000)" }),
						"FullScreenDisplayMode=3",
						"FullScreenMode=false",
						"WindowMode=Normal",
						"PCColorSpace=0",
						"PCWindowMode=0",
						"PCResolution=6",
						"PCRefreshRate=1",
						"PCFrame_Rate=0",
						"PCVSync=1",
						"PCRenderingMethod=1",
						"PCImage_Quality=3",
						"PCTextureQuality=5",
						"PCSamplerQuality=4",
						"PCMeshQuality=0",
						"PCAntiAliasing=2",
						"PCMotionBlurEnable=1",
						"PCShadowQuality=0",
						"PCShadowCacheEnable=1",
						"PCAOSetting=0",
						"PCBloomEnable=1",
						"PCLensFlareEnable=1",
						"PCVolumeLight=0",
						"PCReflection=1",
						"PCSSSS=1",
						"PCDOF=1",
						"PCLensDistortion=2",
						"PCFilmGrainNoise=0",
						"PCParticleLight=1",
						"PCSharpnessSetting=0",
						"PCGIReflection=0",
						"PCRaytracingReflection=0",
						"PCFidelityFXResolution=0",
						"PCRaytracingAO=0",
						"[Display]",
						"HDRmode=1",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600051F RID: 1311 RVA: 0x001388E8 File Offset: 0x00136AE8
		private void RE3_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"PCTargetAPIFallback=Enable",
						"Capability=DirectX12",
						"TargetPlatform=DirectX11",
						"UseOptimizeShader=Enable",
						"MainMenu=False",
						"LastCrashReport=",
						"UseVendorExtention=Enable",
						"[RenderConfig]",
						"PCDXver=DirectX11",
						string.Concat(new string[] { "NormalWindowResolution=(", this.DefaultWidth, ".000000,", this.DefaultHeight, ".000000)" }),
						"FullScreenDisplayMode=3",
						"FullScreenMode=false",
						"WindowMode=Normal",
						"PCColorSpace=0",
						"PCWindowMode=0",
						"PCResolution=6",
						"PCRefreshRate=1",
						"PCFrame_Rate=0",
						"PCVSync=1",
						"PCRenderingMethod=1",
						"PCImage_Quality=3",
						"PCTextureQuality=5",
						"PCSamplerQuality=4",
						"PCMeshQuality=0",
						"PCAntiAliasing=2",
						"PCMotionBlurEnable=1",
						"PCShadowQuality=0",
						"PCShadowCacheEnable=1",
						"PCAOSetting=0",
						"PCBloomEnable=1",
						"PCLensFlareEnable=1",
						"PCVolumeLight=0",
						"PCReflection=1",
						"PCSSSS=1",
						"PCDOF=1",
						"PCLensDistortion=2",
						"PCFilmGrainNoise=0",
						"PCParticleLight=1",
						"PCSharpnessSetting=0",
						"PCGIReflection=0",
						"PCRaytracingReflection=0",
						"PCFidelityFXResolution=0",
						"PCRaytracingAO=0",
						"[Display]",
						"HDRmode=1",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000520 RID: 1312 RVA: 0x00138C14 File Offset: 0x00136E14
		private void RE3_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"PCTargetAPIFallback=Enable",
						"Capability=DirectX12",
						"TargetPlatform=DirectX11",
						"UseOptimizeShader=Enable",
						"MainMenu=False",
						"LastCrashReport=",
						"UseVendorExtention=Enable",
						"[RenderConfig]",
						"PCDXver=DirectX11",
						string.Concat(new string[] { "NormalWindowResolution=(", this.DefaultWidth, ".000000,", this.DefaultHeight, ".000000)" }),
						"FullScreenDisplayMode=3",
						"FullScreenMode=false",
						"WindowMode=Normal",
						"PCColorSpace=0",
						"PCWindowMode=0",
						"PCResolution=6",
						"PCRefreshRate=1",
						"PCFrame_Rate=0",
						"PCVSync=1",
						"PCRenderingMethod=1",
						"PCImage_Quality=4",
						"PCTextureQuality=5",
						"PCSamplerQuality=4",
						"PCMeshQuality=0",
						"PCAntiAliasing=2",
						"PCMotionBlurEnable=1",
						"PCShadowQuality=0",
						"PCShadowCacheEnable=1",
						"PCAOSetting=0",
						"PCBloomEnable=1",
						"PCLensFlareEnable=1",
						"PCVolumeLight=0",
						"PCReflection=1",
						"PCSSSS=1",
						"PCDOF=1",
						"PCLensDistortion=2",
						"PCFilmGrainNoise=0",
						"PCParticleLight=1",
						"PCSharpnessSetting=0",
						"PCGIReflection=0",
						"PCRaytracingReflection=0",
						"PCFidelityFXResolution=0",
						"PCRaytracingAO=0",
						"[Display]",
						"HDRmode=1",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000521 RID: 1313 RVA: 0x00138F40 File Offset: 0x00137140
		private void REVil_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"Capability=DirectX12",
						"LastCrashReport=",
						"[AppRenderConfig]",
						"HDRMode=false",
						"FPS=VARIABLE",
						"TextureQuality=2918232665",
						"RayTracing=false",
						"FilmGrain=false",
						"[RenderConfig]",
						"ColorSpace=SRGB",
						"WindowMode=FullScreen",
						"FullScreenDisplayMode=" + this.optimizationStaticCommander,
						"VSync=false",
						"RenderingMethod=false",
						"ImageQualityRate=0.5",
						"SharpnessSetting=FidelityFXCAS",
						"AntiAliasing=TAA",
						"VRSSetting=Performance",
						"SamplerQuality=Anisotropic2",
						"MeshQuality=LOW",
						"RayTracingQuality=LOWEST",
						"RayTracingSpecularRoughnessThresholdQuality=LOWEST",
						"RayTracingAOSetting=OFF",
						"AOSetting=STANDARD",
						"SSRSetting=false",
						"TransparentBufferQuality=NONE",
						"SSSSSetting=OFF",
						"ShadowQuality=LOW",
						"ContactShadowSetting=OFF",
						"ShadowCacheEnable=false",
						"BloomEnable=false",
						"LensFlareEnable=false",
						"DepthOfFiledEnable=false",
						"LensDistortionSetting=OFF",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000522 RID: 1314 RVA: 0x001391A8 File Offset: 0x001373A8
		private void REVil_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"Capability=DirectX12",
						"LastCrashReport=",
						"[AppRenderConfig]",
						"HDRMode=false",
						"FPS=VARIABLE",
						"TextureQuality=3494923166",
						"RayTracing=false",
						"FilmGrain=false",
						"[RenderConfig]",
						"ColorSpace=SRGB",
						"WindowMode=FullScreen",
						"FullScreenDisplayMode=" + this.optimizationStaticCommander,
						"VSync=false",
						"RenderingMethod=false",
						"ImageQualityRate=0.5",
						"SharpnessSetting=FidelityFXCAS",
						"AntiAliasing=TAA",
						"VRSSetting=Performance",
						"SamplerQuality=Anisotropic2",
						"MeshQuality=LOW",
						"RayTracingQuality=LOWEST",
						"RayTracingSpecularRoughnessThresholdQuality=LOWEST",
						"RayTracingAOSetting=OFF",
						"AOSetting=STANDARD",
						"SSRSetting=false",
						"TransparentBufferQuality=NONE",
						"SSSSSetting=OFF",
						"ShadowQuality=LOW",
						"ContactShadowSetting=OFF",
						"ShadowCacheEnable=false",
						"BloomEnable=false",
						"LensFlareEnable=false",
						"DepthOfFiledEnable=false",
						"LensDistortionSetting=OFF",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000523 RID: 1315 RVA: 0x00139410 File Offset: 0x00137610
		private void REVil_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"Capability=DirectX12",
						"LastCrashReport=",
						"[AppRenderConfig]",
						"HDRMode=false",
						"FPS=VARIABLE",
						"TextureQuality=3494923166",
						"RayTracing=false",
						"FilmGrain=false",
						"[RenderConfig]",
						"ColorSpace=SRGB",
						"WindowMode=FullScreen",
						"FullScreenDisplayMode=" + this.optimizationStaticCommander,
						"VSync=false",
						"RenderingMethod=false",
						"ImageQualityRate=0.7",
						"SharpnessSetting=FidelityFXCAS",
						"AntiAliasing=TAA",
						"VRSSetting=Performance",
						"SamplerQuality=Anisotropic2",
						"MeshQuality=LOW",
						"RayTracingQuality=LOWEST",
						"RayTracingSpecularRoughnessThresholdQuality=LOWEST",
						"RayTracingAOSetting=OFF",
						"AOSetting=STANDARD",
						"SSRSetting=false",
						"TransparentBufferQuality=NONE",
						"SSSSSetting=OFF",
						"ShadowQuality=LOW",
						"ContactShadowSetting=OFF",
						"ShadowCacheEnable=false",
						"BloomEnable=false",
						"LensFlareEnable=false",
						"DepthOfFiledEnable=false",
						"LensDistortionSetting=OFF",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000524 RID: 1316 RVA: 0x00139678 File Offset: 0x00137878
		private void REVil_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"Capability=DirectX12",
						"LastCrashReport=",
						"[AppRenderConfig]",
						"HDRMode=false",
						"FPS=VARIABLE",
						"TextureQuality=3494923166",
						"RayTracing=false",
						"FilmGrain=false",
						"[RenderConfig]",
						"ColorSpace=SRGB",
						"WindowMode=FullScreen",
						"FullScreenDisplayMode=" + this.optimizationStaticCommander,
						"VSync=false",
						"RenderingMethod=false",
						"ImageQualityRate=0.8",
						"SharpnessSetting=FidelityFXCAS",
						"AntiAliasing=TAA",
						"VRSSetting=Performance",
						"SamplerQuality=Anisotropic4",
						"MeshQuality=LOW",
						"RayTracingQuality=LOWEST",
						"RayTracingSpecularRoughnessThresholdQuality=LOWEST",
						"RayTracingAOSetting=OFF",
						"AOSetting=STANDARD",
						"SSRSetting=false",
						"TransparentBufferQuality=NONE",
						"SSSSSetting=OFF",
						"ShadowQuality=LOW",
						"ContactShadowSetting=OFF",
						"ShadowCacheEnable=false",
						"BloomEnable=false",
						"LensFlareEnable=false",
						"DepthOfFiledEnable=false",
						"LensDistortionSetting=OFF",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000525 RID: 1317 RVA: 0x001398E0 File Offset: 0x00137AE0
		private void REVil_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"Capability=DirectX12",
						"LastCrashReport=",
						"[AppRenderConfig]",
						"HDRMode=false",
						"FPS=VARIABLE",
						"TextureQuality=3376533007",
						"RayTracing=false",
						"FilmGrain=false",
						"[RenderConfig]",
						"ColorSpace=SRGB",
						"WindowMode=FullScreen",
						"FullScreenDisplayMode=" + this.optimizationStaticCommander,
						"VSync=false",
						"RenderingMethod=false",
						"ImageQualityRate=0.9",
						"SharpnessSetting=FidelityFXCAS",
						"AntiAliasing=TAA",
						"VRSSetting=Balanced",
						"SamplerQuality=Anisotropic8",
						"MeshQuality=LOW",
						"RayTracingQuality=LOWEST",
						"RayTracingSpecularRoughnessThresholdQuality=LOWEST",
						"RayTracingAOSetting=OFF",
						"AOSetting=STANDARD",
						"SSRSetting=false",
						"TransparentBufferQuality=NONE",
						"SSSSSetting=OFF",
						"ShadowQuality=LOW",
						"ContactShadowSetting=OFF",
						"ShadowCacheEnable=false",
						"BloomEnable=false",
						"LensFlareEnable=false",
						"DepthOfFiledEnable=false",
						"LensDistortionSetting=OFF",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000526 RID: 1318 RVA: 0x00139B48 File Offset: 0x00137D48
		private void REVil_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Render]",
						"Capability=DirectX12",
						"LastCrashReport=",
						"[AppRenderConfig]",
						"HDRMode=false",
						"FPS=VARIABLE",
						"TextureQuality=3376533007",
						"RayTracing=false",
						"FilmGrain=false",
						"[RenderConfig]",
						"ColorSpace=SRGB",
						"WindowMode=FullScreen",
						"FullScreenDisplayMode=" + this.optimizationStaticCommander,
						"VSync=false",
						"RenderingMethod=false",
						"ImageQualityRate=1.0",
						"SharpnessSetting=FidelityFXCAS",
						"AntiAliasing=TAA",
						"VRSSetting=Off",
						"SamplerQuality=Anisotropic8",
						"MeshQuality=LOW",
						"RayTracingQuality=LOWEST",
						"RayTracingSpecularRoughnessThresholdQuality=LOWEST",
						"RayTracingAOSetting=OFF",
						"AOSetting=STANDARD",
						"SSRSetting=false",
						"TransparentBufferQuality=NONE",
						"SSSSSetting=OFF",
						"ShadowQuality=LOW",
						"ContactShadowSetting=OFF",
						"ShadowCacheEnable=false",
						"BloomEnable=false",
						"LensFlareEnable=false",
						"DepthOfFiledEnable=false",
						"LensDistortionSetting=OFF",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.textBox1.Text, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000527 RID: 1319 RVA: 0x00139DB0 File Offset: 0x00137FB0
		private void RL_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]",
						"UseDirectSound=True",
						"StaticDecals=False",
						"DynamicDecals=False",
						"UnbatchedDecals=True",
						"DecalCullDistanceScale=0.500000",
						"DynamicLights=False",
						"DynamicShadows=False",
						"LightEnvironmentShadows=False",
						"CompositeDynamicLights=True",
						"SHSecondaryLighting=True",
						"DirectionalLightmaps=True",
						"MotionBlur=False",
						"MotionBlurPause=True",
						"MotionBlurSkinning=1",
						"DepthOfField=False",
						"AmbientOcclusion=False",
						"Bloom=False",
						"bAllowLightShafts=False",
						"Distortion=False",
						"FilteredDistortion=False",
						"DropParticleDistortion=False",
						"bAllowDownsampledTranslucency=False",
						"SpeedTreeLeaves=False",
						"SpeedTreeFronds=False",
						"OnlyStreamInTextures=False",
						"LensFlares=False",
						"FogVolumes=False",
						"FloatingPointRenderTargets=True",
						"OneFrameThreadLag=True",
						"WaitForGPU=false",
						"UseVsync=False",
						"CustomFPS=0",
						"UpscaleScreenPercentage=True",
						"UpscaleTargetFramerateDocked=60.000000",
						"UpscaleTargetFramerateUndocked=60.000000",
						"MinimumScreenScale=100.000000",
						"AllowDynamicResolution=False",
						"ZCullSaveRestore=False",
						"AdaptiveZcull=False",
						"BinnerTileCache=False",
						"BinnerTileResX=64",
						"BinnerTileResY=64",
						"Fullscreen=True",
						"AllowOpenGL=False",
						"AllowRadialBlur=True",
						"AllowSubsurfaceScattering=False",
						"AllowImageReflections=False",
						"AllowImageReflectionShadowing=False",
						"bAllowSeparateTranslucency=False",
						"bAllowPostprocessMLAA=False",
						"bAllowHighQualityMaterials=False",
						"bUseTranslucentArenaShaders=False",
						"MaxFilterBlurSampleCount=16",
						"SkeletalMeshLODBias=0",
						"ParticleLODBias=1",
						"DetailMode=0",
						"MaxDrawDistanceScale=1",
						"ShadowFilterQualityBias=0",
						"MaxAnisotropy=4",
						"MaxMultiSamples=1",
						"bAllowD3D9MSAA=False",
						"bAllowTemporalAA=False",
						"TemporalAA_MinDepth=500.000000",
						"TemporalAA_StartDepthVelocityScale=100.000000",
						"MinShadowResolution=64",
						"MinPreShadowResolution=8",
						"MaxShadowResolution=1120",
						"MobileShadowTextureResolution=1120",
						"MaxWholeSceneDominantShadowResolution=1344",
						"ShadowFadeResolution=32",
						"PreShadowFadeResolution=16",
						"ShadowFadeExponent=0.250000",
						"ResX=" + this.DefaultWidth,
						"ResY=" + this.DefaultHeight,
						"AutoDetectDesktopResolution=False",
						"Borderless=False",
						"AllowApexCloth=false",
						"ScreenPercentage=40.000000",
						"SceneCaptureStreamingMultiplier=1.000000",
						"ShadowTexelsPerPixel=1.273240",
						"PreShadowResolutionFactor=0.500000",
						"bEnableBranchingPCFShadows=False",
						"bAllowHardwareShadowFiltering=False",
						"TessellationAdaptivePixelsPerTriangle=48.000000",
						"bEnableForegroundShadowsOnWorld=True",
						"bEnableForegroundSelfShadowing=False",
						"bAllowWholeSceneDominantShadows=True",
						"bUseConservativeShadowBounds=False",
						"ShadowFilterRadius=2.000000",
						"ShadowDepthBias=0.012000",
						"PerObjectShadowTransition=60.000000",
						"PerSceneShadowTransition=600.000000",
						"CSMSplitPenumbraScale=0.500000",
						"CSMSplitSoftTransitionDistanceScale=4.000000",
						"CSMSplitDepthBiasScale=0.500000",
						"CSMMinimumFOV=40.000000",
						"CSMFOVRoundFactor=4.000000",
						"UnbuiltWholeSceneDynamicShadowRadius=20000.000000",
						"UnbuiltNumWholeSceneDynamicShadowCascades=3",
						"WholeSceneShadowUnbuiltInteractionThreshold=50",
						"bAllowFracturedDamage=True",
						"NumFracturedPartsScale=1.000000",
						"FractureDirectSpawnChanceScale=1.000000",
						"FractureRadialSpawnChanceScale=1.000000",
						"FractureCullDistanceScale=1.000000",
						"bForceCPUAccessToGPUSkinVerts=false",
						"bDisableSkeletalInstanceWeights=false",
						"HighPrecisionGBuffers=False",
						"AllowSecondaryDisplays=False",
						"SecondaryDisplayMaximumWidth=1280",
						"SecondaryDisplayMaximumHeight=720",
						"AllowPerFrameSleep=False",
						"AllowPerFrameYield=True",
						"MobileFeatureLevel=0",
						"MobileFog=True",
						"MobileHeightFog=False",
						"MobileSpecular=True",
						"MobileBumpOffset=True",
						"MobileNormalMapping=True",
						"MobileEnvMapping=True",
						"MobileRimLighting=True",
						"MobileColorBlending=True",
						"MobileColorGrading=False",
						"MobileVertexMovement=True",
						"MobileOcclusionQueries=False",
						"MobileGlobalGammaCorrection=False",
						"MobileAllowGammaCorrectionWorldOverride=False",
						"MobileAllowDepthPrePass=False",
						"MobileGfxGammaCorrection=False",
						"MobileLODBias=-0.5",
						"MobileBoneCount=75",
						"MobileBoneWeightCount=2",
						"MobileUsePreprocessedShaders=True",
						"MobileFlashRedForUncachedShaders=False",
						"MobileWarmUpPreprocessedShaders=True",
						"MobileCachePreprocessedShaders=False",
						"MobileProfilePreprocessedShaders=False",
						"MobileUseCPreprocessorOnShaders=True",
						"MobileLoadCPreprocessedShaders=True",
						"MobileSharePixelShaders=True",
						"MobileShareVertexShaders=True",
						"MobileShareShaderPrograms=True",
						"MobileEnableMSAA=False",
						"MobileContentScaleFactor=1.0",
						"MobileVertexScratchBufferSize=150",
						"MobileIndexScratchBufferSize=10",
						"MobileLightShaftScale=2.0",
						"MobileLightShaftFirstPass=0.5",
						"MobileLightShaftSecondPass=1.0",
						"MobileModShadows=True",
						"MobileTiltShift=False",
						"MobileMaxMemory=300",
						"MobilePostProcessBlurAmount=32.0",
						"bMobileUsingHighResolutionTiming=True",
						"MobileTiltShiftPosition=0.5",
						"MobileTiltShiftFocusWidth=0.3",
						"MobileTiltShiftTransitionWidth=0.5",
						"MobileMaxShadowRange=500.0",
						"MobileBloomTint=(R=1.0,G=0.75,B=0.0,A=1.0)",
						"MobileClearDepthBetweenDPG=False",
						"MobileSceneDepthResolveForShadows=TRUE",
						"MobileLandscapeLodBias=0",
						"MobileUseShaderGroupForStartupObjects=FALSE",
						"MobileMinimizeFogShaders=FALSE",
						"MobileFXAAQuality=0",
						"ApexLODResourceBudget=1000000000000000000000.0",
						"ApexDestructionMaxChunkIslandCount=2500",
						"ApexDestructionMaxShapeCount=0",
						"ApexDestructionMaxChunkSeparationLOD=1.0",
						"ApexDestructionMaxActorCreatesPerFrame=-1",
						"ApexDestructionMaxFracturesProcessedPerFrame=-1",
						"ApexDestructionSortByBenefit=True",
						"ApexGRBEnable=false",
						"ApexGRBGPUMemSceneSize=128",
						"ApexGRBGPUMemTempDataSize=128",
						"ApexGRBMeshCellSize=7.5",
						"ApexGRBNonPenSolverPosIterCount=9;",
						"ApexGRBFrictionSolverPosIterCount=3;",
						"ApexGRBFrictionSolverVelIterCount=3;",
						"ApexGRBSkinWidth=0.025",
						"ApexGRBMaxLinearAcceleration=1000000.0",
						"bEnableParallelAPEXClothingFetch=True",
						"bApexClothingAsyncFetchResults=False",
						"ApexClothingAvgSimFrequencyWindow=60",
						"ApexClothingAllowAsyncCooking=True",
						"ApexClothingAllowApexWorkBetweenSubsteps=FALSE",
						"TEXTUREGROUP_World=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WorldNormalMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WorldSpecular=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Character=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_CharacterNormalMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_CharacterSpecular=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Weapon=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WeaponNormalMap=(MinLODSize=1,MaxLODSize=256,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WeaponSpecular=(MinLODSize=1,MaxLODSize=256,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Vehicle=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_VehicleNormalMap=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_VehicleSpecular=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Cinematic=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Effects=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_EffectsNotFiltered=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Skybox=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_UI=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Lightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Shadowmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,NumStreamedMips=3,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_RenderTarget=(MinLODSize=1,MaxLODSize=2048,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_MobileFlattened=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ProcBuilding_Face=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ProcBuilding_LightMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Terrain_Heightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Terrain_Weightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ImageBasedReflection=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Bokeh=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"FullEffectIntensity=False",
						"bAllowBetterModulatedShadows=FALSE",
						"UncappedFramerate=False",
						"TEXTUREGROUP_ColorLookupTable=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.rocket_league_settingloc, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.rocket_league_settingloc, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000528 RID: 1320 RVA: 0x0013A8B0 File Offset: 0x00138AB0
		private void RL_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]",
						"UseDirectSound=True",
						"StaticDecals=False",
						"DynamicDecals=False",
						"UnbatchedDecals=True",
						"DecalCullDistanceScale=0.500000",
						"DynamicLights=False",
						"DynamicShadows=False",
						"LightEnvironmentShadows=False",
						"CompositeDynamicLights=True",
						"SHSecondaryLighting=True",
						"DirectionalLightmaps=True",
						"MotionBlur=False",
						"MotionBlurPause=True",
						"MotionBlurSkinning=1",
						"DepthOfField=False",
						"AmbientOcclusion=False",
						"Bloom=False",
						"bAllowLightShafts=False",
						"Distortion=False",
						"FilteredDistortion=False",
						"DropParticleDistortion=False",
						"bAllowDownsampledTranslucency=False",
						"SpeedTreeLeaves=False",
						"SpeedTreeFronds=False",
						"OnlyStreamInTextures=False",
						"LensFlares=False",
						"FogVolumes=False",
						"FloatingPointRenderTargets=True",
						"OneFrameThreadLag=True",
						"WaitForGPU=false",
						"UseVsync=False",
						"CustomFPS=0",
						"UpscaleScreenPercentage=True",
						"UpscaleTargetFramerateDocked=60.000000",
						"UpscaleTargetFramerateUndocked=60.000000",
						"MinimumScreenScale=100.000000",
						"AllowDynamicResolution=False",
						"ZCullSaveRestore=False",
						"AdaptiveZcull=False",
						"BinnerTileCache=False",
						"BinnerTileResX=64",
						"BinnerTileResY=64",
						"Fullscreen=True",
						"AllowOpenGL=False",
						"AllowRadialBlur=True",
						"AllowSubsurfaceScattering=False",
						"AllowImageReflections=False",
						"AllowImageReflectionShadowing=False",
						"bAllowSeparateTranslucency=False",
						"bAllowPostprocessMLAA=False",
						"bAllowHighQualityMaterials=False",
						"bUseTranslucentArenaShaders=False",
						"MaxFilterBlurSampleCount=16",
						"SkeletalMeshLODBias=0",
						"ParticleLODBias=1",
						"DetailMode=0",
						"MaxDrawDistanceScale=1",
						"ShadowFilterQualityBias=0",
						"MaxAnisotropy=4",
						"MaxMultiSamples=1",
						"bAllowD3D9MSAA=False",
						"bAllowTemporalAA=False",
						"TemporalAA_MinDepth=500.000000",
						"TemporalAA_StartDepthVelocityScale=100.000000",
						"MinShadowResolution=64",
						"MinPreShadowResolution=8",
						"MaxShadowResolution=1120",
						"MobileShadowTextureResolution=1120",
						"MaxWholeSceneDominantShadowResolution=1344",
						"ShadowFadeResolution=32",
						"PreShadowFadeResolution=16",
						"ShadowFadeExponent=0.250000",
						"ResX=" + this.DefaultWidth,
						"ResY=" + this.DefaultHeight,
						"AutoDetectDesktopResolution=False",
						"Borderless=False",
						"AllowApexCloth=false",
						"ScreenPercentage=50.000000",
						"SceneCaptureStreamingMultiplier=1.000000",
						"ShadowTexelsPerPixel=1.273240",
						"PreShadowResolutionFactor=0.500000",
						"bEnableBranchingPCFShadows=False",
						"bAllowHardwareShadowFiltering=False",
						"TessellationAdaptivePixelsPerTriangle=48.000000",
						"bEnableForegroundShadowsOnWorld=True",
						"bEnableForegroundSelfShadowing=False",
						"bAllowWholeSceneDominantShadows=True",
						"bUseConservativeShadowBounds=False",
						"ShadowFilterRadius=2.000000",
						"ShadowDepthBias=0.012000",
						"PerObjectShadowTransition=60.000000",
						"PerSceneShadowTransition=600.000000",
						"CSMSplitPenumbraScale=0.500000",
						"CSMSplitSoftTransitionDistanceScale=4.000000",
						"CSMSplitDepthBiasScale=0.500000",
						"CSMMinimumFOV=40.000000",
						"CSMFOVRoundFactor=4.000000",
						"UnbuiltWholeSceneDynamicShadowRadius=20000.000000",
						"UnbuiltNumWholeSceneDynamicShadowCascades=3",
						"WholeSceneShadowUnbuiltInteractionThreshold=50",
						"bAllowFracturedDamage=True",
						"NumFracturedPartsScale=1.000000",
						"FractureDirectSpawnChanceScale=1.000000",
						"FractureRadialSpawnChanceScale=1.000000",
						"FractureCullDistanceScale=1.000000",
						"bForceCPUAccessToGPUSkinVerts=false",
						"bDisableSkeletalInstanceWeights=false",
						"HighPrecisionGBuffers=False",
						"AllowSecondaryDisplays=False",
						"SecondaryDisplayMaximumWidth=1280",
						"SecondaryDisplayMaximumHeight=720",
						"AllowPerFrameSleep=False",
						"AllowPerFrameYield=True",
						"MobileFeatureLevel=0",
						"MobileFog=True",
						"MobileHeightFog=False",
						"MobileSpecular=True",
						"MobileBumpOffset=True",
						"MobileNormalMapping=True",
						"MobileEnvMapping=True",
						"MobileRimLighting=True",
						"MobileColorBlending=True",
						"MobileColorGrading=False",
						"MobileVertexMovement=True",
						"MobileOcclusionQueries=False",
						"MobileGlobalGammaCorrection=False",
						"MobileAllowGammaCorrectionWorldOverride=False",
						"MobileAllowDepthPrePass=False",
						"MobileGfxGammaCorrection=False",
						"MobileLODBias=-0.5",
						"MobileBoneCount=75",
						"MobileBoneWeightCount=2",
						"MobileUsePreprocessedShaders=True",
						"MobileFlashRedForUncachedShaders=False",
						"MobileWarmUpPreprocessedShaders=True",
						"MobileCachePreprocessedShaders=False",
						"MobileProfilePreprocessedShaders=False",
						"MobileUseCPreprocessorOnShaders=True",
						"MobileLoadCPreprocessedShaders=True",
						"MobileSharePixelShaders=True",
						"MobileShareVertexShaders=True",
						"MobileShareShaderPrograms=True",
						"MobileEnableMSAA=False",
						"MobileContentScaleFactor=1.0",
						"MobileVertexScratchBufferSize=150",
						"MobileIndexScratchBufferSize=10",
						"MobileLightShaftScale=2.0",
						"MobileLightShaftFirstPass=0.5",
						"MobileLightShaftSecondPass=1.0",
						"MobileModShadows=True",
						"MobileTiltShift=False",
						"MobileMaxMemory=300",
						"MobilePostProcessBlurAmount=32.0",
						"bMobileUsingHighResolutionTiming=True",
						"MobileTiltShiftPosition=0.5",
						"MobileTiltShiftFocusWidth=0.3",
						"MobileTiltShiftTransitionWidth=0.5",
						"MobileMaxShadowRange=500.0",
						"MobileBloomTint=(R=1.0,G=0.75,B=0.0,A=1.0)",
						"MobileClearDepthBetweenDPG=False",
						"MobileSceneDepthResolveForShadows=TRUE",
						"MobileLandscapeLodBias=0",
						"MobileUseShaderGroupForStartupObjects=FALSE",
						"MobileMinimizeFogShaders=FALSE",
						"MobileFXAAQuality=0",
						"ApexLODResourceBudget=1000000000000000000000.0",
						"ApexDestructionMaxChunkIslandCount=2500",
						"ApexDestructionMaxShapeCount=0",
						"ApexDestructionMaxChunkSeparationLOD=1.0",
						"ApexDestructionMaxActorCreatesPerFrame=-1",
						"ApexDestructionMaxFracturesProcessedPerFrame=-1",
						"ApexDestructionSortByBenefit=True",
						"ApexGRBEnable=false",
						"ApexGRBGPUMemSceneSize=128",
						"ApexGRBGPUMemTempDataSize=128",
						"ApexGRBMeshCellSize=7.5",
						"ApexGRBNonPenSolverPosIterCount=9;",
						"ApexGRBFrictionSolverPosIterCount=3;",
						"ApexGRBFrictionSolverVelIterCount=3;",
						"ApexGRBSkinWidth=0.025",
						"ApexGRBMaxLinearAcceleration=1000000.0",
						"bEnableParallelAPEXClothingFetch=True",
						"bApexClothingAsyncFetchResults=False",
						"ApexClothingAvgSimFrequencyWindow=60",
						"ApexClothingAllowAsyncCooking=True",
						"ApexClothingAllowApexWorkBetweenSubsteps=FALSE",
						"TEXTUREGROUP_World=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WorldNormalMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WorldSpecular=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Character=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_CharacterNormalMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_CharacterSpecular=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Weapon=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WeaponNormalMap=(MinLODSize=1,MaxLODSize=256,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WeaponSpecular=(MinLODSize=1,MaxLODSize=256,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Vehicle=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_VehicleNormalMap=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_VehicleSpecular=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Cinematic=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Effects=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_EffectsNotFiltered=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Skybox=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_UI=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Lightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Shadowmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,NumStreamedMips=3,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_RenderTarget=(MinLODSize=1,MaxLODSize=2048,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_MobileFlattened=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ProcBuilding_Face=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ProcBuilding_LightMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Terrain_Heightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Terrain_Weightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ImageBasedReflection=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Bokeh=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"FullEffectIntensity=False",
						"bAllowBetterModulatedShadows=FALSE",
						"UncappedFramerate=False",
						"TEXTUREGROUP_ColorLookupTable=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.rocket_league_settingloc, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.rocket_league_settingloc, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000529 RID: 1321 RVA: 0x0013B3B0 File Offset: 0x001395B0
		private void RL_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]",
						"UseDirectSound=True",
						"StaticDecals=False",
						"DynamicDecals=False",
						"UnbatchedDecals=True",
						"DecalCullDistanceScale=0.500000",
						"DynamicLights=False",
						"DynamicShadows=False",
						"LightEnvironmentShadows=False",
						"CompositeDynamicLights=True",
						"SHSecondaryLighting=True",
						"DirectionalLightmaps=True",
						"MotionBlur=False",
						"MotionBlurPause=True",
						"MotionBlurSkinning=1",
						"DepthOfField=False",
						"AmbientOcclusion=False",
						"Bloom=False",
						"bAllowLightShafts=False",
						"Distortion=False",
						"FilteredDistortion=False",
						"DropParticleDistortion=False",
						"bAllowDownsampledTranslucency=False",
						"SpeedTreeLeaves=False",
						"SpeedTreeFronds=False",
						"OnlyStreamInTextures=False",
						"LensFlares=False",
						"FogVolumes=False",
						"FloatingPointRenderTargets=True",
						"OneFrameThreadLag=True",
						"WaitForGPU=false",
						"UseVsync=False",
						"CustomFPS=0",
						"UpscaleScreenPercentage=True",
						"UpscaleTargetFramerateDocked=60.000000",
						"UpscaleTargetFramerateUndocked=60.000000",
						"MinimumScreenScale=100.000000",
						"AllowDynamicResolution=False",
						"ZCullSaveRestore=False",
						"AdaptiveZcull=False",
						"BinnerTileCache=False",
						"BinnerTileResX=64",
						"BinnerTileResY=64",
						"Fullscreen=True",
						"AllowOpenGL=False",
						"AllowRadialBlur=True",
						"AllowSubsurfaceScattering=False",
						"AllowImageReflections=False",
						"AllowImageReflectionShadowing=False",
						"bAllowSeparateTranslucency=False",
						"bAllowPostprocessMLAA=False",
						"bAllowHighQualityMaterials=False",
						"bUseTranslucentArenaShaders=False",
						"MaxFilterBlurSampleCount=16",
						"SkeletalMeshLODBias=0",
						"ParticleLODBias=1",
						"DetailMode=0",
						"MaxDrawDistanceScale=1",
						"ShadowFilterQualityBias=0",
						"MaxAnisotropy=4",
						"MaxMultiSamples=1",
						"bAllowD3D9MSAA=False",
						"bAllowTemporalAA=False",
						"TemporalAA_MinDepth=500.000000",
						"TemporalAA_StartDepthVelocityScale=100.000000",
						"MinShadowResolution=64",
						"MinPreShadowResolution=8",
						"MaxShadowResolution=1120",
						"MobileShadowTextureResolution=1120",
						"MaxWholeSceneDominantShadowResolution=1344",
						"ShadowFadeResolution=32",
						"PreShadowFadeResolution=16",
						"ShadowFadeExponent=0.250000",
						"ResX=" + this.DefaultWidth,
						"ResY=" + this.DefaultHeight,
						"AutoDetectDesktopResolution=False",
						"Borderless=False",
						"AllowApexCloth=false",
						"ScreenPercentage=70.000000",
						"SceneCaptureStreamingMultiplier=1.000000",
						"ShadowTexelsPerPixel=1.273240",
						"PreShadowResolutionFactor=0.500000",
						"bEnableBranchingPCFShadows=False",
						"bAllowHardwareShadowFiltering=False",
						"TessellationAdaptivePixelsPerTriangle=48.000000",
						"bEnableForegroundShadowsOnWorld=True",
						"bEnableForegroundSelfShadowing=False",
						"bAllowWholeSceneDominantShadows=True",
						"bUseConservativeShadowBounds=False",
						"ShadowFilterRadius=2.000000",
						"ShadowDepthBias=0.012000",
						"PerObjectShadowTransition=60.000000",
						"PerSceneShadowTransition=600.000000",
						"CSMSplitPenumbraScale=0.500000",
						"CSMSplitSoftTransitionDistanceScale=4.000000",
						"CSMSplitDepthBiasScale=0.500000",
						"CSMMinimumFOV=40.000000",
						"CSMFOVRoundFactor=4.000000",
						"UnbuiltWholeSceneDynamicShadowRadius=20000.000000",
						"UnbuiltNumWholeSceneDynamicShadowCascades=3",
						"WholeSceneShadowUnbuiltInteractionThreshold=50",
						"bAllowFracturedDamage=True",
						"NumFracturedPartsScale=1.000000",
						"FractureDirectSpawnChanceScale=1.000000",
						"FractureRadialSpawnChanceScale=1.000000",
						"FractureCullDistanceScale=1.000000",
						"bForceCPUAccessToGPUSkinVerts=false",
						"bDisableSkeletalInstanceWeights=false",
						"HighPrecisionGBuffers=False",
						"AllowSecondaryDisplays=False",
						"SecondaryDisplayMaximumWidth=1280",
						"SecondaryDisplayMaximumHeight=720",
						"AllowPerFrameSleep=False",
						"AllowPerFrameYield=True",
						"MobileFeatureLevel=0",
						"MobileFog=True",
						"MobileHeightFog=False",
						"MobileSpecular=True",
						"MobileBumpOffset=True",
						"MobileNormalMapping=True",
						"MobileEnvMapping=True",
						"MobileRimLighting=True",
						"MobileColorBlending=True",
						"MobileColorGrading=False",
						"MobileVertexMovement=True",
						"MobileOcclusionQueries=False",
						"MobileGlobalGammaCorrection=False",
						"MobileAllowGammaCorrectionWorldOverride=False",
						"MobileAllowDepthPrePass=False",
						"MobileGfxGammaCorrection=False",
						"MobileLODBias=-0.5",
						"MobileBoneCount=75",
						"MobileBoneWeightCount=2",
						"MobileUsePreprocessedShaders=True",
						"MobileFlashRedForUncachedShaders=False",
						"MobileWarmUpPreprocessedShaders=True",
						"MobileCachePreprocessedShaders=False",
						"MobileProfilePreprocessedShaders=False",
						"MobileUseCPreprocessorOnShaders=True",
						"MobileLoadCPreprocessedShaders=True",
						"MobileSharePixelShaders=True",
						"MobileShareVertexShaders=True",
						"MobileShareShaderPrograms=True",
						"MobileEnableMSAA=False",
						"MobileContentScaleFactor=1.0",
						"MobileVertexScratchBufferSize=150",
						"MobileIndexScratchBufferSize=10",
						"MobileLightShaftScale=2.0",
						"MobileLightShaftFirstPass=0.5",
						"MobileLightShaftSecondPass=1.0",
						"MobileModShadows=True",
						"MobileTiltShift=False",
						"MobileMaxMemory=300",
						"MobilePostProcessBlurAmount=32.0",
						"bMobileUsingHighResolutionTiming=True",
						"MobileTiltShiftPosition=0.5",
						"MobileTiltShiftFocusWidth=0.3",
						"MobileTiltShiftTransitionWidth=0.5",
						"MobileMaxShadowRange=500.0",
						"MobileBloomTint=(R=1.0,G=0.75,B=0.0,A=1.0)",
						"MobileClearDepthBetweenDPG=False",
						"MobileSceneDepthResolveForShadows=TRUE",
						"MobileLandscapeLodBias=0",
						"MobileUseShaderGroupForStartupObjects=FALSE",
						"MobileMinimizeFogShaders=FALSE",
						"MobileFXAAQuality=0",
						"ApexLODResourceBudget=1000000000000000000000.0",
						"ApexDestructionMaxChunkIslandCount=2500",
						"ApexDestructionMaxShapeCount=0",
						"ApexDestructionMaxChunkSeparationLOD=1.0",
						"ApexDestructionMaxActorCreatesPerFrame=-1",
						"ApexDestructionMaxFracturesProcessedPerFrame=-1",
						"ApexDestructionSortByBenefit=True",
						"ApexGRBEnable=false",
						"ApexGRBGPUMemSceneSize=128",
						"ApexGRBGPUMemTempDataSize=128",
						"ApexGRBMeshCellSize=7.5",
						"ApexGRBNonPenSolverPosIterCount=9;",
						"ApexGRBFrictionSolverPosIterCount=3;",
						"ApexGRBFrictionSolverVelIterCount=3;",
						"ApexGRBSkinWidth=0.025",
						"ApexGRBMaxLinearAcceleration=1000000.0",
						"bEnableParallelAPEXClothingFetch=True",
						"bApexClothingAsyncFetchResults=False",
						"ApexClothingAvgSimFrequencyWindow=60",
						"ApexClothingAllowAsyncCooking=True",
						"ApexClothingAllowApexWorkBetweenSubsteps=FALSE",
						"TEXTUREGROUP_World=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WorldNormalMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WorldSpecular=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Character=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_CharacterNormalMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_CharacterSpecular=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Weapon=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WeaponNormalMap=(MinLODSize=1,MaxLODSize=256,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WeaponSpecular=(MinLODSize=1,MaxLODSize=256,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Vehicle=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_VehicleNormalMap=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_VehicleSpecular=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Cinematic=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Effects=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_EffectsNotFiltered=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Skybox=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_UI=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Lightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Shadowmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,NumStreamedMips=3,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_RenderTarget=(MinLODSize=1,MaxLODSize=2048,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_MobileFlattened=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ProcBuilding_Face=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ProcBuilding_LightMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Terrain_Heightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Terrain_Weightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ImageBasedReflection=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Bokeh=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"FullEffectIntensity=False",
						"bAllowBetterModulatedShadows=FALSE",
						"UncappedFramerate=False",
						"TEXTUREGROUP_ColorLookupTable=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.rocket_league_settingloc, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.rocket_league_settingloc, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600052A RID: 1322 RVA: 0x0013BEB0 File Offset: 0x0013A0B0
		private void RL_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]",
						"UseDirectSound=True",
						"StaticDecals=False",
						"DynamicDecals=False",
						"UnbatchedDecals=True",
						"DecalCullDistanceScale=0.500000",
						"DynamicLights=False",
						"DynamicShadows=False",
						"LightEnvironmentShadows=False",
						"CompositeDynamicLights=True",
						"SHSecondaryLighting=True",
						"DirectionalLightmaps=True",
						"MotionBlur=False",
						"MotionBlurPause=True",
						"MotionBlurSkinning=1",
						"DepthOfField=False",
						"AmbientOcclusion=False",
						"Bloom=False",
						"bAllowLightShafts=False",
						"Distortion=False",
						"FilteredDistortion=False",
						"DropParticleDistortion=False",
						"bAllowDownsampledTranslucency=False",
						"SpeedTreeLeaves=False",
						"SpeedTreeFronds=False",
						"OnlyStreamInTextures=False",
						"LensFlares=False",
						"FogVolumes=False",
						"FloatingPointRenderTargets=True",
						"OneFrameThreadLag=True",
						"WaitForGPU=false",
						"UseVsync=False",
						"CustomFPS=0",
						"UpscaleScreenPercentage=True",
						"UpscaleTargetFramerateDocked=60.000000",
						"UpscaleTargetFramerateUndocked=60.000000",
						"MinimumScreenScale=100.000000",
						"AllowDynamicResolution=False",
						"ZCullSaveRestore=False",
						"AdaptiveZcull=False",
						"BinnerTileCache=False",
						"BinnerTileResX=64",
						"BinnerTileResY=64",
						"Fullscreen=True",
						"AllowOpenGL=False",
						"AllowRadialBlur=True",
						"AllowSubsurfaceScattering=False",
						"AllowImageReflections=False",
						"AllowImageReflectionShadowing=False",
						"bAllowSeparateTranslucency=False",
						"bAllowPostprocessMLAA=False",
						"bAllowHighQualityMaterials=False",
						"bUseTranslucentArenaShaders=False",
						"MaxFilterBlurSampleCount=16",
						"SkeletalMeshLODBias=0",
						"ParticleLODBias=1",
						"DetailMode=0",
						"MaxDrawDistanceScale=1",
						"ShadowFilterQualityBias=0",
						"MaxAnisotropy=4",
						"MaxMultiSamples=1",
						"bAllowD3D9MSAA=False",
						"bAllowTemporalAA=False",
						"TemporalAA_MinDepth=500.000000",
						"TemporalAA_StartDepthVelocityScale=100.000000",
						"MinShadowResolution=64",
						"MinPreShadowResolution=8",
						"MaxShadowResolution=1120",
						"MobileShadowTextureResolution=1120",
						"MaxWholeSceneDominantShadowResolution=1344",
						"ShadowFadeResolution=32",
						"PreShadowFadeResolution=16",
						"ShadowFadeExponent=0.250000",
						"ResX=" + this.DefaultWidth,
						"ResY=" + this.DefaultHeight,
						"AutoDetectDesktopResolution=False",
						"Borderless=False",
						"AllowApexCloth=false",
						"ScreenPercentage=80.000000",
						"SceneCaptureStreamingMultiplier=1.000000",
						"ShadowTexelsPerPixel=1.273240",
						"PreShadowResolutionFactor=0.500000",
						"bEnableBranchingPCFShadows=False",
						"bAllowHardwareShadowFiltering=False",
						"TessellationAdaptivePixelsPerTriangle=48.000000",
						"bEnableForegroundShadowsOnWorld=True",
						"bEnableForegroundSelfShadowing=False",
						"bAllowWholeSceneDominantShadows=True",
						"bUseConservativeShadowBounds=False",
						"ShadowFilterRadius=2.000000",
						"ShadowDepthBias=0.012000",
						"PerObjectShadowTransition=60.000000",
						"PerSceneShadowTransition=600.000000",
						"CSMSplitPenumbraScale=0.500000",
						"CSMSplitSoftTransitionDistanceScale=4.000000",
						"CSMSplitDepthBiasScale=0.500000",
						"CSMMinimumFOV=40.000000",
						"CSMFOVRoundFactor=4.000000",
						"UnbuiltWholeSceneDynamicShadowRadius=20000.000000",
						"UnbuiltNumWholeSceneDynamicShadowCascades=3",
						"WholeSceneShadowUnbuiltInteractionThreshold=50",
						"bAllowFracturedDamage=True",
						"NumFracturedPartsScale=1.000000",
						"FractureDirectSpawnChanceScale=1.000000",
						"FractureRadialSpawnChanceScale=1.000000",
						"FractureCullDistanceScale=1.000000",
						"bForceCPUAccessToGPUSkinVerts=false",
						"bDisableSkeletalInstanceWeights=false",
						"HighPrecisionGBuffers=False",
						"AllowSecondaryDisplays=False",
						"SecondaryDisplayMaximumWidth=1280",
						"SecondaryDisplayMaximumHeight=720",
						"AllowPerFrameSleep=False",
						"AllowPerFrameYield=True",
						"MobileFeatureLevel=0",
						"MobileFog=True",
						"MobileHeightFog=False",
						"MobileSpecular=True",
						"MobileBumpOffset=True",
						"MobileNormalMapping=True",
						"MobileEnvMapping=True",
						"MobileRimLighting=True",
						"MobileColorBlending=True",
						"MobileColorGrading=False",
						"MobileVertexMovement=True",
						"MobileOcclusionQueries=False",
						"MobileGlobalGammaCorrection=False",
						"MobileAllowGammaCorrectionWorldOverride=False",
						"MobileAllowDepthPrePass=False",
						"MobileGfxGammaCorrection=False",
						"MobileLODBias=-0.5",
						"MobileBoneCount=75",
						"MobileBoneWeightCount=2",
						"MobileUsePreprocessedShaders=True",
						"MobileFlashRedForUncachedShaders=False",
						"MobileWarmUpPreprocessedShaders=True",
						"MobileCachePreprocessedShaders=False",
						"MobileProfilePreprocessedShaders=False",
						"MobileUseCPreprocessorOnShaders=True",
						"MobileLoadCPreprocessedShaders=True",
						"MobileSharePixelShaders=True",
						"MobileShareVertexShaders=True",
						"MobileShareShaderPrograms=True",
						"MobileEnableMSAA=False",
						"MobileContentScaleFactor=1.0",
						"MobileVertexScratchBufferSize=150",
						"MobileIndexScratchBufferSize=10",
						"MobileLightShaftScale=2.0",
						"MobileLightShaftFirstPass=0.5",
						"MobileLightShaftSecondPass=1.0",
						"MobileModShadows=True",
						"MobileTiltShift=False",
						"MobileMaxMemory=300",
						"MobilePostProcessBlurAmount=32.0",
						"bMobileUsingHighResolutionTiming=True",
						"MobileTiltShiftPosition=0.5",
						"MobileTiltShiftFocusWidth=0.3",
						"MobileTiltShiftTransitionWidth=0.5",
						"MobileMaxShadowRange=500.0",
						"MobileBloomTint=(R=1.0,G=0.75,B=0.0,A=1.0)",
						"MobileClearDepthBetweenDPG=False",
						"MobileSceneDepthResolveForShadows=TRUE",
						"MobileLandscapeLodBias=0",
						"MobileUseShaderGroupForStartupObjects=FALSE",
						"MobileMinimizeFogShaders=FALSE",
						"MobileFXAAQuality=0",
						"ApexLODResourceBudget=1000000000000000000000.0",
						"ApexDestructionMaxChunkIslandCount=2500",
						"ApexDestructionMaxShapeCount=0",
						"ApexDestructionMaxChunkSeparationLOD=1.0",
						"ApexDestructionMaxActorCreatesPerFrame=-1",
						"ApexDestructionMaxFracturesProcessedPerFrame=-1",
						"ApexDestructionSortByBenefit=True",
						"ApexGRBEnable=false",
						"ApexGRBGPUMemSceneSize=128",
						"ApexGRBGPUMemTempDataSize=128",
						"ApexGRBMeshCellSize=7.5",
						"ApexGRBNonPenSolverPosIterCount=9;",
						"ApexGRBFrictionSolverPosIterCount=3;",
						"ApexGRBFrictionSolverVelIterCount=3;",
						"ApexGRBSkinWidth=0.025",
						"ApexGRBMaxLinearAcceleration=1000000.0",
						"bEnableParallelAPEXClothingFetch=True",
						"bApexClothingAsyncFetchResults=False",
						"ApexClothingAvgSimFrequencyWindow=60",
						"ApexClothingAllowAsyncCooking=True",
						"ApexClothingAllowApexWorkBetweenSubsteps=FALSE",
						"TEXTUREGROUP_World=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WorldNormalMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WorldSpecular=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Character=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_CharacterNormalMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_CharacterSpecular=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Weapon=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WeaponNormalMap=(MinLODSize=1,MaxLODSize=256,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WeaponSpecular=(MinLODSize=1,MaxLODSize=256,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Vehicle=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_VehicleNormalMap=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_VehicleSpecular=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Cinematic=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Effects=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_EffectsNotFiltered=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Skybox=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_UI=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Lightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Shadowmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,NumStreamedMips=3,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_RenderTarget=(MinLODSize=1,MaxLODSize=2048,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_MobileFlattened=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ProcBuilding_Face=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ProcBuilding_LightMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Terrain_Heightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Terrain_Weightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ImageBasedReflection=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Bokeh=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"FullEffectIntensity=False",
						"bAllowBetterModulatedShadows=FALSE",
						"UncappedFramerate=False",
						"TEXTUREGROUP_ColorLookupTable=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.rocket_league_settingloc, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.rocket_league_settingloc, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600052B RID: 1323 RVA: 0x0013BEB0 File Offset: 0x0013A0B0
		private void RL_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]",
						"UseDirectSound=True",
						"StaticDecals=False",
						"DynamicDecals=False",
						"UnbatchedDecals=True",
						"DecalCullDistanceScale=0.500000",
						"DynamicLights=False",
						"DynamicShadows=False",
						"LightEnvironmentShadows=False",
						"CompositeDynamicLights=True",
						"SHSecondaryLighting=True",
						"DirectionalLightmaps=True",
						"MotionBlur=False",
						"MotionBlurPause=True",
						"MotionBlurSkinning=1",
						"DepthOfField=False",
						"AmbientOcclusion=False",
						"Bloom=False",
						"bAllowLightShafts=False",
						"Distortion=False",
						"FilteredDistortion=False",
						"DropParticleDistortion=False",
						"bAllowDownsampledTranslucency=False",
						"SpeedTreeLeaves=False",
						"SpeedTreeFronds=False",
						"OnlyStreamInTextures=False",
						"LensFlares=False",
						"FogVolumes=False",
						"FloatingPointRenderTargets=True",
						"OneFrameThreadLag=True",
						"WaitForGPU=false",
						"UseVsync=False",
						"CustomFPS=0",
						"UpscaleScreenPercentage=True",
						"UpscaleTargetFramerateDocked=60.000000",
						"UpscaleTargetFramerateUndocked=60.000000",
						"MinimumScreenScale=100.000000",
						"AllowDynamicResolution=False",
						"ZCullSaveRestore=False",
						"AdaptiveZcull=False",
						"BinnerTileCache=False",
						"BinnerTileResX=64",
						"BinnerTileResY=64",
						"Fullscreen=True",
						"AllowOpenGL=False",
						"AllowRadialBlur=True",
						"AllowSubsurfaceScattering=False",
						"AllowImageReflections=False",
						"AllowImageReflectionShadowing=False",
						"bAllowSeparateTranslucency=False",
						"bAllowPostprocessMLAA=False",
						"bAllowHighQualityMaterials=False",
						"bUseTranslucentArenaShaders=False",
						"MaxFilterBlurSampleCount=16",
						"SkeletalMeshLODBias=0",
						"ParticleLODBias=1",
						"DetailMode=0",
						"MaxDrawDistanceScale=1",
						"ShadowFilterQualityBias=0",
						"MaxAnisotropy=4",
						"MaxMultiSamples=1",
						"bAllowD3D9MSAA=False",
						"bAllowTemporalAA=False",
						"TemporalAA_MinDepth=500.000000",
						"TemporalAA_StartDepthVelocityScale=100.000000",
						"MinShadowResolution=64",
						"MinPreShadowResolution=8",
						"MaxShadowResolution=1120",
						"MobileShadowTextureResolution=1120",
						"MaxWholeSceneDominantShadowResolution=1344",
						"ShadowFadeResolution=32",
						"PreShadowFadeResolution=16",
						"ShadowFadeExponent=0.250000",
						"ResX=" + this.DefaultWidth,
						"ResY=" + this.DefaultHeight,
						"AutoDetectDesktopResolution=False",
						"Borderless=False",
						"AllowApexCloth=false",
						"ScreenPercentage=80.000000",
						"SceneCaptureStreamingMultiplier=1.000000",
						"ShadowTexelsPerPixel=1.273240",
						"PreShadowResolutionFactor=0.500000",
						"bEnableBranchingPCFShadows=False",
						"bAllowHardwareShadowFiltering=False",
						"TessellationAdaptivePixelsPerTriangle=48.000000",
						"bEnableForegroundShadowsOnWorld=True",
						"bEnableForegroundSelfShadowing=False",
						"bAllowWholeSceneDominantShadows=True",
						"bUseConservativeShadowBounds=False",
						"ShadowFilterRadius=2.000000",
						"ShadowDepthBias=0.012000",
						"PerObjectShadowTransition=60.000000",
						"PerSceneShadowTransition=600.000000",
						"CSMSplitPenumbraScale=0.500000",
						"CSMSplitSoftTransitionDistanceScale=4.000000",
						"CSMSplitDepthBiasScale=0.500000",
						"CSMMinimumFOV=40.000000",
						"CSMFOVRoundFactor=4.000000",
						"UnbuiltWholeSceneDynamicShadowRadius=20000.000000",
						"UnbuiltNumWholeSceneDynamicShadowCascades=3",
						"WholeSceneShadowUnbuiltInteractionThreshold=50",
						"bAllowFracturedDamage=True",
						"NumFracturedPartsScale=1.000000",
						"FractureDirectSpawnChanceScale=1.000000",
						"FractureRadialSpawnChanceScale=1.000000",
						"FractureCullDistanceScale=1.000000",
						"bForceCPUAccessToGPUSkinVerts=false",
						"bDisableSkeletalInstanceWeights=false",
						"HighPrecisionGBuffers=False",
						"AllowSecondaryDisplays=False",
						"SecondaryDisplayMaximumWidth=1280",
						"SecondaryDisplayMaximumHeight=720",
						"AllowPerFrameSleep=False",
						"AllowPerFrameYield=True",
						"MobileFeatureLevel=0",
						"MobileFog=True",
						"MobileHeightFog=False",
						"MobileSpecular=True",
						"MobileBumpOffset=True",
						"MobileNormalMapping=True",
						"MobileEnvMapping=True",
						"MobileRimLighting=True",
						"MobileColorBlending=True",
						"MobileColorGrading=False",
						"MobileVertexMovement=True",
						"MobileOcclusionQueries=False",
						"MobileGlobalGammaCorrection=False",
						"MobileAllowGammaCorrectionWorldOverride=False",
						"MobileAllowDepthPrePass=False",
						"MobileGfxGammaCorrection=False",
						"MobileLODBias=-0.5",
						"MobileBoneCount=75",
						"MobileBoneWeightCount=2",
						"MobileUsePreprocessedShaders=True",
						"MobileFlashRedForUncachedShaders=False",
						"MobileWarmUpPreprocessedShaders=True",
						"MobileCachePreprocessedShaders=False",
						"MobileProfilePreprocessedShaders=False",
						"MobileUseCPreprocessorOnShaders=True",
						"MobileLoadCPreprocessedShaders=True",
						"MobileSharePixelShaders=True",
						"MobileShareVertexShaders=True",
						"MobileShareShaderPrograms=True",
						"MobileEnableMSAA=False",
						"MobileContentScaleFactor=1.0",
						"MobileVertexScratchBufferSize=150",
						"MobileIndexScratchBufferSize=10",
						"MobileLightShaftScale=2.0",
						"MobileLightShaftFirstPass=0.5",
						"MobileLightShaftSecondPass=1.0",
						"MobileModShadows=True",
						"MobileTiltShift=False",
						"MobileMaxMemory=300",
						"MobilePostProcessBlurAmount=32.0",
						"bMobileUsingHighResolutionTiming=True",
						"MobileTiltShiftPosition=0.5",
						"MobileTiltShiftFocusWidth=0.3",
						"MobileTiltShiftTransitionWidth=0.5",
						"MobileMaxShadowRange=500.0",
						"MobileBloomTint=(R=1.0,G=0.75,B=0.0,A=1.0)",
						"MobileClearDepthBetweenDPG=False",
						"MobileSceneDepthResolveForShadows=TRUE",
						"MobileLandscapeLodBias=0",
						"MobileUseShaderGroupForStartupObjects=FALSE",
						"MobileMinimizeFogShaders=FALSE",
						"MobileFXAAQuality=0",
						"ApexLODResourceBudget=1000000000000000000000.0",
						"ApexDestructionMaxChunkIslandCount=2500",
						"ApexDestructionMaxShapeCount=0",
						"ApexDestructionMaxChunkSeparationLOD=1.0",
						"ApexDestructionMaxActorCreatesPerFrame=-1",
						"ApexDestructionMaxFracturesProcessedPerFrame=-1",
						"ApexDestructionSortByBenefit=True",
						"ApexGRBEnable=false",
						"ApexGRBGPUMemSceneSize=128",
						"ApexGRBGPUMemTempDataSize=128",
						"ApexGRBMeshCellSize=7.5",
						"ApexGRBNonPenSolverPosIterCount=9;",
						"ApexGRBFrictionSolverPosIterCount=3;",
						"ApexGRBFrictionSolverVelIterCount=3;",
						"ApexGRBSkinWidth=0.025",
						"ApexGRBMaxLinearAcceleration=1000000.0",
						"bEnableParallelAPEXClothingFetch=True",
						"bApexClothingAsyncFetchResults=False",
						"ApexClothingAvgSimFrequencyWindow=60",
						"ApexClothingAllowAsyncCooking=True",
						"ApexClothingAllowApexWorkBetweenSubsteps=FALSE",
						"TEXTUREGROUP_World=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WorldNormalMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WorldSpecular=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Character=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_CharacterNormalMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_CharacterSpecular=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Weapon=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WeaponNormalMap=(MinLODSize=1,MaxLODSize=256,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WeaponSpecular=(MinLODSize=1,MaxLODSize=256,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Vehicle=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_VehicleNormalMap=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_VehicleSpecular=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Cinematic=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Effects=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_EffectsNotFiltered=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Skybox=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_UI=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Lightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Shadowmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,NumStreamedMips=3,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_RenderTarget=(MinLODSize=1,MaxLODSize=2048,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_MobileFlattened=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ProcBuilding_Face=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ProcBuilding_LightMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Terrain_Heightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Terrain_Weightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ImageBasedReflection=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Bokeh=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"FullEffectIntensity=False",
						"bAllowBetterModulatedShadows=FALSE",
						"UncappedFramerate=False",
						"TEXTUREGROUP_ColorLookupTable=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.rocket_league_settingloc, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.rocket_league_settingloc, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600052C RID: 1324 RVA: 0x0013C9B0 File Offset: 0x0013ABB0
		private void RL_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]",
						"UseDirectSound=True",
						"StaticDecals=False",
						"DynamicDecals=False",
						"UnbatchedDecals=True",
						"DecalCullDistanceScale=0.500000",
						"DynamicLights=False",
						"DynamicShadows=False",
						"LightEnvironmentShadows=False",
						"CompositeDynamicLights=True",
						"SHSecondaryLighting=True",
						"DirectionalLightmaps=True",
						"MotionBlur=False",
						"MotionBlurPause=True",
						"MotionBlurSkinning=1",
						"DepthOfField=False",
						"AmbientOcclusion=False",
						"Bloom=False",
						"bAllowLightShafts=False",
						"Distortion=False",
						"FilteredDistortion=False",
						"DropParticleDistortion=False",
						"bAllowDownsampledTranslucency=False",
						"SpeedTreeLeaves=False",
						"SpeedTreeFronds=False",
						"OnlyStreamInTextures=False",
						"LensFlares=False",
						"FogVolumes=False",
						"FloatingPointRenderTargets=True",
						"OneFrameThreadLag=True",
						"WaitForGPU=false",
						"UseVsync=False",
						"CustomFPS=0",
						"UpscaleScreenPercentage=True",
						"UpscaleTargetFramerateDocked=60.000000",
						"UpscaleTargetFramerateUndocked=60.000000",
						"MinimumScreenScale=100.000000",
						"AllowDynamicResolution=False",
						"ZCullSaveRestore=False",
						"AdaptiveZcull=False",
						"BinnerTileCache=False",
						"BinnerTileResX=64",
						"BinnerTileResY=64",
						"Fullscreen=True",
						"AllowOpenGL=False",
						"AllowRadialBlur=True",
						"AllowSubsurfaceScattering=False",
						"AllowImageReflections=False",
						"AllowImageReflectionShadowing=False",
						"bAllowSeparateTranslucency=False",
						"bAllowPostprocessMLAA=False",
						"bAllowHighQualityMaterials=False",
						"bUseTranslucentArenaShaders=False",
						"MaxFilterBlurSampleCount=16",
						"SkeletalMeshLODBias=0",
						"ParticleLODBias=1",
						"DetailMode=0",
						"MaxDrawDistanceScale=1",
						"ShadowFilterQualityBias=0",
						"MaxAnisotropy=4",
						"MaxMultiSamples=1",
						"bAllowD3D9MSAA=False",
						"bAllowTemporalAA=False",
						"TemporalAA_MinDepth=500.000000",
						"TemporalAA_StartDepthVelocityScale=100.000000",
						"MinShadowResolution=64",
						"MinPreShadowResolution=8",
						"MaxShadowResolution=1120",
						"MobileShadowTextureResolution=1120",
						"MaxWholeSceneDominantShadowResolution=1344",
						"ShadowFadeResolution=32",
						"PreShadowFadeResolution=16",
						"ShadowFadeExponent=0.250000",
						"ResX=" + this.DefaultWidth,
						"ResY=" + this.DefaultHeight,
						"AutoDetectDesktopResolution=False",
						"Borderless=False",
						"AllowApexCloth=false",
						"ScreenPercentage=85.000000",
						"SceneCaptureStreamingMultiplier=1.000000",
						"ShadowTexelsPerPixel=1.273240",
						"PreShadowResolutionFactor=0.500000",
						"bEnableBranchingPCFShadows=False",
						"bAllowHardwareShadowFiltering=False",
						"TessellationAdaptivePixelsPerTriangle=48.000000",
						"bEnableForegroundShadowsOnWorld=True",
						"bEnableForegroundSelfShadowing=False",
						"bAllowWholeSceneDominantShadows=True",
						"bUseConservativeShadowBounds=False",
						"ShadowFilterRadius=2.000000",
						"ShadowDepthBias=0.012000",
						"PerObjectShadowTransition=60.000000",
						"PerSceneShadowTransition=600.000000",
						"CSMSplitPenumbraScale=0.500000",
						"CSMSplitSoftTransitionDistanceScale=4.000000",
						"CSMSplitDepthBiasScale=0.500000",
						"CSMMinimumFOV=40.000000",
						"CSMFOVRoundFactor=4.000000",
						"UnbuiltWholeSceneDynamicShadowRadius=20000.000000",
						"UnbuiltNumWholeSceneDynamicShadowCascades=3",
						"WholeSceneShadowUnbuiltInteractionThreshold=50",
						"bAllowFracturedDamage=True",
						"NumFracturedPartsScale=1.000000",
						"FractureDirectSpawnChanceScale=1.000000",
						"FractureRadialSpawnChanceScale=1.000000",
						"FractureCullDistanceScale=1.000000",
						"bForceCPUAccessToGPUSkinVerts=false",
						"bDisableSkeletalInstanceWeights=false",
						"HighPrecisionGBuffers=False",
						"AllowSecondaryDisplays=False",
						"SecondaryDisplayMaximumWidth=1280",
						"SecondaryDisplayMaximumHeight=720",
						"AllowPerFrameSleep=False",
						"AllowPerFrameYield=True",
						"MobileFeatureLevel=0",
						"MobileFog=True",
						"MobileHeightFog=False",
						"MobileSpecular=True",
						"MobileBumpOffset=True",
						"MobileNormalMapping=True",
						"MobileEnvMapping=True",
						"MobileRimLighting=True",
						"MobileColorBlending=True",
						"MobileColorGrading=False",
						"MobileVertexMovement=True",
						"MobileOcclusionQueries=False",
						"MobileGlobalGammaCorrection=False",
						"MobileAllowGammaCorrectionWorldOverride=False",
						"MobileAllowDepthPrePass=False",
						"MobileGfxGammaCorrection=False",
						"MobileLODBias=-0.5",
						"MobileBoneCount=75",
						"MobileBoneWeightCount=2",
						"MobileUsePreprocessedShaders=True",
						"MobileFlashRedForUncachedShaders=False",
						"MobileWarmUpPreprocessedShaders=True",
						"MobileCachePreprocessedShaders=False",
						"MobileProfilePreprocessedShaders=False",
						"MobileUseCPreprocessorOnShaders=True",
						"MobileLoadCPreprocessedShaders=True",
						"MobileSharePixelShaders=True",
						"MobileShareVertexShaders=True",
						"MobileShareShaderPrograms=True",
						"MobileEnableMSAA=False",
						"MobileContentScaleFactor=1.0",
						"MobileVertexScratchBufferSize=150",
						"MobileIndexScratchBufferSize=10",
						"MobileLightShaftScale=2.0",
						"MobileLightShaftFirstPass=0.5",
						"MobileLightShaftSecondPass=1.0",
						"MobileModShadows=True",
						"MobileTiltShift=False",
						"MobileMaxMemory=300",
						"MobilePostProcessBlurAmount=32.0",
						"bMobileUsingHighResolutionTiming=True",
						"MobileTiltShiftPosition=0.5",
						"MobileTiltShiftFocusWidth=0.3",
						"MobileTiltShiftTransitionWidth=0.5",
						"MobileMaxShadowRange=500.0",
						"MobileBloomTint=(R=1.0,G=0.75,B=0.0,A=1.0)",
						"MobileClearDepthBetweenDPG=False",
						"MobileSceneDepthResolveForShadows=TRUE",
						"MobileLandscapeLodBias=0",
						"MobileUseShaderGroupForStartupObjects=FALSE",
						"MobileMinimizeFogShaders=FALSE",
						"MobileFXAAQuality=0",
						"ApexLODResourceBudget=1000000000000000000000.0",
						"ApexDestructionMaxChunkIslandCount=2500",
						"ApexDestructionMaxShapeCount=0",
						"ApexDestructionMaxChunkSeparationLOD=1.0",
						"ApexDestructionMaxActorCreatesPerFrame=-1",
						"ApexDestructionMaxFracturesProcessedPerFrame=-1",
						"ApexDestructionSortByBenefit=True",
						"ApexGRBEnable=false",
						"ApexGRBGPUMemSceneSize=128",
						"ApexGRBGPUMemTempDataSize=128",
						"ApexGRBMeshCellSize=7.5",
						"ApexGRBNonPenSolverPosIterCount=9;",
						"ApexGRBFrictionSolverPosIterCount=3;",
						"ApexGRBFrictionSolverVelIterCount=3;",
						"ApexGRBSkinWidth=0.025",
						"ApexGRBMaxLinearAcceleration=1000000.0",
						"bEnableParallelAPEXClothingFetch=True",
						"bApexClothingAsyncFetchResults=False",
						"ApexClothingAvgSimFrequencyWindow=60",
						"ApexClothingAllowAsyncCooking=True",
						"ApexClothingAllowApexWorkBetweenSubsteps=FALSE",
						"TEXTUREGROUP_World=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WorldNormalMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WorldSpecular=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Character=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_CharacterNormalMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_CharacterSpecular=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Weapon=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WeaponNormalMap=(MinLODSize=1,MaxLODSize=256,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_WeaponSpecular=(MinLODSize=1,MaxLODSize=256,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Vehicle=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_VehicleNormalMap=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_VehicleSpecular=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Cinematic=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Effects=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_EffectsNotFiltered=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Skybox=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_UI=(MinLODSize=1,MaxLODSize=1024,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Lightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Shadowmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,NumStreamedMips=3,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_RenderTarget=(MinLODSize=1,MaxLODSize=2048,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_MobileFlattened=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ProcBuilding_Face=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ProcBuilding_LightMap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Terrain_Heightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Terrain_Weightmap=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_ImageBasedReflection=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"TEXTUREGROUP_Bokeh=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						"FullEffectIntensity=False",
						"bAllowBetterModulatedShadows=FALSE",
						"UncappedFramerate=False",
						"TEXTUREGROUP_ColorLookupTable=(MinLODSize=1,MaxLODSize=512,LODBias=0,MinMagFilter=Aniso,MipFilter=Point,MipGenSettings=TMGS_SimpleAverage)",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.rocket_league_settingloc, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.rocket_league_settingloc, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600052D RID: 1325 RVA: 0x0013D4B0 File Offset: 0x0013B6B0
		private void SOT_g()
		{
			int num = 0;
			for (;;)
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=60",
						"sg.ViewDistanceQuality=1",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"",
						"[/Script/Athena.AthenaGameUserSettings]",
						"MaxVerticalResolution=" + this.DefaultHeight,
						"MaxFPS=0",
						"VSync=0",
						"LightingDetail=0",
						"ModelDetail=0",
						"ShadowDetail=0",
						"TextureDetail=0",
						"WaterDetail=0",
						"AnimationQuality=0",
						"MMCThresholdScale=0",
						"ResolutionScaling=60.000000",
						"ParticleEmitterQuality=0",
						"ParticleResolutionQuality=0",
						"BackBufferCount=2",
						"ShowPerformanceCounters=0",
						"SmoothFPS=True",
						"HDR=True",
						"AudioOutputSpatialAudio=False",
						"Fullscreen=True",
						"bUseVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"PreferredFullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 3)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num != 5)
				{
					goto IL_412;
				}
				bool flag;
				if (flag)
				{
					num = 6;
					goto IL_412;
				}
				goto IL_45A;
				IL_47A:
				if (num == 13)
				{
					this.get_own_SOT();
					num = 14;
				}
				string text3;
				if (num == 15)
				{
					File.WriteAllText(this.seaofthieves_first, text3);
					num = 16;
				}
				if (num == 16)
				{
					File.WriteAllText(this.seaofthieves_second, text2);
					num = 17;
				}
				if (num == 14)
				{
					File.WriteAllText(this.seaofthieves_main, text);
					num = 15;
				}
				bool flag2;
				if (num == 12)
				{
					if (!flag2)
					{
						break;
					}
					num = 13;
				}
				if (num == 10)
				{
					break;
				}
				if (num == 8)
				{
					File.WriteAllText(this.MS_seaofthieves_first, text3);
					num = 9;
				}
				if (num == 6)
				{
					this.get_own_MS_SOT();
					num = 7;
				}
				if (num == 4)
				{
					flag = this.grpbox.Text == "Sea of Thieves (Microsoft Store)";
					num = 5;
				}
				if (num == 2)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=40", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
				if (num == 17)
				{
					break;
				}
				continue;
				IL_412:
				if (num == 7)
				{
					File.WriteAllText(this.MS_seaofthieves_main, text);
					num = 8;
				}
				if (num == 9)
				{
					File.WriteAllText(this.MS_seaofthieves_second, text2);
					num = 10;
				}
				if (num != 11)
				{
					goto IL_47A;
				}
				IL_45A:
				flag2 = this.grpbox.Text == "Sea of Thieves (Steam)";
				num = 12;
				goto IL_47A;
			}
		}

		// Token: 0x0600052E RID: 1326 RVA: 0x0013DD9C File Offset: 0x0013BF9C
		private void SOT_f()
		{
			int num = 0;
			for (;;)
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=70",
						"sg.ViewDistanceQuality=1",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"",
						"[/Script/Athena.AthenaGameUserSettings]",
						"MaxVerticalResolution=" + this.DefaultHeight,
						"MaxFPS=0",
						"VSync=0",
						"LightingDetail=0",
						"ModelDetail=0",
						"ShadowDetail=0",
						"TextureDetail=0",
						"WaterDetail=0",
						"AnimationQuality=0",
						"MMCThresholdScale=0",
						"ResolutionScaling=70.000000",
						"ParticleEmitterQuality=0",
						"ParticleResolutionQuality=0",
						"BackBufferCount=2",
						"ShowPerformanceCounters=0",
						"SmoothFPS=True",
						"HDR=True",
						"AudioOutputSpatialAudio=False",
						"Fullscreen=True",
						"bUseVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"PreferredFullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 3)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num != 5)
				{
					goto IL_412;
				}
				bool flag;
				if (flag)
				{
					num = 6;
					goto IL_412;
				}
				goto IL_45A;
				IL_47A:
				if (num == 13)
				{
					this.get_own_SOT();
					num = 14;
				}
				string text3;
				if (num == 15)
				{
					File.WriteAllText(this.seaofthieves_first, text3);
					num = 16;
				}
				if (num == 16)
				{
					File.WriteAllText(this.seaofthieves_second, text2);
					num = 17;
				}
				if (num == 14)
				{
					File.WriteAllText(this.seaofthieves_main, text);
					num = 15;
				}
				bool flag2;
				if (num == 12)
				{
					if (!flag2)
					{
						break;
					}
					num = 13;
				}
				if (num == 10)
				{
					break;
				}
				if (num == 8)
				{
					File.WriteAllText(this.MS_seaofthieves_first, text3);
					num = 9;
				}
				if (num == 6)
				{
					this.get_own_MS_SOT();
					num = 7;
				}
				if (num == 4)
				{
					flag = this.grpbox.Text == "Sea of Thieves (Microsoft Store)";
					num = 5;
				}
				if (num == 2)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=50", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
				if (num == 17)
				{
					break;
				}
				continue;
				IL_412:
				if (num == 7)
				{
					File.WriteAllText(this.MS_seaofthieves_main, text);
					num = 8;
				}
				if (num == 9)
				{
					File.WriteAllText(this.MS_seaofthieves_second, text2);
					num = 10;
				}
				if (num != 11)
				{
					goto IL_47A;
				}
				IL_45A:
				flag2 = this.grpbox.Text == "Sea of Thieves (Steam)";
				num = 12;
				goto IL_47A;
			}
		}

		// Token: 0x0600052F RID: 1327 RVA: 0x0013E688 File Offset: 0x0013C888
		private void SOT_d()
		{
			int num = 0;
			for (;;)
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=80",
						"sg.ViewDistanceQuality=1",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"",
						"[/Script/Athena.AthenaGameUserSettings]",
						"MaxVerticalResolution=" + this.DefaultHeight,
						"MaxFPS=0",
						"VSync=0",
						"LightingDetail=0",
						"ModelDetail=0",
						"ShadowDetail=0",
						"TextureDetail=0",
						"WaterDetail=0",
						"AnimationQuality=0",
						"MMCThresholdScale=0",
						"ResolutionScaling=80.000000",
						"ParticleEmitterQuality=0",
						"ParticleResolutionQuality=0",
						"BackBufferCount=2",
						"ShowPerformanceCounters=0",
						"SmoothFPS=True",
						"HDR=True",
						"AudioOutputSpatialAudio=False",
						"Fullscreen=True",
						"bUseVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"PreferredFullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 3)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num != 5)
				{
					goto IL_412;
				}
				bool flag;
				if (flag)
				{
					num = 6;
					goto IL_412;
				}
				goto IL_45A;
				IL_47A:
				if (num == 13)
				{
					this.get_own_SOT();
					num = 14;
				}
				string text3;
				if (num == 15)
				{
					File.WriteAllText(this.seaofthieves_first, text3);
					num = 16;
				}
				if (num == 16)
				{
					File.WriteAllText(this.seaofthieves_second, text2);
					num = 17;
				}
				if (num == 14)
				{
					File.WriteAllText(this.seaofthieves_main, text);
					num = 15;
				}
				bool flag2;
				if (num == 12)
				{
					if (!flag2)
					{
						break;
					}
					num = 13;
				}
				if (num == 10)
				{
					break;
				}
				if (num == 8)
				{
					File.WriteAllText(this.MS_seaofthieves_first, text3);
					num = 9;
				}
				if (num == 6)
				{
					this.get_own_MS_SOT();
					num = 7;
				}
				if (num == 4)
				{
					flag = this.grpbox.Text == "Sea of Thieves (Microsoft Store)";
					num = 5;
				}
				if (num == 2)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=70", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
				if (num == 17)
				{
					break;
				}
				continue;
				IL_412:
				if (num == 7)
				{
					File.WriteAllText(this.MS_seaofthieves_main, text);
					num = 8;
				}
				if (num == 9)
				{
					File.WriteAllText(this.MS_seaofthieves_second, text2);
					num = 10;
				}
				if (num != 11)
				{
					goto IL_47A;
				}
				IL_45A:
				flag2 = this.grpbox.Text == "Sea of Thieves (Steam)";
				num = 12;
				goto IL_47A;
			}
		}

		// Token: 0x06000530 RID: 1328 RVA: 0x0013EF74 File Offset: 0x0013D174
		private void SOT_c()
		{
			int num = 0;
			for (;;)
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=90",
						"sg.ViewDistanceQuality=1",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"",
						"[/Script/Athena.AthenaGameUserSettings]",
						"MaxVerticalResolution=" + this.DefaultHeight,
						"MaxFPS=0",
						"VSync=0",
						"LightingDetail=0",
						"ModelDetail=0",
						"ShadowDetail=0",
						"TextureDetail=0",
						"WaterDetail=0",
						"AnimationQuality=0",
						"MMCThresholdScale=0",
						"ResolutionScaling=90.000000",
						"ParticleEmitterQuality=0",
						"ParticleResolutionQuality=0",
						"BackBufferCount=2",
						"ShowPerformanceCounters=0",
						"SmoothFPS=True",
						"HDR=True",
						"AudioOutputSpatialAudio=False",
						"Fullscreen=True",
						"bUseVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"PreferredFullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 3)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num != 5)
				{
					goto IL_412;
				}
				bool flag;
				if (flag)
				{
					num = 6;
					goto IL_412;
				}
				goto IL_45A;
				IL_47A:
				if (num == 13)
				{
					this.get_own_SOT();
					num = 14;
				}
				string text3;
				if (num == 15)
				{
					File.WriteAllText(this.seaofthieves_first, text3);
					num = 16;
				}
				if (num == 16)
				{
					File.WriteAllText(this.seaofthieves_second, text2);
					num = 17;
				}
				if (num == 14)
				{
					File.WriteAllText(this.seaofthieves_main, text);
					num = 15;
				}
				bool flag2;
				if (num == 12)
				{
					if (!flag2)
					{
						break;
					}
					num = 13;
				}
				if (num == 10)
				{
					break;
				}
				if (num == 8)
				{
					File.WriteAllText(this.MS_seaofthieves_first, text3);
					num = 9;
				}
				if (num == 6)
				{
					this.get_own_MS_SOT();
					num = 7;
				}
				if (num == 4)
				{
					flag = this.grpbox.Text == "Sea of Thieves (Microsoft Store)";
					num = 5;
				}
				if (num == 2)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=80", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
				if (num == 17)
				{
					break;
				}
				continue;
				IL_412:
				if (num == 7)
				{
					File.WriteAllText(this.MS_seaofthieves_main, text);
					num = 8;
				}
				if (num == 9)
				{
					File.WriteAllText(this.MS_seaofthieves_second, text2);
					num = 10;
				}
				if (num != 11)
				{
					goto IL_47A;
				}
				IL_45A:
				flag2 = this.grpbox.Text == "Sea of Thieves (Steam)";
				num = 12;
				goto IL_47A;
			}
		}

		// Token: 0x06000531 RID: 1329 RVA: 0x0013F860 File Offset: 0x0013DA60
		private void SOT_b()
		{
			int num = 0;
			for (;;)
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=95",
						"sg.ViewDistanceQuality=1",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"",
						"[/Script/Athena.AthenaGameUserSettings]",
						"MaxVerticalResolution=" + this.DefaultHeight,
						"MaxFPS=0",
						"VSync=0",
						"LightingDetail=0",
						"ModelDetail=0",
						"ShadowDetail=0",
						"TextureDetail=0",
						"WaterDetail=0",
						"AnimationQuality=0",
						"MMCThresholdScale=0",
						"ResolutionScaling=95.000000",
						"ParticleEmitterQuality=0",
						"ParticleResolutionQuality=0",
						"BackBufferCount=2",
						"ShowPerformanceCounters=0",
						"SmoothFPS=True",
						"HDR=True",
						"AudioOutputSpatialAudio=False",
						"Fullscreen=True",
						"bUseVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"PreferredFullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 3)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num != 5)
				{
					goto IL_412;
				}
				bool flag;
				if (flag)
				{
					num = 6;
					goto IL_412;
				}
				goto IL_45A;
				IL_47A:
				if (num == 13)
				{
					this.get_own_SOT();
					num = 14;
				}
				string text3;
				if (num == 15)
				{
					File.WriteAllText(this.seaofthieves_first, text3);
					num = 16;
				}
				if (num == 16)
				{
					File.WriteAllText(this.seaofthieves_second, text2);
					num = 17;
				}
				if (num == 14)
				{
					File.WriteAllText(this.seaofthieves_main, text);
					num = 15;
				}
				bool flag2;
				if (num == 12)
				{
					if (!flag2)
					{
						break;
					}
					num = 13;
				}
				if (num == 10)
				{
					break;
				}
				if (num == 8)
				{
					File.WriteAllText(this.MS_seaofthieves_first, text3);
					num = 9;
				}
				if (num == 6)
				{
					this.get_own_MS_SOT();
					num = 7;
				}
				if (num == 4)
				{
					flag = this.grpbox.Text == "Sea of Thieves (Microsoft Store)";
					num = 5;
				}
				if (num == 2)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=85", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
				if (num == 17)
				{
					break;
				}
				continue;
				IL_412:
				if (num == 7)
				{
					File.WriteAllText(this.MS_seaofthieves_main, text);
					num = 8;
				}
				if (num == 9)
				{
					File.WriteAllText(this.MS_seaofthieves_second, text2);
					num = 10;
				}
				if (num != 11)
				{
					goto IL_47A;
				}
				IL_45A:
				flag2 = this.grpbox.Text == "Sea of Thieves (Steam)";
				num = 12;
				goto IL_47A;
			}
		}

		// Token: 0x06000532 RID: 1330 RVA: 0x0014014C File Offset: 0x0013E34C
		private void SOT_a()
		{
			int num = 0;
			for (;;)
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=100",
						"sg.ViewDistanceQuality=1",
						"sg.AntiAliasingQuality=2",
						"sg.ShadowQuality=0",
						"sg.PostProcessQuality=0",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=0",
						"",
						"[/Script/Athena.AthenaGameUserSettings]",
						"MaxVerticalResolution=" + this.DefaultHeight,
						"MaxFPS=0",
						"VSync=0",
						"LightingDetail=0",
						"ModelDetail=0",
						"ShadowDetail=0",
						"TextureDetail=0",
						"WaterDetail=0",
						"AnimationQuality=0",
						"MMCThresholdScale=0",
						"ResolutionScaling=100.000000",
						"ParticleEmitterQuality=0",
						"ParticleResolutionQuality=0",
						"BackBufferCount=2",
						"ShowPerformanceCounters=0",
						"SmoothFPS=True",
						"HDR=True",
						"AudioOutputSpatialAudio=False",
						"Fullscreen=True",
						"bUseVSync=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"bUseDesktopResolutionForFullscreen=False",
						"FullscreenMode=0",
						"PreferredFullscreenMode=0",
						"LastConfirmedFullscreenMode=0",
						"Version=5",
						"AudioQualityLevel=0",
						""
					});
					num = 2;
				}
				string text2;
				if (num == 3)
				{
					text2 = string.Join(Environment.NewLine, new string[]
					{
						"[ShadowQuality@0]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@1]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0",
						"r.Shadow.MaxResolution=0", "", "[ShadowQuality@2]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@3]", "r.LightFunctionQuality=0",
						"r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "", "[ShadowQuality@Cine]", "r.LightFunctionQuality=0", "r.ShadowQuality=0", "r.Shadow.CSM.MaxCascades=0", "r.Shadow.MaxResolution=0", "",
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num != 5)
				{
					goto IL_412;
				}
				bool flag;
				if (flag)
				{
					num = 6;
					goto IL_412;
				}
				goto IL_45A;
				IL_47A:
				if (num == 13)
				{
					this.get_own_SOT();
					num = 14;
				}
				string text3;
				if (num == 15)
				{
					File.WriteAllText(this.seaofthieves_first, text3);
					num = 16;
				}
				if (num == 16)
				{
					File.WriteAllText(this.seaofthieves_second, text2);
					num = 17;
				}
				if (num == 14)
				{
					File.WriteAllText(this.seaofthieves_main, text);
					num = 15;
				}
				bool flag2;
				if (num == 12)
				{
					if (!flag2)
					{
						break;
					}
					num = 13;
				}
				if (num == 10)
				{
					break;
				}
				if (num == 8)
				{
					File.WriteAllText(this.MS_seaofthieves_first, text3);
					num = 9;
				}
				if (num == 6)
				{
					this.get_own_MS_SOT();
					num = 7;
				}
				if (num == 4)
				{
					flag = this.grpbox.Text == "Sea of Thieves (Microsoft Store)";
					num = 5;
				}
				if (num == 2)
				{
					text3 = string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=90", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
				if (num == 17)
				{
					break;
				}
				continue;
				IL_412:
				if (num == 7)
				{
					File.WriteAllText(this.MS_seaofthieves_main, text);
					num = 8;
				}
				if (num == 9)
				{
					File.WriteAllText(this.MS_seaofthieves_second, text2);
					num = 10;
				}
				if (num != 11)
				{
					goto IL_47A;
				}
				IL_45A:
				flag2 = this.grpbox.Text == "Sea of Thieves (Steam)";
				num = 12;
				goto IL_47A;
			}
		}

		// Token: 0x06000533 RID: 1331 RVA: 0x00140A38 File Offset: 0x0013EC38
		private void SSDT_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-16\" ?>",
						"<config><ScreenMode>FULLSCREEN</ScreenMode>",
						"<Resolution-WindowScreenWidth>" + this.DefaultWidth + "</Resolution-WindowScreenWidth>",
						"<Resolution-WindowScreenHeight>" + this.DefaultHeight + "</Resolution-WindowScreenHeight>",
						"<Resolution-FullScreenWidth>" + this.DefaultWidth + "</Resolution-FullScreenWidth>",
						"<Resolution-FullScreenHeight>" + this.DefaultHeight + "</Resolution-FullScreenHeight>",
						"<Auto-detectBestRenderingSettings>OFF</Auto-detectBestRenderingSettings>",
						"<QualitySetting>CUSTOM</QualitySetting>",
						"<TextureQuality>LOW</TextureQuality>",
						"<Antialiasing>OFF</Antialiasing>",
						"<SSAO>DISABLE</SSAO>",
						"<DepthOfField>DISABLE</DepthOfField>",
						"<MotionBlur>DISABLE</MotionBlur>",
						"<ShadowQuality>LOW</ShadowQuality>",
						"<LightingQuality>LOW</LightingQuality>",
						"<EffectsQuality>LOW</EffectsQuality>",
						"<ReflectionQuality>DISABLE</ReflectionQuality>",
						"<WaterSurfaceQuality>DISABLE</WaterSurfaceQuality>",
						"<ShadeQuality>DISABLE</ShadeQuality>",
						"<LodQuality>DISABLE</LodQuality>",
						"<VolumetricEffectQuality>DISABLE</VolumetricEffectQuality>",
						"</config>",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.sekiro_xml, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.sekiro_xml, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000534 RID: 1332 RVA: 0x00140A38 File Offset: 0x0013EC38
		private void SSDT_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-16\" ?>",
						"<config><ScreenMode>FULLSCREEN</ScreenMode>",
						"<Resolution-WindowScreenWidth>" + this.DefaultWidth + "</Resolution-WindowScreenWidth>",
						"<Resolution-WindowScreenHeight>" + this.DefaultHeight + "</Resolution-WindowScreenHeight>",
						"<Resolution-FullScreenWidth>" + this.DefaultWidth + "</Resolution-FullScreenWidth>",
						"<Resolution-FullScreenHeight>" + this.DefaultHeight + "</Resolution-FullScreenHeight>",
						"<Auto-detectBestRenderingSettings>OFF</Auto-detectBestRenderingSettings>",
						"<QualitySetting>CUSTOM</QualitySetting>",
						"<TextureQuality>LOW</TextureQuality>",
						"<Antialiasing>OFF</Antialiasing>",
						"<SSAO>DISABLE</SSAO>",
						"<DepthOfField>DISABLE</DepthOfField>",
						"<MotionBlur>DISABLE</MotionBlur>",
						"<ShadowQuality>LOW</ShadowQuality>",
						"<LightingQuality>LOW</LightingQuality>",
						"<EffectsQuality>LOW</EffectsQuality>",
						"<ReflectionQuality>DISABLE</ReflectionQuality>",
						"<WaterSurfaceQuality>DISABLE</WaterSurfaceQuality>",
						"<ShadeQuality>DISABLE</ShadeQuality>",
						"<LodQuality>DISABLE</LodQuality>",
						"<VolumetricEffectQuality>DISABLE</VolumetricEffectQuality>",
						"</config>",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.sekiro_xml, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.sekiro_xml, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000535 RID: 1333 RVA: 0x00140C38 File Offset: 0x0013EE38
		private void SSDT_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-16\" ?>",
						"<config><ScreenMode>FULLSCREEN</ScreenMode>",
						"<Resolution-WindowScreenWidth>" + this.DefaultWidth + "</Resolution-WindowScreenWidth>",
						"<Resolution-WindowScreenHeight>" + this.DefaultHeight + "</Resolution-WindowScreenHeight>",
						"<Resolution-FullScreenWidth>" + this.DefaultWidth + "</Resolution-FullScreenWidth>",
						"<Resolution-FullScreenHeight>" + this.DefaultHeight + "</Resolution-FullScreenHeight>",
						"<Auto-detectBestRenderingSettings>OFF</Auto-detectBestRenderingSettings>",
						"<QualitySetting>CUSTOM</QualitySetting>",
						"<TextureQuality>LOW</TextureQuality>",
						"<Antialiasing>OFF</Antialiasing>",
						"<SSAO>DISABLE</SSAO>",
						"<DepthOfField>DISABLE</DepthOfField>",
						"<MotionBlur>DISABLE</MotionBlur>",
						"<ShadowQuality>LOW</ShadowQuality>",
						"<LightingQuality>LOW</LightingQuality>",
						"<EffectsQuality>LOW</EffectsQuality>",
						"<ReflectionQuality>DISABLE</ReflectionQuality>",
						"<WaterSurfaceQuality>DISABLE</WaterSurfaceQuality>",
						"<ShadeQuality>DISABLE</ShadeQuality>",
						"<LodQuality>LOW</LodQuality>",
						"<VolumetricEffectQuality>DISABLE</VolumetricEffectQuality>",
						"</config>",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.sekiro_xml, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.sekiro_xml, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000536 RID: 1334 RVA: 0x00140E38 File Offset: 0x0013F038
		private void SSDT_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-16\" ?>",
						"<config><ScreenMode>FULLSCREEN</ScreenMode>",
						"<Resolution-WindowScreenWidth>" + this.DefaultWidth + "</Resolution-WindowScreenWidth>",
						"<Resolution-WindowScreenHeight>" + this.DefaultHeight + "</Resolution-WindowScreenHeight>",
						"<Resolution-FullScreenWidth>" + this.DefaultWidth + "</Resolution-FullScreenWidth>",
						"<Resolution-FullScreenHeight>" + this.DefaultHeight + "</Resolution-FullScreenHeight>",
						"<Auto-detectBestRenderingSettings>OFF</Auto-detectBestRenderingSettings>",
						"<QualitySetting>CUSTOM</QualitySetting>",
						"<TextureQuality>MEDIUM</TextureQuality>",
						"<Antialiasing>OFF</Antialiasing>",
						"<SSAO>DISABLE</SSAO>",
						"<DepthOfField>DISABLE</DepthOfField>",
						"<MotionBlur>DISABLE</MotionBlur>",
						"<ShadowQuality>LOW</ShadowQuality>",
						"<LightingQuality>LOW</LightingQuality>",
						"<EffectsQuality>LOW</EffectsQuality>",
						"<ReflectionQuality>DISABLE</ReflectionQuality>",
						"<WaterSurfaceQuality>DISABLE</WaterSurfaceQuality>",
						"<ShadeQuality>LOW</ShadeQuality>",
						"<LodQuality>LOW</LodQuality>",
						"<VolumetricEffectQuality>DISABLE</VolumetricEffectQuality>",
						"</config>",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.sekiro_xml, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.sekiro_xml, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000537 RID: 1335 RVA: 0x00141038 File Offset: 0x0013F238
		private void SSDT_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-16\" ?>",
						"<config><ScreenMode>FULLSCREEN</ScreenMode>",
						"<Resolution-WindowScreenWidth>" + this.DefaultWidth + "</Resolution-WindowScreenWidth>",
						"<Resolution-WindowScreenHeight>" + this.DefaultHeight + "</Resolution-WindowScreenHeight>",
						"<Resolution-FullScreenWidth>" + this.DefaultWidth + "</Resolution-FullScreenWidth>",
						"<Resolution-FullScreenHeight>" + this.DefaultHeight + "</Resolution-FullScreenHeight>",
						"<Auto-detectBestRenderingSettings>OFF</Auto-detectBestRenderingSettings>",
						"<QualitySetting>CUSTOM</QualitySetting>",
						"<TextureQuality>HIGH</TextureQuality>",
						"<Antialiasing>OFF</Antialiasing>",
						"<SSAO>DISABLE</SSAO>",
						"<DepthOfField>DISABLE</DepthOfField>",
						"<MotionBlur>DISABLE</MotionBlur>",
						"<ShadowQuality>LOW</ShadowQuality>",
						"<LightingQuality>LOW</LightingQuality>",
						"<EffectsQuality>LOW</EffectsQuality>",
						"<ReflectionQuality>DISABLE</ReflectionQuality>",
						"<WaterSurfaceQuality>DISABLE</WaterSurfaceQuality>",
						"<ShadeQuality>LOW</ShadeQuality>",
						"<LodQuality>LOW</LodQuality>",
						"<VolumetricEffectQuality>LOW</VolumetricEffectQuality>",
						"</config>",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.sekiro_xml, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.sekiro_xml, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000538 RID: 1336 RVA: 0x00141238 File Offset: 0x0013F438
		private void SSDT_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"<?xml version=\"1.0\" encoding=\"UTF-16\" ?>",
						"<config><ScreenMode>FULLSCREEN</ScreenMode>",
						"<Resolution-WindowScreenWidth>" + this.DefaultWidth + "</Resolution-WindowScreenWidth>",
						"<Resolution-WindowScreenHeight>" + this.DefaultHeight + "</Resolution-WindowScreenHeight>",
						"<Resolution-FullScreenWidth>" + this.DefaultWidth + "</Resolution-FullScreenWidth>",
						"<Resolution-FullScreenHeight>" + this.DefaultHeight + "</Resolution-FullScreenHeight>",
						"<Auto-detectBestRenderingSettings>OFF</Auto-detectBestRenderingSettings>",
						"<QualitySetting>CUSTOM</QualitySetting>",
						"<TextureQuality>HIGH</TextureQuality>",
						"<Antialiasing>ON</Antialiasing>",
						"<SSAO>DISABLE</SSAO>",
						"<DepthOfField>DISABLE</DepthOfField>",
						"<MotionBlur>DISABLE</MotionBlur>",
						"<ShadowQuality>LOW</ShadowQuality>",
						"<LightingQuality>LOW</LightingQuality>",
						"<EffectsQuality>LOW</EffectsQuality>",
						"<ReflectionQuality>DISABLE</ReflectionQuality>",
						"<WaterSurfaceQuality>DISABLE</WaterSurfaceQuality>",
						"<ShadeQuality>LOW</ShadeQuality>",
						"<LodQuality>LOW</LodQuality>",
						"<VolumetricEffectQuality>LOW</VolumetricEffectQuality>",
						"</config>",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.sekiro_xml, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.sekiro_xml, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000539 RID: 1337 RVA: 0x00141438 File Offset: 0x0013F638
		private void SOTF_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"{",
						"  \"_settings\": [",
						"    {",
						"      \"Name\": \"Graphics.QualityPreset\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Custom\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AmbientOcclusionQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Off\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ShadowQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Ultra Low\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.FogQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"OFF\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.TerrainParallaxDistance\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.BillboardQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AnisotropicQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"OFF\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ChromaticAberration\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.MotionBlur\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ContactShadows\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ScreenSpaceReflection\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.Bloom\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.MicroShadowing\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.CloudType\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.GrassQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DrawDistance\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Ultra Low\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.WaterQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AntiAlias\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"TAA\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DynamicResUpscale\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Taau\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DynamicResolutionTarget\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"60\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.Dlss\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Performance\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.TextureResolution\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"QUARTER\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.FilmGrain\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Display.Resolution\",",
						"      \"SettingType\": 3,",
						string.Concat(new string[] { "      \"StringValue\": \"", this.DefaultWidth, " x ", this.DefaultHeight, "\"," }),
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Display.Fullscreen\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Exclusive FullScreen\",",
						"      \"FloatArrayValue\": []",
						"    }",
						"  ],",
						"  \"name\": \"SonsGameSettings_customInstance\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.sonsoftheforest, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.sonsoftheforest, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600053A RID: 1338 RVA: 0x00141BCC File Offset: 0x0013FDCC
		private void SOTF_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"{",
						"  \"_settings\": [",
						"    {",
						"      \"Name\": \"Graphics.QualityPreset\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Custom\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AmbientOcclusionQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Off\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ShadowQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Ultra Low\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.FogQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"OFF\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.TerrainParallaxDistance\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.BillboardQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AnisotropicQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"OFF\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ChromaticAberration\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.MotionBlur\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ContactShadows\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ScreenSpaceReflection\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.Bloom\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.MicroShadowing\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.CloudType\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.GrassQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DrawDistance\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Ultra Low\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.WaterQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AntiAlias\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"TAA\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DynamicResUpscale\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Taau\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DynamicResolutionTarget\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"70\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.Dlss\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Performance\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.TextureResolution\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"QUARTER\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.FilmGrain\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Display.Resolution\",",
						"      \"SettingType\": 3,",
						string.Concat(new string[] { "      \"StringValue\": \"", this.DefaultWidth, " x ", this.DefaultHeight, "\"," }),
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Display.Fullscreen\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Exclusive FullScreen\",",
						"      \"FloatArrayValue\": []",
						"    }",
						"  ],",
						"  \"name\": \"SonsGameSettings_customInstance\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.sonsoftheforest, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.sonsoftheforest, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600053B RID: 1339 RVA: 0x00142360 File Offset: 0x00140560
		private void SOTF_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"{",
						"  \"_settings\": [",
						"    {",
						"      \"Name\": \"Graphics.QualityPreset\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Custom\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AmbientOcclusionQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Off\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ShadowQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Ultra Low\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.FogQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"OFF\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.TerrainParallaxDistance\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.BillboardQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AnisotropicQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"OFF\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ChromaticAberration\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.MotionBlur\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ContactShadows\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ScreenSpaceReflection\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.Bloom\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.MicroShadowing\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.CloudType\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.GrassQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DrawDistance\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Ultra Low\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.WaterQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AntiAlias\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"TAA\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DynamicResUpscale\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Taau\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DynamicResolutionTarget\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"80\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.Dlss\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Performance\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.TextureResolution\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"QUARTER\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.FilmGrain\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Display.Resolution\",",
						"      \"SettingType\": 3,",
						string.Concat(new string[] { "      \"StringValue\": \"", this.DefaultWidth, " x ", this.DefaultHeight, "\"," }),
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Display.Fullscreen\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Exclusive FullScreen\",",
						"      \"FloatArrayValue\": []",
						"    }",
						"  ],",
						"  \"name\": \"SonsGameSettings_customInstance\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.sonsoftheforest, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.sonsoftheforest, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600053C RID: 1340 RVA: 0x00142AF4 File Offset: 0x00140CF4
		private void SOTF_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"{",
						"  \"_settings\": [",
						"    {",
						"      \"Name\": \"Graphics.QualityPreset\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Custom\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AmbientOcclusionQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Off\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ShadowQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Ultra Low\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.FogQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"OFF\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.TerrainParallaxDistance\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.BillboardQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AnisotropicQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"OFF\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ChromaticAberration\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.MotionBlur\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ContactShadows\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ScreenSpaceReflection\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.Bloom\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.MicroShadowing\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.CloudType\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.GrassQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DrawDistance\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Ultra Low\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.WaterQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AntiAlias\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"TAA\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DynamicResUpscale\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Taau\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DynamicResolutionTarget\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"90\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.Dlss\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Performance\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.TextureResolution\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"QUARTER\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.FilmGrain\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Display.Resolution\",",
						"      \"SettingType\": 3,",
						string.Concat(new string[] { "      \"StringValue\": \"", this.DefaultWidth, " x ", this.DefaultHeight, "\"," }),
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Display.Fullscreen\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Exclusive FullScreen\",",
						"      \"FloatArrayValue\": []",
						"    }",
						"  ],",
						"  \"name\": \"SonsGameSettings_customInstance\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.sonsoftheforest, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.sonsoftheforest, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600053D RID: 1341 RVA: 0x00143288 File Offset: 0x00141488
		private void SOTF_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"{",
						"  \"_settings\": [",
						"    {",
						"      \"Name\": \"Graphics.QualityPreset\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Custom\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AmbientOcclusionQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Off\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ShadowQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Ultra Low\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.FogQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"OFF\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.TerrainParallaxDistance\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.BillboardQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AnisotropicQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"OFF\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ChromaticAberration\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.MotionBlur\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ContactShadows\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ScreenSpaceReflection\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.Bloom\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.MicroShadowing\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.CloudType\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.GrassQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DrawDistance\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Ultra Low\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.WaterQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AntiAlias\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"TAA\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DynamicResUpscale\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Taau\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DynamicResolutionTarget\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"95\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.Dlss\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Performance\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.TextureResolution\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"QUARTER\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.FilmGrain\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Display.Resolution\",",
						"      \"SettingType\": 3,",
						string.Concat(new string[] { "      \"StringValue\": \"", this.DefaultWidth, " x ", this.DefaultHeight, "\"," }),
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Display.Fullscreen\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Exclusive FullScreen\",",
						"      \"FloatArrayValue\": []",
						"    }",
						"  ],",
						"  \"name\": \"SonsGameSettings_customInstance\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.sonsoftheforest, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.sonsoftheforest, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600053E RID: 1342 RVA: 0x00143A1C File Offset: 0x00141C1C
		private void SOTF_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"{",
						"  \"_settings\": [",
						"    {",
						"      \"Name\": \"Graphics.QualityPreset\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Custom\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AmbientOcclusionQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Off\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ShadowQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Ultra Low\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.FogQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"OFF\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.TerrainParallaxDistance\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.BillboardQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AnisotropicQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"OFF\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ChromaticAberration\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.MotionBlur\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ContactShadows\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.ScreenSpaceReflection\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.Bloom\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.MicroShadowing\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.CloudType\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.GrassQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DrawDistance\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Ultra Low\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.WaterQuality\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"LOW\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.AntiAlias\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"TAA\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DynamicResUpscale\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Taau\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.DynamicResolutionTarget\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"100\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.Dlss\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Performance\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.TextureResolution\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"QUARTER\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Graphics.FilmGrain\",",
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Display.Resolution\",",
						"      \"SettingType\": 3,",
						string.Concat(new string[] { "      \"StringValue\": \"", this.DefaultWidth, " x ", this.DefaultHeight, "\"," }),
						"      \"FloatArrayValue\": []",
						"    },",
						"    {",
						"      \"Name\": \"Display.Fullscreen\",",
						"      \"SettingType\": 3,",
						"      \"StringValue\": \"Exclusive FullScreen\",",
						"      \"FloatArrayValue\": []",
						"    }",
						"  ],",
						"  \"name\": \"SonsGameSettings_customInstance\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.sonsoftheforest, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.sonsoftheforest, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600053F RID: 1343 RVA: 0x001441B0 File Offset: 0x001423B0
		private void Stray_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Internationalization]",
						"Culture=en",
						"",
						"[/Script/Hk_project.HKGameUserSettings]",
						"FrameRateLimit=0.000000",
						"bUseVSync=False",
						"FirstLaunch=False",
						"MotionBlurAmount=0.000000",
						"MeshQuality=0",
						"SteamDeckScreenPercentage=60",
						"SteamDeckEffectsQuality=0",
						"SteamDeckShadowQuality=0",
						"SteamDeckMeshQuality=0",
						"SteamDeckTextureQuality=0",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=1",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=1",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.EffectsQuality=0",
						"sg.TextureQuality=0",
						"sg.ShadowQuality=0",
						"sg.ResolutionQuality=60.000000",
						"sg.ViewDistanceQuality=1",
						"sg.PostProcessQuality=0",
						"sg.FoliageQuality=1",
						"sg.ShadingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.stray_main, text);
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.stray_main, text);
					num = 8;
				}
				if (num == 6)
				{
					File.WriteAllText(this.stray_first, text);
					num = 7;
				}
				if (num == 4)
				{
					this.get_own_stray();
					num = 5;
				}
				if (num == 2)
				{
					string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=40", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000540 RID: 1344 RVA: 0x001448C4 File Offset: 0x00142AC4
		private void Stray_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Internationalization]",
						"Culture=en",
						"",
						"[/Script/Hk_project.HKGameUserSettings]",
						"FrameRateLimit=0.000000",
						"bUseVSync=False",
						"FirstLaunch=False",
						"MotionBlurAmount=0.000000",
						"MeshQuality=0",
						"SteamDeckScreenPercentage=70",
						"SteamDeckEffectsQuality=0",
						"SteamDeckShadowQuality=0",
						"SteamDeckMeshQuality=0",
						"SteamDeckTextureQuality=0",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=1",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=1",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.EffectsQuality=0",
						"sg.TextureQuality=0",
						"sg.ShadowQuality=0",
						"sg.ResolutionQuality=70.000000",
						"sg.ViewDistanceQuality=1",
						"sg.PostProcessQuality=0",
						"sg.FoliageQuality=1",
						"sg.ShadingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.stray_main, text);
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.stray_main, text);
					num = 8;
				}
				if (num == 6)
				{
					File.WriteAllText(this.stray_first, text);
					num = 7;
				}
				if (num == 4)
				{
					this.get_own_stray();
					num = 5;
				}
				if (num == 2)
				{
					string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=50", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000541 RID: 1345 RVA: 0x00144FD8 File Offset: 0x001431D8
		private void Stray_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Internationalization]",
						"Culture=en",
						"",
						"[/Script/Hk_project.HKGameUserSettings]",
						"FrameRateLimit=0.000000",
						"bUseVSync=False",
						"FirstLaunch=False",
						"MotionBlurAmount=0.000000",
						"MeshQuality=0",
						"SteamDeckScreenPercentage=80",
						"SteamDeckEffectsQuality=0",
						"SteamDeckShadowQuality=0",
						"SteamDeckMeshQuality=0",
						"SteamDeckTextureQuality=0",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=1",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=1",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.EffectsQuality=0",
						"sg.TextureQuality=0",
						"sg.ShadowQuality=0",
						"sg.ResolutionQuality=80.000000",
						"sg.ViewDistanceQuality=1",
						"sg.PostProcessQuality=0",
						"sg.FoliageQuality=1",
						"sg.ShadingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.stray_main, text);
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.stray_main, text);
					num = 8;
				}
				if (num == 6)
				{
					File.WriteAllText(this.stray_first, text);
					num = 7;
				}
				if (num == 4)
				{
					this.get_own_stray();
					num = 5;
				}
				if (num == 2)
				{
					string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=70", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000542 RID: 1346 RVA: 0x001456EC File Offset: 0x001438EC
		private void Stray_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Internationalization]",
						"Culture=en",
						"",
						"[/Script/Hk_project.HKGameUserSettings]",
						"FrameRateLimit=0.000000",
						"bUseVSync=False",
						"FirstLaunch=False",
						"MotionBlurAmount=0.000000",
						"MeshQuality=0",
						"SteamDeckScreenPercentage=90",
						"SteamDeckEffectsQuality=0",
						"SteamDeckShadowQuality=0",
						"SteamDeckMeshQuality=0",
						"SteamDeckTextureQuality=0",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=1",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=1",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.EffectsQuality=0",
						"sg.TextureQuality=0",
						"sg.ShadowQuality=0",
						"sg.ResolutionQuality=90.000000",
						"sg.ViewDistanceQuality=1",
						"sg.PostProcessQuality=0",
						"sg.FoliageQuality=1",
						"sg.ShadingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.stray_main, text);
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.stray_main, text);
					num = 8;
				}
				if (num == 6)
				{
					File.WriteAllText(this.stray_first, text);
					num = 7;
				}
				if (num == 4)
				{
					this.get_own_stray();
					num = 5;
				}
				if (num == 2)
				{
					string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=80", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000543 RID: 1347 RVA: 0x00145E00 File Offset: 0x00144000
		private void Stray_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Internationalization]",
						"Culture=en",
						"",
						"[/Script/Hk_project.HKGameUserSettings]",
						"FrameRateLimit=0.000000",
						"bUseVSync=False",
						"FirstLaunch=False",
						"MotionBlurAmount=0.000000",
						"MeshQuality=0",
						"SteamDeckScreenPercentage=95",
						"SteamDeckEffectsQuality=0",
						"SteamDeckShadowQuality=0",
						"SteamDeckMeshQuality=0",
						"SteamDeckTextureQuality=0",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=1",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=1",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.EffectsQuality=0",
						"sg.TextureQuality=0",
						"sg.ShadowQuality=0",
						"sg.ResolutionQuality=95.000000",
						"sg.ViewDistanceQuality=1",
						"sg.PostProcessQuality=0",
						"sg.FoliageQuality=1",
						"sg.ShadingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.stray_main, text);
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.stray_main, text);
					num = 8;
				}
				if (num == 6)
				{
					File.WriteAllText(this.stray_first, text);
					num = 7;
				}
				if (num == 4)
				{
					this.get_own_stray();
					num = 5;
				}
				if (num == 2)
				{
					string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=85", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000544 RID: 1348 RVA: 0x00146514 File Offset: 0x00144714
		private void Stray_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Internationalization]",
						"Culture=en",
						"",
						"[/Script/Hk_project.HKGameUserSettings]",
						"FrameRateLimit=0.000000",
						"bUseVSync=False",
						"FirstLaunch=False",
						"MotionBlurAmount=0.000000",
						"MeshQuality=0",
						"SteamDeckScreenPercentage=100",
						"SteamDeckEffectsQuality=0",
						"SteamDeckShadowQuality=0",
						"SteamDeckMeshQuality=0",
						"SteamDeckTextureQuality=0",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=-1",
						"WindowPosY=-1",
						"FullscreenMode=1",
						"LastConfirmedFullscreenMode=1",
						"PreferredFullscreenMode=1",
						"Version=5",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ScalabilityGroups]",
						"sg.EffectsQuality=0",
						"sg.TextureQuality=0",
						"sg.ShadowQuality=0",
						"sg.ResolutionQuality=100.000000",
						"sg.ViewDistanceQuality=1",
						"sg.PostProcessQuality=0",
						"sg.FoliageQuality=1",
						"sg.ShadingQuality=0",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					string.Join(Environment.NewLine, new string[]
					{
						"[FoliageQuality@1]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@2]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[FoliageQuality@3]", "foliage.DensityScale=0",
						"grass.DensityScale=0", "", "[FoliageQuality@Cine]", "foliage.DensityScale=0", "grass.DensityScale=0", "", "[PostProcessQuality@0]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0",
						"r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@1]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "",
						"[PostProcessQuality@2]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@3]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0",
						"r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0", "", "[PostProcessQuality@Cine]", "r.SceneColorFringe.Max=0", "r.SceneColorFringeQuality=0", "r.SceneColorFringeQuality=0", "r.MotionBlurQuality=0", "r.DepthOfFieldQuality=0",
						""
					});
					num = 4;
				}
				if (num == 5)
				{
					File.WriteAllText(this.stray_main, text);
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.stray_main, text);
					num = 8;
				}
				if (num == 6)
				{
					File.WriteAllText(this.stray_first, text);
					num = 7;
				}
				if (num == 4)
				{
					this.get_own_stray();
					num = 5;
				}
				if (num == 2)
				{
					string.Join(Environment.NewLine, new string[]
					{
						"[SystemSettings]", "r.ScreenPercentage=90", "r.DefaultFeature.MotionBlur=False", "r.MotionBlurQuality=0", "r.AmbientOcclusionLevels=0", "r.DistanceFieldAO=0", "r.LensFlareQuality=0", "r.RefractionQuality=0", "r.MaterialQualityLevel=0", "r.Fog=0",
						"", "[/script/engine.renderersettings]", "r.CreateShadersOnLoad=1", ""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000545 RID: 1349 RVA: 0x00146C28 File Offset: 0x00144E28
		private void W3WH_g()
		{
			int num = 0;
			do
			{
				if (num == 1)
				{
					(from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("SpeechLanguage")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array;
				if (num == 3)
				{
					array = (from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("DlcEnabled_")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 5)
				{
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Rendering/RT/HBIL]",
						"UseHBIL=false",
						"HBILImpact=1",
						"[Gameplay/EntityPool]",
						"SpawnedLimit=30",
						"[Hidden]",
						"HasSeenGotyWelcomeMessage=true",
						"HasSetup=true",
						"uiVerticalFrameScale=1",
						"uiHorizontalFrameScale=1",
						"[RTXGI/GlobalGrid]",
						"ProbeMaxRayDist=16",
						"[Localization]",
						"RequestedSpeechLanguage=",
						"SpeechLanguage=EN",
						"RequestedTextLanguage=",
						"TextLanguage=EN",
						"[Viewport]",
						"VSync=false",
						string.Concat(new string[] { "Resolution=\"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"ReflexMode=0",
						"FullScreenMode=2",
						"VSyncThreshold=0",
						"OutputMonitor=0",
						"[RTXGI]",
						"SkyLightSaturation=1",
						"SkyLightIntensity=1",
						"[Budget]",
						"TerrainTileMipDataBudget=50",
						"TerrainTileMinTimeout=2",
						"TerrainTileTimeout=10",
						"OcclusionQueryAdditionalMemory=5",
						"TerrainTileLoadingTimeout=5",
						"[ContentManager/Mods]",
						"MaxNameLength=64",
						"Enabled=true",
						"[Audio]",
						"Subtitles=true",
						"[LoadingScreen/TCR]",
						"ShowProgress=true",
						"[Game]",
						"DoNotPauseWhileStopped=false",
						"[Scripts]",
						"DebugScriptsForceFlush=true",
						"DebugScriptsLogDir=",
						"[PostProcess]",
						"AllowChromaticAberration=false",
						"SharpenAmount=1",
						"MotionBlurPositionTreshold=0.05",
						"DLSSQuality=4",
						"FSR2Sharpness=0.3",
						"AllowVignette=false",
						"LockhartPerformanceMode=true",
						"RCASAmount=0.2",
						"AllowBloom=false",
						"AAMode=1",
						"DLSSGMode=0",
						"MotionBlurRotationTreshold=1",
						"AllowShafts=false",
						"FogUseDistInColorLerp=1",
						"AllowMotionBlur=false",
						"FSR1Quality=4",
						"AllowLensEffects=false",
						"AllowDOF=false",
						"SSAOEnabled=false",
						"EnableFSR1=true",
						"AllowBlur=false",
						"FSR2Quality=4",
						"[Input]",
						"PadVibrationEnabled=true",
						"KeyboardCooldownSpeed=0.1",
						"InvertCameraXOnMouse=false",
						"InvertCameraYOnMouse=false",
						"CameraAutoRotX=true",
						"FreeCameraSpeed=1",
						"PadVibrationAmount=10",
						"InvertCameraX=false",
						"UIMouseSensitivity=1",
						"CameraAutoRotY=true",
						"RightStickCameraSensitivity=1",
						"InvertCameraY=false",
						"RightStickAimSensitivity=1",
						"MouseSensitivity=1",
						"SteamController=0",
						"ForceDisablePad=false",
						"FreeCameraSensitivity=1",
						"AdaptiveTriggersEnabled=true",
						"AdaptiveTriggersAmount=10",
						"[DLC]",
						string.Join(Environment.NewLine, array),
						"[Rendering/RT/RoughnessRemap]",
						"RemapDerivative0=0",
						"RemapDerivative3=1",
						"RemapDerivative2=1",
						"RemapDerivative1=2",
						"[Gameplay]",
						"ConsentTelemetry=false",
						string.Join(Environment.NewLine, array2),
						"CrossProgression=true",
						"EnableUberMovement=1",
						"[LevelOfDetail]",
						"SwarmHideDistance=200",
						"DecalsHideDistance=40",
						"DimmerHideDistance=60",
						"DynamicDecalsHideDistance=20",
						"StripeHideDistance=60",
						"[General]",
						"ConfigVersion=5",
						"[LoadingScreen/Editor]",
						"Disabled=false",
						"[Rendering/RT]",
						"EnableAOSSSampling=false",
						"EnableRT=false",
						"Shadows=false",
						"EnableRtRadiance=false",
						"RTAOEnabled=false",
						"EnableAOPretrace=false",
						"[LoadingOverlay/TCR]",
						"FadeOutCooldownExtraTime=1",
						"FadeInSpinnerTime=1",
						"NoninteractiveSpinnerTime=3",
						"FadeOutSpinnerTime=1",
						"NoninteractiveEndCooldown=1",
						"[RTXGI/Grid1]",
						"ProbeMaxRayDist=16",
						"[Visuals]",
						"HdrPaperWhite=300",
						"AllowClothSimulationOnGpu=false",
						"InventoryBgColorScaleB=0.036",
						"InventoryFixedLuminance=0.25",
						"HdrGamma1=1.1",
						"InventoryBgColorScaleG=0.034",
						"MovieFramerate=30",
						"GammaValue=1",
						"MaxTVBrightness=900",
						"InventoryBgColorScaleR=0.02",
						"HdrGamma2=8",
						"[Galaxy]",
						"regUrlPlain=",
						"DevSaveMarks=false",
						"regUrlCoded=",
						"tokenRefA=",
						"RewardsState=",
						"regTokenExpiryH=0",
						"regTokenPlain=",
						"regQRCode=",
						"SaveAllowTickMarks=true",
						"regTokenCoded=",
						"tokenRefX=",
						"regTokenExpiryL=0",
						"[Rendering]",
						"AllowReflex=true",
						"ShowStreamlineConsole=false",
						"GrassDensity=850",
						"DecalsSpawnDistanceCutoff=10",
						"CascadeShadowFadeTreshold=2",
						"HairWorksGlobalWidthLimit=2.25",
						"CascadeShadowDistanceScale2=1",
						"MaxTextureAnizotropy=8",
						"AllowDLSS=true",
						"HairWorksGlobalStrandSmoothness=2",
						"HairWorksGlobalDensityQuality=0.75",
						"MaxCascadeCount=3",
						"CascadeShadowDistanceScale3=1",
						"HairWorkstGlobalDensityLimit=0.35",
						"TextureStreamingHeadsDistanceLimitSq=100",
						"MeshLODDistanceScale=1",
						"MaxSpotShadowSize=0",
						"ScaleformTextureUnstreamDelay=2.5",
						"DecalsChance=1",
						"TerrainReadAheadDistance=100",
						"AllowDLSSG=true",
						"SSREnabled=false",
						"HairWorksLevel=0",
						"MaxTextureArraySize=1024",
						"TerrainScreenSpaceErrorThreshold=4",
						"TerrainScreenSpaceErrorThresholdFar=8",
						"TextureStreamingCharacterDistanceLimitSq=225",
						"MaxTerrainShadowAtlasCount=2",
						"MaxCubeShadowSize=0",
						"TextureStreamingDistanceLimitSq=28000",
						"HairWorksGlobalDetailLODFactor=0.65",
						"AllowStreamline=true",
						"DeveloperMode=false",
						"TextureInFlightCountBudget=12",
						"DynamicResolutionPercentage=-1",
						"TerrainErrorMetricMultiplier=30",
						"CascadeShadowDistanceScale0=1",
						"MeshRenderingDistanceScale=1",
						"HairWorksAALevel=0",
						"TextureInFlightCountBudgetLoadingMode=256",
						"CascadeShadowDistanceScale1=1",
						"[Input/Gestures]",
						"EnableSwipe=true",
						"EnablePan=true",
						"EnableGestures=true",
						"EnablePinch=true",
						"[Visuals4K]",
						"PerformanceMode=true",
						"[LoadingScreen]",
						"FadeInTime=3",
						"SkipShowWithAnyKey=true",
						"GameRevealTime=3",
						"SkipHideDelay=3",
						"SkipInputDelay=0.25",
						"FadeOutTime=1.5",
						"SkipAutoshow=false",
						"[Rendering/TAA]",
						"CASPacked=false",
						"CASDistanceDecayStrength=0.6",
						"CASAmountNear=1",
						"CASAmount=1",
						"CASDistanceDecayPower=1.5",
						"CASDenoise=true",
						"TAAUseLDS=false",
						"CASDistanceBased=true",
						"CASFast=false",
						"CASAmountFar=0",
						"EnableCAS=true",
						"[Engine]",
						"LimitFPS=0",
						"[Rendering/SpeedTree]",
						"GrassGenerationEfficiency=0.075",
						"GrassDistanceScale=1",
						"FoliageDistanceScale=1",
						"FoliageShadowDistanceScale=4",
						"GrassRingSize=8388608",
						"[Rendering/TrimGrass]",
						"trimSlopeMost=0.6",
						"trimSizeMedium=0.65",
						"trimSlopeMedium=0.07",
						"trimSizeBig=1.2",
						"trimSizeSmall=0.1",
						"trimSlopeLeast=0.01",
						"[Gameplay/BoatCamera]",
						"BoatLocalSpaceCamera=false",
						"[Save]",
						"ShowCompatWarning=true",
						"[Kinect]",
						"Kinect=true",
						"[Foliage]",
						"MaxVisibilityDepth=0",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.witcher3_settings2, text);
					num = 8;
				}
				if (num == 6)
				{
					File.SetAttributes(this.witcher3_settings2, FileAttributes.Normal);
					num = 7;
				}
				if (num == 4)
				{
					string[] array2 = (from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("Difficulty=")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("TextLanguage")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000546 RID: 1350 RVA: 0x001479B0 File Offset: 0x00145BB0
		private void W3WH_f()
		{
			int num = 0;
			do
			{
				if (num == 1)
				{
					(from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("SpeechLanguage")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array;
				if (num == 3)
				{
					array = (from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("DlcEnabled_")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 5)
				{
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Rendering/RT/HBIL]",
						"UseHBIL=false",
						"HBILImpact=1",
						"[Gameplay/EntityPool]",
						"SpawnedLimit=30",
						"[Hidden]",
						"HasSeenGotyWelcomeMessage=true",
						"HasSetup=true",
						"uiVerticalFrameScale=1",
						"uiHorizontalFrameScale=1",
						"[RTXGI/GlobalGrid]",
						"ProbeMaxRayDist=16",
						"[Localization]",
						"RequestedSpeechLanguage=",
						"SpeechLanguage=EN",
						"RequestedTextLanguage=",
						"TextLanguage=EN",
						"[Viewport]",
						"VSync=false",
						string.Concat(new string[] { "Resolution=\"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"ReflexMode=0",
						"FullScreenMode=2",
						"VSyncThreshold=0",
						"OutputMonitor=0",
						"[RTXGI]",
						"SkyLightSaturation=1",
						"SkyLightIntensity=1",
						"[Budget]",
						"TerrainTileMipDataBudget=55",
						"TerrainTileMinTimeout=2",
						"TerrainTileTimeout=10",
						"OcclusionQueryAdditionalMemory=5",
						"TerrainTileLoadingTimeout=5",
						"[ContentManager/Mods]",
						"MaxNameLength=64",
						"Enabled=true",
						"[Audio]",
						"Subtitles=true",
						"[LoadingScreen/TCR]",
						"ShowProgress=true",
						"[Game]",
						"DoNotPauseWhileStopped=false",
						"[Scripts]",
						"DebugScriptsForceFlush=true",
						"DebugScriptsLogDir=",
						"[PostProcess]",
						"AllowChromaticAberration=false",
						"SharpenAmount=1",
						"MotionBlurPositionTreshold=0.05",
						"DLSSQuality=4",
						"FSR2Sharpness=0.3",
						"AllowVignette=false",
						"LockhartPerformanceMode=true",
						"RCASAmount=0.2",
						"AllowBloom=false",
						"AAMode=1",
						"DLSSGMode=0",
						"MotionBlurRotationTreshold=1",
						"AllowShafts=false",
						"FogUseDistInColorLerp=1",
						"AllowMotionBlur=false",
						"FSR1Quality=4",
						"AllowLensEffects=false",
						"AllowDOF=false",
						"SSAOEnabled=false",
						"EnableFSR1=true",
						"AllowBlur=false",
						"FSR2Quality=4",
						"[Input]",
						"PadVibrationEnabled=true",
						"KeyboardCooldownSpeed=0.1",
						"InvertCameraXOnMouse=false",
						"InvertCameraYOnMouse=false",
						"CameraAutoRotX=true",
						"FreeCameraSpeed=1",
						"PadVibrationAmount=10",
						"InvertCameraX=false",
						"UIMouseSensitivity=1",
						"CameraAutoRotY=true",
						"RightStickCameraSensitivity=1",
						"InvertCameraY=false",
						"RightStickAimSensitivity=1",
						"MouseSensitivity=1",
						"SteamController=0",
						"ForceDisablePad=false",
						"FreeCameraSensitivity=1",
						"AdaptiveTriggersEnabled=true",
						"AdaptiveTriggersAmount=10",
						"[DLC]",
						string.Join(Environment.NewLine, array),
						"[Rendering/RT/RoughnessRemap]",
						"RemapDerivative0=0",
						"RemapDerivative3=1",
						"RemapDerivative2=1",
						"RemapDerivative1=2",
						"[Gameplay]",
						"ConsentTelemetry=false",
						string.Join(Environment.NewLine, array2),
						"CrossProgression=true",
						"EnableUberMovement=1",
						"[LevelOfDetail]",
						"SwarmHideDistance=200",
						"DecalsHideDistance=40",
						"DimmerHideDistance=60",
						"DynamicDecalsHideDistance=20",
						"StripeHideDistance=60",
						"[General]",
						"ConfigVersion=5",
						"[LoadingScreen/Editor]",
						"Disabled=false",
						"[Rendering/RT]",
						"EnableAOSSSampling=false",
						"EnableRT=false",
						"Shadows=false",
						"EnableRtRadiance=false",
						"RTAOEnabled=false",
						"EnableAOPretrace=false",
						"[LoadingOverlay/TCR]",
						"FadeOutCooldownExtraTime=1",
						"FadeInSpinnerTime=1",
						"NoninteractiveSpinnerTime=3",
						"FadeOutSpinnerTime=1",
						"NoninteractiveEndCooldown=1",
						"[RTXGI/Grid1]",
						"ProbeMaxRayDist=16",
						"[Visuals]",
						"HdrPaperWhite=300",
						"AllowClothSimulationOnGpu=false",
						"InventoryBgColorScaleB=0.036",
						"InventoryFixedLuminance=0.25",
						"HdrGamma1=1.1",
						"InventoryBgColorScaleG=0.034",
						"MovieFramerate=30",
						"GammaValue=1",
						"MaxTVBrightness=900",
						"InventoryBgColorScaleR=0.02",
						"HdrGamma2=8",
						"[Galaxy]",
						"regUrlPlain=",
						"DevSaveMarks=false",
						"regUrlCoded=",
						"tokenRefA=",
						"RewardsState=",
						"regTokenExpiryH=0",
						"regTokenPlain=",
						"regQRCode=",
						"SaveAllowTickMarks=true",
						"regTokenCoded=",
						"tokenRefX=",
						"regTokenExpiryL=0",
						"[Rendering]",
						"AllowReflex=true",
						"ShowStreamlineConsole=false",
						"GrassDensity=850",
						"DecalsSpawnDistanceCutoff=10",
						"CascadeShadowFadeTreshold=2",
						"HairWorksGlobalWidthLimit=2.25",
						"CascadeShadowDistanceScale2=1",
						"MaxTextureAnizotropy=8",
						"AllowDLSS=true",
						"HairWorksGlobalStrandSmoothness=2",
						"HairWorksGlobalDensityQuality=0.75",
						"MaxCascadeCount=3",
						"CascadeShadowDistanceScale3=1",
						"HairWorkstGlobalDensityLimit=0.35",
						"TextureStreamingHeadsDistanceLimitSq=100",
						"MeshLODDistanceScale=1",
						"MaxSpotShadowSize=0",
						"ScaleformTextureUnstreamDelay=2.5",
						"DecalsChance=1",
						"TerrainReadAheadDistance=110",
						"AllowDLSSG=true",
						"SSREnabled=false",
						"HairWorksLevel=0",
						"MaxTextureArraySize=1024",
						"TerrainScreenSpaceErrorThreshold=4",
						"TerrainScreenSpaceErrorThresholdFar=8",
						"TextureStreamingCharacterDistanceLimitSq=225",
						"MaxTerrainShadowAtlasCount=2",
						"MaxCubeShadowSize=0",
						"TextureStreamingDistanceLimitSq=30000",
						"HairWorksGlobalDetailLODFactor=0.65",
						"AllowStreamline=true",
						"DeveloperMode=false",
						"TextureInFlightCountBudget=12",
						"DynamicResolutionPercentage=-1",
						"TerrainErrorMetricMultiplier=30",
						"CascadeShadowDistanceScale0=1",
						"MeshRenderingDistanceScale=1",
						"HairWorksAALevel=0",
						"TextureInFlightCountBudgetLoadingMode=256",
						"CascadeShadowDistanceScale1=1",
						"[Input/Gestures]",
						"EnableSwipe=true",
						"EnablePan=true",
						"EnableGestures=true",
						"EnablePinch=true",
						"[Visuals4K]",
						"PerformanceMode=true",
						"[LoadingScreen]",
						"FadeInTime=3",
						"SkipShowWithAnyKey=true",
						"GameRevealTime=3",
						"SkipHideDelay=3",
						"SkipInputDelay=0.25",
						"FadeOutTime=1.5",
						"SkipAutoshow=false",
						"[Rendering/TAA]",
						"CASPacked=false",
						"CASDistanceDecayStrength=0.6",
						"CASAmountNear=1",
						"CASAmount=1",
						"CASDistanceDecayPower=1.5",
						"CASDenoise=true",
						"TAAUseLDS=false",
						"CASDistanceBased=true",
						"CASFast=false",
						"CASAmountFar=0",
						"EnableCAS=true",
						"[Engine]",
						"LimitFPS=0",
						"[Rendering/SpeedTree]",
						"GrassGenerationEfficiency=0.075",
						"GrassDistanceScale=1",
						"FoliageDistanceScale=1",
						"FoliageShadowDistanceScale=4",
						"GrassRingSize=8388608",
						"[Rendering/TrimGrass]",
						"trimSlopeMost=0.6",
						"trimSizeMedium=0.65",
						"trimSlopeMedium=0.07",
						"trimSizeBig=1.2",
						"trimSizeSmall=0.1",
						"trimSlopeLeast=0.01",
						"[Gameplay/BoatCamera]",
						"BoatLocalSpaceCamera=false",
						"[Save]",
						"ShowCompatWarning=true",
						"[Kinect]",
						"Kinect=true",
						"[Foliage]",
						"MaxVisibilityDepth=1",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.witcher3_settings2, text);
					num = 8;
				}
				if (num == 6)
				{
					File.SetAttributes(this.witcher3_settings2, FileAttributes.Normal);
					num = 7;
				}
				if (num == 4)
				{
					string[] array2 = (from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("Difficulty=")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("TextLanguage")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000547 RID: 1351 RVA: 0x00148738 File Offset: 0x00146938
		private void W3WH_d()
		{
			int num = 0;
			do
			{
				if (num == 1)
				{
					(from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("SpeechLanguage")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array;
				if (num == 3)
				{
					array = (from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("DlcEnabled_")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 5)
				{
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Rendering/RT/HBIL]",
						"UseHBIL=false",
						"HBILImpact=1",
						"[Gameplay/EntityPool]",
						"SpawnedLimit=35",
						"[Hidden]",
						"HasSeenGotyWelcomeMessage=true",
						"HasSetup=true",
						"uiVerticalFrameScale=1",
						"uiHorizontalFrameScale=1",
						"[RTXGI/GlobalGrid]",
						"ProbeMaxRayDist=20",
						"[Localization]",
						"RequestedSpeechLanguage=",
						"SpeechLanguage=EN",
						"RequestedTextLanguage=",
						"TextLanguage=EN",
						"[Viewport]",
						"VSync=false",
						string.Concat(new string[] { "Resolution=\"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"ReflexMode=0",
						"FullScreenMode=2",
						"VSyncThreshold=0",
						"OutputMonitor=0",
						"[RTXGI]",
						"SkyLightSaturation=1",
						"SkyLightIntensity=1",
						"[Budget]",
						"TerrainTileMipDataBudget=65",
						"TerrainTileMinTimeout=2",
						"TerrainTileTimeout=10",
						"OcclusionQueryAdditionalMemory=5",
						"TerrainTileLoadingTimeout=5",
						"[ContentManager/Mods]",
						"MaxNameLength=64",
						"Enabled=true",
						"[Audio]",
						"Subtitles=true",
						"[LoadingScreen/TCR]",
						"ShowProgress=true",
						"[Game]",
						"DoNotPauseWhileStopped=false",
						"[Scripts]",
						"DebugScriptsForceFlush=true",
						"DebugScriptsLogDir=",
						"[PostProcess]",
						"AllowChromaticAberration=false",
						"SharpenAmount=1",
						"MotionBlurPositionTreshold=0.05",
						"DLSSQuality=4",
						"FSR2Sharpness=0.3",
						"AllowVignette=false",
						"LockhartPerformanceMode=true",
						"RCASAmount=0.2",
						"AllowBloom=false",
						"AAMode=1",
						"DLSSGMode=0",
						"MotionBlurRotationTreshold=1",
						"AllowShafts=false",
						"FogUseDistInColorLerp=1",
						"AllowMotionBlur=false",
						"FSR1Quality=4",
						"AllowLensEffects=false",
						"AllowDOF=false",
						"SSAOEnabled=false",
						"EnableFSR1=true",
						"AllowBlur=false",
						"FSR2Quality=4",
						"[Input]",
						"PadVibrationEnabled=true",
						"KeyboardCooldownSpeed=0.1",
						"InvertCameraXOnMouse=false",
						"InvertCameraYOnMouse=false",
						"CameraAutoRotX=true",
						"FreeCameraSpeed=1",
						"PadVibrationAmount=10",
						"InvertCameraX=false",
						"UIMouseSensitivity=1",
						"CameraAutoRotY=true",
						"RightStickCameraSensitivity=1",
						"InvertCameraY=false",
						"RightStickAimSensitivity=1",
						"MouseSensitivity=1",
						"SteamController=0",
						"ForceDisablePad=false",
						"FreeCameraSensitivity=1",
						"AdaptiveTriggersEnabled=true",
						"AdaptiveTriggersAmount=10",
						"[DLC]",
						string.Join(Environment.NewLine, array),
						"[Rendering/RT/RoughnessRemap]",
						"RemapDerivative0=0",
						"RemapDerivative3=1",
						"RemapDerivative2=1",
						"RemapDerivative1=2",
						"[Gameplay]",
						"ConsentTelemetry=false",
						string.Join(Environment.NewLine, array2),
						"CrossProgression=true",
						"EnableUberMovement=1",
						"[LevelOfDetail]",
						"SwarmHideDistance=200",
						"DecalsHideDistance=40",
						"DimmerHideDistance=60",
						"DynamicDecalsHideDistance=20",
						"StripeHideDistance=60",
						"[General]",
						"ConfigVersion=5",
						"[LoadingScreen/Editor]",
						"Disabled=false",
						"[Rendering/RT]",
						"EnableAOSSSampling=false",
						"EnableRT=false",
						"Shadows=false",
						"EnableRtRadiance=false",
						"RTAOEnabled=false",
						"EnableAOPretrace=false",
						"[LoadingOverlay/TCR]",
						"FadeOutCooldownExtraTime=1",
						"FadeInSpinnerTime=1",
						"NoninteractiveSpinnerTime=3",
						"FadeOutSpinnerTime=1",
						"NoninteractiveEndCooldown=1",
						"[RTXGI/Grid1]",
						"ProbeMaxRayDist=20",
						"[Visuals]",
						"HdrPaperWhite=300",
						"AllowClothSimulationOnGpu=false",
						"InventoryBgColorScaleB=0.036",
						"InventoryFixedLuminance=0.25",
						"HdrGamma1=1.1",
						"InventoryBgColorScaleG=0.034",
						"MovieFramerate=30",
						"GammaValue=1",
						"MaxTVBrightness=900",
						"InventoryBgColorScaleR=0.02",
						"HdrGamma2=8",
						"[Galaxy]",
						"regUrlPlain=",
						"DevSaveMarks=false",
						"regUrlCoded=",
						"tokenRefA=",
						"RewardsState=",
						"regTokenExpiryH=0",
						"regTokenPlain=",
						"regQRCode=",
						"SaveAllowTickMarks=true",
						"regTokenCoded=",
						"tokenRefX=",
						"regTokenExpiryL=0",
						"[Rendering]",
						"AllowReflex=true",
						"ShowStreamlineConsole=false",
						"GrassDensity=1150",
						"DecalsSpawnDistanceCutoff=10",
						"CascadeShadowFadeTreshold=2",
						"HairWorksGlobalWidthLimit=2.25",
						"CascadeShadowDistanceScale2=1",
						"MaxTextureAnizotropy=8",
						"AllowDLSS=true",
						"HairWorksGlobalStrandSmoothness=2",
						"HairWorksGlobalDensityQuality=0.75",
						"MaxCascadeCount=3",
						"CascadeShadowDistanceScale3=1",
						"HairWorkstGlobalDensityLimit=0.35",
						"TextureStreamingHeadsDistanceLimitSq=100",
						"MeshLODDistanceScale=1",
						"MaxSpotShadowSize=0",
						"ScaleformTextureUnstreamDelay=2.5",
						"DecalsChance=1",
						"TerrainReadAheadDistance=130",
						"AllowDLSSG=true",
						"SSREnabled=false",
						"HairWorksLevel=0",
						"MaxTextureArraySize=1024",
						"TerrainScreenSpaceErrorThreshold=4",
						"TerrainScreenSpaceErrorThresholdFar=8",
						"TextureStreamingCharacterDistanceLimitSq=225",
						"MaxTerrainShadowAtlasCount=2",
						"MaxCubeShadowSize=0",
						"TextureStreamingDistanceLimitSq=34000",
						"HairWorksGlobalDetailLODFactor=0.65",
						"AllowStreamline=true",
						"DeveloperMode=false",
						"TextureInFlightCountBudget=12",
						"DynamicResolutionPercentage=-1",
						"TerrainErrorMetricMultiplier=30",
						"CascadeShadowDistanceScale0=1",
						"MeshRenderingDistanceScale=1",
						"HairWorksAALevel=0",
						"TextureInFlightCountBudgetLoadingMode=256",
						"CascadeShadowDistanceScale1=1",
						"[Input/Gestures]",
						"EnableSwipe=true",
						"EnablePan=true",
						"EnableGestures=true",
						"EnablePinch=true",
						"[Visuals4K]",
						"PerformanceMode=true",
						"[LoadingScreen]",
						"FadeInTime=3",
						"SkipShowWithAnyKey=true",
						"GameRevealTime=3",
						"SkipHideDelay=3",
						"SkipInputDelay=0.25",
						"FadeOutTime=1.5",
						"SkipAutoshow=false",
						"[Rendering/TAA]",
						"CASPacked=false",
						"CASDistanceDecayStrength=0.6",
						"CASAmountNear=1",
						"CASAmount=1",
						"CASDistanceDecayPower=1.5",
						"CASDenoise=true",
						"TAAUseLDS=false",
						"CASDistanceBased=true",
						"CASFast=false",
						"CASAmountFar=0",
						"EnableCAS=true",
						"[Engine]",
						"LimitFPS=0",
						"[Rendering/SpeedTree]",
						"GrassGenerationEfficiency=0.075",
						"GrassDistanceScale=1",
						"FoliageDistanceScale=1",
						"FoliageShadowDistanceScale=4",
						"GrassRingSize=8388608",
						"[Rendering/TrimGrass]",
						"trimSlopeMost=0.6",
						"trimSizeMedium=0.65",
						"trimSlopeMedium=0.07",
						"trimSizeBig=1.2",
						"trimSizeSmall=0.1",
						"trimSlopeLeast=0.01",
						"[Gameplay/BoatCamera]",
						"BoatLocalSpaceCamera=false",
						"[Save]",
						"ShowCompatWarning=true",
						"[Kinect]",
						"Kinect=true",
						"[Foliage]",
						"MaxVisibilityDepth=2",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.witcher3_settings2, text);
					num = 8;
				}
				if (num == 6)
				{
					File.SetAttributes(this.witcher3_settings2, FileAttributes.Normal);
					num = 7;
				}
				if (num == 4)
				{
					string[] array2 = (from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("Difficulty=")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("TextLanguage")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000548 RID: 1352 RVA: 0x001494C0 File Offset: 0x001476C0
		private void W3WH_c()
		{
			int num = 0;
			do
			{
				if (num == 1)
				{
					(from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("SpeechLanguage")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array;
				if (num == 3)
				{
					array = (from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("DlcEnabled_")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 5)
				{
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Rendering/RT/HBIL]",
						"UseHBIL=false",
						"HBILImpact=1",
						"[Gameplay/EntityPool]",
						"SpawnedLimit=40",
						"[Hidden]",
						"HasSeenGotyWelcomeMessage=true",
						"HasSetup=true",
						"uiVerticalFrameScale=1",
						"uiHorizontalFrameScale=1",
						"[RTXGI/GlobalGrid]",
						"ProbeMaxRayDist=24",
						"[Localization]",
						"RequestedSpeechLanguage=",
						"SpeechLanguage=EN",
						"RequestedTextLanguage=",
						"TextLanguage=EN",
						"[Viewport]",
						"VSync=false",
						string.Concat(new string[] { "Resolution=\"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"ReflexMode=0",
						"FullScreenMode=2",
						"VSyncThreshold=0",
						"OutputMonitor=0",
						"[RTXGI]",
						"SkyLightSaturation=1",
						"SkyLightIntensity=1",
						"[Budget]",
						"TerrainTileMipDataBudget=70",
						"TerrainTileMinTimeout=2",
						"TerrainTileTimeout=10",
						"OcclusionQueryAdditionalMemory=5",
						"TerrainTileLoadingTimeout=5",
						"[ContentManager/Mods]",
						"MaxNameLength=64",
						"Enabled=true",
						"[Audio]",
						"Subtitles=true",
						"[LoadingScreen/TCR]",
						"ShowProgress=true",
						"[Game]",
						"DoNotPauseWhileStopped=false",
						"[Scripts]",
						"DebugScriptsForceFlush=true",
						"DebugScriptsLogDir=",
						"[PostProcess]",
						"AllowChromaticAberration=false",
						"SharpenAmount=1",
						"MotionBlurPositionTreshold=0.05",
						"DLSSQuality=4",
						"FSR2Sharpness=0.3",
						"AllowVignette=false",
						"LockhartPerformanceMode=true",
						"RCASAmount=0.2",
						"AllowBloom=false",
						"AAMode=1",
						"DLSSGMode=0",
						"MotionBlurRotationTreshold=1",
						"AllowShafts=false",
						"FogUseDistInColorLerp=1",
						"AllowMotionBlur=false",
						"FSR1Quality=4",
						"AllowLensEffects=false",
						"AllowDOF=false",
						"SSAOEnabled=false",
						"EnableFSR1=true",
						"AllowBlur=false",
						"FSR2Quality=4",
						"[Input]",
						"PadVibrationEnabled=true",
						"KeyboardCooldownSpeed=0.1",
						"InvertCameraXOnMouse=false",
						"InvertCameraYOnMouse=false",
						"CameraAutoRotX=true",
						"FreeCameraSpeed=1",
						"PadVibrationAmount=10",
						"InvertCameraX=false",
						"UIMouseSensitivity=1",
						"CameraAutoRotY=true",
						"RightStickCameraSensitivity=1",
						"InvertCameraY=false",
						"RightStickAimSensitivity=1",
						"MouseSensitivity=1",
						"SteamController=0",
						"ForceDisablePad=false",
						"FreeCameraSensitivity=1",
						"AdaptiveTriggersEnabled=true",
						"AdaptiveTriggersAmount=10",
						"[DLC]",
						string.Join(Environment.NewLine, array),
						"[Rendering/RT/RoughnessRemap]",
						"RemapDerivative0=0",
						"RemapDerivative3=1",
						"RemapDerivative2=1",
						"RemapDerivative1=2",
						"[Gameplay]",
						"ConsentTelemetry=false",
						string.Join(Environment.NewLine, array2),
						"CrossProgression=true",
						"EnableUberMovement=1",
						"[LevelOfDetail]",
						"SwarmHideDistance=200",
						"DecalsHideDistance=40",
						"DimmerHideDistance=60",
						"DynamicDecalsHideDistance=20",
						"StripeHideDistance=60",
						"[General]",
						"ConfigVersion=5",
						"[LoadingScreen/Editor]",
						"Disabled=false",
						"[Rendering/RT]",
						"EnableAOSSSampling=false",
						"EnableRT=false",
						"Shadows=false",
						"EnableRtRadiance=false",
						"RTAOEnabled=false",
						"EnableAOPretrace=false",
						"[LoadingOverlay/TCR]",
						"FadeOutCooldownExtraTime=1",
						"FadeInSpinnerTime=1",
						"NoninteractiveSpinnerTime=3",
						"FadeOutSpinnerTime=1",
						"NoninteractiveEndCooldown=1",
						"[RTXGI/Grid1]",
						"ProbeMaxRayDist=24",
						"[Visuals]",
						"HdrPaperWhite=300",
						"AllowClothSimulationOnGpu=false",
						"InventoryBgColorScaleB=0.036",
						"InventoryFixedLuminance=0.25",
						"HdrGamma1=1.1",
						"InventoryBgColorScaleG=0.034",
						"MovieFramerate=30",
						"GammaValue=1",
						"MaxTVBrightness=900",
						"InventoryBgColorScaleR=0.02",
						"HdrGamma2=8",
						"[Galaxy]",
						"regUrlPlain=",
						"DevSaveMarks=false",
						"regUrlCoded=",
						"tokenRefA=",
						"RewardsState=",
						"regTokenExpiryH=0",
						"regTokenPlain=",
						"regQRCode=",
						"SaveAllowTickMarks=true",
						"regTokenCoded=",
						"tokenRefX=",
						"regTokenExpiryL=0",
						"[Rendering]",
						"AllowReflex=true",
						"ShowStreamlineConsole=false",
						"GrassDensity=1300",
						"DecalsSpawnDistanceCutoff=10",
						"CascadeShadowFadeTreshold=2",
						"HairWorksGlobalWidthLimit=2.25",
						"CascadeShadowDistanceScale2=1",
						"MaxTextureAnizotropy=8",
						"AllowDLSS=true",
						"HairWorksGlobalStrandSmoothness=2",
						"HairWorksGlobalDensityQuality=0.75",
						"MaxCascadeCount=3",
						"CascadeShadowDistanceScale3=1",
						"HairWorkstGlobalDensityLimit=0.35",
						"TextureStreamingHeadsDistanceLimitSq=100",
						"MeshLODDistanceScale=1",
						"MaxSpotShadowSize=0",
						"ScaleformTextureUnstreamDelay=2.5",
						"DecalsChance=1",
						"TerrainReadAheadDistance=140",
						"AllowDLSSG=true",
						"SSREnabled=false",
						"HairWorksLevel=0",
						"MaxTextureArraySize=1024",
						"TerrainScreenSpaceErrorThreshold=4",
						"TerrainScreenSpaceErrorThresholdFar=8",
						"TextureStreamingCharacterDistanceLimitSq=225",
						"MaxTerrainShadowAtlasCount=2",
						"MaxCubeShadowSize=0",
						"TextureStreamingDistanceLimitSq=36000",
						"HairWorksGlobalDetailLODFactor=0.65",
						"AllowStreamline=true",
						"DeveloperMode=false",
						"TextureInFlightCountBudget=12",
						"DynamicResolutionPercentage=-1",
						"TerrainErrorMetricMultiplier=30",
						"CascadeShadowDistanceScale0=1",
						"MeshRenderingDistanceScale=1",
						"HairWorksAALevel=0",
						"TextureInFlightCountBudgetLoadingMode=256",
						"CascadeShadowDistanceScale1=1",
						"[Input/Gestures]",
						"EnableSwipe=true",
						"EnablePan=true",
						"EnableGestures=true",
						"EnablePinch=true",
						"[Visuals4K]",
						"PerformanceMode=true",
						"[LoadingScreen]",
						"FadeInTime=3",
						"SkipShowWithAnyKey=true",
						"GameRevealTime=3",
						"SkipHideDelay=3",
						"SkipInputDelay=0.25",
						"FadeOutTime=1.5",
						"SkipAutoshow=false",
						"[Rendering/TAA]",
						"CASPacked=false",
						"CASDistanceDecayStrength=0.6",
						"CASAmountNear=1",
						"CASAmount=1",
						"CASDistanceDecayPower=1.5",
						"CASDenoise=true",
						"TAAUseLDS=false",
						"CASDistanceBased=true",
						"CASFast=false",
						"CASAmountFar=0",
						"EnableCAS=true",
						"[Engine]",
						"LimitFPS=0",
						"[Rendering/SpeedTree]",
						"GrassGenerationEfficiency=0.075",
						"GrassDistanceScale=1",
						"FoliageDistanceScale=1",
						"FoliageShadowDistanceScale=4",
						"GrassRingSize=8388608",
						"[Rendering/TrimGrass]",
						"trimSlopeMost=0.6",
						"trimSizeMedium=0.65",
						"trimSlopeMedium=0.07",
						"trimSizeBig=1.2",
						"trimSizeSmall=0.1",
						"trimSlopeLeast=0.01",
						"[Gameplay/BoatCamera]",
						"BoatLocalSpaceCamera=false",
						"[Save]",
						"ShowCompatWarning=true",
						"[Kinect]",
						"Kinect=true",
						"[Foliage]",
						"MaxVisibilityDepth=2",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.witcher3_settings2, text);
					num = 8;
				}
				if (num == 6)
				{
					File.SetAttributes(this.witcher3_settings2, FileAttributes.Normal);
					num = 7;
				}
				if (num == 4)
				{
					string[] array2 = (from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("Difficulty=")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("TextLanguage")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x06000549 RID: 1353 RVA: 0x0014A248 File Offset: 0x00148448
		private void W3WH_b()
		{
			int num = 0;
			do
			{
				if (num == 1)
				{
					(from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("SpeechLanguage")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array;
				if (num == 3)
				{
					array = (from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("DlcEnabled_")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 5)
				{
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Rendering/RT/HBIL]",
						"UseHBIL=false",
						"HBILImpact=1",
						"[Gameplay/EntityPool]",
						"SpawnedLimit=45",
						"[Hidden]",
						"HasSeenGotyWelcomeMessage=true",
						"HasSetup=true",
						"uiVerticalFrameScale=1",
						"uiHorizontalFrameScale=1",
						"[RTXGI/GlobalGrid]",
						"ProbeMaxRayDist=28",
						"[Localization]",
						"RequestedSpeechLanguage=",
						"SpeechLanguage=EN",
						"RequestedTextLanguage=",
						"TextLanguage=EN",
						"[Viewport]",
						"VSync=false",
						string.Concat(new string[] { "Resolution=\"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"ReflexMode=0",
						"FullScreenMode=2",
						"VSyncThreshold=0",
						"OutputMonitor=0",
						"[RTXGI]",
						"SkyLightSaturation=1",
						"SkyLightIntensity=1",
						"[Budget]",
						"TerrainTileMipDataBudget=75",
						"TerrainTileMinTimeout=2",
						"TerrainTileTimeout=10",
						"OcclusionQueryAdditionalMemory=5",
						"TerrainTileLoadingTimeout=5",
						"[ContentManager/Mods]",
						"MaxNameLength=64",
						"Enabled=true",
						"[Audio]",
						"Subtitles=true",
						"[LoadingScreen/TCR]",
						"ShowProgress=true",
						"[Game]",
						"DoNotPauseWhileStopped=false",
						"[Scripts]",
						"DebugScriptsForceFlush=true",
						"DebugScriptsLogDir=",
						"[PostProcess]",
						"AllowChromaticAberration=false",
						"SharpenAmount=1",
						"MotionBlurPositionTreshold=0.05",
						"DLSSQuality=4",
						"FSR2Sharpness=0.3",
						"AllowVignette=false",
						"LockhartPerformanceMode=true",
						"RCASAmount=0.2",
						"AllowBloom=false",
						"AAMode=1",
						"DLSSGMode=0",
						"MotionBlurRotationTreshold=1",
						"AllowShafts=false",
						"FogUseDistInColorLerp=1",
						"AllowMotionBlur=false",
						"FSR1Quality=4",
						"AllowLensEffects=false",
						"AllowDOF=false",
						"SSAOEnabled=false",
						"EnableFSR1=true",
						"AllowBlur=false",
						"FSR2Quality=4",
						"[Input]",
						"PadVibrationEnabled=true",
						"KeyboardCooldownSpeed=0.1",
						"InvertCameraXOnMouse=false",
						"InvertCameraYOnMouse=false",
						"CameraAutoRotX=true",
						"FreeCameraSpeed=1",
						"PadVibrationAmount=10",
						"InvertCameraX=false",
						"UIMouseSensitivity=1",
						"CameraAutoRotY=true",
						"RightStickCameraSensitivity=1",
						"InvertCameraY=false",
						"RightStickAimSensitivity=1",
						"MouseSensitivity=1",
						"SteamController=0",
						"ForceDisablePad=false",
						"FreeCameraSensitivity=1",
						"AdaptiveTriggersEnabled=true",
						"AdaptiveTriggersAmount=10",
						"[DLC]",
						string.Join(Environment.NewLine, array),
						"[Rendering/RT/RoughnessRemap]",
						"RemapDerivative0=0",
						"RemapDerivative3=1",
						"RemapDerivative2=1",
						"RemapDerivative1=2",
						"[Gameplay]",
						"ConsentTelemetry=false",
						string.Join(Environment.NewLine, array2),
						"CrossProgression=true",
						"EnableUberMovement=1",
						"[LevelOfDetail]",
						"SwarmHideDistance=200",
						"DecalsHideDistance=40",
						"DimmerHideDistance=60",
						"DynamicDecalsHideDistance=20",
						"StripeHideDistance=60",
						"[General]",
						"ConfigVersion=5",
						"[LoadingScreen/Editor]",
						"Disabled=false",
						"[Rendering/RT]",
						"EnableAOSSSampling=false",
						"EnableRT=false",
						"Shadows=false",
						"EnableRtRadiance=false",
						"RTAOEnabled=false",
						"EnableAOPretrace=false",
						"[LoadingOverlay/TCR]",
						"FadeOutCooldownExtraTime=1",
						"FadeInSpinnerTime=1",
						"NoninteractiveSpinnerTime=3",
						"FadeOutSpinnerTime=1",
						"NoninteractiveEndCooldown=1",
						"[RTXGI/Grid1]",
						"ProbeMaxRayDist=28",
						"[Visuals]",
						"HdrPaperWhite=300",
						"AllowClothSimulationOnGpu=false",
						"InventoryBgColorScaleB=0.036",
						"InventoryFixedLuminance=0.25",
						"HdrGamma1=1.1",
						"InventoryBgColorScaleG=0.034",
						"MovieFramerate=30",
						"GammaValue=1",
						"MaxTVBrightness=900",
						"InventoryBgColorScaleR=0.02",
						"HdrGamma2=8",
						"[Galaxy]",
						"regUrlPlain=",
						"DevSaveMarks=false",
						"regUrlCoded=",
						"tokenRefA=",
						"RewardsState=",
						"regTokenExpiryH=0",
						"regTokenPlain=",
						"regQRCode=",
						"SaveAllowTickMarks=true",
						"regTokenCoded=",
						"tokenRefX=",
						"regTokenExpiryL=0",
						"[Rendering]",
						"AllowReflex=true",
						"ShowStreamlineConsole=false",
						"GrassDensity=1450",
						"DecalsSpawnDistanceCutoff=10",
						"CascadeShadowFadeTreshold=2",
						"HairWorksGlobalWidthLimit=2.25",
						"CascadeShadowDistanceScale2=1",
						"MaxTextureAnizotropy=8",
						"AllowDLSS=true",
						"HairWorksGlobalStrandSmoothness=2",
						"HairWorksGlobalDensityQuality=0.75",
						"MaxCascadeCount=3",
						"CascadeShadowDistanceScale3=1",
						"HairWorkstGlobalDensityLimit=0.35",
						"TextureStreamingHeadsDistanceLimitSq=100",
						"MeshLODDistanceScale=1",
						"MaxSpotShadowSize=0",
						"ScaleformTextureUnstreamDelay=2.5",
						"DecalsChance=1",
						"TerrainReadAheadDistance=150",
						"AllowDLSSG=true",
						"SSREnabled=false",
						"HairWorksLevel=0",
						"MaxTextureArraySize=1024",
						"TerrainScreenSpaceErrorThreshold=4",
						"TerrainScreenSpaceErrorThresholdFar=8",
						"TextureStreamingCharacterDistanceLimitSq=225",
						"MaxTerrainShadowAtlasCount=2",
						"MaxCubeShadowSize=0",
						"TextureStreamingDistanceLimitSq=38000",
						"HairWorksGlobalDetailLODFactor=0.65",
						"AllowStreamline=true",
						"DeveloperMode=false",
						"TextureInFlightCountBudget=12",
						"DynamicResolutionPercentage=-1",
						"TerrainErrorMetricMultiplier=30",
						"CascadeShadowDistanceScale0=1",
						"MeshRenderingDistanceScale=1",
						"HairWorksAALevel=0",
						"TextureInFlightCountBudgetLoadingMode=256",
						"CascadeShadowDistanceScale1=1",
						"[Input/Gestures]",
						"EnableSwipe=true",
						"EnablePan=true",
						"EnableGestures=true",
						"EnablePinch=true",
						"[Visuals4K]",
						"PerformanceMode=true",
						"[LoadingScreen]",
						"FadeInTime=3",
						"SkipShowWithAnyKey=true",
						"GameRevealTime=3",
						"SkipHideDelay=3",
						"SkipInputDelay=0.25",
						"FadeOutTime=1.5",
						"SkipAutoshow=false",
						"[Rendering/TAA]",
						"CASPacked=false",
						"CASDistanceDecayStrength=0.6",
						"CASAmountNear=1",
						"CASAmount=1",
						"CASDistanceDecayPower=1.5",
						"CASDenoise=true",
						"TAAUseLDS=false",
						"CASDistanceBased=true",
						"CASFast=false",
						"CASAmountFar=0",
						"EnableCAS=true",
						"[Engine]",
						"LimitFPS=0",
						"[Rendering/SpeedTree]",
						"GrassGenerationEfficiency=0.075",
						"GrassDistanceScale=1",
						"FoliageDistanceScale=1",
						"FoliageShadowDistanceScale=4",
						"GrassRingSize=8388608",
						"[Rendering/TrimGrass]",
						"trimSlopeMost=0.6",
						"trimSizeMedium=0.65",
						"trimSlopeMedium=0.07",
						"trimSizeBig=1.2",
						"trimSizeSmall=0.1",
						"trimSlopeLeast=0.01",
						"[Gameplay/BoatCamera]",
						"BoatLocalSpaceCamera=false",
						"[Save]",
						"ShowCompatWarning=true",
						"[Kinect]",
						"Kinect=true",
						"[Foliage]",
						"MaxVisibilityDepth=3",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.witcher3_settings2, text);
					num = 8;
				}
				if (num == 6)
				{
					File.SetAttributes(this.witcher3_settings2, FileAttributes.Normal);
					num = 7;
				}
				if (num == 4)
				{
					string[] array2 = (from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("Difficulty=")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("TextLanguage")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x0600054A RID: 1354 RVA: 0x0014AFD0 File Offset: 0x001491D0
		private void W3WH_a()
		{
			int num = 0;
			do
			{
				if (num == 1)
				{
					(from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("SpeechLanguage")
						select s).ToArray<string>();
					num = 2;
				}
				string[] array;
				if (num == 3)
				{
					array = (from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("DlcEnabled_")
						select s).ToArray<string>();
					num = 4;
				}
				string text;
				if (num == 5)
				{
					string[] array2;
					text = string.Join(Environment.NewLine, new string[]
					{
						"[Rendering/RT/HBIL]",
						"UseHBIL=false",
						"HBILImpact=1",
						"[Gameplay/EntityPool]",
						"SpawnedLimit=50",
						"[Hidden]",
						"HasSeenGotyWelcomeMessage=true",
						"HasSetup=true",
						"uiVerticalFrameScale=1",
						"uiHorizontalFrameScale=1",
						"[RTXGI/GlobalGrid]",
						"ProbeMaxRayDist=32",
						"[Localization]",
						"RequestedSpeechLanguage=",
						"SpeechLanguage=EN",
						"RequestedTextLanguage=",
						"TextLanguage=EN",
						"[Viewport]",
						"VSync=false",
						string.Concat(new string[] { "Resolution=\"", this.DefaultWidth, "x", this.DefaultHeight, "\"" }),
						"ReflexMode=0",
						"FullScreenMode=2",
						"VSyncThreshold=0",
						"OutputMonitor=0",
						"[RTXGI]",
						"SkyLightSaturation=1",
						"SkyLightIntensity=1",
						"[Budget]",
						"TerrainTileMipDataBudget=80",
						"TerrainTileMinTimeout=2",
						"TerrainTileTimeout=10",
						"OcclusionQueryAdditionalMemory=5",
						"TerrainTileLoadingTimeout=5",
						"[ContentManager/Mods]",
						"MaxNameLength=64",
						"Enabled=true",
						"[Audio]",
						"Subtitles=true",
						"[LoadingScreen/TCR]",
						"ShowProgress=true",
						"[Game]",
						"DoNotPauseWhileStopped=false",
						"[Scripts]",
						"DebugScriptsForceFlush=true",
						"DebugScriptsLogDir=",
						"[PostProcess]",
						"AllowChromaticAberration=false",
						"SharpenAmount=1",
						"MotionBlurPositionTreshold=0.05",
						"DLSSQuality=4",
						"FSR2Sharpness=0.3",
						"AllowVignette=false",
						"LockhartPerformanceMode=true",
						"RCASAmount=0.2",
						"AllowBloom=false",
						"AAMode=1",
						"DLSSGMode=0",
						"MotionBlurRotationTreshold=1",
						"AllowShafts=false",
						"FogUseDistInColorLerp=1",
						"AllowMotionBlur=false",
						"FSR1Quality=4",
						"AllowLensEffects=false",
						"AllowDOF=false",
						"SSAOEnabled=false",
						"EnableFSR1=true",
						"AllowBlur=false",
						"FSR2Quality=4",
						"[Input]",
						"PadVibrationEnabled=true",
						"KeyboardCooldownSpeed=0.1",
						"InvertCameraXOnMouse=false",
						"InvertCameraYOnMouse=false",
						"CameraAutoRotX=true",
						"FreeCameraSpeed=1",
						"PadVibrationAmount=10",
						"InvertCameraX=false",
						"UIMouseSensitivity=1",
						"CameraAutoRotY=true",
						"RightStickCameraSensitivity=1",
						"InvertCameraY=false",
						"RightStickAimSensitivity=1",
						"MouseSensitivity=1",
						"SteamController=0",
						"ForceDisablePad=false",
						"FreeCameraSensitivity=1",
						"AdaptiveTriggersEnabled=true",
						"AdaptiveTriggersAmount=10",
						"[DLC]",
						string.Join(Environment.NewLine, array),
						"[Rendering/RT/RoughnessRemap]",
						"RemapDerivative0=0",
						"RemapDerivative3=1",
						"RemapDerivative2=1",
						"RemapDerivative1=2",
						"[Gameplay]",
						"ConsentTelemetry=false",
						string.Join(Environment.NewLine, array2),
						"CrossProgression=true",
						"EnableUberMovement=1",
						"[LevelOfDetail]",
						"SwarmHideDistance=200",
						"DecalsHideDistance=40",
						"DimmerHideDistance=60",
						"DynamicDecalsHideDistance=20",
						"StripeHideDistance=60",
						"[General]",
						"ConfigVersion=5",
						"[LoadingScreen/Editor]",
						"Disabled=false",
						"[Rendering/RT]",
						"EnableAOSSSampling=false",
						"EnableRT=false",
						"Shadows=false",
						"EnableRtRadiance=false",
						"RTAOEnabled=false",
						"EnableAOPretrace=false",
						"[LoadingOverlay/TCR]",
						"FadeOutCooldownExtraTime=1",
						"FadeInSpinnerTime=1",
						"NoninteractiveSpinnerTime=3",
						"FadeOutSpinnerTime=1",
						"NoninteractiveEndCooldown=1",
						"[RTXGI/Grid1]",
						"ProbeMaxRayDist=32",
						"[Visuals]",
						"HdrPaperWhite=300",
						"AllowClothSimulationOnGpu=false",
						"InventoryBgColorScaleB=0.036",
						"InventoryFixedLuminance=0.25",
						"HdrGamma1=1.1",
						"InventoryBgColorScaleG=0.034",
						"MovieFramerate=30",
						"GammaValue=1",
						"MaxTVBrightness=900",
						"InventoryBgColorScaleR=0.02",
						"HdrGamma2=8",
						"[Galaxy]",
						"regUrlPlain=",
						"DevSaveMarks=false",
						"regUrlCoded=",
						"tokenRefA=",
						"RewardsState=",
						"regTokenExpiryH=0",
						"regTokenPlain=",
						"regQRCode=",
						"SaveAllowTickMarks=true",
						"regTokenCoded=",
						"tokenRefX=",
						"regTokenExpiryL=0",
						"[Rendering]",
						"AllowReflex=true",
						"ShowStreamlineConsole=false",
						"GrassDensity=1600",
						"DecalsSpawnDistanceCutoff=10",
						"CascadeShadowFadeTreshold=2",
						"HairWorksGlobalWidthLimit=2.25",
						"CascadeShadowDistanceScale2=1",
						"MaxTextureAnizotropy=8",
						"AllowDLSS=true",
						"HairWorksGlobalStrandSmoothness=2",
						"HairWorksGlobalDensityQuality=0.75",
						"MaxCascadeCount=3",
						"CascadeShadowDistanceScale3=1",
						"HairWorkstGlobalDensityLimit=0.35",
						"TextureStreamingHeadsDistanceLimitSq=100",
						"MeshLODDistanceScale=1",
						"MaxSpotShadowSize=0",
						"ScaleformTextureUnstreamDelay=2.5",
						"DecalsChance=1",
						"TerrainReadAheadDistance=160",
						"AllowDLSSG=true",
						"SSREnabled=false",
						"HairWorksLevel=0",
						"MaxTextureArraySize=1024",
						"TerrainScreenSpaceErrorThreshold=4",
						"TerrainScreenSpaceErrorThresholdFar=8",
						"TextureStreamingCharacterDistanceLimitSq=225",
						"MaxTerrainShadowAtlasCount=2",
						"MaxCubeShadowSize=0",
						"TextureStreamingDistanceLimitSq=40000",
						"HairWorksGlobalDetailLODFactor=0.65",
						"AllowStreamline=true",
						"DeveloperMode=false",
						"TextureInFlightCountBudget=12",
						"DynamicResolutionPercentage=-1",
						"TerrainErrorMetricMultiplier=30",
						"CascadeShadowDistanceScale0=1",
						"MeshRenderingDistanceScale=1",
						"HairWorksAALevel=0",
						"TextureInFlightCountBudgetLoadingMode=256",
						"CascadeShadowDistanceScale1=1",
						"[Input/Gestures]",
						"EnableSwipe=true",
						"EnablePan=true",
						"EnableGestures=true",
						"EnablePinch=true",
						"[Visuals4K]",
						"PerformanceMode=true",
						"[LoadingScreen]",
						"FadeInTime=3",
						"SkipShowWithAnyKey=true",
						"GameRevealTime=3",
						"SkipHideDelay=3",
						"SkipInputDelay=0.25",
						"FadeOutTime=1.5",
						"SkipAutoshow=false",
						"[Rendering/TAA]",
						"CASPacked=false",
						"CASDistanceDecayStrength=0.6",
						"CASAmountNear=1",
						"CASAmount=1",
						"CASDistanceDecayPower=1.5",
						"CASDenoise=true",
						"TAAUseLDS=false",
						"CASDistanceBased=true",
						"CASFast=false",
						"CASAmountFar=0",
						"EnableCAS=true",
						"[Engine]",
						"LimitFPS=0",
						"[Rendering/SpeedTree]",
						"GrassGenerationEfficiency=0.075",
						"GrassDistanceScale=1",
						"FoliageDistanceScale=1",
						"FoliageShadowDistanceScale=4",
						"GrassRingSize=8388608",
						"[Rendering/TrimGrass]",
						"trimSlopeMost=0.6",
						"trimSizeMedium=0.65",
						"trimSlopeMedium=0.07",
						"trimSizeBig=1.2",
						"trimSizeSmall=0.1",
						"trimSlopeLeast=0.01",
						"[Gameplay/BoatCamera]",
						"BoatLocalSpaceCamera=false",
						"[Save]",
						"ShowCompatWarning=true",
						"[Kinect]",
						"Kinect=true",
						"[Foliage]",
						"MaxVisibilityDepth=3",
						""
					});
					num = 6;
				}
				if (num == 7)
				{
					File.WriteAllText(this.witcher3_settings2, text);
					num = 8;
				}
				if (num == 6)
				{
					File.SetAttributes(this.witcher3_settings2, FileAttributes.Normal);
					num = 7;
				}
				if (num == 4)
				{
					string[] array2 = (from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("Difficulty=")
						select s).ToArray<string>();
					num = 5;
				}
				if (num == 2)
				{
					(from s in File.ReadAllLines(this.witcher3_settings2)
						where s.Contains("TextLanguage")
						select s).ToArray<string>();
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 8);
		}

		// Token: 0x0600054B RID: 1355 RVA: 0x0014BD58 File Offset: 0x00149F58
		private void TF2_g()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"\"VideoConfig\"",
						"{",
						"\t\"setting.cl_gib_allow\"\t\t\"0\"",
						"\t\"setting.cl_particle_fallback_base\"\t\t\"3\"",
						"\t\"setting.cl_particle_fallback_multiplier\"\t\t\"2\"",
						"\t\"setting.cl_ragdoll_maxcount\"\t\t\"0\"",
						"\t\"setting.cl_ragdoll_self_collision\"\t\t\"1\"",
						"\t\"setting.mat_depthfeather_enable\"\t\t\"1\"",
						"\t\"setting.mat_forceaniso\"\t\t\"8\"",
						"\t\"setting.mat_mip_linear\"\t\t\"1\"",
						"\t\"setting.stream_memory\"\t\t\"0\"",
						"\t\"setting.mat_picmip\"\t\t\"2\"",
						"\t\"setting.particle_cpu_level\"\t\t\"0\"",
						"\t\"setting.r_createmodeldecals\"\t\t\"0\"",
						"\t\"setting.r_decals\"\t\t\"0\"",
						"\t\"setting.r_lod_switch_scale\"\t\t\"0.2\"",
						"\t\"setting.shadow_enable\"\t\t\"0\"",
						"\t\"setting.shadow_depthres\"\t\t\"256\"",
						"\t\"setting.shadow_maxdynamic\"\t\t\"0\"",
						"\t\"setting.r_hbaoenabled\"\t\t\"0\"",
						"\t\"setting.modeldecals_forceAllowed\"\t\t\"1\"",
						"\t\"setting.dvs_enable\"\t\t\"1\"",
						"\t\"setting.dvs_gpuframetime_min\"\t\t\"7918\"",
						"\t\"setting.dvs_gpuframetime_max\"\t\t\"8167\"",
						"\t\"setting.defaultres\"\t\t\"" + this.DefaultWidth + "\"",
						"\t\"setting.defaultresheight\"\t\t\"" + this.DefaultHeight + "\"",
						"\t\"setting.fullscreen\"\t\t\"1\"",
						"\t\"setting.nowindowborder\"\t\t\"0\"",
						"\t\"setting.mat_vsync_mode\"\t\t\"0\"",
						"\t\"setting.mat_backbuffer_count\"\t\t\"1\"",
						"\t\"setting.mat_antialias_mode\"\t\t\"12\"",
						"\t\"setting.csm_enabled\"\t\t\"0\"",
						"\t\"setting.csm_quality_level\"\t\t\"1\"",
						"\t\"setting.csm_cascade_res\"\t\t\"0\"",
						"\t\"setting.fadeDistScale\"\t\t\"0.850000\"",
						"\t\"setting.dvs_supersample_enable\"\t\t\"0\"",
						"\t\"setting.gamma\"\t\t\"1.000000\"",
						"\t\"setting.configversion\"\t\t\"7\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.titanfall2_settingloc, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.titanfall2_settingloc, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600054C RID: 1356 RVA: 0x0014BFFC File Offset: 0x0014A1FC
		private void TF2_f()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"\"VideoConfig\"",
						"{",
						"\t\"setting.cl_gib_allow\"\t\t\"0\"",
						"\t\"setting.cl_particle_fallback_base\"\t\t\"3\"",
						"\t\"setting.cl_particle_fallback_multiplier\"\t\t\"2\"",
						"\t\"setting.cl_ragdoll_maxcount\"\t\t\"0\"",
						"\t\"setting.cl_ragdoll_self_collision\"\t\t\"1\"",
						"\t\"setting.mat_depthfeather_enable\"\t\t\"1\"",
						"\t\"setting.mat_forceaniso\"\t\t\"8\"",
						"\t\"setting.mat_mip_linear\"\t\t\"1\"",
						"\t\"setting.stream_memory\"\t\t\"0\"",
						"\t\"setting.mat_picmip\"\t\t\"2\"",
						"\t\"setting.particle_cpu_level\"\t\t\"0\"",
						"\t\"setting.r_createmodeldecals\"\t\t\"0\"",
						"\t\"setting.r_decals\"\t\t\"0\"",
						"\t\"setting.r_lod_switch_scale\"\t\t\"0.3\"",
						"\t\"setting.shadow_enable\"\t\t\"0\"",
						"\t\"setting.shadow_depthres\"\t\t\"256\"",
						"\t\"setting.shadow_maxdynamic\"\t\t\"0\"",
						"\t\"setting.r_hbaoenabled\"\t\t\"0\"",
						"\t\"setting.modeldecals_forceAllowed\"\t\t\"1\"",
						"\t\"setting.dvs_enable\"\t\t\"1\"",
						"\t\"setting.dvs_gpuframetime_min\"\t\t\"11309\"",
						"\t\"setting.dvs_gpuframetime_max\"\t\t\"11666\"",
						"\t\"setting.defaultres\"\t\t\"" + this.DefaultWidth + "\"",
						"\t\"setting.defaultresheight\"\t\t\"" + this.DefaultHeight + "\"",
						"\t\"setting.fullscreen\"\t\t\"1\"",
						"\t\"setting.nowindowborder\"\t\t\"0\"",
						"\t\"setting.mat_vsync_mode\"\t\t\"0\"",
						"\t\"setting.mat_backbuffer_count\"\t\t\"1\"",
						"\t\"setting.mat_antialias_mode\"\t\t\"12\"",
						"\t\"setting.csm_enabled\"\t\t\"0\"",
						"\t\"setting.csm_quality_level\"\t\t\"1\"",
						"\t\"setting.csm_cascade_res\"\t\t\"0\"",
						"\t\"setting.fadeDistScale\"\t\t\"0.850000\"",
						"\t\"setting.dvs_supersample_enable\"\t\t\"0\"",
						"\t\"setting.gamma\"\t\t\"1.000000\"",
						"\t\"setting.configversion\"\t\t\"7\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.titanfall2_settingloc, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.titanfall2_settingloc, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600054D RID: 1357 RVA: 0x0014C2A0 File Offset: 0x0014A4A0
		private void TF2_d()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"\"VideoConfig\"",
						"{",
						"\t\"setting.cl_gib_allow\"\t\t\"0\"",
						"\t\"setting.cl_particle_fallback_base\"\t\t\"3\"",
						"\t\"setting.cl_particle_fallback_multiplier\"\t\t\"2\"",
						"\t\"setting.cl_ragdoll_maxcount\"\t\t\"0\"",
						"\t\"setting.cl_ragdoll_self_collision\"\t\t\"1\"",
						"\t\"setting.mat_depthfeather_enable\"\t\t\"1\"",
						"\t\"setting.mat_forceaniso\"\t\t\"8\"",
						"\t\"setting.mat_mip_linear\"\t\t\"1\"",
						"\t\"setting.stream_memory\"\t\t\"0\"",
						"\t\"setting.mat_picmip\"\t\t\"2\"",
						"\t\"setting.particle_cpu_level\"\t\t\"0\"",
						"\t\"setting.r_createmodeldecals\"\t\t\"0\"",
						"\t\"setting.r_decals\"\t\t\"0\"",
						"\t\"setting.r_lod_switch_scale\"\t\t\"0.5\"",
						"\t\"setting.shadow_enable\"\t\t\"0\"",
						"\t\"setting.shadow_depthres\"\t\t\"256\"",
						"\t\"setting.shadow_maxdynamic\"\t\t\"0\"",
						"\t\"setting.r_hbaoenabled\"\t\t\"0\"",
						"\t\"setting.modeldecals_forceAllowed\"\t\t\"1\"",
						"\t\"setting.dvs_enable\"\t\t\"1\"",
						"\t\"setting.dvs_gpuframetime_min\"\t\t\"15324\"",
						"\t\"setting.dvs_gpuframetime_max\"\t\t\"15807\"",
						"\t\"setting.defaultres\"\t\t\"" + this.DefaultWidth + "\"",
						"\t\"setting.defaultresheight\"\t\t\"" + this.DefaultHeight + "\"",
						"\t\"setting.fullscreen\"\t\t\"1\"",
						"\t\"setting.nowindowborder\"\t\t\"0\"",
						"\t\"setting.mat_vsync_mode\"\t\t\"0\"",
						"\t\"setting.mat_backbuffer_count\"\t\t\"1\"",
						"\t\"setting.mat_antialias_mode\"\t\t\"12\"",
						"\t\"setting.csm_enabled\"\t\t\"0\"",
						"\t\"setting.csm_quality_level\"\t\t\"1\"",
						"\t\"setting.csm_cascade_res\"\t\t\"0\"",
						"\t\"setting.fadeDistScale\"\t\t\"0.850000\"",
						"\t\"setting.dvs_supersample_enable\"\t\t\"0\"",
						"\t\"setting.gamma\"\t\t\"1.000000\"",
						"\t\"setting.configversion\"\t\t\"7\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.titanfall2_settingloc, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.titanfall2_settingloc, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600054E RID: 1358 RVA: 0x0014C544 File Offset: 0x0014A744
		private void TF2_c()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"\"VideoConfig\"",
						"{",
						"\t\"setting.cl_gib_allow\"\t\t\"0\"",
						"\t\"setting.cl_particle_fallback_base\"\t\t\"3\"",
						"\t\"setting.cl_particle_fallback_multiplier\"\t\t\"2\"",
						"\t\"setting.cl_ragdoll_maxcount\"\t\t\"0\"",
						"\t\"setting.cl_ragdoll_self_collision\"\t\t\"1\"",
						"\t\"setting.mat_depthfeather_enable\"\t\t\"1\"",
						"\t\"setting.mat_forceaniso\"\t\t\"8\"",
						"\t\"setting.mat_mip_linear\"\t\t\"1\"",
						"\t\"setting.stream_memory\"\t\t\"0\"",
						"\t\"setting.mat_picmip\"\t\t\"2\"",
						"\t\"setting.particle_cpu_level\"\t\t\"0\"",
						"\t\"setting.r_createmodeldecals\"\t\t\"0\"",
						"\t\"setting.r_decals\"\t\t\"0\"",
						"\t\"setting.r_lod_switch_scale\"\t\t\"0.5\"",
						"\t\"setting.shadow_enable\"\t\t\"0\"",
						"\t\"setting.shadow_depthres\"\t\t\"256\"",
						"\t\"setting.shadow_maxdynamic\"\t\t\"0\"",
						"\t\"setting.r_hbaoenabled\"\t\t\"0\"",
						"\t\"setting.modeldecals_forceAllowed\"\t\t\"1\"",
						"\t\"setting.dvs_enable\"\t\t\"1\"",
						"\t\"setting.dvs_gpuframetime_min\"\t\t\"16965\"",
						"\t\"setting.dvs_gpuframetime_max\"\t\t\"17500\"",
						"\t\"setting.defaultres\"\t\t\"" + this.DefaultWidth + "\"",
						"\t\"setting.defaultresheight\"\t\t\"" + this.DefaultHeight + "\"",
						"\t\"setting.fullscreen\"\t\t\"1\"",
						"\t\"setting.nowindowborder\"\t\t\"0\"",
						"\t\"setting.mat_vsync_mode\"\t\t\"0\"",
						"\t\"setting.mat_backbuffer_count\"\t\t\"1\"",
						"\t\"setting.mat_antialias_mode\"\t\t\"12\"",
						"\t\"setting.csm_enabled\"\t\t\"0\"",
						"\t\"setting.csm_quality_level\"\t\t\"1\"",
						"\t\"setting.csm_cascade_res\"\t\t\"0\"",
						"\t\"setting.fadeDistScale\"\t\t\"0.850000\"",
						"\t\"setting.dvs_supersample_enable\"\t\t\"0\"",
						"\t\"setting.gamma\"\t\t\"1.000000\"",
						"\t\"setting.configversion\"\t\t\"7\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.titanfall2_settingloc, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.titanfall2_settingloc, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x0600054F RID: 1359 RVA: 0x0014C7E8 File Offset: 0x0014A9E8
		private void TF2_b()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"\"VideoConfig\"",
						"{",
						"\t\"setting.cl_gib_allow\"\t\t\"0\"",
						"\t\"setting.cl_particle_fallback_base\"\t\t\"3\"",
						"\t\"setting.cl_particle_fallback_multiplier\"\t\t\"2\"",
						"\t\"setting.cl_ragdoll_maxcount\"\t\t\"0\"",
						"\t\"setting.cl_ragdoll_self_collision\"\t\t\"1\"",
						"\t\"setting.mat_depthfeather_enable\"\t\t\"1\"",
						"\t\"setting.mat_forceaniso\"\t\t\"8\"",
						"\t\"setting.mat_mip_linear\"\t\t\"1\"",
						"\t\"setting.stream_memory\"\t\t\"0\"",
						"\t\"setting.mat_picmip\"\t\t\"2\"",
						"\t\"setting.particle_cpu_level\"\t\t\"0\"",
						"\t\"setting.r_createmodeldecals\"\t\t\"0\"",
						"\t\"setting.r_decals\"\t\t\"0\"",
						"\t\"setting.r_lod_switch_scale\"\t\t\"0.5\"",
						"\t\"setting.shadow_enable\"\t\t\"0\"",
						"\t\"setting.shadow_depthres\"\t\t\"256\"",
						"\t\"setting.shadow_maxdynamic\"\t\t\"0\"",
						"\t\"setting.r_hbaoenabled\"\t\t\"0\"",
						"\t\"setting.modeldecals_forceAllowed\"\t\t\"1\"",
						"\t\"setting.dvs_enable\"\t\t\"1\"",
						"\t\"setting.dvs_gpuframetime_min\"\t\t\"21112\"",
						"\t\"setting.dvs_gpuframetime_max\"\t\t\"21778\"",
						"\t\"setting.defaultres\"\t\t\"" + this.DefaultWidth + "\"",
						"\t\"setting.defaultresheight\"\t\t\"" + this.DefaultHeight + "\"",
						"\t\"setting.fullscreen\"\t\t\"1\"",
						"\t\"setting.nowindowborder\"\t\t\"0\"",
						"\t\"setting.mat_vsync_mode\"\t\t\"0\"",
						"\t\"setting.mat_backbuffer_count\"\t\t\"1\"",
						"\t\"setting.mat_antialias_mode\"\t\t\"12\"",
						"\t\"setting.csm_enabled\"\t\t\"0\"",
						"\t\"setting.csm_quality_level\"\t\t\"1\"",
						"\t\"setting.csm_cascade_res\"\t\t\"0\"",
						"\t\"setting.fadeDistScale\"\t\t\"0.850000\"",
						"\t\"setting.dvs_supersample_enable\"\t\t\"0\"",
						"\t\"setting.gamma\"\t\t\"1.000000\"",
						"\t\"setting.configversion\"\t\t\"7\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.titanfall2_settingloc, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.titanfall2_settingloc, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000550 RID: 1360 RVA: 0x0014CA8C File Offset: 0x0014AC8C
		private void TF2_a()
		{
			int num = 0;
			do
			{
				string text;
				if (num == 1)
				{
					text = string.Join(Environment.NewLine, new string[]
					{
						"\"VideoConfig\"",
						"{",
						"\t\"setting.cl_gib_allow\"\t\t\"0\"",
						"\t\"setting.cl_particle_fallback_base\"\t\t\"3\"",
						"\t\"setting.cl_particle_fallback_multiplier\"\t\t\"2\"",
						"\t\"setting.cl_ragdoll_maxcount\"\t\t\"0\"",
						"\t\"setting.cl_ragdoll_self_collision\"\t\t\"1\"",
						"\t\"setting.mat_depthfeather_enable\"\t\t\"1\"",
						"\t\"setting.mat_forceaniso\"\t\t\"8\"",
						"\t\"setting.mat_mip_linear\"\t\t\"1\"",
						"\t\"setting.stream_memory\"\t\t\"0\"",
						"\t\"setting.mat_picmip\"\t\t\"2\"",
						"\t\"setting.particle_cpu_level\"\t\t\"0\"",
						"\t\"setting.r_createmodeldecals\"\t\t\"0\"",
						"\t\"setting.r_decals\"\t\t\"0\"",
						"\t\"setting.r_lod_switch_scale\"\t\t\"0.5\"",
						"\t\"setting.shadow_enable\"\t\t\"0\"",
						"\t\"setting.shadow_depthres\"\t\t\"256\"",
						"\t\"setting.shadow_maxdynamic\"\t\t\"0\"",
						"\t\"setting.r_hbaoenabled\"\t\t\"0\"",
						"\t\"setting.modeldecals_forceAllowed\"\t\t\"1\"",
						"\t\"setting.dvs_enable\"\t\t\"1\"",
						"\t\"setting.dvs_gpuframetime_min\"\t\t\"31668\"",
						"\t\"setting.dvs_gpuframetime_max\"\t\t\"32667\"",
						"\t\"setting.defaultres\"\t\t\"" + this.DefaultWidth + "\"",
						"\t\"setting.defaultresheight\"\t\t\"" + this.DefaultHeight + "\"",
						"\t\"setting.fullscreen\"\t\t\"1\"",
						"\t\"setting.nowindowborder\"\t\t\"0\"",
						"\t\"setting.mat_vsync_mode\"\t\t\"0\"",
						"\t\"setting.mat_backbuffer_count\"\t\t\"1\"",
						"\t\"setting.mat_antialias_mode\"\t\t\"12\"",
						"\t\"setting.csm_enabled\"\t\t\"0\"",
						"\t\"setting.csm_quality_level\"\t\t\"1\"",
						"\t\"setting.csm_cascade_res\"\t\t\"0\"",
						"\t\"setting.fadeDistScale\"\t\t\"0.850000\"",
						"\t\"setting.dvs_supersample_enable\"\t\t\"0\"",
						"\t\"setting.gamma\"\t\t\"1.000000\"",
						"\t\"setting.configversion\"\t\t\"7\"",
						"}",
						""
					});
					num = 2;
				}
				if (num == 3)
				{
					File.WriteAllText(this.titanfall2_settingloc, text);
					num = 4;
				}
				if (num == 2)
				{
					File.SetAttributes(this.titanfall2_settingloc, FileAttributes.Normal);
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 4);
		}

		// Token: 0x06000551 RID: 1361 RVA: 0x0014CD30 File Offset: 0x0014AF30
		private void UCLTC_g()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeviceId")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"DisplayMode=1",
						"ResolutionWidth=" + this.DefaultWidth,
						"ResolutionHeight=" + this.DefaultHeight,
						"AspectRatioMode=0",
						"WindowX=0",
						"WindowY=0",
						string.Join(Environment.NewLine, array),
						"Monitor=0",
						"DLSS=0",
						"DLSSSharpness=0.670000",
						"FSR2=0",
						"FSR2Sharpness=0.350000",
						"RenderScaleMenuValue=1.000000",
						"RenderScaleUserValue=1.000000",
						"PostResizeResolutionScalar=0.500000",
						"VSync=0",
						"FPSLimit=0",
						"PerformanceCounters=0",
						"HDRRendering=0",
						"Brightness=50.000000",
						"MotionBlur=0.000000",
						"AdvDisplayPreset=4",
						"AdvDisplayTextureQuality=0",
						"AdvDisplayModelQuality=0",
						"AdvDisplayAnisotropicFilter=0",
						"AdvDisplayShadows=0",
						"AdvDisplayReflections=0",
						"AdvDisplayAmbientOcclusion=0",
						""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000552 RID: 1362 RVA: 0x0014CFB0 File Offset: 0x0014B1B0
		private void UCLTC_f()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeviceId")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"DisplayMode=1",
						"ResolutionWidth=" + this.DefaultWidth,
						"ResolutionHeight=" + this.DefaultHeight,
						"AspectRatioMode=0",
						"WindowX=0",
						"WindowY=0",
						string.Join(Environment.NewLine, array),
						"Monitor=0",
						"DLSS=0",
						"DLSSSharpness=0.670000",
						"FSR2=0",
						"FSR2Sharpness=0.350000",
						"RenderScaleMenuValue=1.000000",
						"RenderScaleUserValue=1.000000",
						"PostResizeResolutionScalar=0.500000",
						"VSync=0",
						"FPSLimit=0",
						"PerformanceCounters=0",
						"HDRRendering=0",
						"Brightness=50.000000",
						"MotionBlur=0.000000",
						"AdvDisplayPreset=4",
						"AdvDisplayTextureQuality=0",
						"AdvDisplayModelQuality=0",
						"AdvDisplayAnisotropicFilter=0",
						"AdvDisplayShadows=0",
						"AdvDisplayReflections=0",
						"AdvDisplayAmbientOcclusion=0",
						""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000553 RID: 1363 RVA: 0x0014D230 File Offset: 0x0014B430
		private void UCLTC_d()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeviceId")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"DisplayMode=1",
						"ResolutionWidth=" + this.DefaultWidth,
						"ResolutionHeight=" + this.DefaultHeight,
						"AspectRatioMode=0",
						"WindowX=0",
						"WindowY=0",
						string.Join(Environment.NewLine, array),
						"Monitor=0",
						"DLSS=0",
						"DLSSSharpness=0.670000",
						"FSR2=0",
						"FSR2Sharpness=0.350000",
						"RenderScaleMenuValue=3.000000",
						"RenderScaleUserValue=3.000000",
						"PostResizeResolutionScalar=0.700000",
						"VSync=0",
						"FPSLimit=0",
						"PerformanceCounters=0",
						"HDRRendering=0",
						"Brightness=50.000000",
						"MotionBlur=0.000000",
						"AdvDisplayPreset=4",
						"AdvDisplayTextureQuality=0",
						"AdvDisplayModelQuality=0",
						"AdvDisplayAnisotropicFilter=0",
						"AdvDisplayShadows=0",
						"AdvDisplayReflections=0",
						"AdvDisplayAmbientOcclusion=0",
						""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000554 RID: 1364 RVA: 0x0014D4B0 File Offset: 0x0014B6B0
		private void UCLTC_c()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeviceId")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"DisplayMode=1",
						"ResolutionWidth=" + this.DefaultWidth,
						"ResolutionHeight=" + this.DefaultHeight,
						"AspectRatioMode=0",
						"WindowX=0",
						"WindowY=0",
						string.Join(Environment.NewLine, array),
						"Monitor=0",
						"DLSS=0",
						"DLSSSharpness=0.670000",
						"FSR2=0",
						"FSR2Sharpness=0.350000",
						"RenderScaleMenuValue=4.000000",
						"RenderScaleUserValue=4.000000",
						"PostResizeResolutionScalar=0.800000",
						"VSync=0",
						"FPSLimit=0",
						"PerformanceCounters=0",
						"HDRRendering=0",
						"Brightness=50.000000",
						"MotionBlur=0.000000",
						"AdvDisplayPreset=4",
						"AdvDisplayTextureQuality=0",
						"AdvDisplayModelQuality=0",
						"AdvDisplayAnisotropicFilter=0",
						"AdvDisplayShadows=0",
						"AdvDisplayReflections=0",
						"AdvDisplayAmbientOcclusion=0",
						""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000555 RID: 1365 RVA: 0x0014D730 File Offset: 0x0014B930
		private void UCLTC_b()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeviceId")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"DisplayMode=1",
						"ResolutionWidth=" + this.DefaultWidth,
						"ResolutionHeight=" + this.DefaultHeight,
						"AspectRatioMode=0",
						"WindowX=0",
						"WindowY=0",
						string.Join(Environment.NewLine, array),
						"Monitor=0",
						"DLSS=0",
						"DLSSSharpness=0.670000",
						"FSR2=0",
						"FSR2Sharpness=0.350000",
						"RenderScaleMenuValue=4.000000",
						"RenderScaleUserValue=4.000000",
						"PostResizeResolutionScalar=0.800000",
						"VSync=0",
						"FPSLimit=0",
						"PerformanceCounters=0",
						"HDRRendering=0",
						"Brightness=50.000000",
						"MotionBlur=0.000000",
						"AdvDisplayPreset=4",
						"AdvDisplayTextureQuality=0",
						"AdvDisplayModelQuality=0",
						"AdvDisplayAnisotropicFilter=0",
						"AdvDisplayShadows=0",
						"AdvDisplayReflections=0",
						"AdvDisplayAmbientOcclusion=0",
						""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000556 RID: 1366 RVA: 0x0014D9B0 File Offset: 0x0014BBB0
		private void UCLTC_a()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("DeviceId")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"DisplayMode=1",
						"ResolutionWidth=" + this.DefaultWidth,
						"ResolutionHeight=" + this.DefaultHeight,
						"AspectRatioMode=0",
						"WindowX=0",
						"WindowY=0",
						string.Join(Environment.NewLine, array),
						"Monitor=0",
						"DLSS=0",
						"DLSSSharpness=0.670000",
						"FSR2=0",
						"FSR2Sharpness=0.350000",
						"RenderScaleMenuValue=5.000000",
						"RenderScaleUserValue=5.000000",
						"PostResizeResolutionScalar=0.900000",
						"VSync=0",
						"FPSLimit=0",
						"PerformanceCounters=0",
						"HDRRendering=0",
						"Brightness=50.000000",
						"MotionBlur=0.000000",
						"AdvDisplayPreset=4",
						"AdvDisplayTextureQuality=0",
						"AdvDisplayModelQuality=0",
						"AdvDisplayAnisotropicFilter=0",
						"AdvDisplayShadows=0",
						"AdvDisplayReflections=0",
						"AdvDisplayAmbientOcclusion=0",
						""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 5);
		}

		// Token: 0x06000557 RID: 1367 RVA: 0x0014DC30 File Offset: 0x0014BE30
		private void VAL_g()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.ReadOnly);
					num = 6;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/ShooterGame.ShooterGameUserSettings]",
						string.Join(Environment.NewLine, array),
						"bShouldLetterbox=True",
						"bLastConfirmedShouldLetterbox=True",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=0",
						"WindowPosY=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=1",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=ShooterGame",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=40.000000",
						"sg.ViewDistanceQuality=3",
						"sg.AntiAliasingQuality=3",
						"sg.ShadowQuality=3",
						"sg.PostProcessQuality=3",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=3",
						"sg.FoliageQuality=3",
						""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x06000558 RID: 1368 RVA: 0x0014DFEC File Offset: 0x0014C1EC
		private void VAL_f()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.ReadOnly);
					num = 6;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/ShooterGame.ShooterGameUserSettings]",
						string.Join(Environment.NewLine, array),
						"bShouldLetterbox=True",
						"bLastConfirmedShouldLetterbox=True",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=0",
						"WindowPosY=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=1",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=ShooterGame",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=50.000000",
						"sg.ViewDistanceQuality=3",
						"sg.AntiAliasingQuality=3",
						"sg.ShadowQuality=3",
						"sg.PostProcessQuality=3",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=3",
						"sg.FoliageQuality=3",
						""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x06000559 RID: 1369 RVA: 0x0014E3A8 File Offset: 0x0014C5A8
		private void VAL_d()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.ReadOnly);
					num = 6;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/ShooterGame.ShooterGameUserSettings]",
						string.Join(Environment.NewLine, array),
						"bShouldLetterbox=True",
						"bLastConfirmedShouldLetterbox=True",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=0",
						"WindowPosY=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=1",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=ShooterGame",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=70.000000",
						"sg.ViewDistanceQuality=3",
						"sg.AntiAliasingQuality=3",
						"sg.ShadowQuality=3",
						"sg.PostProcessQuality=3",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=3",
						"sg.FoliageQuality=3",
						""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x0600055A RID: 1370 RVA: 0x0014E764 File Offset: 0x0014C964
		private void VAL_c()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.ReadOnly);
					num = 6;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/ShooterGame.ShooterGameUserSettings]",
						string.Join(Environment.NewLine, array),
						"bShouldLetterbox=True",
						"bLastConfirmedShouldLetterbox=True",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=0",
						"WindowPosY=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=1",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=ShooterGame",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=80.000000",
						"sg.ViewDistanceQuality=3",
						"sg.AntiAliasingQuality=3",
						"sg.ShadowQuality=3",
						"sg.PostProcessQuality=3",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=3",
						"sg.FoliageQuality=3",
						""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x0600055B RID: 1371 RVA: 0x0014EB20 File Offset: 0x0014CD20
		private void VAL_b()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.ReadOnly);
					num = 6;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/ShooterGame.ShooterGameUserSettings]",
						string.Join(Environment.NewLine, array),
						"bShouldLetterbox=True",
						"bLastConfirmedShouldLetterbox=True",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=0",
						"WindowPosY=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=1",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=ShooterGame",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=85.000000",
						"sg.ViewDistanceQuality=3",
						"sg.AntiAliasingQuality=3",
						"sg.ShadowQuality=3",
						"sg.PostProcessQuality=3",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=3",
						"sg.FoliageQuality=3",
						""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x0600055C RID: 1372 RVA: 0x0014EEDC File Offset: 0x0014D0DC
		private void VAL_a()
		{
			int num = 0;
			do
			{
				string[] array;
				if (num == 1)
				{
					array = (from s in File.ReadAllLines(this.textBox1.Text)
						where s.Contains("Monitor")
						select s).ToArray<string>();
					num = 2;
				}
				if (num == 3)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
					num = 4;
				}
				if (num == 5)
				{
					File.SetAttributes(this.textBox1.Text, FileAttributes.ReadOnly);
					num = 6;
				}
				if (num == 4)
				{
					string text;
					File.WriteAllText(this.textBox1.Text, text);
					num = 5;
				}
				if (num == 2)
				{
					string text = string.Join(Environment.NewLine, new string[]
					{
						"[/Script/ShooterGame.ShooterGameUserSettings]",
						string.Join(Environment.NewLine, array),
						"bShouldLetterbox=True",
						"bLastConfirmedShouldLetterbox=True",
						"bUseVSync=False",
						"bUseDynamicResolution=False",
						"ResolutionSizeX=" + this.DefaultWidth,
						"ResolutionSizeY=" + this.DefaultHeight,
						"LastUserConfirmedResolutionSizeX=" + this.DefaultWidth,
						"LastUserConfirmedResolutionSizeY=" + this.DefaultHeight,
						"WindowPosX=0",
						"WindowPosY=0",
						"LastConfirmedFullscreenMode=0",
						"PreferredFullscreenMode=1",
						"AudioQualityLevel=0",
						"LastConfirmedAudioQualityLevel=0",
						"FrameRateLimit=0.000000",
						"DesiredScreenWidth=" + this.DefaultWidth,
						"DesiredScreenHeight=" + this.DefaultHeight,
						"LastUserConfirmedDesiredScreenWidth=" + this.DefaultWidth,
						"LastUserConfirmedDesiredScreenHeight=" + this.DefaultHeight,
						"LastRecommendedScreenWidth=-1.000000",
						"LastRecommendedScreenHeight=-1.000000",
						"LastCPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkResult=-1.000000",
						"LastGPUBenchmarkMultiplier=1.000000",
						"bUseHDRDisplayOutput=False",
						"HDRDisplayOutputNits=1000",
						"",
						"[ShaderPipelineCache.CacheFile]",
						"LastOpened=ShooterGame",
						"",
						"[/Script/Engine.GameUserSettings]",
						"bUseDesiredScreenHeight=False",
						"",
						"[ScalabilityGroups]",
						"sg.ResolutionQuality=100.000000",
						"sg.ViewDistanceQuality=3",
						"sg.AntiAliasingQuality=3",
						"sg.ShadowQuality=3",
						"sg.PostProcessQuality=3",
						"sg.TextureQuality=0",
						"sg.EffectsQuality=3",
						"sg.FoliageQuality=3",
						""
					});
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 6);
		}

		// Token: 0x0600055D RID: 1373 RVA: 0x0014F298 File Offset: 0x0014D498
		private void revert_btn_Click(object sender, EventArgs e)
		{
			int num = 0;
			reverted reverted;
			do
			{
				bool flag;
				if (num == 1)
				{
					flag = this.grpbox.Text == "ARK : Survival Evolved";
					num = 2;
				}
				if (num == 3)
				{
					File.Delete(this.ark_main);
					num = 4;
				}
				if (num == 5)
				{
					File.Delete(this.ark_second);
					num = 6;
				}
				if (num == 6)
				{
					reverted = new reverted();
					num = 7;
				}
				if (num == 4)
				{
					File.Delete(this.ark_first);
					num = 5;
				}
				if (num == 2)
				{
					if (!flag)
					{
						goto IL_FC;
					}
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 7);
			try
			{
				reverted.ShowDialog(this);
			}
			finally
			{
				if (reverted != null)
				{
					((IDisposable)reverted).Dispose();
				}
			}
			this.reset_grpbox();
			IL_FC:
			if (this.grpbox.Text == "A Plague Tale: Innocence")
			{
				File.Delete(this.apti_settings);
				using (reverted reverted2 = new reverted())
				{
					reverted2.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Assassin’s Creed Odyssey")
			{
				File.Delete(this.assassins_creed_odessey);
				using (reverted reverted3 = new reverted())
				{
					reverted3.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Assassin’s Creed Valhalla")
			{
				File.Delete(this.assassins_creed_valhalla);
				using (reverted reverted4 = new reverted())
				{
					reverted4.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Battlefield 1")
			{
				File.Delete(this.battlefield1_profile);
				File.Delete(this.battlefield1_usercfg);
				using (reverted reverted5 = new reverted())
				{
					reverted5.ShowDialog();
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Battlefield 4")
			{
				File.Delete(this.battlefield4_profile);
				File.Delete(this.battlefield4_usercfg);
				using (reverted reverted6 = new reverted())
				{
					reverted6.ShowDialog();
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Battlefield 5")
			{
				File.Delete(this.battlefield5_profile);
				File.Delete(this.battlefield5_usercfg);
				using (reverted reverted7 = new reverted())
				{
					reverted7.ShowDialog();
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Battlefield 2042")
			{
				File.Delete(this.battlefield2042_profile);
				using (reverted reverted8 = new reverted())
				{
					reverted8.ShowDialog();
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Battlefield Hardline")
			{
				File.Delete(this.battlefieldhl_profile);
				File.Delete(this.battlefieldhl_usercfg);
				using (reverted reverted9 = new reverted())
				{
					reverted9.ShowDialog();
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Fallout 4")
			{
				File.Delete(this.fallout4_settings);
				using (reverted reverted10 = new reverted())
				{
					reverted10.ShowDialog();
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Fallout 76")
			{
				File.Delete(this.fallout76_settings);
				using (reverted reverted11 = new reverted())
				{
					reverted11.ShowDialog();
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Far Cry 5")
			{
				File.Delete(this.textBox1.Text);
				using (reverted reverted12 = new reverted())
				{
					reverted12.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Far Cry 6")
			{
				File.Delete(this.textBox1.Text);
				using (reverted reverted13 = new reverted())
				{
					reverted13.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "A Plague Tale: Requiem")
			{
				File.Delete(this.aptr_settings);
				using (reverted reverted14 = new reverted())
				{
					reverted14.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Call Of Duty : Modern Warfare 2 (2022)")
			{
				File.Delete(this.cod_mw2_settings);
				using (reverted reverted15 = new reverted())
				{
					reverted15.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Call Of Duty : Warzone 2.0")
			{
				File.Delete(this.cod_mw2_settings);
				using (reverted reverted16 = new reverted())
				{
					reverted16.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Days Gone")
			{
				File.Delete(this.daysgone_main);
				File.Delete(this.daysgone_first);
				File.Delete(this.daysgone_second);
				using (reverted reverted17 = new reverted())
				{
					reverted17.ShowDialog();
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Dead Space" || this.grpbox.Text == "Dead Space (Steam)")
			{
				File.Delete(this.dead_space_main);
				File.Delete(this.dead_space_first);
				using (reverted reverted18 = new reverted())
				{
					reverted18.ShowDialog();
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Dying Light 2")
			{
				File.Delete(this.dyinglight2_first);
				File.Delete(this.dyinglight2_second);
				File.Delete(this.dyinglight2_third);
				File.Delete(this.dyinglight2_fourth);
				using (reverted reverted19 = new reverted())
				{
					reverted19.ShowDialog();
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Destiny 2")
			{
				File.Delete(this.destiny2_settings);
				using (reverted reverted20 = new reverted())
				{
					reverted20.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "High on Life")
			{
				File.Delete(this.highonlife_main);
				File.Delete(this.highonlife_first);
				File.Delete(this.highonlife_second);
				File.Delete(this.highonlife_third);
				using (reverted reverted21 = new reverted())
				{
					reverted21.ShowDialog();
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Hogwarts Legacy")
			{
				File.Delete(this.hogwarts_main);
				File.Delete(this.hogwarts_first);
				File.Delete(this.hogwarts_second);
				using (reverted reverted22 = new reverted())
				{
					reverted22.ShowDialog();
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Marvel's Spider-Man : Miles Morales")
			{
				try
				{
					RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software\\Insomniac Games\\Marvel's Spider-Man Miles Morales", true);
					if (registryKey != null)
					{
						RegistryTools.DeleteSubKeyTree(ref registryKey, "Graphics");
					}
					using (reverted reverted23 = new reverted())
					{
						reverted23.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				catch
				{
				}
			}
			if (this.grpbox.Text == "Need for Speed Heat")
			{
				File.Delete(this.nfs_heat_first);
				File.Delete(this.nfs_heat_main);
				using (reverted reverted24 = new reverted())
				{
					reverted24.ShowDialog();
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Overwatch 2")
			{
				File.Delete(this.overwatch2_settings);
				using (reverted reverted25 = new reverted())
				{
					reverted25.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "PUBG : Battlegrounds")
			{
				File.Delete(this.pubg_main);
				File.Delete(this.pubg_first);
				File.Delete(this.pubg_second);
				using (reverted reverted26 = new reverted())
				{
					reverted26.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Resident Evil 2 (2019)")
			{
				File.Delete(this.textBox1.Text);
				using (reverted reverted27 = new reverted())
				{
					reverted27.ShowDialog();
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Resident Evil 3 (2020)")
			{
				File.Delete(this.textBox1.Text);
				using (reverted reverted28 = new reverted())
				{
					reverted28.ShowDialog();
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "RUST")
			{
				File.Delete(this.rust_cfg);
				using (reverted reverted29 = new reverted())
				{
					reverted29.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Sea of Thieves (Microsoft Store)")
			{
				File.Delete(this.seaofthieves_main);
				File.Delete(this.seaofthieves_first);
				File.Delete(this.seaofthieves_second);
				using (reverted reverted30 = new reverted())
				{
					reverted30.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Sea of Thieves (Steam)")
			{
				File.Delete(this.MS_seaofthieves_main);
				File.Delete(this.MS_seaofthieves_first);
				File.Delete(this.MS_seaofthieves_second);
				using (reverted reverted31 = new reverted())
				{
					reverted31.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Sekiro: Shadows Die Twice")
			{
				File.Delete(this.sekiro_xml);
				using (reverted reverted32 = new reverted())
				{
					reverted32.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "The Witcher 3 : Wild Hunt")
			{
				File.Delete(this.witcher3_settings);
				File.Delete(this.witcher3_settings2);
				using (reverted reverted33 = new reverted())
				{
					reverted33.ShowDialog();
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Uncharted : Legacy of Thieves Collection")
			{
				File.Delete(this.textBox1.Text);
				using (reverted reverted34 = new reverted())
				{
					reverted34.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Apex Legends")
			{
				File.Delete(this.textBox1.Text);
				using (reverted reverted35 = new reverted())
				{
					reverted35.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Call Of Duty : Warzone")
			{
				File.Delete(this.warzone_setting1);
				File.Delete(this.warzone_setting2);
				using (reverted reverted36 = new reverted())
				{
					reverted36.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Grand Theft Auto 5")
			{
				File.Delete(this.gta_settingloc);
				using (reverted reverted37 = new reverted())
				{
					reverted37.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Ghostwire : Tokyo")
			{
				File.Delete(this.ghostwire_main);
				File.Delete(this.ghostwire_first);
				File.Delete(this.ghostwire_second);
				using (reverted reverted38 = new reverted())
				{
					reverted38.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "God Of War (2018)")
			{
				File.Delete(this.textBox1.Text);
				using (reverted reverted39 = new reverted())
				{
					reverted39.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "League of Legends")
			{
				File.Delete(this.textBox1.Text);
				using (reverted reverted40 = new reverted())
				{
					reverted40.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Marvel's Spider-Man Remastered")
			{
				try
				{
					RegistryKey registryKey2 = Registry.CurrentUser.OpenSubKey("Software\\Insomniac Games\\Marvel's Spider-Man Remastered", true);
					if (registryKey2 != null)
					{
						RegistryTools.DeleteSubKeyTree(ref registryKey2, "Graphics");
					}
					using (reverted reverted41 = new reverted())
					{
						reverted41.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				catch
				{
				}
			}
			if (this.grpbox.Text == "Rainbow Six Siege")
			{
				File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
				File.Delete(this.textBox1.Text);
				using (reverted reverted42 = new reverted())
				{
					reverted42.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Red Dead Redemption 2")
			{
				File.Delete(this.rdr2_settingloc);
				using (reverted reverted43 = new reverted())
				{
					reverted43.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Resident Evil : Village")
			{
				File.Delete(this.textBox1.Text);
				using (reverted reverted44 = new reverted())
				{
					reverted44.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Rocket League")
			{
				File.Delete(this.rocket_league_settingloc);
				using (reverted reverted45 = new reverted())
				{
					reverted45.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Stray")
			{
				File.Delete(this.stray_main);
				File.Delete(this.stray_first);
				File.Delete(this.stray_second);
				using (reverted reverted46 = new reverted())
				{
					reverted46.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Titanfall 2")
			{
				File.Delete(this.titanfall2_settingloc);
				using (reverted reverted47 = new reverted())
				{
					reverted47.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Valorant")
			{
				File.SetAttributes(this.textBox1.Text, FileAttributes.Normal);
				File.Delete(this.textBox1.Text);
				using (reverted reverted48 = new reverted())
				{
					reverted48.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Sons of the Forest")
			{
				File.Delete(this.sonsoftheforest);
				using (reverted reverted49 = new reverted())
				{
					reverted49.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "The Forest")
			{
				try
				{
					RegistryKey registryKey3 = Registry.CurrentUser.OpenSubKey("\\SOFTWARE\\SKS", true);
					if (registryKey3 != null)
					{
						RegistryTools.DeleteSubKeyTree(ref registryKey3, "TheForest");
					}
					using (reverted reverted50 = new reverted())
					{
						reverted50.ShowDialog(this);
					}
					this.reset_grpbox();
				}
				catch
				{
				}
			}
			if (this.grpbox.Text == "Atomic Heart" || this.grpbox.Text == "Atomic Heart (Microsoft Store)")
			{
				File.Delete(this.atomicHeart_main);
				File.Delete(this.atomicHeart_first);
				File.Delete(this.atomicHeart_second);
				File.Delete(this.atomicHeart_third);
				using (reverted reverted51 = new reverted())
				{
					reverted51.ShowDialog(this);
				}
				this.reset_grpbox();
			}
			if (this.grpbox.Text == "Atomic Heart (Steam)" && (this.grpbox.Text == "Atomic Heart" || this.grpbox.Text == "Atomic Heart (Microsoft Store)"))
			{
				File.Delete(this.atomicHeartS_main);
				File.Delete(this.atomicHeartS_first);
				File.Delete(this.atomicHeartS_second);
				File.Delete(this.atomicHeartS_third);
				using (reverted reverted52 = new reverted())
				{
					reverted52.ShowDialog(this);
				}
				this.reset_grpbox();
			}
		}

		// Token: 0x0600055E RID: 1374 RVA: 0x000026BD File Offset: 0x000008BD
		private void get_own_ark_evolved()
		{
			File.SetAttributes(this.ark_main, FileAttributes.Normal);
			File.SetAttributes(this.ark_first, FileAttributes.Normal);
			File.SetAttributes(this.ark_second, FileAttributes.Normal);
		}

		// Token: 0x0600055F RID: 1375 RVA: 0x000026EF File Offset: 0x000008EF
		private void get_own_PUBG()
		{
			File.SetAttributes(this.pubg_main, FileAttributes.Normal);
			File.SetAttributes(this.pubg_first, FileAttributes.Normal);
			File.SetAttributes(this.pubg_second, FileAttributes.Normal);
		}

		// Token: 0x06000560 RID: 1376 RVA: 0x00002721 File Offset: 0x00000921
		private void get_own_daysgone()
		{
			File.SetAttributes(this.daysgone_main, FileAttributes.Normal);
			File.SetAttributes(this.daysgone_first, FileAttributes.Normal);
			File.SetAttributes(this.daysgone_second, FileAttributes.Normal);
		}

		// Token: 0x06000561 RID: 1377 RVA: 0x00002753 File Offset: 0x00000953
		private void get_own_highonlife()
		{
			File.SetAttributes(this.highonlife_main, FileAttributes.Normal);
			File.SetAttributes(this.highonlife_first, FileAttributes.Normal);
			File.SetAttributes(this.highonlife_second, FileAttributes.Normal);
		}

		// Token: 0x06000562 RID: 1378 RVA: 0x00002785 File Offset: 0x00000985
		private void get_own_stray()
		{
			File.SetAttributes(this.stray_main, FileAttributes.Normal);
			File.SetAttributes(this.stray_first, FileAttributes.Normal);
			File.SetAttributes(this.stray_second, FileAttributes.Normal);
		}

		// Token: 0x06000563 RID: 1379 RVA: 0x000027B7 File Offset: 0x000009B7
		private void get_own_ghostwire()
		{
			File.SetAttributes(this.ghostwire_main, FileAttributes.Normal);
			File.SetAttributes(this.ghostwire_first, FileAttributes.Normal);
			File.SetAttributes(this.ghostwire_second, FileAttributes.Normal);
		}

		// Token: 0x06000564 RID: 1380 RVA: 0x000027E9 File Offset: 0x000009E9
		private void get_own_SOT()
		{
			File.SetAttributes(this.seaofthieves_main, FileAttributes.Normal);
			File.SetAttributes(this.seaofthieves_first, FileAttributes.Normal);
			File.SetAttributes(this.seaofthieves_second, FileAttributes.Normal);
		}

		// Token: 0x06000565 RID: 1381 RVA: 0x0000281B File Offset: 0x00000A1B
		private void get_own_MS_SOT()
		{
			File.SetAttributes(this.MS_seaofthieves_main, FileAttributes.Normal);
			File.SetAttributes(this.MS_seaofthieves_first, FileAttributes.Normal);
			File.SetAttributes(this.MS_seaofthieves_second, FileAttributes.Normal);
		}

		// Token: 0x06000566 RID: 1382 RVA: 0x00150C04 File Offset: 0x0014EE04
		private void get_own_AH()
		{
			File.SetAttributes(this.atomicHeart_main, FileAttributes.Normal);
			File.SetAttributes(this.atomicHeart_first, FileAttributes.Normal);
			File.SetAttributes(this.atomicHeart_second, FileAttributes.Normal);
			File.SetAttributes(this.atomicHeart_third, FileAttributes.Normal);
		}

		// Token: 0x06000567 RID: 1383 RVA: 0x00150C54 File Offset: 0x0014EE54
		private void get_own_AHS()
		{
			File.SetAttributes(this.atomicHeartS_main, FileAttributes.Normal);
			File.SetAttributes(this.atomicHeartS_first, FileAttributes.Normal);
			File.SetAttributes(this.atomicHeartS_second, FileAttributes.Normal);
			File.SetAttributes(this.atomicHeartS_third, FileAttributes.Normal);
		}

		// Token: 0x06000568 RID: 1384 RVA: 0x00150CA4 File Offset: 0x0014EEA4
		protected override void Dispose(bool disposing)
		{
			int num = 0;
			do
			{
				if (num == 1)
				{
					if (!disposing)
					{
						goto Block_4;
					}
					num = 2;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 2);
			bool flag = this.components != null;
			goto IL_4D;
			Block_4:
			flag = false;
			IL_4D:
			if (flag)
			{
				this.components.Dispose();
			}
			base.Dispose(disposing);
		}

		// Token: 0x06000569 RID: 1385 RVA: 0x00150D1C File Offset: 0x0014EF1C
		private void InitializeComponent()
		{
			int num = 0;
			do
			{
				ComponentResourceManager componentResourceManager;
				if (num == 1)
				{
					componentResourceManager = new ComponentResourceManager(typeof(GameOptimizations));
					num = 2;
				}
				if (num == 3)
				{
					this.label1 = new Label();
					num = 4;
				}
				if (num == 5)
				{
					this.siticoneComboBox1 = new SiticoneComboBox();
					num = 6;
				}
				if (num == 7)
				{
					this.textBox1 = new TextBox();
					num = 8;
				}
				if (num == 9)
				{
					this.set_customres = new SiticoneButton();
					num = 10;
				}
				if (num == 11)
				{
					this.dx12 = new SiticoneRadioButton();
					num = 12;
				}
				if (num == 13)
				{
					this.label5 = new Label();
					num = 14;
				}
				if (num == 15)
				{
					this.height_txtbox = new SiticoneTextBox();
					num = 16;
				}
				if (num == 17)
				{
					this.label3 = new Label();
					num = 18;
				}
				if (num == 18)
				{
					this.resolution = new SiticoneComboBox();
					num = 19;
				}
				if (num == 20)
				{
					this.apply_btn = new SiticoneRoundedButton();
					num = 21;
				}
				if (num == 22)
				{
					base.SuspendLayout();
					num = 23;
				}
				if (num == 24)
				{
					this.label9.Font = new Font("Josefin Sans", 9f, FontStyle.Regular, GraphicsUnit.Point, 0);
					num = 25;
				}
				if (num == 26)
				{
					this.label9.Location = new Point(23, 53);
					num = 27;
				}
				if (num == 28)
				{
					this.label9.Size = new Size(180, 19);
					num = 29;
				}
				if (num == 30)
				{
					this.label9.Text = "Optimize your favourite games";
					num = 31;
				}
				if (num == 32)
				{
					this.label1.Font = new Font("Josefin Sans SemiBold", 25f, FontStyle.Bold | FontStyle.Italic | FontStyle.Underline, GraphicsUnit.Point, 0);
					num = 33;
				}
				if (num == 34)
				{
					this.label1.Location = new Point(18, 0);
					num = 35;
				}
				if (num == 36)
				{
					this.label1.Size = new Size(346, 53);
					num = 37;
				}
				if (num == 37)
				{
					this.label1.TabIndex = 86;
					num = 38;
				}
				if (num == 39)
				{
					this.next_btn.CheckedState.Parent = this.next_btn;
					num = 40;
				}
				if (num == 41)
				{
					this.next_btn.DisabledState.BorderColor = Color.DarkGray;
					num = 42;
				}
				if (num == 43)
				{
					this.next_btn.DisabledState.FillColor = Color.FromArgb(169, 169, 169);
					num = 44;
				}
				if (num == 45)
				{
					this.next_btn.DisabledState.Parent = this.next_btn;
					num = 46;
				}
				if (num == 47)
				{
					this.next_btn.Font = new Font("Josefin Sans", 12f, FontStyle.Regular, GraphicsUnit.Point, 0);
					num = 48;
				}
				if (num == 49)
				{
					this.next_btn.HoverState.Parent = this.next_btn;
					num = 50;
				}
				if (num == 51)
				{
					this.next_btn.Location = new Point(774, 143);
					num = 52;
				}
				if (num == 53)
				{
					this.next_btn.ShadowDecoration.Parent = this.next_btn;
					num = 54;
				}
				if (num == 54)
				{
					this.next_btn.Size = new Size(133, 36);
					num = 55;
				}
				if (num == 56)
				{
					this.next_btn.Text = "Next";
					num = 57;
				}
				if (num == 58)
				{
					this.siticoneComboBox1.BackColor = Color.FromArgb(38, 38, 38);
					num = 59;
				}
				if (num == 60)
				{
					this.siticoneComboBox1.DropDownStyle = ComboBoxStyle.DropDownList;
					num = 61;
				}
				if (num == 62)
				{
					this.siticoneComboBox1.FocusedColor = Color.FromArgb(94, 148, 255);
					num = 63;
				}
				if (num == 64)
				{
					this.siticoneComboBox1.FocusedState.Parent = this.siticoneComboBox1;
					num = 65;
				}
				if (num == 66)
				{
					this.siticoneComboBox1.ForeColor = Color.White;
					num = 67;
				}
				if (num == 68)
				{
					this.siticoneComboBox1.ItemHeight = 30;
					num = 69;
				}
				if (num == 70)
				{
					this.siticoneComboBox1.ItemsAppearance.Parent = this.siticoneComboBox1;
					num = 71;
				}
				if (num == 72)
				{
					this.siticoneComboBox1.Name = "siticoneComboBox1";
					num = 73;
				}
				if (num == 73)
				{
					this.siticoneComboBox1.ShadowDecoration.Parent = this.siticoneComboBox1;
					num = 74;
				}
				if (num == 75)
				{
					this.siticoneComboBox1.TabIndex = 318;
					num = 76;
				}
				if (num == 77)
				{
					this.label2.Font = new Font("Josefin Sans", 14.25f, FontStyle.Regular, GraphicsUnit.Point, 0);
					num = 78;
				}
				if (num == 79)
				{
					this.label2.Location = new Point(82, 143);
					num = 80;
				}
				if (num == 81)
				{
					this.label2.Size = new Size(180, 30);
					num = 82;
				}
				if (num == 83)
				{
					this.label2.Text = "Choose your game :";
					num = 84;
				}
				if (num == 85)
				{
					this.textBox1.Name = "textBox1";
					num = 86;
				}
				if (num == 87)
				{
					this.textBox1.TabIndex = 320;
					num = 88;
				}
				if (num == 89)
				{
					this.grpbox.Controls.Add(this.label6);
					num = 90;
				}
				if (num == 91)
				{
					this.grpbox.Controls.Add(this.dx11);
					num = 92;
				}
				if (num == 92)
				{
					this.grpbox.Controls.Add(this.label5);
					num = 93;
				}
				if (num == 94)
				{
					this.grpbox.Controls.Add(this.height_txtbox);
					num = 95;
				}
				if (num == 96)
				{
					this.grpbox.Controls.Add(this.label3);
					num = 97;
				}
				if (num == 98)
				{
					this.grpbox.Controls.Add(this.revert_btn);
					num = 99;
				}
				if (num == 100)
				{
					this.grpbox.Font = new Font("Josefin Sans", 15.75f, FontStyle.Italic, GraphicsUnit.Point, 0);
					num = 101;
				}
				if (num == 102)
				{
					this.grpbox.Location = new Point(1165, 76);
					num = 103;
				}
				if (num == 104)
				{
					this.grpbox.Size = new Size(892, 395);
					num = 105;
				}
				if (num == 106)
				{
					this.grpbox.TabStop = false;
					num = 107;
				}
				if (num == 108)
				{
					this.set_customres.CheckedState.Parent = this.set_customres;
					num = 109;
				}
				if (num == 109)
				{
					this.set_customres.CustomImages.Parent = this.set_customres;
					num = 110;
				}
				if (num == 111)
				{
					this.set_customres.DisabledState.CustomBorderColor = Color.FromArgb(64, 64, 64);
					num = 112;
				}
				if (num == 113)
				{
					this.set_customres.DisabledState.ForeColor = Color.FromArgb(64, 64, 64);
					num = 114;
				}
				if (num == 115)
				{
					this.set_customres.Enabled = false;
					num = 116;
				}
				if (num == 117)
				{
					this.set_customres.Font = new Font("Josefin Sans", 12f, FontStyle.Regular, GraphicsUnit.Point, 0);
					num = 118;
				}
				if (num == 119)
				{
					this.set_customres.HoverState.Parent = this.set_customres;
					num = 120;
				}
				if (num == 121)
				{
					this.set_customres.ImageSize = new Size(50, 50);
					num = 122;
				}
				if (num == 123)
				{
					this.set_customres.Name = "set_customres";
					num = 124;
				}
				if (num == 125)
				{
					this.set_customres.Size = new Size(41, 36);
					num = 126;
				}
				if (num == 127)
				{
					this.set_customres.Click += this.set_customres_Click;
					num = 128;
				}
				if (num == 128)
				{
					this.label6.AutoSize = true;
					num = 129;
				}
				if (num == 130)
				{
					this.label6.ForeColor = Color.White;
					num = 131;
				}
				if (num == 132)
				{
					this.label6.Name = "label6";
					num = 133;
				}
				if (num == 134)
				{
					this.label6.TabIndex = 353;
					num = 135;
				}
				if (num == 136)
				{
					this.dx12.AutoSize = true;
					num = 137;
				}
				if (num == 138)
				{
					this.dx12.CheckedState.BorderThickness = 0;
					num = 139;
				}
				if (num == 140)
				{
					this.dx12.CheckedState.InnerColor = Color.White;
					num = 141;
				}
				if (num == 142)
				{
					this.dx12.Enabled = false;
					num = 143;
				}
				if (num == 144)
				{
					this.dx12.Location = new Point(460, 250);
					num = 145;
				}
				if (num == 146)
				{
					this.dx12.Size = new Size(73, 31);
					num = 147;
				}
				if (num == 147)
				{
					this.dx12.TabIndex = 352;
					num = 148;
				}
				if (num == 149)
				{
					this.dx12.UncheckedState.BorderColor = Color.FromArgb(125, 137, 149);
					num = 150;
				}
				if (num == 151)
				{
					this.dx12.UncheckedState.FillColor = Color.Transparent;
					num = 152;
				}
				if (num == 153)
				{
					this.dx11.AutoSize = true;
					num = 154;
				}
				if (num == 155)
				{
					this.dx11.CheckedState.BorderThickness = 0;
					num = 156;
				}
				if (num == 157)
				{
					this.dx11.CheckedState.InnerColor = Color.White;
					num = 158;
				}
				if (num == 159)
				{
					this.dx11.Enabled = false;
					num = 160;
				}
				if (num == 161)
				{
					this.dx11.Location = new Point(342, 250);
					num = 162;
				}
				if (num == 163)
				{
					this.dx11.Size = new Size(70, 31);
					num = 164;
				}
				if (num == 164)
				{
					this.dx11.TabIndex = 351;
					num = 165;
				}
				if (num == 166)
				{
					this.dx11.UncheckedState.BorderColor = Color.FromArgb(125, 137, 149);
					num = 167;
				}
				if (num == 168)
				{
					this.dx11.UncheckedState.FillColor = Color.Transparent;
					num = 169;
				}
				if (num == 170)
				{
					this.label5.AutoSize = true;
					num = 171;
				}
				if (num == 172)
				{
					this.label5.ForeColor = Color.White;
					num = 173;
				}
				if (num == 174)
				{
					this.label5.Name = "label5";
					num = 175;
				}
				if (num == 176)
				{
					this.label5.TabIndex = 350;
					num = 177;
				}
				if (num == 178)
				{
					this.label4.AutoSize = true;
					num = 179;
				}
				if (num == 180)
				{
					this.label4.ForeColor = Color.White;
					num = 181;
				}
				if (num == 182)
				{
					this.label4.Name = "label4";
					num = 183;
				}
				if (num == 183)
				{
					this.label4.Size = new Size(66, 30);
					num = 184;
				}
				if (num == 185)
				{
					this.label4.Text = "Width";
					num = 186;
				}
				if (num == 187)
				{
					this.height_txtbox.DefaultText = "";
					num = 188;
				}
				if (num == 189)
				{
					this.height_txtbox.DisabledState.FillColor = Color.FromArgb(64, 64, 64);
					num = 190;
				}
				if (num == 191)
				{
					this.height_txtbox.DisabledState.Parent = this.height_txtbox;
					num = 192;
				}
				if (num == 193)
				{
					this.height_txtbox.Enabled = false;
					num = 194;
				}
				if (num == 195)
				{
					this.height_txtbox.FocusedState.BorderColor = Color.FromArgb(94, 148, 255);
					num = 196;
				}
				if (num == 197)
				{
					this.height_txtbox.Font = new Font("Segoe UI", 9f);
					num = 198;
				}
				if (num == 199)
				{
					this.height_txtbox.HoverState.BorderColor = Color.FromArgb(94, 148, 255);
					num = 200;
				}
				if (num == 200)
				{
					this.height_txtbox.HoverState.Parent = this.height_txtbox;
					num = 201;
				}
				if (num == 202)
				{
					this.height_txtbox.Name = "height_txtbox";
					num = 203;
				}
				if (num == 204)
				{
					this.height_txtbox.PlaceholderText = "";
					num = 205;
				}
				if (num == 206)
				{
					this.height_txtbox.ShadowDecoration.Parent = this.height_txtbox;
					num = 207;
				}
				if (num == 208)
				{
					this.height_txtbox.TabIndex = 348;
					num = 209;
				}
				if (num == 210)
				{
					this.width_txtbox.DefaultText = "";
					num = 211;
				}
				if (num == 212)
				{
					this.width_txtbox.DisabledState.FillColor = Color.FromArgb(64, 64, 64);
					num = 213;
				}
				if (num == 214)
				{
					this.width_txtbox.DisabledState.Parent = this.width_txtbox;
					num = 215;
				}
				if (num == 216)
				{
					this.width_txtbox.Enabled = false;
					num = 217;
				}
				if (num == 218)
				{
					this.width_txtbox.FocusedState.BorderColor = Color.FromArgb(94, 148, 255);
					num = 219;
				}
				if (num == 219)
				{
					this.width_txtbox.FocusedState.Parent = this.width_txtbox;
					num = 220;
				}
				if (num == 221)
				{
					this.width_txtbox.ForeColor = Color.White;
					num = 222;
				}
				if (num == 223)
				{
					this.width_txtbox.HoverState.Parent = this.width_txtbox;
					num = 224;
				}
				if (num == 225)
				{
					this.width_txtbox.Name = "width_txtbox";
					num = 226;
				}
				if (num == 227)
				{
					this.width_txtbox.PlaceholderText = "";
					num = 228;
				}
				if (num == 229)
				{
					this.width_txtbox.ShadowDecoration.Parent = this.width_txtbox;
					num = 230;
				}
				if (num == 231)
				{
					this.width_txtbox.TabIndex = 347;
					num = 232;
				}
				if (num == 233)
				{
					this.label3.Font = new Font("Josefin Sans", 14.25f, FontStyle.Regular, GraphicsUnit.Point, 0);
					num = 234;
				}
				if (num == 235)
				{
					this.label3.Location = new Point(209, 62);
					num = 236;
				}
				if (num == 237)
				{
					this.label3.Size = new Size(205, 30);
					num = 238;
				}
				if (num == 238)
				{
					this.label3.TabIndex = 346;
					num = 239;
				}
				if (num == 240)
				{
					this.resolution.BackColor = Color.FromArgb(38, 38, 38);
					num = 241;
				}
				if (num == 242)
				{
					this.resolution.DropDownStyle = ComboBoxStyle.DropDownList;
					num = 243;
				}
				if (num == 244)
				{
					this.resolution.FocusedColor = Color.FromArgb(94, 148, 255);
					num = 245;
				}
				if (num == 246)
				{
					this.resolution.FocusedState.Parent = this.resolution;
					num = 247;
				}
				if (num == 248)
				{
					this.resolution.ForeColor = Color.White;
					num = 249;
				}
				if (num == 250)
				{
					this.resolution.ItemHeight = 30;
					num = 251;
				}
				if (num == 252)
				{
					this.resolution.ItemsAppearance.Parent = this.resolution;
					num = 253;
				}
				if (num == 254)
				{
					this.resolution.Name = "resolution";
					num = 255;
				}
				if (num == 255)
				{
					this.resolution.ShadowDecoration.Parent = this.resolution;
					num = 256;
				}
				if (num == 257)
				{
					this.resolution.TabIndex = 345;
					num = 258;
				}
				if (num == 259)
				{
					this.revert_btn.BorderRadius = 21;
					num = 260;
				}
				if (num == 261)
				{
					this.revert_btn.CustomImages.Parent = this.revert_btn;
					num = 262;
				}
				if (num == 263)
				{
					this.revert_btn.DisabledState.CustomBorderColor = Color.DarkGray;
					num = 264;
				}
				if (num == 265)
				{
					this.revert_btn.DisabledState.ForeColor = Color.FromArgb(141, 141, 141);
					num = 266;
				}
				if (num == 267)
				{
					this.revert_btn.FillColor = Color.FromArgb(38, 38, 38);
					num = 268;
				}
				if (num == 269)
				{
					this.revert_btn.ForeColor = Color.White;
					num = 270;
				}
				if (num == 271)
				{
					this.revert_btn.Location = new Point(537, 316);
					num = 272;
				}
				if (num == 273)
				{
					this.revert_btn.ShadowDecoration.Parent = this.revert_btn;
					num = 274;
				}
				if (num == 274)
				{
					this.revert_btn.Size = new Size(211, 45);
					num = 275;
				}
				if (num == 276)
				{
					this.revert_btn.Text = "Revert Optimizations";
					num = 277;
				}
				if (num == 278)
				{
					this.apply_btn.BorderRadius = 21;
					num = 279;
				}
				if (num == 280)
				{
					this.apply_btn.CustomImages.Parent = this.apply_btn;
					num = 281;
				}
				if (num == 282)
				{
					this.apply_btn.DisabledState.CustomBorderColor = Color.FromArgb(64, 64, 64);
					num = 283;
				}
				if (num == 284)
				{
					this.apply_btn.DisabledState.ForeColor = Color.DarkGray;
					num = 285;
				}
				if (num == 286)
				{
					this.apply_btn.FillColor = Color.FromArgb(38, 38, 38);
					num = 287;
				}
				if (num == 288)
				{
					this.apply_btn.ForeColor = Color.White;
					num = 289;
				}
				if (num == 290)
				{
					this.apply_btn.Location = new Point(120, 316);
					num = 291;
				}
				if (num == 292)
				{
					this.apply_btn.ShadowDecoration.Parent = this.apply_btn;
					num = 293;
				}
				if (num == 293)
				{
					this.apply_btn.Size = new Size(211, 45);
					num = 294;
				}
				if (num == 295)
				{
					this.apply_btn.Text = "Apply Optimizations";
					num = 296;
				}
				if (num == 297)
				{
					base.AutoScaleDimensions = new SizeF(6f, 13f);
					num = 298;
				}
				if (num == 299)
				{
					this.BackColor = Color.FromArgb(38, 38, 38);
					num = 300;
				}
				if (num == 301)
				{
					base.Controls.Add(this.textBox1);
					num = 302;
				}
				if (num == 303)
				{
					base.Controls.Add(this.siticoneComboBox1);
					num = 304;
				}
				if (num == 305)
				{
					base.Controls.Add(this.label9);
					num = 306;
				}
				if (num == 307)
				{
					base.Name = "GameOptimizations";
					num = 308;
				}
				if (num == 309)
				{
					this.grpbox.ResumeLayout(false);
					num = 310;
				}
				if (num == 310)
				{
					this.grpbox.PerformLayout();
					num = 311;
				}
				if (num == 312)
				{
					base.PerformLayout();
					num = 313;
				}
				if (num == 311)
				{
					base.ResumeLayout(false);
					num = 312;
				}
				if (num == 308)
				{
					base.Size = new Size(1288, 669);
					num = 309;
				}
				if (num == 306)
				{
					base.Controls.Add(this.label1);
					num = 307;
				}
				if (num == 304)
				{
					base.Controls.Add(this.label2);
					num = 305;
				}
				if (num == 302)
				{
					base.Controls.Add(this.next_btn);
					num = 303;
				}
				if (num == 300)
				{
					base.Controls.Add(this.grpbox);
					num = 301;
				}
				if (num == 298)
				{
					base.AutoScaleMode = AutoScaleMode.Font;
					num = 299;
				}
				if (num == 296)
				{
					this.apply_btn.Click += this.apply_btn_Click;
					num = 297;
				}
				if (num == 294)
				{
					this.apply_btn.TabIndex = 140;
					num = 295;
				}
				if (num == 291)
				{
					this.apply_btn.Name = "apply_btn";
					num = 292;
				}
				if (num == 289)
				{
					this.apply_btn.HoverState.Parent = this.apply_btn;
					num = 290;
				}
				if (num == 287)
				{
					this.apply_btn.Font = new Font("Josefin Sans SemiBold", 12f, FontStyle.Bold, GraphicsUnit.Point, 0);
					num = 288;
				}
				if (num == 285)
				{
					this.apply_btn.DisabledState.Parent = this.apply_btn;
					num = 286;
				}
				if (num == 283)
				{
					this.apply_btn.DisabledState.FillColor = Color.FromArgb(64, 64, 64);
					num = 284;
				}
				if (num == 281)
				{
					this.apply_btn.DisabledState.BorderColor = Color.FromArgb(64, 64, 64);
					num = 282;
				}
				if (num == 279)
				{
					this.apply_btn.CheckedState.Parent = this.apply_btn;
					num = 280;
				}
				if (num == 277)
				{
					this.revert_btn.Click += this.revert_btn_Click;
					num = 278;
				}
				if (num == 275)
				{
					this.revert_btn.TabIndex = 157;
					num = 276;
				}
				if (num == 272)
				{
					this.revert_btn.Name = "revert_btn";
					num = 273;
				}
				if (num == 270)
				{
					this.revert_btn.HoverState.Parent = this.revert_btn;
					num = 271;
				}
				if (num == 268)
				{
					this.revert_btn.Font = new Font("Josefin Sans SemiBold", 12f, FontStyle.Bold, GraphicsUnit.Point, 0);
					num = 269;
				}
				if (num == 266)
				{
					this.revert_btn.DisabledState.Parent = this.revert_btn;
					num = 267;
				}
				if (num == 264)
				{
					this.revert_btn.DisabledState.FillColor = Color.FromArgb(169, 169, 169);
					num = 265;
				}
				if (num == 262)
				{
					this.revert_btn.DisabledState.BorderColor = Color.DarkGray;
					num = 263;
				}
				if (num == 260)
				{
					this.revert_btn.CheckedState.Parent = this.revert_btn;
					num = 261;
				}
				if (num == 258)
				{
					this.resolution.SelectedIndexChanged += this.resolution_SelectedIndexChanged;
					num = 259;
				}
				if (num == 256)
				{
					this.resolution.Size = new Size(222, 36);
					num = 257;
				}
				if (num == 253)
				{
					this.resolution.Location = new Point(420, 59);
					num = 254;
				}
				if (num == 251)
				{
					this.resolution.Items.AddRange(new object[]
					{
						"1280 x 720 (16:9)", "1280 x 1024 (5:4)", "1280 x 800 (16:10)", "1360 x 768 (16:9)", "1440 x 810 (16:9)", "1440 x 900 (16:10)", "1600 x 900 (16:9)", "1920 x 1080 (16:9)", "2560 x 1440 (16:9)", "3840 x 2160 (16:9)",
						"Custom"
					});
					num = 252;
				}
				if (num == 249)
				{
					this.resolution.HoverState.Parent = this.resolution;
					num = 250;
				}
				if (num == 247)
				{
					this.resolution.Font = new Font("Segoe UI", 10f);
					num = 248;
				}
				if (num == 245)
				{
					this.resolution.FocusedState.BorderColor = Color.FromArgb(94, 148, 255);
					num = 246;
				}
				if (num == 243)
				{
					this.resolution.FillColor = Color.FromArgb(38, 38, 38);
					num = 244;
				}
				if (num == 241)
				{
					this.resolution.DrawMode = DrawMode.OwnerDrawFixed;
					num = 242;
				}
				if (num == 239)
				{
					this.label3.Text = "Select your resolution :";
					num = 240;
				}
				if (num == 236)
				{
					this.label3.Name = "label3";
					num = 237;
				}
				if (num == 234)
				{
					this.label3.ForeColor = Color.White;
					num = 235;
				}
				if (num == 232)
				{
					this.label3.AutoSize = true;
					num = 233;
				}
				if (num == 230)
				{
					this.width_txtbox.Size = new Size(115, 36);
					num = 231;
				}
				if (num == 228)
				{
					this.width_txtbox.SelectedText = "";
					num = 229;
				}
				if (num == 226)
				{
					this.width_txtbox.PasswordChar = '\0';
					num = 227;
				}
				if (num == 224)
				{
					this.width_txtbox.Location = new Point(277, 170);
					num = 225;
				}
				if (num == 222)
				{
					this.width_txtbox.HoverState.BorderColor = Color.FromArgb(94, 148, 255);
					num = 223;
				}
				if (num == 220)
				{
					this.width_txtbox.Font = new Font("Segoe UI", 9f);
					num = 221;
				}
				if (num == 217)
				{
					this.width_txtbox.FillColor = Color.FromArgb(38, 38, 38);
					num = 218;
				}
				if (num == 215)
				{
					this.width_txtbox.DisabledState.PlaceholderForeColor = Color.FromArgb(64, 64, 64);
					num = 216;
				}
				if (num == 213)
				{
					this.width_txtbox.DisabledState.ForeColor = Color.FromArgb(64, 64, 64);
					num = 214;
				}
				if (num == 211)
				{
					this.width_txtbox.DisabledState.BorderColor = Color.FromArgb(64, 64, 64);
					num = 212;
				}
				if (num == 209)
				{
					this.width_txtbox.Cursor = Cursors.IBeam;
					num = 210;
				}
				if (num == 207)
				{
					this.height_txtbox.Size = new Size(115, 36);
					num = 208;
				}
				if (num == 205)
				{
					this.height_txtbox.SelectedText = "";
					num = 206;
				}
				if (num == 203)
				{
					this.height_txtbox.PasswordChar = '\0';
					num = 204;
				}
				if (num == 201)
				{
					this.height_txtbox.Location = new Point(480, 170);
					num = 202;
				}
				if (num == 198)
				{
					this.height_txtbox.ForeColor = Color.White;
					num = 199;
				}
				if (num == 196)
				{
					this.height_txtbox.FocusedState.Parent = this.height_txtbox;
					num = 197;
				}
				if (num == 194)
				{
					this.height_txtbox.FillColor = Color.FromArgb(38, 38, 38);
					num = 195;
				}
				if (num == 192)
				{
					this.height_txtbox.DisabledState.PlaceholderForeColor = Color.FromArgb(64, 64, 64);
					num = 193;
				}
				if (num == 190)
				{
					this.height_txtbox.DisabledState.ForeColor = Color.FromArgb(64, 64, 64);
					num = 191;
				}
				if (num == 188)
				{
					this.height_txtbox.DisabledState.BorderColor = Color.FromArgb(64, 64, 64);
					num = 189;
				}
				if (num == 186)
				{
					this.height_txtbox.Cursor = Cursors.IBeam;
					num = 187;
				}
				if (num == 184)
				{
					this.label4.TabIndex = 349;
					num = 185;
				}
				if (num == 181)
				{
					this.label4.Location = new Point(300, 135);
					num = 182;
				}
				if (num == 179)
				{
					this.label4.Font = new Font("Josefin Sans", 14.25f, FontStyle.Regular, GraphicsUnit.Point, 0);
					num = 180;
				}
				if (num == 177)
				{
					this.label5.Text = "Height";
					num = 178;
				}
				if (num == 175)
				{
					this.label5.Size = new Size(72, 30);
					num = 176;
				}
				if (num == 173)
				{
					this.label5.Location = new Point(502, 135);
					num = 174;
				}
				if (num == 171)
				{
					this.label5.Font = new Font("Josefin Sans", 14.25f, FontStyle.Regular, GraphicsUnit.Point, 0);
					num = 172;
				}
				if (num == 169)
				{
					this.dx11.UncheckedState.InnerColor = Color.Transparent;
					num = 170;
				}
				if (num == 167)
				{
					this.dx11.UncheckedState.BorderThickness = 2;
					num = 168;
				}
				if (num == 165)
				{
					this.dx11.Text = "DX 11";
					num = 166;
				}
				if (num == 162)
				{
					this.dx11.Name = "dx11";
					num = 163;
				}
				if (num == 160)
				{
					this.dx11.Font = new Font("Josefin Sans", 12.75f);
					num = 161;
				}
				if (num == 158)
				{
					this.dx11.CheckedState.InnerOffset = -4;
					num = 159;
				}
				if (num == 156)
				{
					this.dx11.CheckedState.FillColor = Color.FromArgb(94, 148, 255);
					num = 157;
				}
				if (num == 154)
				{
					this.dx11.CheckedState.BorderColor = Color.FromArgb(94, 148, 255);
					num = 155;
				}
				if (num == 152)
				{
					this.dx12.UncheckedState.InnerColor = Color.Transparent;
					num = 153;
				}
				if (num == 150)
				{
					this.dx12.UncheckedState.BorderThickness = 2;
					num = 151;
				}
				if (num == 148)
				{
					this.dx12.Text = "DX 12";
					num = 149;
				}
				if (num == 145)
				{
					this.dx12.Name = "dx12";
					num = 146;
				}
				if (num == 143)
				{
					this.dx12.Font = new Font("Josefin Sans", 12.75f);
					num = 144;
				}
				if (num == 141)
				{
					this.dx12.CheckedState.InnerOffset = -4;
					num = 142;
				}
				if (num == 139)
				{
					this.dx12.CheckedState.FillColor = Color.FromArgb(94, 148, 255);
					num = 140;
				}
				if (num == 137)
				{
					this.dx12.CheckedState.BorderColor = Color.FromArgb(94, 148, 255);
					num = 138;
				}
				if (num == 135)
				{
					this.label6.Text = "X";
					num = 136;
				}
				if (num == 133)
				{
					this.label6.Size = new Size(26, 30);
					num = 134;
				}
				if (num == 131)
				{
					this.label6.Location = new Point(425, 173);
					num = 132;
				}
				if (num == 129)
				{
					this.label6.Font = new Font("Josefin Sans", 14.25f, FontStyle.Regular, GraphicsUnit.Point, 0);
					num = 130;
				}
				if (num == 126)
				{
					this.set_customres.TabIndex = 354;
					num = 127;
				}
				if (num == 124)
				{
					this.set_customres.ShadowDecoration.Parent = this.set_customres;
					num = 125;
				}
				if (num == 122)
				{
					this.set_customres.Location = new Point(601, 170);
					num = 123;
				}
				if (num == 120)
				{
					this.set_customres.Image = (Image)componentResourceManager.GetObject("set_customres.Image");
					num = 121;
				}
				if (num == 118)
				{
					this.set_customres.ForeColor = Color.White;
					num = 119;
				}
				if (num == 116)
				{
					this.set_customres.FillColor = Color.FromArgb(38, 38, 38);
					num = 117;
				}
				if (num == 114)
				{
					this.set_customres.DisabledState.Parent = this.set_customres;
					num = 115;
				}
				if (num == 112)
				{
					this.set_customres.DisabledState.FillColor = Color.FromArgb(64, 64, 64);
					num = 113;
				}
				if (num == 110)
				{
					this.set_customres.DisabledState.BorderColor = Color.FromArgb(64, 64, 64);
					num = 111;
				}
				if (num == 107)
				{
					this.grpbox.Text = "Game_Name_404";
					num = 108;
				}
				if (num == 105)
				{
					this.grpbox.TabIndex = 344;
					num = 106;
				}
				if (num == 103)
				{
					this.grpbox.Name = "grpbox";
					num = 104;
				}
				if (num == 101)
				{
					this.grpbox.ForeColor = Color.White;
					num = 102;
				}
				if (num == 99)
				{
					this.grpbox.Controls.Add(this.apply_btn);
					num = 100;
				}
				if (num == 97)
				{
					this.grpbox.Controls.Add(this.resolution);
					num = 98;
				}
				if (num == 95)
				{
					this.grpbox.Controls.Add(this.width_txtbox);
					num = 96;
				}
				if (num == 93)
				{
					this.grpbox.Controls.Add(this.label4);
					num = 94;
				}
				if (num == 90)
				{
					this.grpbox.Controls.Add(this.dx12);
					num = 91;
				}
				if (num == 88)
				{
					this.grpbox.Controls.Add(this.set_customres);
					num = 89;
				}
				if (num == 86)
				{
					this.textBox1.Size = new Size(100, 20);
					num = 87;
				}
				if (num == 84)
				{
					this.textBox1.Location = new Point(1185, 3);
					num = 85;
				}
				if (num == 82)
				{
					this.label2.TabIndex = 317;
					num = 83;
				}
				if (num == 80)
				{
					this.label2.Name = "label2";
					num = 81;
				}
				if (num == 78)
				{
					this.label2.ForeColor = Color.White;
					num = 79;
				}
				if (num == 76)
				{
					this.label2.AutoSize = true;
					num = 77;
				}
				if (num == 74)
				{
					this.siticoneComboBox1.Size = new Size(427, 36);
					num = 75;
				}
				if (num == 71)
				{
					this.siticoneComboBox1.Location = new Point(309, 143);
					num = 72;
				}
				if (num == 69)
				{
					this.siticoneComboBox1.Items.AddRange(new object[]
					{
						"A Plague Tale : Innocence", "A Plague Tale : Requiem", "Apex Legends", "ARK : Survival Evolved", "Assassin’s Creed Odyssey", "Assassin’s Creed Valhalla", "Atomic Heart", "Atomic Heart (Microsoft Store)", "Atomic Heart (Steam)", "Battlefield 1",
						"Battlefield 4", "Battlefield 5", "Battlefield 2042", "Battlefield Hardline", "Call Of Duty : Modern Warfare 2 (2022)", "Call Of Duty : Warzone", "Call Of Duty : Warzone 2.0", "Days Gone", "Dead Space", "Dead Space (Steam)",
						"Destiny 2", "Dying Light 2", "Fallout 4", "Fallout 76", "Far Cry 5", "Far Cry 6", "Ghostwire : Tokyo", "God Of War (2018)", "Grand Theft Auto 5", "High on Life",
						"Hogwarts Legacy", "League of Legends", "Marvel's Spider-Man : Miles Morales", "Marvel's Spider-Man Remastered", "Need for Speed Heat", "Overwatch 2", "PUBG : Battlegrounds", "Rainbow Six Siege", "Red Dead Redemption 2", "Resident Evil 2 (2019)",
						"Resident Evil 3 (2020)", "Resident Evil : Village", "Rocket League", "RUST", "Sea of Thieves (Microsoft Store)", "Sea of Thieves (Steam)", "Sekiro: Shadows Die Twice", "Sons of the Forest", "Stray", "The Forest",
						"The Witcher 3 : Wild Hunt", "Titanfall 2", "Uncharted : Legacy of Thieves Collection", "Valorant"
					});
					num = 70;
				}
				if (num == 67)
				{
					this.siticoneComboBox1.HoverState.Parent = this.siticoneComboBox1;
					num = 68;
				}
				if (num == 65)
				{
					this.siticoneComboBox1.Font = new Font("Segoe UI", 10f);
					num = 66;
				}
				if (num == 63)
				{
					this.siticoneComboBox1.FocusedState.BorderColor = Color.FromArgb(94, 148, 255);
					num = 64;
				}
				if (num == 61)
				{
					this.siticoneComboBox1.FillColor = Color.FromArgb(38, 38, 38);
					num = 62;
				}
				if (num == 59)
				{
					this.siticoneComboBox1.DrawMode = DrawMode.OwnerDrawFixed;
					num = 60;
				}
				if (num == 57)
				{
					this.next_btn.Click += this.next_btn_Click;
					num = 58;
				}
				if (num == 55)
				{
					this.next_btn.TabIndex = 319;
					num = 56;
				}
				if (num == 52)
				{
					this.next_btn.Name = "next_btn";
					num = 53;
				}
				if (num == 50)
				{
					this.next_btn.ImageSize = new Size(30, 30);
					num = 51;
				}
				if (num == 48)
				{
					this.next_btn.ForeColor = Color.White;
					num = 49;
				}
				if (num == 46)
				{
					this.next_btn.FillColor = Color.FromArgb(38, 38, 38);
					num = 47;
				}
				if (num == 44)
				{
					this.next_btn.DisabledState.ForeColor = Color.FromArgb(141, 141, 141);
					num = 45;
				}
				if (num == 42)
				{
					this.next_btn.DisabledState.CustomBorderColor = Color.DarkGray;
					num = 43;
				}
				if (num == 40)
				{
					this.next_btn.CustomImages.Parent = this.next_btn;
					num = 41;
				}
				if (num == 38)
				{
					this.label1.Text = "Game Optimizations";
					num = 39;
				}
				if (num == 35)
				{
					this.label1.Name = "label1";
					num = 36;
				}
				if (num == 33)
				{
					this.label1.ForeColor = Color.White;
					num = 34;
				}
				if (num == 31)
				{
					this.label1.AutoSize = true;
					num = 32;
				}
				if (num == 29)
				{
					this.label9.TabIndex = 87;
					num = 30;
				}
				if (num == 27)
				{
					this.label9.Name = "label9";
					num = 28;
				}
				if (num == 25)
				{
					this.label9.ForeColor = Color.Silver;
					num = 26;
				}
				if (num == 23)
				{
					this.label9.AutoSize = true;
					num = 24;
				}
				if (num == 21)
				{
					this.grpbox.SuspendLayout();
					num = 22;
				}
				if (num == 19)
				{
					this.revert_btn = new SiticoneRoundedButton();
					num = 20;
				}
				if (num == 16)
				{
					this.width_txtbox = new SiticoneTextBox();
					num = 17;
				}
				if (num == 14)
				{
					this.label4 = new Label();
					num = 15;
				}
				if (num == 12)
				{
					this.dx11 = new SiticoneRadioButton();
					num = 13;
				}
				if (num == 10)
				{
					this.label6 = new Label();
					num = 11;
				}
				if (num == 8)
				{
					this.grpbox = new GroupBox();
					num = 9;
				}
				if (num == 6)
				{
					this.label2 = new Label();
					num = 7;
				}
				if (num == 4)
				{
					this.next_btn = new SiticoneButton();
					num = 5;
				}
				if (num == 2)
				{
					this.label9 = new Label();
					num = 3;
				}
				if (num == 0)
				{
					num = 1;
				}
			}
			while (num != 313);
		}

		// Token: 0x040004C4 RID: 1220
		private static GameOptimizations _instace;

		// Token: 0x040004C5 RID: 1221
		private UserPreferenceChangedEventHandler UserPreferenceChanged;

		// Token: 0x040004C6 RID: 1222
		public string WriteOut_D_mainConfigFileContent;

		// Token: 0x040004C7 RID: 1223
		public string WriteOut_D_firstConfigFileContent;

		// Token: 0x040004C8 RID: 1224
		public string WriteOut_D_secondConfigFileContent;

		// Token: 0x040004C9 RID: 1225
		public string WriteOut_D_thirdConfigFileContent;

		// Token: 0x040004CA RID: 1226
		private string gta_settingloc = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\Rockstar Games\\GTA V\\Settings.xml";

		// Token: 0x040004CB RID: 1227
		private string rdr2_settingloc = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\Rockstar Games\\Red Dead Redemption 2\\Settings\\system.xml";

		// Token: 0x040004CC RID: 1228
		public string rocket_league_settingloc = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\My Games\\Rocket League\\TAGame\\Config\\TASystemSettings.ini";

		// Token: 0x040004CD RID: 1229
		public string titanfall2_settingloc = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\Respawn\\Titanfall2\\local\\videoconfig.txt";

		// Token: 0x040004CE RID: 1230
		public string warzone_setting1 = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\Call of Duty Modern Warfare\\players\\config.cfg";

		// Token: 0x040004CF RID: 1231
		public string warzone_setting2 = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\Call of Duty Modern Warfare\\players\\adv_options.ini";

		// Token: 0x040004D0 RID: 1232
		public string destiny2_settings = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Roaming\\Bungie\\DestinyPC\\prefs\\cvars.xml";

		// Token: 0x040004D1 RID: 1233
		public string ghostwire_main = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Saved Games\\TangoGameworks\\GhostWire Tokyo (STEAM)\\Saved\\Config\\WindowsNoEditor\\GameUserSettings.ini";

		// Token: 0x040004D2 RID: 1234
		public string ghostwire_first = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Saved Games\\TangoGameworks\\GhostWire Tokyo (STEAM)\\Saved\\Config\\WindowsNoEditor\\Engine.ini";

		// Token: 0x040004D3 RID: 1235
		public string ghostwire_second = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Saved Games\\TangoGameworks\\GhostWire Tokyo (STEAM)\\Saved\\Config\\WindowsNoEditor\\Scalability.ini";

		// Token: 0x040004D4 RID: 1236
		public string stray_main = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Hk_project\\Saved\\Config\\WindowsNoEditor\\GameUserSettings.ini";

		// Token: 0x040004D5 RID: 1237
		public string stray_first = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Hk_project\\Saved\\Config\\WindowsNoEditor\\Engine.ini";

		// Token: 0x040004D6 RID: 1238
		public string stray_second = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Hk_project\\Saved\\Config\\WindowsNoEditor\\Scalability.ini";

		// Token: 0x040004D7 RID: 1239
		public string pubg_main = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\TslGame\\Saved\\Config\\WindowsNoEditor\\GameUserSettings.ini";

		// Token: 0x040004D8 RID: 1240
		public string pubg_first = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\TslGame\\Saved\\Config\\WindowsNoEditor\\Engine.ini";

		// Token: 0x040004D9 RID: 1241
		public string pubg_second = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\TslGame\\Saved\\Config\\WindowsNoEditor\\Scalability.ini";

		// Token: 0x040004DA RID: 1242
		public string cod_mw2_settings = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\Call of Duty\\players\\options.3.cod22.cst";

		// Token: 0x040004DB RID: 1243
		public string apti_settings = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\My Games\\A Plague Tale Innocence\\ENGINESETTINGS";

		// Token: 0x040004DC RID: 1244
		public string aptr_settings = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Roaming\\A Plague Tale Requiem\\ENGINESETTINGS";

		// Token: 0x040004DD RID: 1245
		public string overwatch2_settings = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\Overwatch\\Settings\\Settings_v0.ini";

		// Token: 0x040004DE RID: 1246
		private string witcher3_settings = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\The Witcher 3\\user.settings";

		// Token: 0x040004DF RID: 1247
		private string witcher3_settings2 = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\The Witcher 3\\dx12user.settings";

		// Token: 0x040004E0 RID: 1248
		private string fallout4_settings = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\My Games\\Fallout4\\Fallout4Prefs.ini";

		// Token: 0x040004E1 RID: 1249
		private string daysgone_main = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\BendGame\\Saved\\Config\\WindowsNoEditor\\GameUserSettings.ini";

		// Token: 0x040004E2 RID: 1250
		private string daysgone_first = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\BendGame\\Saved\\Config\\WindowsNoEditor\\Engine.ini";

		// Token: 0x040004E3 RID: 1251
		private string daysgone_second = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\BendGame\\Saved\\Config\\WindowsNoEditor\\Scalability.ini";

		// Token: 0x040004E4 RID: 1252
		private string highonlife_main = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Oregon\\Saved\\Config\\WindowsNoEditor\\GameUserSettings.ini";

		// Token: 0x040004E5 RID: 1253
		private string highonlife_first = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Oregon\\Saved\\Config\\WindowsNoEditor\\Engine.ini";

		// Token: 0x040004E6 RID: 1254
		private string highonlife_second = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Oregon\\Saved\\Config\\WindowsNoEditor\\Scalability.ini";

		// Token: 0x040004E7 RID: 1255
		private string highonlife_third = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Oregon\\Saved\\SaveGames\\Profile.sav";

		// Token: 0x040004E8 RID: 1256
		private string seaofthieves_main = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Athena\\Saved\\Config\\WindowsClient\\GameUserSettings.ini";

		// Token: 0x040004E9 RID: 1257
		private string seaofthieves_first = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Athena\\Saved\\Config\\WindowsClient\\Engine.ini";

		// Token: 0x040004EA RID: 1258
		private string seaofthieves_second = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Athena\\Saved\\Config\\WindowsClient\\Scalability.ini";

		// Token: 0x040004EB RID: 1259
		private string MS_seaofthieves_main = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Packages\\Microsoft.SeaofThieves_8wekyb3d8bbwe\\LocalState\\Athena\\Saved\\Config\\UWP64\\GameUserSettings.ini";

		// Token: 0x040004EC RID: 1260
		private string MS_seaofthieves_first = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Packages\\Microsoft.SeaofThieves_8wekyb3d8bbwe\\LocalState\\Athena\\Saved\\Config\\UWP64\\Engine.ini";

		// Token: 0x040004ED RID: 1261
		private string MS_seaofthieves_second = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\Packages\\Microsoft.SeaofThieves_8wekyb3d8bbwe\\LocalState\\Athena\\Saved\\Config\\UWP64\\Scalability.ini";

		// Token: 0x040004EE RID: 1262
		private string assassins_creed_odessey = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\Assassin's Creed Odyssey\\ACOdyssey.ini";

		// Token: 0x040004EF RID: 1263
		private string assassins_creed_valhalla = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\Assassin's Creed Valhalla\\ACValhalla.ini";

		// Token: 0x040004F0 RID: 1264
		private string sekiro_xml = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Roaming\\Sekiro\\GraphicsConfig.xml";

		// Token: 0x040004F1 RID: 1265
		private string battlefield1_profile = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Battlefield 1\\settings\\PROFSAVE_profile";

		// Token: 0x040004F2 RID: 1266
		private string battlefield1_usercfg;

		// Token: 0x040004F3 RID: 1267
		private string battlefield4_profile = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Battlefield 4\\settings\\PROFSAVE_profile";

		// Token: 0x040004F4 RID: 1268
		private string battlefield4_usercfg;

		// Token: 0x040004F5 RID: 1269
		private string battlefield5_profile = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Battlefield 5\\settings\\PROFSAVE_profile";

		// Token: 0x040004F6 RID: 1270
		private string battlefield5_usercfg;

		// Token: 0x040004F7 RID: 1271
		private string battlefield2042_profile = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Battlefield 2042\\settings\\PROFSAVE_profile";

		// Token: 0x040004F8 RID: 1272
		private string battlefieldhl_profile = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\BFH\\settings\\PROFSAVE_profile";

		// Token: 0x040004F9 RID: 1273
		private string battlefieldhl_usercfg;

		// Token: 0x040004FA RID: 1274
		private string atomicHeart_main = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\AtomicHeart\\Saved\\Config\\WinGDK\\GameUserSettings.ini";

		// Token: 0x040004FB RID: 1275
		private string atomicHeart_first = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\AtomicHeart\\Saved\\Config\\WinGDK\\Engine.ini";

		// Token: 0x040004FC RID: 1276
		private string atomicHeart_second = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\AtomicHeart\\Saved\\Config\\WinGDK\\Scalability.ini";

		// Token: 0x040004FD RID: 1277
		private string atomicHeart_third = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\AtomicHeart\\Saved\\Config\\WinGDK\\AHGameSettingsSubsystem.ini";

		// Token: 0x040004FE RID: 1278
		private string atomicHeartS_main = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\AtomicHeart\\Saved\\Config\\WindowsNoEditor\\GameUserSettings.ini";

		// Token: 0x040004FF RID: 1279
		private string atomicHeartS_first = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\AtomicHeart\\Saved\\Config\\WindowsNoEditor\\Engine.ini";

		// Token: 0x04000500 RID: 1280
		private string atomicHeartS_second = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\AtomicHeart\\Saved\\Config\\WindowsNoEditor\\Scalability.ini";

		// Token: 0x04000501 RID: 1281
		private string atomicHeartS_third = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\Local\\AtomicHeart\\Saved\\Config\\WindowsNoEditor\\AHGameSettingsSubsystem.ini";

		// Token: 0x04000502 RID: 1282
		private string sonsoftheforest = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\AppData\\LocalLow\\Endnight\\SonsOfTheForest\\SonsGameSettings.cfg";

		// Token: 0x04000503 RID: 1283
		private string nfs_heat_main = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Documents\\Need for Speed Heat\\settings\\PROFILEOPTIONS_profile";

		// Token: 0x04000504 RID: 1284
		private string nfs_heat_first;

		// Token: 0x04000505 RID: 1285
		private string hogwarts_main;

		// Token: 0x04000506 RID: 1286
		private string hogwarts_first;

		// Token: 0x04000507 RID: 1287
		private string hogwarts_second;

		// Token: 0x04000508 RID: 1288
		private string ark_main;

		// Token: 0x04000509 RID: 1289
		private string ark_first;

		// Token: 0x0400050A RID: 1290
		private string ark_second;

		// Token: 0x0400050B RID: 1291
		private string fallout76_settings;

		// Token: 0x0400050C RID: 1292
		private string dead_space_main;

		// Token: 0x0400050D RID: 1293
		private string dead_space_first;

		// Token: 0x0400050E RID: 1294
		private string dyinglight2_folder;

		// Token: 0x0400050F RID: 1295
		private string dyinglight2_main;

		// Token: 0x04000510 RID: 1296
		private string dyinglight2_first;

		// Token: 0x04000511 RID: 1297
		private string dyinglight2_second;

		// Token: 0x04000512 RID: 1298
		private string dyinglight2_third;

		// Token: 0x04000513 RID: 1299
		private string dyinglight2_fourth;

		// Token: 0x04000514 RID: 1300
		private string rust_cfg;

		// Token: 0x04000515 RID: 1301
		private int width;

		// Token: 0x04000516 RID: 1302
		private int height;

		// Token: 0x04000517 RID: 1303
		private string DefaultWidth;

		// Token: 0x04000518 RID: 1304
		private string DefaultHeight;

		// Token: 0x04000519 RID: 1305
		private string optimizationStaticCommander;

		// Token: 0x0400051A RID: 1306
		private string graphicsAPIVersion;

		// Token: 0x0400051B RID: 1307
		private string resolutionScaleDLSS;

		// Token: 0x0400051C RID: 1308
		private string resolutionScaleFSR;

		// Token: 0x0400051D RID: 1309
		private string deviceID;

		// Token: 0x0400051E RID: 1310
		private bool isValidWidth;

		// Token: 0x0400051F RID: 1311
		private bool isValidHeight;

		// Token: 0x04000520 RID: 1312
		private bool errorShowm;

		// Token: 0x04000521 RID: 1313
		private IContainer components = null;

		// Token: 0x04000522 RID: 1314
		private Label label9;

		// Token: 0x04000523 RID: 1315
		private Label label1;

		// Token: 0x04000524 RID: 1316
		private SiticoneButton next_btn;

		// Token: 0x04000525 RID: 1317
		private SiticoneComboBox siticoneComboBox1;

		// Token: 0x04000526 RID: 1318
		private Label label2;

		// Token: 0x04000527 RID: 1319
		private TextBox textBox1;

		// Token: 0x04000528 RID: 1320
		private GroupBox grpbox;

		// Token: 0x04000529 RID: 1321
		private SiticoneRoundedButton revert_btn;

		// Token: 0x0400052A RID: 1322
		private SiticoneRoundedButton apply_btn;

		// Token: 0x0400052B RID: 1323
		private SiticoneComboBox resolution;

		// Token: 0x0400052C RID: 1324
		private Label label3;

		// Token: 0x0400052D RID: 1325
		private SiticoneTextBox height_txtbox;

		// Token: 0x0400052E RID: 1326
		private SiticoneTextBox width_txtbox;

		// Token: 0x0400052F RID: 1327
		private Label label5;

		// Token: 0x04000530 RID: 1328
		private Label label4;

		// Token: 0x04000531 RID: 1329
		private SiticoneRadioButton dx12;

		// Token: 0x04000532 RID: 1330
		private SiticoneRadioButton dx11;

		// Token: 0x04000533 RID: 1331
		private Label label6;

		// Token: 0x04000534 RID: 1332
		private SiticoneButton set_customres;
	}
}
